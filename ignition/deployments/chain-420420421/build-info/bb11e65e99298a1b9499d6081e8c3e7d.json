{
  "id": "bb11e65e99298a1b9499d6081e8c3e7d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/FlightDataVerifier.sol": {
        "content": "/* // SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport {IWeb2Json} from \"@flarenetwork/flare-periphery-contracts/coston2/IWeb2Json.sol\";\nimport {ContractRegistry} from \"@flarenetwork/flare-periphery-contracts/coston2/ContractRegistry.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract FlightDataVerifier {\n    struct FlightData {\n        string flight_origin;\n        string flight_destination;\n        uint256 flight_date;\n        uint256 flight_time;\n        string flight_number;\n        string flight_airline;\n        string flight_status;\n        uint16 flight_gate;\n    }\n\n    // Mapping para almacenar los datos verificados de vuelos\n    mapping(bytes32 => FlightData) public verifiedFlights;\n    // Mapping para almacenar el timestamp de la última verificación\n    mapping(bytes32 => uint256) public lastVerificationTimestamp;\n\n    event FlightDataVerified(bytes32 indexed flightId, FlightData data);\n    event VerificationFailed(bytes32 indexed flightId, string reason);\n    event FlightDataUpdated(bytes32 indexed flightId, FlightData data);\n\n    // Función para verificar y almacenar datos de vuelo\n    function verifyAndStoreFlightData(\n        bytes32 flightId,\n        IWeb2Json.Proof calldata proof\n    ) external returns (bool) {\n        require(isJsonApiProofValid(proof), \"Invalid proof\");\n\n        try this.decodeFlightData(proof.data.responseBody.abiEncodedData) returns (FlightData memory flightData) {\n            // Verificar que los datos son válidos\n            require(bytes(flightData.flight_number).length > 0, \"Invalid flight number\");\n            require(bytes(flightData.flight_airline).length > 0, \"Invalid airline\");\n            \n            // Almacenar los datos verificados\n            verifiedFlights[flightId] = flightData;\n            lastVerificationTimestamp[flightId] = block.timestamp;\n\n            emit FlightDataVerified(flightId, flightData);\n            return true;\n        } catch {\n            emit VerificationFailed(flightId, \"Failed to decode flight data\");\n            return false;\n        }\n    }\n\n    // Función para obtener datos verificados de un vuelo\n    function getVerifiedFlightData(bytes32 flightId) external view returns (FlightData memory, uint256) {\n        require(verifiedFlights[flightId].flight_date != 0, \"Flight data not found\");\n        return (verifiedFlights[flightId], lastVerificationTimestamp[flightId]);\n    }\n\n    // Función para verificar si un vuelo está cancelado\n    function isFlightCancelled(bytes32 flightId) external view returns (bool) {\n        require(verifiedFlights[flightId].flight_date != 0, \"Flight data not found\");\n        return keccak256(bytes(verifiedFlights[flightId].flight_status)) == \n               keccak256(bytes(\"CANCELLED\"));\n    }\n\n    function decodeFlightData(bytes memory data) external pure returns (FlightData memory) {\n        return abi.decode(data, (FlightData));\n    }\n\n    function isJsonApiProofValid(\n        IWeb2Json.Proof calldata _proof\n    ) private view returns (bool) {\n        return ContractRegistry.getFdcVerification().verifyJsonApi(_proof);\n    }\n}  */"
      },
      "contracts/Insurance.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Insurance is Ownable {\n    using SafeERC20 for IERC20;\n\n    enum PolicyStatus {\n        Active,\n        Claimed,\n        Settled,\n        Expired\n    }\n\n    struct InsurancePolicy {\n        PolicyStatus status;\n        string insuredEvent;\n        address insuredAddress;\n        uint256 insuredAmount;\n        string flightId;\n        uint256 startTimestamp;\n        uint256 expirationTimestamp;\n    }\n\n    struct FlightData {\n        string flight_origin;\n        string flight_destination;\n        uint256 flight_date;\n        uint256 flight_time;\n        string flight_number;\n        string flight_airline;\n        string flight_status;\n        uint16 flight_gate;\n    }\n\n    // References all active insurance policies by policyId.\n    mapping(bytes32 => InsurancePolicy) public insurancePolicies;\n    // Maps hash of initiated claims to their policyId.\n    mapping(bytes32 => bytes32) public insuranceClaims;\n    // Almacena los datos de vuelo verificados por el relayer\n    mapping(bytes32 => FlightData) public verifiedFlightData;\n    mapping(bytes32 => uint256) public lastVerificationTimestamp;\n\n    IERC20 public immutable currency;\n    address public relayer;\n\n    uint256 public constant MAX_EVENT_DESCRIPTION_SIZE = 6;\n    string constant ancillaryDataHead = 'q:\"Had the following insured event occurred as of request timestamp: ';\n    string constant ancillaryDataTail = '?\"';\n\n    event PolicyIssued(\n        bytes32 indexed policyId,\n        address indexed insurer,\n        string insuredEvent,\n        address indexed insuredAddress,\n        uint256 insuredAmount,\n        string flightId\n    );\n    event ClaimSubmitted(\n        uint256 claimTimestamp,\n        bytes32 indexed claimId,\n        bytes32 indexed policyId\n    );\n    event ClaimAccepted(bytes32 indexed claimId, bytes32 indexed policyId);\n    event ClaimRejected(bytes32 indexed claimId, bytes32 indexed policyId);\n    event PolicyExpired(bytes32 indexed policyId);\n    event FlightDataUpdated(bytes32 indexed flightId, FlightData data);\n    event RelayerUpdated(address indexed oldRelayer, address indexed newRelayer);\n\n    constructor(address _currency) Ownable(msg.sender) {\n        currency = IERC20(_currency);\n    }\n\n    modifier onlyRelayer() {\n        require(msg.sender == relayer, \"Only relayer can call this function\");\n        _;\n    }\n\n    function setRelayer(address _relayer) external onlyOwner {\n        require(_relayer != address(0), \"Invalid relayer address\");\n        emit RelayerUpdated(relayer, _relayer);\n        relayer = _relayer;\n    }\n\n    // Función que el relayer usará para actualizar los datos de vuelo\n    function updateFlightData(\n        bytes32 flightId,\n        FlightData calldata data,\n        uint256 timestamp\n    ) external onlyRelayer {\n        verifiedFlightData[flightId] = data;\n        lastVerificationTimestamp[flightId] = timestamp;\n        emit FlightDataUpdated(flightId, data);\n    }\n\n    function issueInsurance(\n        string calldata insuredEvent,\n        address insuredAddress,\n        uint256 insuredAmount,\n        string memory flightId,\n        uint256 startTimestamp,\n        uint256 expirationTimestamp\n    ) external returns (bytes32 policyId) {\n        require(bytes(insuredEvent).length <= MAX_EVENT_DESCRIPTION_SIZE, \"Event description too long\");\n        require(insuredAddress != address(0), \"Invalid insured address\");\n        require(insuredAmount > 0, \"Amount should be above 0\");\n        require(startTimestamp < expirationTimestamp, \"Invalid timestamps\");\n\n        policyId = _getPolicyId(\n            block.number,\n            insuredEvent,\n            insuredAddress,\n            insuredAmount\n        );\n        require(insurancePolicies[policyId].insuredAddress == address(0), \"Policy already issued\");\n\n        InsurancePolicy storage newPolicy = insurancePolicies[policyId];\n        newPolicy.status = PolicyStatus.Active;\n        newPolicy.insuredEvent = insuredEvent;\n        newPolicy.insuredAddress = insuredAddress;\n        newPolicy.insuredAmount = insuredAmount;\n        newPolicy.flightId = flightId;\n        newPolicy.startTimestamp = startTimestamp;\n        newPolicy.expirationTimestamp = expirationTimestamp;\n\n        currency.safeTransferFrom(msg.sender, address(this), insuredAmount);\n\n        emit PolicyIssued(\n            policyId,\n            msg.sender,\n            insuredEvent,\n            insuredAddress,\n            insuredAmount,\n            flightId\n        );\n    }\n\n    function submitClaim(bytes32 policyId) external {\n        InsurancePolicy storage policy = insurancePolicies[policyId];\n        require(policy.status == PolicyStatus.Active, \"Policy not active\");\n        require(block.timestamp >= policy.startTimestamp, \"Policy not yet active\");\n        require(block.timestamp <= policy.expirationTimestamp, \"Policy expired\");\n\n        bytes32 flightId = keccak256(abi.encodePacked(policy.flightId));\n        require(verifiedFlightData[flightId].flight_date != 0, \"Flight data not verified\");\n        require(\n            keccak256(bytes(verifiedFlightData[flightId].flight_status)) == \n            keccak256(bytes(\"CANCELLED\")),\n            \"Flight not cancelled\"\n        );\n\n        policy.status = PolicyStatus.Claimed;\n        bytes32 claimId = _getClaimId(block.timestamp, policy.flightId);\n        insuranceClaims[claimId] = policyId;\n\n        uint256 proposerBond = (policy.insuredAmount * 0.001e18) / 1e18;\n        currency.safeTransferFrom(msg.sender, address(this), proposerBond);\n\n        emit ClaimSubmitted(block.timestamp, claimId, policyId);\n    }\n\n    function settleClaim(bytes32 claimId) external {\n        bytes32 policyId = insuranceClaims[claimId];\n        InsurancePolicy storage policy = insurancePolicies[policyId];\n        require(policy.status == PolicyStatus.Claimed, \"Policy not claimed\");\n\n        policy.status = PolicyStatus.Settled;\n        currency.safeTransfer(policy.insuredAddress, policy.insuredAmount);\n\n        emit ClaimAccepted(claimId, policyId);\n    }\n\n    function rejectClaim(bytes32 claimId) external {\n        bytes32 policyId = insuranceClaims[claimId];\n        InsurancePolicy storage policy = insurancePolicies[policyId];\n        require(policy.status == PolicyStatus.Claimed, \"Policy not claimed\");\n\n        policy.status = PolicyStatus.Active;\n        emit ClaimRejected(claimId, policyId);\n    }\n\n    function expirePolicy(bytes32 policyId) external {\n        InsurancePolicy storage policy = insurancePolicies[policyId];\n        require(policy.status == PolicyStatus.Active, \"Policy not active\");\n        require(block.timestamp > policy.expirationTimestamp, \"Policy not expired\");\n\n        policy.status = PolicyStatus.Expired;\n        emit PolicyExpired(policyId);\n    }\n\n    function _getPolicyId(\n        uint256 blockNumber,\n        string memory insuredEvent,\n        address insuredAddress,\n        uint256 insuredAmount\n    ) internal pure returns (bytes32) {\n        return keccak256(abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount));\n    }\n\n    function _getClaimId(\n        uint256 timestamp,\n        string memory flightId\n    ) internal pure returns (bytes32) {\n        return keccak256(abi.encode(timestamp, flightId));\n    }\n}\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        _mint(msg.sender, initialSupply);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function _update(address from, address to, uint256 amount)\n        internal\n        override\n        whenNotPaused\n    {\n        super._update(from, to, amount);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "parameters": "z",
        "fallbackOz": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "3420",
        "formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.28;\"\n--> contracts/FlightDataVerifier.sol\n\n",
        "message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.28;\"",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/FlightDataVerifier.sol",
          "start": -1,
          "end": -1
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1912
            ],
            "ERC165": [
              2044
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1913,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1912,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 2045,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2044,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1912,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2044,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                2044,
                2056,
                378,
                1912
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2043
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967269,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967271,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2043,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1894,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1894,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ],
            "Ownable": [
              526
            ]
          },
          "id": 527,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 527,
              "sourceUnit": 1913,
              "src": "128:45:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 381,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1912,
                    "src": "136:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 384,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1912,
                    "src": "692:7:2"
                  },
                  "id": 385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:2"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:2",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 526,
              "linearizedBaseContracts": [
                526,
                1912
              ],
              "name": "Ownable",
              "nameLocation": "681:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "706:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:2",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 392,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "858:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:2"
                  },
                  "src": "825:50:2"
                },
                {
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:2",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 397,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "994:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:2"
                  },
                  "src": "968:41:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 403,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1042:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1073:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:2"
                  },
                  "src": "1015:84:2"
                },
                {
                  "body": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "1259:153:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 409,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1273:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 410,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "IfStatement",
                        "src": "1269:95:2",
                        "trueBody": {
                          "id": 422,
                          "nodeType": "Block",
                          "src": "1301:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 416,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 415,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "1322:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 421,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 425,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "1392:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 424,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "1373:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 404,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:2",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 429,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "1237:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:2"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:2"
                  },
                  "scope": 526,
                  "src": "1225:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "1521:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 432,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "1531:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:2"
                      },
                      {
                        "id": 435,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 430,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:2",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 437,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:2"
                  },
                  "src": "1500:62:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "1693:30:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 443,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1710:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 442,
                        "id": 444,
                        "nodeType": "Return",
                        "src": "1703:13:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 438,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:2",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:2"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "1684:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:2"
                  },
                  "scope": 526,
                  "src": "1638:85:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 462,
                    "nodeType": "Block",
                    "src": "1841:117:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 450,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1855:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 452,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "1866:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 461,
                        "nodeType": "IfStatement",
                        "src": "1851:101:2",
                        "trueBody": {
                          "id": 460,
                          "nodeType": "Block",
                          "src": "1880:72:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 456,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1894,
                                      "src": "1928:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 392,
                                  "src": "1901:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 459,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:2",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:2"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:2"
                  },
                  "scope": 526,
                  "src": "1796:162:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "2347:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 469,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2357:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 464,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:2",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 467,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 466,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2337:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:2"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:2"
                  },
                  "returnParameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:2"
                  },
                  "scope": 526,
                  "src": "2293:101:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "2613:145:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "2627:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 499,
                        "nodeType": "IfStatement",
                        "src": "2623:91:2",
                        "trueBody": {
                          "id": 498,
                          "nodeType": "Block",
                          "src": "2651:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 492,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "2672:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 497,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2742:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 500,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2723:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 483,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 482,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2603:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:2"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "2570:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:2"
                  },
                  "returnParameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:2"
                  },
                  "scope": 526,
                  "src": "2543:215:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "2975:124:2",
                    "statements": [
                      {
                        "assignments": [
                          512
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 512,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "2985:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 511,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "id": 513,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "3004:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:2"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 515,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "3020:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 516,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "3029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "3073:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 521,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "3083:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 519,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "3052:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 506,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2940:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:2"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:2"
                  },
                  "scope": 526,
                  "src": "2912:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 527,
              "src": "663:2438:2",
              "usedErrors": [
                392,
                397
              ],
              "usedEvents": [
                403
              ]
            }
          ],
          "src": "102:3000:2"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              608
            ],
            "IERC165": [
              2056
            ],
            "IERC20": [
              1346
            ]
          },
          "id": 609,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 528,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 530,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 609,
              "sourceUnit": 617,
              "src": "133:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 529,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "141:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 532,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 609,
              "sourceUnit": 613,
              "src": "170:38:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 531,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "178:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 534,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1346,
                    "src": "590:6:3"
                  },
                  "id": 535,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:3"
                },
                {
                  "baseName": {
                    "id": 536,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2056,
                    "src": "598:7:3"
                  },
                  "id": 537,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:3"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 533,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:3",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 608,
              "linearizedBaseContracts": [
                608,
                2056,
                1346
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 538,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 547,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "1548:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "1560:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:3"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "1593:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:3"
                  },
                  "scope": 608,
                  "src": "1523:76:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 548,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 559,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "2088:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "2100:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "2115:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:3"
                  },
                  "returnParameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "2154:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:3"
                  },
                  "scope": 608,
                  "src": "2063:97:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 560,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 571,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "2653:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 564,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "2667:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 566,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "2679:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:3"
                  },
                  "returnParameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "2712:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:3"
                  },
                  "scope": 608,
                  "src": "2624:94:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 572,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 585,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3294:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3308:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3320:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3335:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:3"
                  },
                  "returnParameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "3374:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:3"
                  },
                  "scope": 608,
                  "src": "3265:115:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 595,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "3805:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "3822:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:3"
                  },
                  "returnParameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "3855:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:3"
                  },
                  "scope": 608,
                  "src": "3781:80:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 596,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 607,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "4374:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "4391:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "4406:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:3"
                  },
                  "returnParameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 607,
                        "src": "4445:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:3"
                  },
                  "scope": 608,
                  "src": "4350:101:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 609,
              "src": "568:3885:3",
              "usedErrors": [],
              "usedEvents": [
                1280,
                1289
              ]
            }
          ],
          "src": "107:4347:3"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              2056
            ]
          },
          "id": 613,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 610,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 612,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 613,
              "sourceUnit": 2057,
              "src": "132:59:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 611,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "140:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:86:4"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1346
            ]
          },
          "id": 617,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 614,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 616,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 617,
              "sourceUnit": 1347,
              "src": "131:49:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 615,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "139:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:5"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              753
            ],
            "IERC20Errors": [
              658
            ],
            "IERC721Errors": [
              706
            ]
          },
          "id": 754,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 618,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 619,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:6",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 658,
              "linearizedBaseContracts": [
                658
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:6",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 628,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "654:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "670:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "687:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:6"
                  },
                  "src": "623:80:6"
                },
                {
                  "documentation": {
                    "id": 629,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 633,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 633,
                        "src": "891:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:6"
                  },
                  "src": "866:41:6"
                },
                {
                  "documentation": {
                    "id": 634,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 638,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "1104:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:6"
                  },
                  "src": "1077:45:6"
                },
                {
                  "documentation": {
                    "id": 639,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:6",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 647,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "1511:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "1528:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "1547:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:6"
                  },
                  "src": "1478:85:6"
                },
                {
                  "documentation": {
                    "id": 648,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 652,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "1775:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:6"
                  },
                  "src": "1748:45:6"
                },
                {
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:6",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 657,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "2025:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:6"
                  },
                  "src": "1999:43:6"
                }
              ],
              "scope": 754,
              "src": "280:1764:6",
              "usedErrors": [
                628,
                633,
                638,
                647,
                652,
                657
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 659,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:6",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 706,
              "linearizedBaseContracts": [
                706
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 660,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:6",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 664,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "2469:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:6"
                  },
                  "src": "2444:40:6"
                },
                {
                  "documentation": {
                    "id": 665,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:6",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 669,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "2656:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:6"
                  },
                  "src": "2627:46:6"
                },
                {
                  "documentation": {
                    "id": 670,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:6",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 678,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3000:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3016:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "3033:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:6"
                  },
                  "src": "2973:75:6"
                },
                {
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 683,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "3237:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:6"
                  },
                  "src": "3211:42:6"
                },
                {
                  "documentation": {
                    "id": 684,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 688,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "3451:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:6"
                  },
                  "src": "3423:46:6"
                },
                {
                  "documentation": {
                    "id": 689,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:6",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 695,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 695,
                        "src": "3760:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 695,
                        "src": "3778:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:6"
                  },
                  "src": "3727:68:6"
                },
                {
                  "documentation": {
                    "id": 696,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 700,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 699,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 698,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 700,
                        "src": "4008:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 697,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:6"
                  },
                  "src": "3980:46:6"
                },
                {
                  "documentation": {
                    "id": 701,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:6",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 705,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "4262:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:6"
                  },
                  "src": "4234:46:6"
                }
              ],
              "scope": 754,
              "src": "2190:2092:6",
              "usedErrors": [
                664,
                669,
                678,
                683,
                688,
                695,
                700,
                705
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 707,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:6",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 753,
              "linearizedBaseContracts": [
                753
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 708,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:6",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 718,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 717,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "4860:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 712,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "4876:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "4893:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "4909:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:6"
                  },
                  "src": "4827:99:6"
                },
                {
                  "documentation": {
                    "id": 719,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 723,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 723,
                        "src": "5116:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:6"
                  },
                  "src": "5089:43:6"
                },
                {
                  "documentation": {
                    "id": 724,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 728,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "5331:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:6"
                  },
                  "src": "5302:47:6"
                },
                {
                  "documentation": {
                    "id": 729,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:6",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 735,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "5651:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "5669:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:6"
                  },
                  "src": "5616:68:6"
                },
                {
                  "documentation": {
                    "id": 736,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 740,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "5898:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:6"
                  },
                  "src": "5869:47:6"
                },
                {
                  "documentation": {
                    "id": 741,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:6",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 745,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "6153:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:6"
                  },
                  "src": "6124:47:6"
                },
                {
                  "documentation": {
                    "id": 746,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:6",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 752,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 748,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "6494:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 752,
                        "src": "6513:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:6"
                  },
                  "src": "6462:73:6"
                }
              ],
              "scope": 754,
              "src": "4430:2107:6",
              "usedErrors": [
                718,
                723,
                728,
                735,
                740,
                745,
                752
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:6"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ],
            "ERC20": [
              1268
            ],
            "IERC20": [
              1346
            ],
            "IERC20Errors": [
              658
            ],
            "IERC20Metadata": [
              1418
            ]
          },
          "id": 1269,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 755,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 757,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1269,
              "sourceUnit": 1347,
              "src": "131:36:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 756,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "139:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 759,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1269,
              "sourceUnit": 1419,
              "src": "168:63:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 758,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1418,
                    "src": "176:14:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 761,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1269,
              "sourceUnit": 1913,
              "src": "232:48:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 760,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1912,
                    "src": "240:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 763,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1269,
              "sourceUnit": 754,
              "src": "281:65:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 762,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 658,
                    "src": "289:12:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 765,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1912,
                    "src": "1133:7:7"
                  },
                  "id": 766,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:7"
                },
                {
                  "baseName": {
                    "id": 767,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1346,
                    "src": "1142:6:7"
                  },
                  "id": 768,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:7"
                },
                {
                  "baseName": {
                    "id": 769,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1418,
                    "src": "1150:14:7"
                  },
                  "id": 770,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:7"
                },
                {
                  "baseName": {
                    "id": 771,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 658,
                    "src": "1166:12:7"
                  },
                  "id": 772,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:7"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 764,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:7",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1268,
              "linearizedBaseContracts": [
                1268,
                658,
                1418,
                1346,
                1912
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1185:53:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 775,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:7",
                    "keyType": {
                      "id": 773,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1245:83:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 781,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:7",
                    "keyType": {
                      "id": 777,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 780,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:7",
                      "keyType": {
                        "id": 778,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 779,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1335:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1370:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1396:22:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 804,
                    "nodeType": "Block",
                    "src": "1638:57:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 796,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "1648:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 797,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "1656:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 799,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:7"
                      },
                      {
                        "expression": {
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 800,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "1671:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 801,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "1681:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 789,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:7",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 805,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "1594:19:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "1615:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:7"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:7"
                  },
                  "scope": 1268,
                  "src": "1582:113:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1405
                  ],
                  "body": {
                    "id": 813,
                    "nodeType": "Block",
                    "src": "1820:29:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 811,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 786,
                          "src": "1837:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 810,
                        "id": 812,
                        "nodeType": "Return",
                        "src": "1830:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 806,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:7",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 814,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:7"
                  },
                  "returnParameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "1805:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:7"
                  },
                  "scope": 1268,
                  "src": "1760:89:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1411
                  ],
                  "body": {
                    "id": 822,
                    "nodeType": "Block",
                    "src": "2024:31:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 820,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "2041:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 819,
                        "id": 821,
                        "nodeType": "Return",
                        "src": "2034:14:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 815,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:7",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 823,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:7"
                  },
                  "returnParameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 823,
                        "src": "2009:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:7"
                  },
                  "scope": 1268,
                  "src": "1962:93:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1417
                  ],
                  "body": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "2744:26:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 828,
                        "id": 830,
                        "nodeType": "Return",
                        "src": "2754:9:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 824,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:7",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 832,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:7"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "2737:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:7"
                  },
                  "scope": 1268,
                  "src": "2688:82:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1295
                  ],
                  "body": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "2891:36:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 838,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "2908:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 837,
                        "id": 839,
                        "nodeType": "Return",
                        "src": "2901:19:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 833,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:7",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 841,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:7"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 841,
                        "src": "2882:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:7"
                  },
                  "scope": 1268,
                  "src": "2830:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1303
                  ],
                  "body": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "3059:42:7",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 849,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "3076:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 851,
                          "indexExpression": {
                            "id": 850,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "3086:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 848,
                        "id": 852,
                        "nodeType": "Return",
                        "src": "3069:25:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 842,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:7",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 854,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 844,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "3004:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 843,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:7"
                  },
                  "returnParameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "3050:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:7"
                  },
                  "scope": 1268,
                  "src": "2985:116:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1313
                  ],
                  "body": {
                    "id": 877,
                    "nodeType": "Block",
                    "src": "3371:103:7",
                    "statements": [
                      {
                        "assignments": [
                          865
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 865,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 877,
                            "src": "3381:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 864,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 868,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 866,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1894,
                            "src": "3397:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 870,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "3429:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 871,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "3436:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 872,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "3440:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 869,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "3419:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:7"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 863,
                        "id": 876,
                        "nodeType": "Return",
                        "src": "3456:11:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:7",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 878,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "3314:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "3326:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:7"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "3365:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:7"
                  },
                  "scope": 1268,
                  "src": "3296:178:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1323
                  ],
                  "body": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "3621:51:7",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 888,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "3638:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 890,
                            "indexExpression": {
                              "id": 889,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "3650:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 892,
                          "indexExpression": {
                            "id": 891,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "3657:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 887,
                        "id": 893,
                        "nodeType": "Return",
                        "src": "3631:34:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 879,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:7",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "3551:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "3566:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:7"
                  },
                  "returnParameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "3612:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:7"
                  },
                  "scope": 1268,
                  "src": "3532:140:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1333
                  ],
                  "body": {
                    "id": 918,
                    "nodeType": "Block",
                    "src": "4058:107:7",
                    "statements": [
                      {
                        "assignments": [
                          906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 906,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 918,
                            "src": "4068:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 905,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 909,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 907,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1894,
                            "src": "4084:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 911,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "4115:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 912,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "4122:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 913,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "4131:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 910,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1159,
                              1219
                            ],
                            "referencedDeclaration": 1159,
                            "src": "4106:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 915,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:7"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 904,
                        "id": 917,
                        "nodeType": "Return",
                        "src": "4147:11:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 896,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:7",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 919,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "3996:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "4013:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:7"
                  },
                  "returnParameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "4052:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:7"
                  },
                  "scope": 1268,
                  "src": "3979:186:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1345
                  ],
                  "body": {
                    "id": 950,
                    "nodeType": "Block",
                    "src": "4850:151:7",
                    "statements": [
                      {
                        "assignments": [
                          932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 932,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 950,
                            "src": "4860:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 935,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 933,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1894,
                            "src": "4878:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 937,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "4916:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 938,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 932,
                              "src": "4922:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 939,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "4931:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 936,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "4900:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 943,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "4957:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 944,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 924,
                              "src": "4963:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 945,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "4967:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 942,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "4947:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 947,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:7"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 930,
                        "id": 949,
                        "nodeType": "Return",
                        "src": "4983:11:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 920,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:7",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 951,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 951,
                        "src": "4779:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 951,
                        "src": "4793:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 951,
                        "src": "4805:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:7"
                  },
                  "returnParameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 929,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 951,
                        "src": "4844:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 928,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:7"
                  },
                  "scope": 1268,
                  "src": "4757:244:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "5443:231:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 961,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "5457:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 962,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 975,
                        "nodeType": "IfStatement",
                        "src": "5453:86:7",
                        "trueBody": {
                          "id": 974,
                          "nodeType": "Block",
                          "src": "5477:62:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 970,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 969,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 968,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 967,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 633,
                                  "src": "5498:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 973,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 976,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "5552:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 977,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 990,
                        "nodeType": "IfStatement",
                        "src": "5548:86:7",
                        "trueBody": {
                          "id": 989,
                          "nodeType": "Block",
                          "src": "5570:64:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 985,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 984,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 983,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 982,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 638,
                                  "src": "5591:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 988,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 992,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "5651:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 993,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "5657:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 994,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "5661:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 991,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "5643:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 952,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:7",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 998,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 954,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "5393:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 953,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "5407:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "5419:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:7"
                  },
                  "returnParameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:7"
                  },
                  "scope": 1268,
                  "src": "5374:300:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1074,
                    "nodeType": "Block",
                    "src": "6064:1032:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1008,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "6078:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1009,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1045,
                          "nodeType": "Block",
                          "src": "6252:362:7",
                          "statements": [
                            {
                              "assignments": [
                                1020
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1020,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1045,
                                  "src": "6266:19:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1019,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1024,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1021,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 776,
                                  "src": "6288:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1023,
                                "indexExpression": {
                                  "id": 1022,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "6298:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:7"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1025,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "6321:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1026,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "6335:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1035,
                              "nodeType": "IfStatement",
                              "src": "6317:115:7",
                              "trueBody": {
                                "id": 1034,
                                "nodeType": "Block",
                                "src": "6342:90:7",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1029,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1001,
                                          "src": "6392:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1030,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1020,
                                          "src": "6398:11:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1031,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1005,
                                          "src": "6411:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1028,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 628,
                                        "src": "6367:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1032,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1033,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:7"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1044,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:7",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1042,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1036,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 776,
                                        "src": "6552:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1038,
                                      "indexExpression": {
                                        "id": 1037,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1001,
                                        "src": "6562:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1041,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1039,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1020,
                                        "src": "6570:11:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1040,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1005,
                                        "src": "6584:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1043,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:7"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1046,
                        "nodeType": "IfStatement",
                        "src": "6074:540:7",
                        "trueBody": {
                          "id": 1018,
                          "nodeType": "Block",
                          "src": "6098:148:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1014,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 784,
                                  "src": "6214:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1015,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "6230:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1017,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1047,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "6628:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1048,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1066,
                          "nodeType": "Block",
                          "src": "6843:206:7",
                          "statements": [
                            {
                              "id": 1065,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:7",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1059,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 776,
                                        "src": "7002:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1061,
                                      "indexExpression": {
                                        "id": 1060,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1003,
                                        "src": "7012:2:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1062,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1005,
                                      "src": "7019:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1064,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:7"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1067,
                        "nodeType": "IfStatement",
                        "src": "6624:425:7",
                        "trueBody": {
                          "id": 1058,
                          "nodeType": "Block",
                          "src": "6646:191:7",
                          "statements": [
                            {
                              "id": 1057,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:7",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1053,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 784,
                                      "src": "6791:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1054,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1005,
                                      "src": "6807:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1056,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:7"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1069,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "7073:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1070,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "7079:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1071,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "7083:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1068,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "7064:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1073,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 999,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:7",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 1075,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "6006:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "6020:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "6032:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:7"
                  },
                  "returnParameters": {
                    "id": 1007,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:7"
                  },
                  "scope": 1268,
                  "src": "5989:1107:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1107,
                    "nodeType": "Block",
                    "src": "7495:152:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1083,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "7509:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1097,
                        "nodeType": "IfStatement",
                        "src": "7505:91:7",
                        "trueBody": {
                          "id": 1096,
                          "nodeType": "Block",
                          "src": "7532:64:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1092,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1091,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1090,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1093,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1089,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 638,
                                  "src": "7553:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1095,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1099,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1103,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "7625:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1104,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1080,
                              "src": "7634:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1098,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "7605:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1106,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:7",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "7454:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "7471:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:7"
                  },
                  "returnParameters": {
                    "id": 1082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:7"
                  },
                  "scope": 1268,
                  "src": "7439:208:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1140,
                    "nodeType": "Block",
                    "src": "8021:150:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1116,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "8035:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1117,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1130,
                        "nodeType": "IfStatement",
                        "src": "8031:89:7",
                        "trueBody": {
                          "id": 1129,
                          "nodeType": "Block",
                          "src": "8058:62:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1125,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1123,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1122,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 633,
                                  "src": "8079:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1128,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1132,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "8137:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1133,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1137,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "8158:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1131,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "8129:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1139,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1109,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:7",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "7980:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "7997:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:7"
                  },
                  "returnParameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:7"
                  },
                  "scope": 1268,
                  "src": "7965:206:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1158,
                    "nodeType": "Block",
                    "src": "8781:54:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1152,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "8800:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1153,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "8807:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1154,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "8816:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1151,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1159,
                              1219
                            ],
                            "referencedDeclaration": 1219,
                            "src": "8791:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1157,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1142,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:7",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1159,
                        "src": "8725:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1159,
                        "src": "8740:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1159,
                        "src": "8757:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:7"
                  },
                  "returnParameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:7"
                  },
                  "scope": 1268,
                  "src": "8707:128:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1218,
                    "nodeType": "Block",
                    "src": "9780:334:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1171,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "9794:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1172,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1185,
                        "nodeType": "IfStatement",
                        "src": "9790:89:7",
                        "trueBody": {
                          "id": 1184,
                          "nodeType": "Block",
                          "src": "9815:64:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1180,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1179,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1178,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1177,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 652,
                                  "src": "9836:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1183,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1186,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "9892:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1187,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1200,
                        "nodeType": "IfStatement",
                        "src": "9888:90:7",
                        "trueBody": {
                          "id": 1199,
                          "nodeType": "Block",
                          "src": "9915:63:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1194,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1193,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1192,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "9936:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1198,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1201,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "9987:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1204,
                              "indexExpression": {
                                "id": 1202,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "9999:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1205,
                            "indexExpression": {
                              "id": 1203,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1164,
                              "src": "10006:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1206,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "10017:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1208,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:7"
                      },
                      {
                        "condition": {
                          "id": 1209,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "10036:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1217,
                        "nodeType": "IfStatement",
                        "src": "10032:76:7",
                        "trueBody": {
                          "id": 1216,
                          "nodeType": "Block",
                          "src": "10047:61:7",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1211,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "10075:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1212,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1164,
                                    "src": "10082:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1213,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "10091:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1210,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1289,
                                  "src": "10066:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1215,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1160,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:7",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 1219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "9700:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "9715:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "9732:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "9747:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1167,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:7"
                  },
                  "returnParameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:7"
                  },
                  "scope": 1268,
                  "src": "9682:432:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1266,
                    "nodeType": "Block",
                    "src": "10485:387:7",
                    "statements": [
                      {
                        "assignments": [
                          1230
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1230,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1266,
                            "src": "10495:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1229,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1235,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1232,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "10532:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1233,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1224,
                              "src": "10539:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1231,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "10522:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1236,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "10561:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1238,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:7",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1237,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:7",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1265,
                        "nodeType": "IfStatement",
                        "src": "10557:309:7",
                        "trueBody": {
                          "id": 1264,
                          "nodeType": "Block",
                          "src": "10599:267:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1243,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "10617:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1244,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1226,
                                  "src": "10636:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1253,
                              "nodeType": "IfStatement",
                              "src": "10613:130:7",
                              "trueBody": {
                                "id": 1252,
                                "nodeType": "Block",
                                "src": "10643:100:7",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1247,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1224,
                                          "src": "10695:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1248,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1230,
                                          "src": "10704:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1249,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1226,
                                          "src": "10722:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1246,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 647,
                                        "src": "10668:26:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1251,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:7"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1263,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1255,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1222,
                                        "src": "10793:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1256,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1224,
                                        "src": "10800:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1257,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1230,
                                          "src": "10809:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1258,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1226,
                                          "src": "10828:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1254,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1159,
                                        1219
                                      ],
                                      "referencedDeclaration": 1219,
                                      "src": "10784:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1262,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:7"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:7",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "10421:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "10436:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "10453:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:7"
                  },
                  "returnParameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:7"
                  },
                  "scope": 1268,
                  "src": "10396:476:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1269,
              "src": "1106:9768:7",
              "usedErrors": [
                628,
                633,
                638,
                647,
                652,
                657
              ],
              "usedEvents": [
                1280,
                1289
              ]
            }
          ],
          "src": "105:10770:7"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1346
            ]
          },
          "id": 1347,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1270,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1271,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:8",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1346,
              "linearizedBaseContracts": [
                1346
              ],
              "name": "IERC20",
              "nameLocation": "214:6:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1272,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:8",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1280,
                  "name": "Transfer",
                  "nameLocation": "396:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1274,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "405:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1276,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "427:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1278,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "447:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:8"
                  },
                  "src": "390:72:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1281,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:8",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1289,
                  "name": "Approval",
                  "nameLocation": "627:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1283,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "636:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1285,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "659:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1287,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "684:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:8"
                  },
                  "src": "621:78:8"
                },
                {
                  "documentation": {
                    "id": 1290,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:8",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1295,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1291,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:8"
                  },
                  "returnParameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1295,
                        "src": "821:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:8"
                  },
                  "scope": 1346,
                  "src": "775:55:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1296,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:8",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1303,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "931:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:8"
                  },
                  "returnParameters": {
                    "id": 1302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1301,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "971:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:8"
                  },
                  "scope": 1346,
                  "src": "912:68:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1304,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:8",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1306,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "1222:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "1234:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:8"
                  },
                  "returnParameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1313,
                        "src": "1267:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:8"
                  },
                  "scope": 1346,
                  "src": "1204:69:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1314,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:8",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "1567:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "1582:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:8"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "1622:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:8"
                  },
                  "scope": 1346,
                  "src": "1548:83:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1324,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:8",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1333,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1326,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "2326:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "2343:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:8"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "2376:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:8"
                  },
                  "scope": 1346,
                  "src": "2309:73:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1334,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:8",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "2712:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "2726:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "2738:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:8"
                  },
                  "returnParameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "2771:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:8"
                  },
                  "scope": 1346,
                  "src": "2690:87:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1347,
              "src": "204:2575:8",
              "usedErrors": [],
              "usedEvents": [
                1280,
                1289
              ]
            }
          ],
          "src": "106:2674:8"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ],
            "ERC20": [
              1268
            ],
            "ERC20Burnable": [
              1392
            ]
          },
          "id": 1393,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1348,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1350,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1393,
              "sourceUnit": 1269,
              "src": "150:35:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1349,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1268,
                    "src": "158:5:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1352,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1393,
              "sourceUnit": 1913,
              "src": "186:51:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1351,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1912,
                    "src": "194:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1354,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1912,
                    "src": "483:7:9"
                  },
                  "id": 1355,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:9"
                },
                {
                  "baseName": {
                    "id": 1356,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1268,
                    "src": "492:5:9"
                  },
                  "id": 1357,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:9"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1353,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:9",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1392,
              "linearizedBaseContracts": [
                1392,
                1268,
                658,
                1418,
                1346,
                1912
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1369,
                    "nodeType": "Block",
                    "src": "662:43:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1364,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "678:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1366,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "692:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1363,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "672:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1368,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1358,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:9",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1370,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1360,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "632:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:9"
                  },
                  "returnParameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:9"
                  },
                  "scope": 1392,
                  "src": "618:87:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1390,
                    "nodeType": "Block",
                    "src": "1086:93:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1379,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "1112:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1380,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "1121:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1382,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1135:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1378,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "1096:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1384,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1386,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "1157:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1387,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1166:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1385,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "1151:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1371,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:9",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "1039:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "1056:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:9"
                  },
                  "returnParameters": {
                    "id": 1377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:9"
                  },
                  "scope": 1392,
                  "src": "1021:158:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1393,
              "src": "448:733:9",
              "usedErrors": [
                628,
                633,
                638,
                647,
                652,
                657
              ],
              "usedEvents": [
                1280,
                1289
              ]
            }
          ],
          "src": "124:1058:9"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1346
            ],
            "IERC20Metadata": [
              1418
            ]
          },
          "id": 1419,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1394,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1396,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1419,
              "sourceUnit": 1347,
              "src": "151:37:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1395,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "159:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1398,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1346,
                    "src": "306:6:10"
                  },
                  "id": 1399,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:10"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1397,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:10",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1418,
              "linearizedBaseContracts": [
                1418,
                1346
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1400,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:10",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:10"
                  },
                  "returnParameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1405,
                        "src": "417:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:10"
                  },
                  "scope": 1418,
                  "src": "378:54:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1406,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:10",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1411,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:10"
                  },
                  "returnParameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1409,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "540:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:10"
                  },
                  "scope": 1418,
                  "src": "499:56:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1412,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:10",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1417,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:10"
                  },
                  "returnParameters": {
                    "id": 1416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1417,
                        "src": "674:5:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:10"
                  },
                  "scope": 1418,
                  "src": "631:50:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1419,
              "src": "278:405:10",
              "usedErrors": [],
              "usedEvents": [
                1280,
                1289
              ]
            }
          ],
          "src": "125:559:10"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              608
            ],
            "IERC20": [
              1346
            ],
            "SafeERC20": [
              1882
            ]
          },
          "id": 1883,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1420,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1422,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1883,
              "sourceUnit": 1347,
              "src": "141:37:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1421,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "149:6:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 1424,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1883,
              "sourceUnit": 609,
              "src": "179:58:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1423,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 608,
                    "src": "187:8:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1425,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:11",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1882,
              "linearizedBaseContracts": [
                1882
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1426,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:11",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 1430,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1428,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1430,
                        "src": "823:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:11"
                  },
                  "src": "792:46:11"
                },
                {
                  "documentation": {
                    "id": 1431,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:11",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 1439,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "959:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "976:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "1002:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:11"
                  },
                  "src": "920:109:11"
                },
                {
                  "body": {
                    "id": 1462,
                    "nodeType": "Block",
                    "src": "1291:88:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1451,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "1321:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1454,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1443,
                                    "src": "1343:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:11",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1313,
                                  "src": "1343:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1456,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1445,
                                      "src": "1360:2:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1457,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1447,
                                      "src": "1364:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1458,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1452,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1328:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:11",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1450,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "1301:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1461,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1440,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:11",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 1463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1443,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "1241:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1441,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "1241:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "1241:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1445,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "1255:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1447,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "1267:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1446,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:11"
                  },
                  "returnParameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:11"
                  },
                  "scope": 1882,
                  "src": "1219:160:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1489,
                    "nodeType": "Block",
                    "src": "1708:98:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1477,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "1738:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1480,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1467,
                                    "src": "1760:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:11",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1345,
                                  "src": "1760:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1482,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1469,
                                      "src": "1781:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1483,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1471,
                                      "src": "1787:2:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1484,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1473,
                                      "src": "1791:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1485,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1478,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1745:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:11",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1476,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "1718:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1488,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1464,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:11",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 1490,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1644:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1466,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1465,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "1644:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "1644:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1658:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1471,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1672:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1684:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:11"
                  },
                  "returnParameters": {
                    "id": 1475,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:11"
                  },
                  "scope": 1882,
                  "src": "1618:188:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1515,
                    "nodeType": "Block",
                    "src": "2033:99:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1504,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1494,
                              "src": "2074:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1507,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1494,
                                    "src": "2096:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:11",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1313,
                                  "src": "2096:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1509,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1496,
                                      "src": "2113:2:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1510,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1498,
                                      "src": "2117:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1511,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1505,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2081:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:11",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1503,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "2050:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1502,
                        "id": 1514,
                        "nodeType": "Return",
                        "src": "2043:82:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1491,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:11",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 1516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1494,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "1968:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1493,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1492,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "1968:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "1968:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "1982:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "1994:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:11"
                  },
                  "returnParameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "2027:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1500,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:11"
                  },
                  "scope": 1882,
                  "src": "1943:189:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1544,
                    "nodeType": "Block",
                    "src": "2381:109:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1532,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1520,
                              "src": "2422:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1535,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1520,
                                    "src": "2444:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:11",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1345,
                                  "src": "2444:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1537,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1522,
                                      "src": "2465:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1538,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1524,
                                      "src": "2471:2:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1539,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1526,
                                      "src": "2475:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1540,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1533,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2429:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:11",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1531,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "2398:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1530,
                        "id": 1543,
                        "nodeType": "Return",
                        "src": "2391:92:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1517,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:11",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 1545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1520,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1545,
                        "src": "2302:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1518,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "2302:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "2302:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1545,
                        "src": "2316:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1524,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1545,
                        "src": "2330:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1526,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1545,
                        "src": "2342:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:11"
                  },
                  "returnParameters": {
                    "id": 1530,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1529,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1545,
                        "src": "2375:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1528,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:11"
                  },
                  "scope": 1882,
                  "src": "2273:217:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1575,
                    "nodeType": "Block",
                    "src": "3232:139:11",
                    "statements": [
                      {
                        "assignments": [
                          1557
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1557,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1575,
                            "src": "3242:20:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1556,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1566,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1562,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3289:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1882",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1882",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 1561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1560,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1564,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1551,
                              "src": "3296:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1558,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1549,
                              "src": "3265:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:11",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1323,
                            "src": "3265:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1568,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1549,
                              "src": "3327:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1569,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1551,
                              "src": "3334:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1570,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1557,
                                "src": "3343:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1571,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1553,
                                "src": "3358:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1567,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "3314:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1574,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1546,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:11",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1549,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1576,
                        "src": "3177:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1548,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1547,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "3177:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "3177:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1551,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1576,
                        "src": "3191:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1576,
                        "src": "3208:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:11"
                  },
                  "returnParameters": {
                    "id": 1555,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:11"
                  },
                  "scope": 1882,
                  "src": "3146:225:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "4137:370:11",
                    "statements": [
                      {
                        "id": 1617,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:11",
                        "statements": [
                          {
                            "assignments": [
                              1588
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1588,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:11",
                                "nodeType": "VariableDeclaration",
                                "scope": 1617,
                                "src": "4171:24:11",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1587,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1597,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1593,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4222:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1882",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1882",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1591,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1595,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1582,
                                  "src": "4229:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1589,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1580,
                                  "src": "4198:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1346",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:11",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1323,
                                "src": "4198:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:11"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1598,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "4255:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1599,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1584,
                                "src": "4274:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1608,
                            "nodeType": "IfStatement",
                            "src": "4251:160:11",
                            "trueBody": {
                              "id": 1607,
                              "nodeType": "Block",
                              "src": "4293:118:11",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1602,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1582,
                                        "src": "4351:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1603,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1588,
                                        "src": "4360:16:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 1604,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1584,
                                        "src": "4378:17:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1601,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1439,
                                      "src": "4318:32:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 1605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 1606,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:11"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1610,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1580,
                                  "src": "4437:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1346",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1611,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1582,
                                  "src": "4444:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1612,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1588,
                                    "src": "4453:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1613,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1584,
                                    "src": "4472:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1346",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1609,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "4424:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1616,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:11"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1577,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:11",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "4070:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1579,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1578,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "4070:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "4070:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1582,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "4084:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1584,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "4101:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:11"
                  },
                  "returnParameters": {
                    "id": 1586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:11"
                  },
                  "scope": 1882,
                  "src": "4039:468:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1665,
                    "nodeType": "Block",
                    "src": "5161:303:11",
                    "statements": [
                      {
                        "assignments": [
                          1631
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1631,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1665,
                            "src": "5171:25:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1630,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1640,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1634,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "5214:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1346",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:11",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1333,
                              "src": "5214:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1636,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1625,
                                  "src": "5230:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1637,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1627,
                                  "src": "5239:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1638,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 1632,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "5199:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:11",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:11"
                      },
                      {
                        "condition": {
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:11",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1642,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "5286:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1346",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1643,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1631,
                                "src": "5293:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1346",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1641,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1881,
                              "src": "5262:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1664,
                        "nodeType": "IfStatement",
                        "src": "5257:201:11",
                        "trueBody": {
                          "id": 1663,
                          "nodeType": "Block",
                          "src": "5308:150:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1647,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "5342:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1650,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1623,
                                          "src": "5364:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1346",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:11",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1333,
                                        "src": "5364:13:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1652,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1625,
                                            "src": "5380:7:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 1653,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 1654,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1648,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "5349:3:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:11",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1646,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1840,
                                  "src": "5322:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1657,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1659,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "5427:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1660,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1631,
                                    "src": "5434:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1346",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1658,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1840,
                                  "src": "5407:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1662,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1620,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:11",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 1666,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1666,
                        "src": "5106:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1621,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "5106:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "5106:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1666,
                        "src": "5120:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1666,
                        "src": "5137:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:11"
                  },
                  "returnParameters": {
                    "id": 1629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:11"
                  },
                  "scope": 1882,
                  "src": "5084:380:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1708,
                    "nodeType": "Block",
                    "src": "5911:219:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1679,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1672,
                                "src": "5925:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:11",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:11",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1693,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1672,
                                  "src": "6034:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1694,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1674,
                                  "src": "6038:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1695,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1676,
                                  "src": "6045:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1691,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "6012:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$608",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:11",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 559,
                                "src": "6012:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1706,
                          "nodeType": "IfStatement",
                          "src": "6007:117:11",
                          "trueBody": {
                            "id": 1705,
                            "nodeType": "Block",
                            "src": "6052:72:11",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1701,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1670,
                                          "src": "6106:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1700,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1699,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1698,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "6073:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1704,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:11"
                              }
                            ]
                          }
                        },
                        "id": 1707,
                        "nodeType": "IfStatement",
                        "src": "5921:203:11",
                        "trueBody": {
                          "id": 1690,
                          "nodeType": "Block",
                          "src": "5946:55:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1685,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1670,
                                    "src": "5973:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1686,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1672,
                                    "src": "5980:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1687,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1674,
                                    "src": "5984:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1684,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1463,
                                  "src": "5960:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1689,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1667,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:11",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1709,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1670,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "5840:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$608",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1669,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1668,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 608,
                            "src": "5840:8:11"
                          },
                          "referencedDeclaration": 608,
                          "src": "5840:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$608",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1672,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "5856:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "5868:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1676,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "5883:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1675,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:11"
                  },
                  "returnParameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:11"
                  },
                  "scope": 1882,
                  "src": "5808:322:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1755,
                    "nodeType": "Block",
                    "src": "6649:239:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1724,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1717,
                                "src": "6663:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:11",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:11",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1739,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1715,
                                  "src": "6786:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1740,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1717,
                                  "src": "6792:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1741,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1719,
                                  "src": "6796:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1742,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "6803:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1737,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1713,
                                  "src": "6760:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$608",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:11",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 585,
                                "src": "6760:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1753,
                          "nodeType": "IfStatement",
                          "src": "6755:127:11",
                          "trueBody": {
                            "id": 1752,
                            "nodeType": "Block",
                            "src": "6810:72:11",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1748,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1713,
                                          "src": "6864:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1746,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1749,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1745,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "6831:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1751,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:11"
                              }
                            ]
                          }
                        },
                        "id": 1754,
                        "nodeType": "IfStatement",
                        "src": "6659:223:11",
                        "trueBody": {
                          "id": 1736,
                          "nodeType": "Block",
                          "src": "6684:65:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1730,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1713,
                                    "src": "6715:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1731,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1715,
                                    "src": "6722:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1732,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1717,
                                    "src": "6728:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1733,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1719,
                                    "src": "6732:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1729,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1490,
                                  "src": "6698:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1735,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1710,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:11",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1756,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1713,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "6527:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$608",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1712,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1711,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 608,
                            "src": "6527:8:11"
                          },
                          "referencedDeclaration": 608,
                          "src": "6527:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$608",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1715,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "6551:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1714,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1717,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "6573:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1719,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "6593:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1718,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1721,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "6616:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1720,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:11"
                  },
                  "returnParameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:11"
                  },
                  "scope": 1882,
                  "src": "6482:406:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "7655:218:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1769,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1762,
                                "src": "7669:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:11",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:11",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1783,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1762,
                                  "src": "7777:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1784,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1764,
                                  "src": "7781:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1785,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "7788:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1781,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1760,
                                  "src": "7756:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$608",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:11",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 607,
                                "src": "7756:20:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1796,
                          "nodeType": "IfStatement",
                          "src": "7751:116:11",
                          "trueBody": {
                            "id": 1795,
                            "nodeType": "Block",
                            "src": "7795:72:11",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1791,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1760,
                                          "src": "7849:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$608",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1789,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1788,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "7816:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1794,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:11"
                              }
                            ]
                          }
                        },
                        "id": 1797,
                        "nodeType": "IfStatement",
                        "src": "7665:202:11",
                        "trueBody": {
                          "id": 1780,
                          "nodeType": "Block",
                          "src": "7690:55:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1775,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1760,
                                    "src": "7717:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1776,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1762,
                                    "src": "7724:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1777,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1764,
                                    "src": "7728:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$608",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1774,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1666,
                                  "src": "7704:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1779,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1757,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:11",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1799,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1760,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "7584:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$608",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1759,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1758,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 608,
                            "src": "7584:8:11"
                          },
                          "referencedDeclaration": 608,
                          "src": "7584:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$608",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1762,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "7600:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1761,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1764,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "7612:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1766,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1799,
                        "src": "7627:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1765,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:11"
                  },
                  "returnParameters": {
                    "id": 1768,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:11"
                  },
                  "scope": 1882,
                  "src": "7553:320:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1839,
                    "nodeType": "Block",
                    "src": "8440:650:11",
                    "statements": [
                      {
                        "assignments": [
                          1809
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1809,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1839,
                            "src": "8450:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1808,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1810,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:11"
                      },
                      {
                        "assignments": [
                          1812
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1812,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1839,
                            "src": "8478:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1811,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1813,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:11"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:11",
                          "nodeType": "YulBlock",
                          "src": "8532:396:11",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:11"
                                    },
                                    "nativeSrc": "8566:5:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:11"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:11",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:11"
                                    },
                                    "nativeSrc": "8583:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:11"
                                    },
                                    "nativeSrc": "8600:11:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:11"
                                },
                                "nativeSrc": "8561:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:11"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:11",
                                "nodeType": "YulBlock",
                                "src": "8682:157:11",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:11",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:11",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:11"
                                      },
                                      "nativeSrc": "8711:11:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:11"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:11",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:11"
                                          },
                                          "nativeSrc": "8762:16:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:11"
                                      },
                                      "nativeSrc": "8739:40:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:11"
                                    },
                                    "nativeSrc": "8739:40:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:11"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:11"
                                          },
                                          "nativeSrc": "8808:16:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:11"
                                      },
                                      "nativeSrc": "8796:29:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:11"
                                    },
                                    "nativeSrc": "8796:29:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:11"
                                },
                                "nativeSrc": "8666:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:11"
                              },
                              "nativeSrc": "8663:176:11",
                              "nodeType": "YulIf",
                              "src": "8663:176:11"
                            },
                            {
                              "nativeSrc": "8852:30:11",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:11",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:11"
                                },
                                "nativeSrc": "8866:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:11",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:11"
                                },
                                "nativeSrc": "8910:8:11",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:11"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 1805,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1805,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1809,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1812,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1803,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:11",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1814,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:11"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1815,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1809,
                              "src": "8942:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1826,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1812,
                              "src": "8994:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:11",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1820,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1803,
                                      "src": "8968:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1346",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1346",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1818,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:11",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1838,
                        "nodeType": "IfStatement",
                        "src": "8938:146:11",
                        "trueBody": {
                          "id": 1837,
                          "nodeType": "Block",
                          "src": "9012:72:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1833,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1803,
                                        "src": "9066:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1346",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$1346",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1831,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1830,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "9033:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1836,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1800,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:11",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 1840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1806,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "8399:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1802,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1801,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "8399:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "8399:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "8413:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:11"
                  },
                  "returnParameters": {
                    "id": 1807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:11"
                  },
                  "scope": 1882,
                  "src": "8370:720:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1880,
                    "nodeType": "Block",
                    "src": "9681:391:11",
                    "statements": [
                      {
                        "assignments": [
                          1852
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1852,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1880,
                            "src": "9691:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1851,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1853,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:11"
                      },
                      {
                        "assignments": [
                          1855
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1855,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1880,
                            "src": "9713:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1854,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1856,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:11"
                      },
                      {
                        "assignments": [
                          1858
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1858,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1880,
                            "src": "9741:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1857,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1859,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:11"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:11",
                          "nodeType": "YulBlock",
                          "src": "9795:174:11",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:11",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:11"
                                    },
                                    "nativeSrc": "9825:5:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:11"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:11",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:11",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:11"
                                    },
                                    "nativeSrc": "9842:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:11"
                                    },
                                    "nativeSrc": "9859:11:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:11"
                                },
                                "nativeSrc": "9820:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:11"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:11",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:11",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:11"
                                },
                                "nativeSrc": "9907:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:11",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:11"
                                },
                                "nativeSrc": "9951:8:11",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:11"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 1846,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1846,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1855,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1858,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1852,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1844,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:11",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1860,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:11"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1861,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1852,
                            "src": "9985:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1862,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1855,
                                    "src": "9997:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1873,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1858,
                                    "src": "10048:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:11",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1872,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1867,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1844,
                                            "src": "10023:5:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$1346",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$1346",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1866,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1865,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:11",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1868,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1869,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:11",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:11",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1877,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1850,
                        "id": 1879,
                        "nodeType": "Return",
                        "src": "9978:87:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1841,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:11",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 1881,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1844,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1881,
                        "src": "9625:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1346",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1843,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1842,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1346,
                            "src": "9625:6:11"
                          },
                          "referencedDeclaration": 1346,
                          "src": "9625:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1846,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1881,
                        "src": "9639:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1845,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:11"
                  },
                  "returnParameters": {
                    "id": 1850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1849,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1881,
                        "src": "9675:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:11"
                  },
                  "scope": 1882,
                  "src": "9592:480:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1883,
              "src": "698:9376:11",
              "usedErrors": [
                1430,
                1439
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:11"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ]
          },
          "id": 1913,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1884,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:12"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1885,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:12",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1912,
              "linearizedBaseContracts": [
                1912
              ],
              "name": "Context",
              "nameLocation": "642:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1893,
                    "nodeType": "Block",
                    "src": "718:34:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1890,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1889,
                        "id": 1892,
                        "nodeType": "Return",
                        "src": "728:17:12"
                      }
                    ]
                  },
                  "id": 1894,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:12"
                  },
                  "returnParameters": {
                    "id": 1889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1894,
                        "src": "709:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1887,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:12"
                  },
                  "scope": 1912,
                  "src": "656:96:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1902,
                    "nodeType": "Block",
                    "src": "825:32:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1899,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:12",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1898,
                        "id": 1901,
                        "nodeType": "Return",
                        "src": "835:15:12"
                      }
                    ]
                  },
                  "id": 1903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:12"
                  },
                  "returnParameters": {
                    "id": 1898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1897,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1903,
                        "src": "809:14:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1896,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:12"
                  },
                  "scope": 1912,
                  "src": "758:99:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1910,
                    "nodeType": "Block",
                    "src": "935:25:12",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1907,
                        "id": 1909,
                        "nodeType": "Return",
                        "src": "945:8:12"
                      }
                    ]
                  },
                  "id": 1911,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1904,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:12"
                  },
                  "returnParameters": {
                    "id": 1907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1906,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1911,
                        "src": "926:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:12"
                  },
                  "scope": 1912,
                  "src": "863:97:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1913,
              "src": "624:338:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:12"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "id": 13,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ],
            "Pausable": [
              2020
            ]
          },
          "id": 2021,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1914,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1916,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2021,
              "sourceUnit": 1913,
              "src": "128:45:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1915,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1912,
                    "src": "136:7:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1918,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1912,
                    "src": "645:7:13"
                  },
                  "id": 1919,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:13"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1917,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:13",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 2020,
              "linearizedBaseContracts": [
                2020,
                1912
              ],
              "name": "Pausable",
              "nameLocation": "633:8:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "659:20:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1922,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:13",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1926,
                  "name": "Paused",
                  "nameLocation": "770:6:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1924,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1926,
                        "src": "777:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:13"
                  },
                  "src": "764:30:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1927,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:13",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1931,
                  "name": "Unpaused",
                  "nameLocation": "881:8:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1929,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1931,
                        "src": "890:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:13"
                  },
                  "src": "875:32:13"
                },
                {
                  "documentation": {
                    "id": 1932,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:13",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1934,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:13"
                  },
                  "src": "994:22:13"
                },
                {
                  "documentation": {
                    "id": 1935,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:13",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1937,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:13"
                  },
                  "src": "1107:22:13"
                },
                {
                  "body": {
                    "id": 1944,
                    "nodeType": "Block",
                    "src": "1340:47:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1940,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1974,
                            "src": "1350:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1942,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:13"
                      },
                      {
                        "id": 1943,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1938,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:13",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1945,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:13"
                  },
                  "src": "1315:72:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1952,
                    "nodeType": "Block",
                    "src": "1587:44:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1948,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "1597:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1950,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:13"
                      },
                      {
                        "id": 1951,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1946,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:13",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1953,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1947,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:13"
                  },
                  "src": "1565:66:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1961,
                    "nodeType": "Block",
                    "src": "1779:31:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1959,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1921,
                          "src": "1796:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1958,
                        "id": 1960,
                        "nodeType": "Return",
                        "src": "1789:14:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1954,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:13",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1962,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1955,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:13"
                  },
                  "returnParameters": {
                    "id": 1958,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1957,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "1773:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1956,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:13"
                  },
                  "scope": 2020,
                  "src": "1726:84:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1973,
                    "nodeType": "Block",
                    "src": "1929:77:13",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1966,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1943:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1972,
                        "nodeType": "IfStatement",
                        "src": "1939:61:13",
                        "trueBody": {
                          "id": 1971,
                          "nodeType": "Block",
                          "src": "1953:47:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1968,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1934,
                                  "src": "1974:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1970,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1963,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:13",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1974,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:13"
                  },
                  "returnParameters": {
                    "id": 1965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:13"
                  },
                  "scope": 2020,
                  "src": "1878:128:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1986,
                    "nodeType": "Block",
                    "src": "2126:78:13",
                    "statements": [
                      {
                        "condition": {
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:13",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1978,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1962,
                              "src": "2141:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1985,
                        "nodeType": "IfStatement",
                        "src": "2136:62:13",
                        "trueBody": {
                          "id": 1984,
                          "nodeType": "Block",
                          "src": "2151:47:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1981,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1937,
                                  "src": "2172:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1983,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1975,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:13",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:13"
                  },
                  "returnParameters": {
                    "id": 1977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:13"
                  },
                  "scope": 2020,
                  "src": "2078:126:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2002,
                    "nodeType": "Block",
                    "src": "2388:66:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1993,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "2398:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1996,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1998,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "2434:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1997,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1926,
                            "src": "2427:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2001,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1988,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:13",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 2003,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1991,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1990,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1945,
                        "src": "2374:13:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:13"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:13"
                  },
                  "returnParameters": {
                    "id": 1992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:13"
                  },
                  "scope": 2020,
                  "src": "2339:115:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2018,
                    "nodeType": "Block",
                    "src": "2634:69:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2009,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "2644:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2012,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2014,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1894,
                                "src": "2683:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2013,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1931,
                            "src": "2674:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2017,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2004,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:13",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 2019,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2007,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2006,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1953,
                        "src": "2623:10:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:13"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:13"
                  },
                  "returnParameters": {
                    "id": 2008,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:13"
                  },
                  "scope": 2020,
                  "src": "2586:117:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2021,
              "src": "615:2090:13",
              "usedErrors": [
                1934,
                1937
              ],
              "usedEvents": [
                1926,
                1931
              ]
            }
          ],
          "src": "102:2604:13"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "id": 14,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              2044
            ],
            "IERC165": [
              2056
            ]
          },
          "id": 2045,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2022,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 2024,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2045,
              "sourceUnit": 2057,
              "src": "140:38:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2023,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "148:7:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2026,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2056,
                    "src": "688:7:14"
                  },
                  "id": 2027,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:14"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2025,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:14",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 2044,
              "linearizedBaseContracts": [
                2044,
                2056
              ],
              "name": "ERC165",
              "nameLocation": "678:6:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    2055
                  ],
                  "body": {
                    "id": 2042,
                    "nodeType": "Block",
                    "src": "845:64:14",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2035,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "862:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2037,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2056,
                                  "src": "882:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2056_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2056_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 2036,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "877:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2056",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:14",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2034,
                        "id": 2041,
                        "nodeType": "Return",
                        "src": "855:47:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2028,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:14",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2043,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2030,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2043,
                        "src": "790:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2029,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:14"
                  },
                  "returnParameters": {
                    "id": 2034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2033,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2043,
                        "src": "839:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2032,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:14"
                  },
                  "scope": 2044,
                  "src": "763:146:14",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 2045,
              "src": "660:251:14",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:14"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "id": 15,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              2056
            ]
          },
          "id": 2057,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2046,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2047,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:15",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 2056,
              "linearizedBaseContracts": [
                2056
              ],
              "name": "IERC165",
              "nameLocation": "432:7:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2048,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:15",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2055,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "818:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:15"
                  },
                  "returnParameters": {
                    "id": 2054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2053,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "861:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2052,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:15"
                  },
                  "scope": 2056,
                  "src": "791:76:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2057,
              "src": "422:447:15",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:15"
        }
      },
      "contracts/FlightDataVerifier.sol": {
        "id": 16,
        "ast": {
          "absolutePath": "contracts/FlightDataVerifier.sol",
          "exportedSymbols": {},
          "id": 2058,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [],
          "src": "3141:0:16"
        }
      },
      "contracts/Insurance.sol": {
        "id": 17,
        "ast": {
          "absolutePath": "contracts/Insurance.sol",
          "exportedSymbols": {
            "Context": [
              1912
            ],
            "IERC1363": [
              608
            ],
            "IERC20": [
              1346
            ],
            "Insurance": [
              2727
            ],
            "Ownable": [
              526
            ],
            "SafeERC20": [
              1882
            ]
          },
          "id": 2728,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2059,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:17"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2060,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2728,
              "sourceUnit": 1347,
              "src": "58:56:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 2061,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2728,
              "sourceUnit": 1883,
              "src": "115:65:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2062,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2728,
              "sourceUnit": 527,
              "src": "181:52:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2063,
                    "name": "Ownable",
                    "nameLocations": [
                      "257:7:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 526,
                    "src": "257:7:17"
                  },
                  "id": 2064,
                  "nodeType": "InheritanceSpecifier",
                  "src": "257:7:17"
                }
              ],
              "canonicalName": "Insurance",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2727,
              "linearizedBaseContracts": [
                2727,
                526,
                1912
              ],
              "name": "Insurance",
              "nameLocation": "244:9:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2068,
                  "libraryName": {
                    "id": 2065,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "277:9:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1882,
                    "src": "277:9:17"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "271:27:17",
                  "typeName": {
                    "id": 2067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2066,
                      "name": "IERC20",
                      "nameLocations": [
                        "291:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1346,
                      "src": "291:6:17"
                    },
                    "referencedDeclaration": 1346,
                    "src": "291:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1346",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "canonicalName": "Insurance.PolicyStatus",
                  "id": 2073,
                  "members": [
                    {
                      "id": 2069,
                      "name": "Active",
                      "nameLocation": "332:6:17",
                      "nodeType": "EnumValue",
                      "src": "332:6:17"
                    },
                    {
                      "id": 2070,
                      "name": "Claimed",
                      "nameLocation": "348:7:17",
                      "nodeType": "EnumValue",
                      "src": "348:7:17"
                    },
                    {
                      "id": 2071,
                      "name": "Settled",
                      "nameLocation": "365:7:17",
                      "nodeType": "EnumValue",
                      "src": "365:7:17"
                    },
                    {
                      "id": 2072,
                      "name": "Expired",
                      "nameLocation": "382:7:17",
                      "nodeType": "EnumValue",
                      "src": "382:7:17"
                    }
                  ],
                  "name": "PolicyStatus",
                  "nameLocation": "309:12:17",
                  "nodeType": "EnumDefinition",
                  "src": "304:91:17"
                },
                {
                  "canonicalName": "Insurance.InsurancePolicy",
                  "id": 2089,
                  "members": [
                    {
                      "constant": false,
                      "id": 2076,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "447:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "434:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                        "typeString": "enum Insurance.PolicyStatus"
                      },
                      "typeName": {
                        "id": 2075,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2074,
                          "name": "PolicyStatus",
                          "nameLocations": [
                            "434:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2073,
                          "src": "434:12:17"
                        },
                        "referencedDeclaration": 2073,
                        "src": "434:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                          "typeString": "enum Insurance.PolicyStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2078,
                      "mutability": "mutable",
                      "name": "insuredEvent",
                      "nameLocation": "470:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "463:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2077,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "463:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2080,
                      "mutability": "mutable",
                      "name": "insuredAddress",
                      "nameLocation": "500:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "492:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2079,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "492:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2082,
                      "mutability": "mutable",
                      "name": "insuredAmount",
                      "nameLocation": "532:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "524:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2081,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "524:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2084,
                      "mutability": "mutable",
                      "name": "flightId",
                      "nameLocation": "562:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "555:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2083,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "555:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2086,
                      "mutability": "mutable",
                      "name": "startTimestamp",
                      "nameLocation": "588:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "580:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2085,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "580:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2088,
                      "mutability": "mutable",
                      "name": "expirationTimestamp",
                      "nameLocation": "620:19:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2089,
                      "src": "612:27:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2087,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "612:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InsurancePolicy",
                  "nameLocation": "408:15:17",
                  "nodeType": "StructDefinition",
                  "scope": 2727,
                  "src": "401:245:17",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Insurance.FlightData",
                  "id": 2106,
                  "members": [
                    {
                      "constant": false,
                      "id": 2091,
                      "mutability": "mutable",
                      "name": "flight_origin",
                      "nameLocation": "687:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "680:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2090,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "680:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2093,
                      "mutability": "mutable",
                      "name": "flight_destination",
                      "nameLocation": "717:18:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "710:25:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2092,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "710:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2095,
                      "mutability": "mutable",
                      "name": "flight_date",
                      "nameLocation": "753:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "745:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2097,
                      "mutability": "mutable",
                      "name": "flight_time",
                      "nameLocation": "782:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "774:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2096,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "774:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2099,
                      "mutability": "mutable",
                      "name": "flight_number",
                      "nameLocation": "810:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "803:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2098,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2101,
                      "mutability": "mutable",
                      "name": "flight_airline",
                      "nameLocation": "840:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "833:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2100,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "833:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2103,
                      "mutability": "mutable",
                      "name": "flight_status",
                      "nameLocation": "871:13:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "864:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2102,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "864:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2105,
                      "mutability": "mutable",
                      "name": "flight_gate",
                      "nameLocation": "901:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "894:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2104,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "894:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FlightData",
                  "nameLocation": "659:10:17",
                  "nodeType": "StructDefinition",
                  "scope": 2727,
                  "src": "652:267:17",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "563fcbe3",
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "insurancePolicies",
                  "nameLocation": "1029:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "986:60:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                    "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy)"
                  },
                  "typeName": {
                    "id": 2110,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2107,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "986:35:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                      "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2109,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2108,
                        "name": "InsurancePolicy",
                        "nameLocations": [
                          "1005:15:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2089,
                        "src": "1005:15:17"
                      },
                      "referencedDeclaration": 2089,
                      "src": "1005:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                        "typeString": "struct Insurance.InsurancePolicy"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c0b6b37e",
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "insuranceClaims",
                  "nameLocation": "1143:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1108:50:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                    "typeString": "mapping(bytes32 => bytes32)"
                  },
                  "typeName": {
                    "id": 2114,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2112,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1116:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1108:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                      "typeString": "mapping(bytes32 => bytes32)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2113,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1127:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46dcb459",
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "verifiedFlightData",
                  "nameLocation": "1264:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1226:56:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightData_$2106_storage_$",
                    "typeString": "mapping(bytes32 => struct Insurance.FlightData)"
                  },
                  "typeName": {
                    "id": 2119,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2116,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1234:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1226:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightData_$2106_storage_$",
                      "typeString": "mapping(bytes32 => struct Insurance.FlightData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2118,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2117,
                        "name": "FlightData",
                        "nameLocations": [
                          "1245:10:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2106,
                        "src": "1245:10:17"
                      },
                      "referencedDeclaration": 2106,
                      "src": "1245:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlightData_$2106_storage_ptr",
                        "typeString": "struct Insurance.FlightData"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "77325712",
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "lastVerificationTimestamp",
                  "nameLocation": "1323:25:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1288:60:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                    "typeString": "mapping(bytes32 => uint256)"
                  },
                  "typeName": {
                    "id": 2123,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2121,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1296:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1288:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                      "typeString": "mapping(bytes32 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2122,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1307:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e5a6b10f",
                  "id": 2127,
                  "mutability": "immutable",
                  "name": "currency",
                  "nameLocation": "1379:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1355:32:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1346",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2126,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2125,
                      "name": "IERC20",
                      "nameLocations": [
                        "1355:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1346,
                      "src": "1355:6:17"
                    },
                    "referencedDeclaration": 1346,
                    "src": "1355:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1346",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8406c079",
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nameLocation": "1408:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1393:22:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "57215d06",
                  "id": 2132,
                  "mutability": "constant",
                  "name": "MAX_EVENT_DESCRIPTION_SIZE",
                  "nameLocation": "1446:26:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1422:54:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "36",
                    "id": 2131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1475:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 2135,
                  "mutability": "constant",
                  "name": "ancillaryDataHead",
                  "nameLocation": "1498:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1482:107:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "713a224861642074686520666f6c6c6f77696e6720696e7375726564206576656e74206f63637572726564206173206f6620726571756573742074696d657374616d703a20",
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1518:71:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed807d6cc5c96bf52713042a1e8c04ecf3e5443eedcf073e33ead922e7a4de77",
                      "typeString": "literal_string \"q:\"Had the following insured event occurred as of request timestamp: \""
                    },
                    "value": "q:\"Had the following insured event occurred as of request timestamp: "
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 2138,
                  "mutability": "constant",
                  "name": "ancillaryDataTail",
                  "nameLocation": "1611:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "1595:40:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3f22",
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1631:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_058ec2696ef918fb8b9a4ed52337ef1bba8681bef7c50466cdcec2cc8f703ff4",
                      "typeString": "literal_string \"?\"\""
                    },
                    "value": "?\""
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "462b97c644c45686704fa4cbe8f3fc4cc52ca38c83eb8cf2c7b596317a11e549",
                  "id": 2152,
                  "name": "PolicyIssued",
                  "nameLocation": "1648:12:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2140,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "1686:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1670:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2139,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1670:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2142,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "insurer",
                        "nameLocation": "1720:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1704:23:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1704:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2144,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "insuredEvent",
                        "nameLocation": "1744:12:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1737:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2143,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1737:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2146,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "insuredAddress",
                        "nameLocation": "1782:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1766:30:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1766:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2148,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "insuredAmount",
                        "nameLocation": "1814:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1806:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2150,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "flightId",
                        "nameLocation": "1844:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "1837:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2149,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1660:198:17"
                  },
                  "src": "1642:217:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3e9086131cd56a11cb2fc7a195ff02167e166171a0357a11f6ee490775b51119",
                  "id": 2160,
                  "name": "ClaimSubmitted",
                  "nameLocation": "1870:14:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2154,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimTimestamp",
                        "nameLocation": "1902:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "1894:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1894:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2156,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "1942:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "1926:23:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1926:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2158,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "1975:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "1959:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2157,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1884:105:17"
                  },
                  "src": "1864:126:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7a556a7dd17e7c65d9162b71bf1434aab934a041cdde071ee2653901c7a5c382",
                  "id": 2166,
                  "name": "ClaimAccepted",
                  "nameLocation": "2001:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "2031:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2166,
                        "src": "2015:23:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2161,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2015:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "2056:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2166,
                        "src": "2040:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2163,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2040:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2014:51:17"
                  },
                  "src": "1995:71:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "aebcfd3c9d59eec021c4ecaf988ae8afc864298b4db60a4a545cef73553c309f",
                  "id": 2172,
                  "name": "ClaimRejected",
                  "nameLocation": "2077:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2168,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "2107:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "2091:23:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2167,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2091:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2170,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "2132:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "2116:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2090:51:17"
                  },
                  "src": "2071:71:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b42943f28e20e505899f2402abb3b329c050aebd77ccf1cbb4a6dd5957f4d98f",
                  "id": 2176,
                  "name": "PolicyExpired",
                  "nameLocation": "2153:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2174,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "2183:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2176,
                        "src": "2167:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2173,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2167:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2166:26:17"
                  },
                  "src": "2147:46:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5a0428f2de042d23ce1797aac79ce68d68212c9b80f7503693b25a49ff04bebc",
                  "id": 2183,
                  "name": "FlightDataUpdated",
                  "nameLocation": "2204:17:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "flightId",
                        "nameLocation": "2238:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2183,
                        "src": "2222:24:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2177,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2181,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2259:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2183,
                        "src": "2248:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlightData_$2106_memory_ptr",
                          "typeString": "struct Insurance.FlightData"
                        },
                        "typeName": {
                          "id": 2180,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2179,
                            "name": "FlightData",
                            "nameLocations": [
                              "2248:10:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2106,
                            "src": "2248:10:17"
                          },
                          "referencedDeclaration": 2106,
                          "src": "2248:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlightData_$2106_storage_ptr",
                            "typeString": "struct Insurance.FlightData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:43:17"
                  },
                  "src": "2198:67:17"
                },
                {
                  "anonymous": false,
                  "eventSelector": "605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c",
                  "id": 2189,
                  "name": "RelayerUpdated",
                  "nameLocation": "2276:14:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2185,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldRelayer",
                        "nameLocation": "2307:10:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2189,
                        "src": "2291:26:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2187,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newRelayer",
                        "nameLocation": "2335:10:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2189,
                        "src": "2319:26:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:56:17"
                  },
                  "src": "2270:77:17"
                },
                {
                  "body": {
                    "id": 2204,
                    "nodeType": "Block",
                    "src": "2404:45:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2198,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "2414:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1346",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2200,
                                "name": "_currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2191,
                                "src": "2432:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2199,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "2425:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1346_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2425:17:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1346",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2414:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1346",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2203,
                        "nodeType": "ExpressionStatement",
                        "src": "2414:28:17"
                      }
                    ]
                  },
                  "id": 2205,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2392:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2396:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2392:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2196,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2193,
                        "name": "Ownable",
                        "nameLocations": [
                          "2384:7:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 526,
                        "src": "2384:7:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2384:19:17"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2191,
                        "mutability": "mutable",
                        "name": "_currency",
                        "nameLocation": "2373:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2205,
                        "src": "2365:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2365:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2364:19:17"
                  },
                  "returnParameters": {
                    "id": 2197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2404:0:17"
                  },
                  "scope": 2727,
                  "src": "2353:96:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2216,
                    "nodeType": "Block",
                    "src": "2478:97:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2208,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2496:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2500:6:17",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2496:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2210,
                                "name": "relayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2129,
                                "src": "2510:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2496:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792072656c617965722063616e2063616c6c20746869732066756e6374696f6e",
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2519:37:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ed2d0bd4c378cc6518d493cb8700b48c2e8f49d946c495b91d78e48c170d9e79",
                                "typeString": "literal_string \"Only relayer can call this function\""
                              },
                              "value": "Only relayer can call this function"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ed2d0bd4c378cc6518d493cb8700b48c2e8f49d946c495b91d78e48c170d9e79",
                                "typeString": "literal_string \"Only relayer can call this function\""
                              }
                            ],
                            "id": 2207,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2488:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2488:69:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2214,
                        "nodeType": "ExpressionStatement",
                        "src": "2488:69:17"
                      },
                      {
                        "id": 2215,
                        "nodeType": "PlaceholderStatement",
                        "src": "2567:1:17"
                      }
                    ]
                  },
                  "id": 2217,
                  "name": "onlyRelayer",
                  "nameLocation": "2464:11:17",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2475:2:17"
                  },
                  "src": "2455:120:17",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "2638:151:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2225,
                                "name": "_relayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2219,
                                "src": "2656:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2228,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2676:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2668:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2226,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2668:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2668:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2656:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072656c617965722061646472657373",
                              "id": 2231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2680:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_17f00b766658a60c41b81a92f3124bd10e487604c5f67a16e7467538831a9518",
                                "typeString": "literal_string \"Invalid relayer address\""
                              },
                              "value": "Invalid relayer address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_17f00b766658a60c41b81a92f3124bd10e487604c5f67a16e7467538831a9518",
                                "typeString": "literal_string \"Invalid relayer address\""
                              }
                            ],
                            "id": 2224,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2648:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:58:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2233,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:58:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2235,
                              "name": "relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "2736:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2236,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2219,
                              "src": "2745:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2234,
                            "name": "RelayerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2189,
                            "src": "2721:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2721:33:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2238,
                        "nodeType": "EmitStatement",
                        "src": "2716:38:17"
                      },
                      {
                        "expression": {
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2239,
                            "name": "relayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2129,
                            "src": "2764:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2240,
                            "name": "_relayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2219,
                            "src": "2774:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2764:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "2764:18:17"
                      }
                    ]
                  },
                  "functionSelector": "6548e9bc",
                  "id": 2244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2222,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2221,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2628:9:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2628:9:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2628:9:17"
                    }
                  ],
                  "name": "setRelayer",
                  "nameLocation": "2590:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2219,
                        "mutability": "mutable",
                        "name": "_relayer",
                        "nameLocation": "2609:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2244,
                        "src": "2601:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2601:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2600:18:17"
                  },
                  "returnParameters": {
                    "id": 2223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2638:0:17"
                  },
                  "scope": 2727,
                  "src": "2581:208:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2273,
                    "nodeType": "Block",
                    "src": "3008:157:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2256,
                              "name": "verifiedFlightData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "3018:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightData_$2106_storage_$",
                                "typeString": "mapping(bytes32 => struct Insurance.FlightData storage ref)"
                              }
                            },
                            "id": 2258,
                            "indexExpression": {
                              "id": 2257,
                              "name": "flightId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "3037:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3018:28:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FlightData_$2106_storage",
                              "typeString": "struct Insurance.FlightData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2259,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "3049:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FlightData_$2106_calldata_ptr",
                              "typeString": "struct Insurance.FlightData calldata"
                            }
                          },
                          "src": "3018:35:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlightData_$2106_storage",
                            "typeString": "struct Insurance.FlightData storage ref"
                          }
                        },
                        "id": 2261,
                        "nodeType": "ExpressionStatement",
                        "src": "3018:35:17"
                      },
                      {
                        "expression": {
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2262,
                              "name": "lastVerificationTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2124,
                              "src": "3063:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 2264,
                            "indexExpression": {
                              "id": 2263,
                              "name": "flightId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "3089:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3063:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2265,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "3101:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3063:47:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2267,
                        "nodeType": "ExpressionStatement",
                        "src": "3063:47:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2269,
                              "name": "flightId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "3143:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2270,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2249,
                              "src": "3153:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FlightData_$2106_calldata_ptr",
                                "typeString": "struct Insurance.FlightData calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_FlightData_$2106_calldata_ptr",
                                "typeString": "struct Insurance.FlightData calldata"
                              }
                            ],
                            "id": 2268,
                            "name": "FlightDataUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2183,
                            "src": "3125:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_FlightData_$2106_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,struct Insurance.FlightData memory)"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3125:33:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2272,
                        "nodeType": "EmitStatement",
                        "src": "3120:38:17"
                      }
                    ]
                  },
                  "functionSelector": "0d24abee",
                  "id": 2274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2254,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2253,
                        "name": "onlyRelayer",
                        "nameLocations": [
                          "2996:11:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2217,
                        "src": "2996:11:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2996:11:17"
                    }
                  ],
                  "name": "updateFlightData",
                  "nameLocation": "2877:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2246,
                        "mutability": "mutable",
                        "name": "flightId",
                        "nameLocation": "2911:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2274,
                        "src": "2903:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2245,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2903:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2249,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2949:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2274,
                        "src": "2929:24:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlightData_$2106_calldata_ptr",
                          "typeString": "struct Insurance.FlightData"
                        },
                        "typeName": {
                          "id": 2248,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2247,
                            "name": "FlightData",
                            "nameLocations": [
                              "2929:10:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2106,
                            "src": "2929:10:17"
                          },
                          "referencedDeclaration": 2106,
                          "src": "2929:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlightData_$2106_storage_ptr",
                            "typeString": "struct Insurance.FlightData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2251,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2971:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2274,
                        "src": "2963:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2963:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2893:93:17"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3008:0:17"
                  },
                  "scope": 2727,
                  "src": "2868:297:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2421,
                    "nodeType": "Block",
                    "src": "3439:1263:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2294,
                                      "name": "insuredEvent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2276,
                                      "src": "3463:12:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 2293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3457:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 2292,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3457:5:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3457:19:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 2296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3477:6:17",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3457:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2297,
                                "name": "MAX_EVENT_DESCRIPTION_SIZE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2132,
                                "src": "3487:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3457:56:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4576656e74206465736372697074696f6e20746f6f206c6f6e67",
                              "id": 2299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3515:28:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50ae26a9d347302aae8564609c1d5427cb95105a08621ec1fae953f198eab5c4",
                                "typeString": "literal_string \"Event description too long\""
                              },
                              "value": "Event description too long"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50ae26a9d347302aae8564609c1d5427cb95105a08621ec1fae953f198eab5c4",
                                "typeString": "literal_string \"Event description too long\""
                              }
                            ],
                            "id": 2291,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3449:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3449:95:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2301,
                        "nodeType": "ExpressionStatement",
                        "src": "3449:95:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2303,
                                "name": "insuredAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2278,
                                "src": "3562:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3588:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3580:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2304,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3580:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3580:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3562:28:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420696e73757265642061646472657373",
                              "id": 2309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3592:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_31a27b2540ab06c48c548f1322928111bf775677522ce27cb1141fd9d696da78",
                                "typeString": "literal_string \"Invalid insured address\""
                              },
                              "value": "Invalid insured address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_31a27b2540ab06c48c548f1322928111bf775677522ce27cb1141fd9d696da78",
                                "typeString": "literal_string \"Invalid insured address\""
                              }
                            ],
                            "id": 2302,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3554:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3554:64:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2311,
                        "nodeType": "ExpressionStatement",
                        "src": "3554:64:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2313,
                                "name": "insuredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2280,
                                "src": "3636:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3652:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3636:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e742073686f756c642062652061626f76652030",
                              "id": 2316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3655:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e579a0cb871fe308cb1e293544f75d10c9dbe3def875f5a1f99f0aa2786aa3f",
                                "typeString": "literal_string \"Amount should be above 0\""
                              },
                              "value": "Amount should be above 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e579a0cb871fe308cb1e293544f75d10c9dbe3def875f5a1f99f0aa2786aa3f",
                                "typeString": "literal_string \"Amount should be above 0\""
                              }
                            ],
                            "id": 2312,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3628:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:54:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2318,
                        "nodeType": "ExpressionStatement",
                        "src": "3628:54:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2320,
                                "name": "startTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2284,
                                "src": "3700:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2321,
                                "name": "expirationTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2286,
                                "src": "3717:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3700:36:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642074696d657374616d7073",
                              "id": 2323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3738:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d13ce2008fdeb7fc794b4b53783363d1e4b47fe95f36462fc20fc0c6be1fe852",
                                "typeString": "literal_string \"Invalid timestamps\""
                              },
                              "value": "Invalid timestamps"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d13ce2008fdeb7fc794b4b53783363d1e4b47fe95f36462fc20fc0c6be1fe852",
                                "typeString": "literal_string \"Invalid timestamps\""
                              }
                            ],
                            "id": 2319,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3692:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3692:67:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2325,
                        "nodeType": "ExpressionStatement",
                        "src": "3692:67:17"
                      },
                      {
                        "expression": {
                          "id": 2334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2326,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "3770:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2328,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3807:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3813:6:17",
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "3807:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2330,
                                "name": "insuredEvent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2276,
                                "src": "3833:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 2331,
                                "name": "insuredAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2278,
                                "src": "3859:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2332,
                                "name": "insuredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2280,
                                "src": "3887:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2327,
                              "name": "_getPolicyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2708,
                              "src": "3781:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,string memory,address,uint256) pure returns (bytes32)"
                              }
                            },
                            "id": 2333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3781:129:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3770:140:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2335,
                        "nodeType": "ExpressionStatement",
                        "src": "3770:140:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2337,
                                    "name": "insurancePolicies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2111,
                                    "src": "3928:17:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                                      "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                                    }
                                  },
                                  "id": 2339,
                                  "indexExpression": {
                                    "id": 2338,
                                    "name": "policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2289,
                                    "src": "3946:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3928:27:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                                    "typeString": "struct Insurance.InsurancePolicy storage ref"
                                  }
                                },
                                "id": 2340,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3956:14:17",
                                "memberName": "insuredAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2080,
                                "src": "3928:42:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3982:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3974:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2341,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3974:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3974:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3928:56:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c69637920616c726561647920697373756564",
                              "id": 2346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3986:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d4b8fa0e2cd41e5501dc9c5b6b1a5aefcb71cb9c0fbdce8f12de17fb679490d1",
                                "typeString": "literal_string \"Policy already issued\""
                              },
                              "value": "Policy already issued"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d4b8fa0e2cd41e5501dc9c5b6b1a5aefcb71cb9c0fbdce8f12de17fb679490d1",
                                "typeString": "literal_string \"Policy already issued\""
                              }
                            ],
                            "id": 2336,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3920:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3920:90:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2348,
                        "nodeType": "ExpressionStatement",
                        "src": "3920:90:17"
                      },
                      {
                        "assignments": [
                          2351
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2351,
                            "mutability": "mutable",
                            "name": "newPolicy",
                            "nameLocation": "4045:9:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "4021:33:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                              "typeString": "struct Insurance.InsurancePolicy"
                            },
                            "typeName": {
                              "id": 2350,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2349,
                                "name": "InsurancePolicy",
                                "nameLocations": [
                                  "4021:15:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "4021:15:17"
                              },
                              "referencedDeclaration": 2089,
                              "src": "4021:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2355,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2352,
                            "name": "insurancePolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "4057:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                              "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                            }
                          },
                          "id": 2354,
                          "indexExpression": {
                            "id": 2353,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2289,
                            "src": "4075:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4057:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                            "typeString": "struct Insurance.InsurancePolicy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4021:63:17"
                      },
                      {
                        "expression": {
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2356,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4094:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4104:6:17",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2076,
                            "src": "4094:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2359,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "4113:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 2360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4126:6:17",
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2069,
                            "src": "4113:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "4094:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 2362,
                        "nodeType": "ExpressionStatement",
                        "src": "4094:38:17"
                      },
                      {
                        "expression": {
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2363,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4142:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4152:12:17",
                            "memberName": "insuredEvent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2078,
                            "src": "4142:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2366,
                            "name": "insuredEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "4167:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "4142:37:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 2368,
                        "nodeType": "ExpressionStatement",
                        "src": "4142:37:17"
                      },
                      {
                        "expression": {
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2369,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4189:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2371,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4199:14:17",
                            "memberName": "insuredAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2080,
                            "src": "4189:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2372,
                            "name": "insuredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "4216:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4189:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2374,
                        "nodeType": "ExpressionStatement",
                        "src": "4189:41:17"
                      },
                      {
                        "expression": {
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2375,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4240:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4250:13:17",
                            "memberName": "insuredAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2082,
                            "src": "4240:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2378,
                            "name": "insuredAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "4266:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4240:39:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2380,
                        "nodeType": "ExpressionStatement",
                        "src": "4240:39:17"
                      },
                      {
                        "expression": {
                          "id": 2385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2381,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4289:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4299:8:17",
                            "memberName": "flightId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2084,
                            "src": "4289:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2384,
                            "name": "flightId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4310:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4289:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 2386,
                        "nodeType": "ExpressionStatement",
                        "src": "4289:29:17"
                      },
                      {
                        "expression": {
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2387,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4328:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4338:14:17",
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2086,
                            "src": "4328:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2390,
                            "name": "startTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2284,
                            "src": "4355:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4328:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2392,
                        "nodeType": "ExpressionStatement",
                        "src": "4328:41:17"
                      },
                      {
                        "expression": {
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2393,
                              "name": "newPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "4379:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4389:19:17",
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2088,
                            "src": "4379:29:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2396,
                            "name": "expirationTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2286,
                            "src": "4411:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4379:51:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2398,
                        "nodeType": "ExpressionStatement",
                        "src": "4379:51:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2402,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4467:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4471:6:17",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4467:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2406,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4487:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Insurance_$2727",
                                    "typeString": "contract Insurance"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Insurance_$2727",
                                    "typeString": "contract Insurance"
                                  }
                                ],
                                "id": 2405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4479:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2404,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4479:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4479:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2408,
                              "name": "insuredAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "4494:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2399,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "4441:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4450:16:17",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1490,
                            "src": "4441:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1346_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4441:67:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2410,
                        "nodeType": "ExpressionStatement",
                        "src": "4441:67:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2412,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2289,
                              "src": "4550:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2413,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4572:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4576:6:17",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4572:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2415,
                              "name": "insuredEvent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2276,
                              "src": "4596:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 2416,
                              "name": "insuredAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2278,
                              "src": "4622:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2417,
                              "name": "insuredAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "4650:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2418,
                              "name": "flightId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2282,
                              "src": "4677:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2411,
                            "name": "PolicyIssued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2152,
                            "src": "4524:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,string memory,address,uint256,string memory)"
                            }
                          },
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4524:171:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2420,
                        "nodeType": "EmitStatement",
                        "src": "4519:176:17"
                      }
                    ]
                  },
                  "functionSelector": "63f3a73b",
                  "id": 2422,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "issueInsurance",
                  "nameLocation": "3180:14:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2276,
                        "mutability": "mutable",
                        "name": "insuredEvent",
                        "nameLocation": "3220:12:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3204:28:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2275,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3204:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2278,
                        "mutability": "mutable",
                        "name": "insuredAddress",
                        "nameLocation": "3250:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3242:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3242:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "insuredAmount",
                        "nameLocation": "3282:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3274:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "flightId",
                        "nameLocation": "3319:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3305:22:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3305:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2284,
                        "mutability": "mutable",
                        "name": "startTimestamp",
                        "nameLocation": "3345:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3337:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3337:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2286,
                        "mutability": "mutable",
                        "name": "expirationTimestamp",
                        "nameLocation": "3377:19:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3369:27:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3369:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3194:208:17"
                  },
                  "returnParameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2289,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "3429:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3421:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2288,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3421:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3420:18:17"
                  },
                  "scope": 2727,
                  "src": "3171:1531:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2552,
                    "nodeType": "Block",
                    "src": "4756:1049:17",
                    "statements": [
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "4790:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2552,
                            "src": "4766:30:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                              "typeString": "struct Insurance.InsurancePolicy"
                            },
                            "typeName": {
                              "id": 2428,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2427,
                                "name": "InsurancePolicy",
                                "nameLocations": [
                                  "4766:15:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "4766:15:17"
                              },
                              "referencedDeclaration": 2089,
                              "src": "4766:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2433,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2430,
                            "name": "insurancePolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "4799:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                              "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                            }
                          },
                          "id": 2432,
                          "indexExpression": {
                            "id": 2431,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2424,
                            "src": "4817:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4799:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                            "typeString": "struct Insurance.InsurancePolicy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4766:60:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                "typeString": "enum Insurance.PolicyStatus"
                              },
                              "id": 2439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2435,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2429,
                                  "src": "4844:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2436,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4851:6:17",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2076,
                                "src": "4844:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2437,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2073,
                                  "src": "4861:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                    "typeString": "type(enum Insurance.PolicyStatus)"
                                  }
                                },
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4874:6:17",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2069,
                                "src": "4861:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "src": "4844:36:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f7420616374697665",
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4882:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              },
                              "value": "Policy not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              }
                            ],
                            "id": 2434,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4836:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4836:66:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2442,
                        "nodeType": "ExpressionStatement",
                        "src": "4836:66:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2444,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "4920:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4926:9:17",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4920:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2446,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2429,
                                  "src": "4939:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2447,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4946:14:17",
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2086,
                                "src": "4939:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4920:40:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f742079657420616374697665",
                              "id": 2449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4962:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e963b986103bce391d8cd7f70ef51c245fc76fb19408bb32546bc3000f3a4d01",
                                "typeString": "literal_string \"Policy not yet active\""
                              },
                              "value": "Policy not yet active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e963b986103bce391d8cd7f70ef51c245fc76fb19408bb32546bc3000f3a4d01",
                                "typeString": "literal_string \"Policy not yet active\""
                              }
                            ],
                            "id": 2443,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4912:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4912:74:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2451,
                        "nodeType": "ExpressionStatement",
                        "src": "4912:74:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2453,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "5004:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5010:9:17",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5004:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2455,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2429,
                                  "src": "5023:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2456,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5030:19:17",
                                "memberName": "expirationTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2088,
                                "src": "5023:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5004:45:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c6963792065787069726564",
                              "id": 2458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5051:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                                "typeString": "literal_string \"Policy expired\""
                              },
                              "value": "Policy expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                                "typeString": "literal_string \"Policy expired\""
                              }
                            ],
                            "id": 2452,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4996:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4996:72:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2460,
                        "nodeType": "ExpressionStatement",
                        "src": "4996:72:17"
                      },
                      {
                        "assignments": [
                          2462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2462,
                            "mutability": "mutable",
                            "name": "flightId",
                            "nameLocation": "5087:8:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2552,
                            "src": "5079:16:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2461,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5079:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2470,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2466,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2429,
                                    "src": "5125:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                      "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                    }
                                  },
                                  "id": 2467,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5132:8:17",
                                  "memberName": "flightId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2084,
                                  "src": "5125:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 2464,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "5108:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5112:12:17",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5108:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5108:33:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2463,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "5098:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5098:44:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5079:63:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2472,
                                    "name": "verifiedFlightData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2120,
                                    "src": "5160:18:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightData_$2106_storage_$",
                                      "typeString": "mapping(bytes32 => struct Insurance.FlightData storage ref)"
                                    }
                                  },
                                  "id": 2474,
                                  "indexExpression": {
                                    "id": 2473,
                                    "name": "flightId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2462,
                                    "src": "5179:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5160:28:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FlightData_$2106_storage",
                                    "typeString": "struct Insurance.FlightData storage ref"
                                  }
                                },
                                "id": 2475,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5189:11:17",
                                "memberName": "flight_date",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2095,
                                "src": "5160:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5204:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5160:45:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466c696768742064617461206e6f74207665726966696564",
                              "id": 2478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5207:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e082fa33c58b8352282e75861d851f9b84adde2c85a46944320278c4c96b041",
                                "typeString": "literal_string \"Flight data not verified\""
                              },
                              "value": "Flight data not verified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e082fa33c58b8352282e75861d851f9b84adde2c85a46944320278c4c96b041",
                                "typeString": "literal_string \"Flight data not verified\""
                              }
                            ],
                            "id": 2471,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5152:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5152:82:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2480,
                        "nodeType": "ExpressionStatement",
                        "src": "5152:82:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2485,
                                            "name": "verifiedFlightData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2120,
                                            "src": "5281:18:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightData_$2106_storage_$",
                                              "typeString": "mapping(bytes32 => struct Insurance.FlightData storage ref)"
                                            }
                                          },
                                          "id": 2487,
                                          "indexExpression": {
                                            "id": 2486,
                                            "name": "flightId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "5300:8:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5281:28:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FlightData_$2106_storage",
                                            "typeString": "struct Insurance.FlightData storage ref"
                                          }
                                        },
                                        "id": 2488,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5310:13:17",
                                        "memberName": "flight_status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2103,
                                        "src": "5281:42:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "id": 2484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5275:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2483,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5275:5:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5275:49:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  ],
                                  "id": 2482,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "5265:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5265:60:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "43414e43454c4c4544",
                                        "id": 2494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5358:11:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_36ef5051a56846bc0b16aaddb4222732c686c48d3d8ef8c16e174b26611f03f3",
                                          "typeString": "literal_string \"CANCELLED\""
                                        },
                                        "value": "CANCELLED"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_36ef5051a56846bc0b16aaddb4222732c686c48d3d8ef8c16e174b26611f03f3",
                                          "typeString": "literal_string \"CANCELLED\""
                                        }
                                      ],
                                      "id": 2493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5352:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 2492,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5352:5:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5352:18:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2491,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "5342:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5342:29:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "5265:106:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466c69676874206e6f742063616e63656c6c6564",
                              "id": 2498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5385:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f026040e4e3832021e99a5554e8379f4bb4839259d1f0fdff7f9e2ae9284f4e5",
                                "typeString": "literal_string \"Flight not cancelled\""
                              },
                              "value": "Flight not cancelled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f026040e4e3832021e99a5554e8379f4bb4839259d1f0fdff7f9e2ae9284f4e5",
                                "typeString": "literal_string \"Flight not cancelled\""
                              }
                            ],
                            "id": 2481,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5244:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5244:173:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2500,
                        "nodeType": "ExpressionStatement",
                        "src": "5244:173:17"
                      },
                      {
                        "expression": {
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2501,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2429,
                              "src": "5428:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5435:6:17",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2076,
                            "src": "5428:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2504,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "5444:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 2505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5457:7:17",
                            "memberName": "Claimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2070,
                            "src": "5444:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "5428:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 2507,
                        "nodeType": "ExpressionStatement",
                        "src": "5428:36:17"
                      },
                      {
                        "assignments": [
                          2509
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2509,
                            "mutability": "mutable",
                            "name": "claimId",
                            "nameLocation": "5482:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2552,
                            "src": "5474:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2508,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5474:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2516,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2511,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5504:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5510:9:17",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5504:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2513,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2429,
                                "src": "5521:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                  "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                }
                              },
                              "id": 2514,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5528:8:17",
                              "memberName": "flightId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2084,
                              "src": "5521:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 2510,
                            "name": "_getClaimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2726,
                            "src": "5492:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5492:45:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5474:63:17"
                      },
                      {
                        "expression": {
                          "id": 2521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2517,
                              "name": "insuranceClaims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "5547:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                                "typeString": "mapping(bytes32 => bytes32)"
                              }
                            },
                            "id": 2519,
                            "indexExpression": {
                              "id": 2518,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2509,
                              "src": "5563:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5547:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2520,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2424,
                            "src": "5574:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5547:35:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2522,
                        "nodeType": "ExpressionStatement",
                        "src": "5547:35:17"
                      },
                      {
                        "assignments": [
                          2524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2524,
                            "mutability": "mutable",
                            "name": "proposerBond",
                            "nameLocation": "5601:12:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2552,
                            "src": "5593:20:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2523,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5593:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2532,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2525,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2429,
                                    "src": "5617:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                      "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                    }
                                  },
                                  "id": 2526,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5624:13:17",
                                  "memberName": "insuredAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2082,
                                  "src": "5617:20:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "302e303031653138",
                                  "id": 2527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5640:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000"
                                  },
                                  "value": "0.001e18"
                                },
                                "src": "5617:31:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2529,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5616:33:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5652:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "5616:40:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5593:63:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2536,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5692:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5696:6:17",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5692:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2540,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5712:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Insurance_$2727",
                                    "typeString": "contract Insurance"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Insurance_$2727",
                                    "typeString": "contract Insurance"
                                  }
                                ],
                                "id": 2539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5704:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2538,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5704:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5704:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2542,
                              "name": "proposerBond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "5719:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2533,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "5666:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5675:16:17",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1490,
                            "src": "5666:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1346_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5666:66:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2544,
                        "nodeType": "ExpressionStatement",
                        "src": "5666:66:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2546,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5763:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5769:9:17",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5763:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2548,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2509,
                              "src": "5780:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2549,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2424,
                              "src": "5789:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2545,
                            "name": "ClaimSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2160,
                            "src": "5748:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32,bytes32)"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5748:50:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2551,
                        "nodeType": "EmitStatement",
                        "src": "5743:55:17"
                      }
                    ]
                  },
                  "functionSelector": "8b35e14e",
                  "id": 2553,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitClaim",
                  "nameLocation": "4717:11:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2424,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "4737:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2553,
                        "src": "4729:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2423,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4729:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4728:18:17"
                  },
                  "returnParameters": {
                    "id": 2426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4756:0:17"
                  },
                  "scope": 2727,
                  "src": "4708:1097:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2601,
                    "nodeType": "Block",
                    "src": "5858:379:17",
                    "statements": [
                      {
                        "assignments": [
                          2559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2559,
                            "mutability": "mutable",
                            "name": "policyId",
                            "nameLocation": "5876:8:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2601,
                            "src": "5868:16:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2558,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5868:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2563,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2560,
                            "name": "insuranceClaims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2115,
                            "src": "5887:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 2562,
                          "indexExpression": {
                            "id": 2561,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2555,
                            "src": "5903:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5887:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5868:43:17"
                      },
                      {
                        "assignments": [
                          2566
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2566,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "5945:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2601,
                            "src": "5921:30:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                              "typeString": "struct Insurance.InsurancePolicy"
                            },
                            "typeName": {
                              "id": 2565,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2564,
                                "name": "InsurancePolicy",
                                "nameLocations": [
                                  "5921:15:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "5921:15:17"
                              },
                              "referencedDeclaration": 2089,
                              "src": "5921:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2570,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2567,
                            "name": "insurancePolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "5954:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                              "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                            }
                          },
                          "id": 2569,
                          "indexExpression": {
                            "id": 2568,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "5972:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5954:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                            "typeString": "struct Insurance.InsurancePolicy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5921:60:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                "typeString": "enum Insurance.PolicyStatus"
                              },
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2572,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2566,
                                  "src": "5999:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2573,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6006:6:17",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2076,
                                "src": "5999:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2574,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2073,
                                  "src": "6016:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                    "typeString": "type(enum Insurance.PolicyStatus)"
                                  }
                                },
                                "id": 2575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6029:7:17",
                                "memberName": "Claimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2070,
                                "src": "6016:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "src": "5999:37:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f7420636c61696d6564",
                              "id": 2577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6038:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ffaf2b11f9c2461335be4847556d8ae07caf971d048b9950b68c1493ab847102",
                                "typeString": "literal_string \"Policy not claimed\""
                              },
                              "value": "Policy not claimed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ffaf2b11f9c2461335be4847556d8ae07caf971d048b9950b68c1493ab847102",
                                "typeString": "literal_string \"Policy not claimed\""
                              }
                            ],
                            "id": 2571,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5991:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5991:68:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2579,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:68:17"
                      },
                      {
                        "expression": {
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2580,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2566,
                              "src": "6070:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2582,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6077:6:17",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2076,
                            "src": "6070:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2583,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "6086:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 2584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6099:7:17",
                            "memberName": "Settled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2071,
                            "src": "6086:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "6070:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 2586,
                        "nodeType": "ExpressionStatement",
                        "src": "6070:36:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2590,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2566,
                                "src": "6138:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                  "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                }
                              },
                              "id": 2591,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6145:14:17",
                              "memberName": "insuredAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2080,
                              "src": "6138:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2592,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2566,
                                "src": "6161:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                  "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                }
                              },
                              "id": 2593,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6168:13:17",
                              "memberName": "insuredAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2082,
                              "src": "6161:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2587,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "6116:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1346",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6125:12:17",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1463,
                            "src": "6116:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1346_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1346_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6116:66:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2595,
                        "nodeType": "ExpressionStatement",
                        "src": "6116:66:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2597,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2555,
                              "src": "6212:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2598,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "6221:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2596,
                            "name": "ClaimAccepted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "6198:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6198:32:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2600,
                        "nodeType": "EmitStatement",
                        "src": "6193:37:17"
                      }
                    ]
                  },
                  "functionSelector": "bdf80435",
                  "id": 2602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleClaim",
                  "nameLocation": "5820:11:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2555,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "5840:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2602,
                        "src": "5832:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2554,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5832:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5831:17:17"
                  },
                  "returnParameters": {
                    "id": 2557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5858:0:17"
                  },
                  "scope": 2727,
                  "src": "5811:426:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2641,
                    "nodeType": "Block",
                    "src": "6290:301:17",
                    "statements": [
                      {
                        "assignments": [
                          2608
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2608,
                            "mutability": "mutable",
                            "name": "policyId",
                            "nameLocation": "6308:8:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2641,
                            "src": "6300:16:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2607,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6300:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2612,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2609,
                            "name": "insuranceClaims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2115,
                            "src": "6319:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 2611,
                          "indexExpression": {
                            "id": 2610,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "6335:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6319:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6300:43:17"
                      },
                      {
                        "assignments": [
                          2615
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2615,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "6377:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2641,
                            "src": "6353:30:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                              "typeString": "struct Insurance.InsurancePolicy"
                            },
                            "typeName": {
                              "id": 2614,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2613,
                                "name": "InsurancePolicy",
                                "nameLocations": [
                                  "6353:15:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "6353:15:17"
                              },
                              "referencedDeclaration": 2089,
                              "src": "6353:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2619,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2616,
                            "name": "insurancePolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "6386:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                              "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                            }
                          },
                          "id": 2618,
                          "indexExpression": {
                            "id": 2617,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "6404:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6386:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                            "typeString": "struct Insurance.InsurancePolicy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6353:60:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                "typeString": "enum Insurance.PolicyStatus"
                              },
                              "id": 2625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2621,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2615,
                                  "src": "6431:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2622,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6438:6:17",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2076,
                                "src": "6431:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2623,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2073,
                                  "src": "6448:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                    "typeString": "type(enum Insurance.PolicyStatus)"
                                  }
                                },
                                "id": 2624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6461:7:17",
                                "memberName": "Claimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2070,
                                "src": "6448:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "src": "6431:37:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f7420636c61696d6564",
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6470:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ffaf2b11f9c2461335be4847556d8ae07caf971d048b9950b68c1493ab847102",
                                "typeString": "literal_string \"Policy not claimed\""
                              },
                              "value": "Policy not claimed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ffaf2b11f9c2461335be4847556d8ae07caf971d048b9950b68c1493ab847102",
                                "typeString": "literal_string \"Policy not claimed\""
                              }
                            ],
                            "id": 2620,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6423:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6423:68:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2628,
                        "nodeType": "ExpressionStatement",
                        "src": "6423:68:17"
                      },
                      {
                        "expression": {
                          "id": 2634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2629,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "6502:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6509:6:17",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2076,
                            "src": "6502:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2632,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "6518:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 2633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6531:6:17",
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2069,
                            "src": "6518:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "6502:35:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 2635,
                        "nodeType": "ExpressionStatement",
                        "src": "6502:35:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2637,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "6566:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2638,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2608,
                              "src": "6575:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2636,
                            "name": "ClaimRejected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2172,
                            "src": "6552:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 2639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6552:32:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2640,
                        "nodeType": "EmitStatement",
                        "src": "6547:37:17"
                      }
                    ]
                  },
                  "functionSelector": "13be4f9e",
                  "id": 2642,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rejectClaim",
                  "nameLocation": "6252:11:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2604,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "6272:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2642,
                        "src": "6264:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2603,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6264:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6263:17:17"
                  },
                  "returnParameters": {
                    "id": 2606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6290:0:17"
                  },
                  "scope": 2727,
                  "src": "6243:348:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2683,
                    "nodeType": "Block",
                    "src": "6646:323:17",
                    "statements": [
                      {
                        "assignments": [
                          2649
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2649,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "6680:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2683,
                            "src": "6656:30:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                              "typeString": "struct Insurance.InsurancePolicy"
                            },
                            "typeName": {
                              "id": 2648,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2647,
                                "name": "InsurancePolicy",
                                "nameLocations": [
                                  "6656:15:17"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2089,
                                "src": "6656:15:17"
                              },
                              "referencedDeclaration": 2089,
                              "src": "6656:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2653,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2650,
                            "name": "insurancePolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "6689:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_InsurancePolicy_$2089_storage_$",
                              "typeString": "mapping(bytes32 => struct Insurance.InsurancePolicy storage ref)"
                            }
                          },
                          "id": 2652,
                          "indexExpression": {
                            "id": 2651,
                            "name": "policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "6707:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6689:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage",
                            "typeString": "struct Insurance.InsurancePolicy storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6656:60:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                "typeString": "enum Insurance.PolicyStatus"
                              },
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2655,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2649,
                                  "src": "6734:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2656,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6741:6:17",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2076,
                                "src": "6734:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2657,
                                  "name": "PolicyStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2073,
                                  "src": "6751:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                    "typeString": "type(enum Insurance.PolicyStatus)"
                                  }
                                },
                                "id": 2658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6764:6:17",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2069,
                                "src": "6751:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                                  "typeString": "enum Insurance.PolicyStatus"
                                }
                              },
                              "src": "6734:36:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f7420616374697665",
                              "id": 2660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6772:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              },
                              "value": "Policy not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718",
                                "typeString": "literal_string \"Policy not active\""
                              }
                            ],
                            "id": 2654,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6726:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6726:66:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2662,
                        "nodeType": "ExpressionStatement",
                        "src": "6726:66:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2664,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "6810:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6816:9:17",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6810:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 2666,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2649,
                                  "src": "6828:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                    "typeString": "struct Insurance.InsurancePolicy storage pointer"
                                  }
                                },
                                "id": 2667,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6835:19:17",
                                "memberName": "expirationTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2088,
                                "src": "6828:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6810:44:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6c696379206e6f742065787069726564",
                              "id": 2669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6856:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5461f390fa89d43074cbce987738fd6832c65b54b7bfd83e86c57726e47f88e",
                                "typeString": "literal_string \"Policy not expired\""
                              },
                              "value": "Policy not expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5461f390fa89d43074cbce987738fd6832c65b54b7bfd83e86c57726e47f88e",
                                "typeString": "literal_string \"Policy not expired\""
                              }
                            ],
                            "id": 2663,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6802:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6802:75:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2671,
                        "nodeType": "ExpressionStatement",
                        "src": "6802:75:17"
                      },
                      {
                        "expression": {
                          "id": 2677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2672,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "6888:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePolicy_$2089_storage_ptr",
                                "typeString": "struct Insurance.InsurancePolicy storage pointer"
                              }
                            },
                            "id": 2674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6895:6:17",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2076,
                            "src": "6888:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2675,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "6904:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$2073_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 2676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6917:7:17",
                            "memberName": "Expired",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2072,
                            "src": "6904:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "6888:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$2073",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 2678,
                        "nodeType": "ExpressionStatement",
                        "src": "6888:36:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2680,
                              "name": "policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "6953:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2679,
                            "name": "PolicyExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2176,
                            "src": "6939:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6939:23:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2682,
                        "nodeType": "EmitStatement",
                        "src": "6934:28:17"
                      }
                    ]
                  },
                  "functionSelector": "47e3b138",
                  "id": 2684,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "expirePolicy",
                  "nameLocation": "6606:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2644,
                        "mutability": "mutable",
                        "name": "policyId",
                        "nameLocation": "6627:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2684,
                        "src": "6619:16:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2643,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6619:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6618:18:17"
                  },
                  "returnParameters": {
                    "id": 2646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6646:0:17"
                  },
                  "scope": 2727,
                  "src": "6597:372:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2707,
                    "nodeType": "Block",
                    "src": "7163:103:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2700,
                                  "name": "blockNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2686,
                                  "src": "7201:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2701,
                                  "name": "insuredEvent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2688,
                                  "src": "7214:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 2702,
                                  "name": "insuredAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "7228:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2703,
                                  "name": "insuredAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2692,
                                  "src": "7244:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2698,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "7190:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7194:6:17",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "7190:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7190:68:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2697,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "7180:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7180:79:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 2696,
                        "id": 2706,
                        "nodeType": "Return",
                        "src": "7173:86:17"
                      }
                    ]
                  },
                  "id": 2708,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPolicyId",
                  "nameLocation": "6984:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2686,
                        "mutability": "mutable",
                        "name": "blockNumber",
                        "nameLocation": "7014:11:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2708,
                        "src": "7006:19:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7006:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2688,
                        "mutability": "mutable",
                        "name": "insuredEvent",
                        "nameLocation": "7049:12:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2708,
                        "src": "7035:26:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2687,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7035:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2690,
                        "mutability": "mutable",
                        "name": "insuredAddress",
                        "nameLocation": "7079:14:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2708,
                        "src": "7071:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2689,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7071:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2692,
                        "mutability": "mutable",
                        "name": "insuredAmount",
                        "nameLocation": "7111:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2708,
                        "src": "7103:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7103:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6996:134:17"
                  },
                  "returnParameters": {
                    "id": 2696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2695,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2708,
                        "src": "7154:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2694,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7154:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7153:9:17"
                  },
                  "scope": 2727,
                  "src": "6975:291:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2725,
                    "nodeType": "Block",
                    "src": "7390:66:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2720,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2710,
                                  "src": "7428:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2721,
                                  "name": "flightId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2712,
                                  "src": "7439:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 2718,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "7417:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7421:6:17",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "7417:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7417:31:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2717,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "7407:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7407:42:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 2716,
                        "id": 2724,
                        "nodeType": "Return",
                        "src": "7400:49:17"
                      }
                    ]
                  },
                  "id": 2726,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getClaimId",
                  "nameLocation": "7281:11:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2713,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2710,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "7310:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2726,
                        "src": "7302:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7302:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2712,
                        "mutability": "mutable",
                        "name": "flightId",
                        "nameLocation": "7343:8:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2726,
                        "src": "7329:22:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2711,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7329:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7292:65:17"
                  },
                  "returnParameters": {
                    "id": 2716,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2715,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2726,
                        "src": "7381:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2714,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7381:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7380:9:17"
                  },
                  "scope": 2727,
                  "src": "7272:184:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2728,
              "src": "235:7223:17",
              "usedErrors": [
                392,
                397,
                1430
              ],
              "usedEvents": [
                403,
                2152,
                2160,
                2166,
                2172,
                2176,
                2183,
                2189
              ]
            }
          ],
          "src": "32:7427:17"
        }
      },
      "contracts/MyToken.sol": {
        "id": 18,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1912
            ],
            "ERC165": [
              2044
            ],
            "ERC20": [
              1268
            ],
            "ERC20Burnable": [
              1392
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1346
            ],
            "IERC20Errors": [
              658
            ],
            "IERC20Metadata": [
              1418
            ],
            "MyToken": [
              2843
            ],
            "Pausable": [
              2020
            ]
          },
          "id": 2844,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2729,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:18"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2730,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2844,
              "sourceUnit": 1269,
              "src": "58:55:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 2731,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2844,
              "sourceUnit": 1393,
              "src": "114:74:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 2732,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2844,
              "sourceUnit": 2021,
              "src": "189:52:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 2733,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2844,
              "sourceUnit": 296,
              "src": "242:58:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2734,
                    "name": "ERC20",
                    "nameLocations": [
                      "322:5:18"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1268,
                    "src": "322:5:18"
                  },
                  "id": 2735,
                  "nodeType": "InheritanceSpecifier",
                  "src": "322:5:18"
                },
                {
                  "baseName": {
                    "id": 2736,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "329:13:18"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1392,
                    "src": "329:13:18"
                  },
                  "id": 2737,
                  "nodeType": "InheritanceSpecifier",
                  "src": "329:13:18"
                },
                {
                  "baseName": {
                    "id": 2738,
                    "name": "Pausable",
                    "nameLocations": [
                      "344:8:18"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2020,
                    "src": "344:8:18"
                  },
                  "id": 2739,
                  "nodeType": "InheritanceSpecifier",
                  "src": "344:8:18"
                },
                {
                  "baseName": {
                    "id": 2740,
                    "name": "AccessControl",
                    "nameLocations": [
                      "354:13:18"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "354:13:18"
                  },
                  "id": 2741,
                  "nodeType": "InheritanceSpecifier",
                  "src": "354:13:18"
                }
              ],
              "canonicalName": "MyToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2843,
              "linearizedBaseContracts": [
                2843,
                295,
                2044,
                2056,
                378,
                2020,
                1392,
                1268,
                658,
                1418,
                1346,
                1912
              ],
              "name": "MyToken",
              "nameLocation": "311:7:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 2746,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "398:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "374:62:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 2743,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "412:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 2751,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "466:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "442:62:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 2749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 2748,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "480:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2784,
                    "nodeType": "Block",
                    "src": "570:192:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2761,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "591:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2762,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "611:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "615:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "611:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2760,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "580:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:42:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2765,
                        "nodeType": "ExpressionStatement",
                        "src": "580:42:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2767,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2746,
                              "src": "643:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "656:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "660:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "656:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2766,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "632:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:35:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2771,
                        "nodeType": "ExpressionStatement",
                        "src": "632:35:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2773,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2751,
                              "src": "688:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 2774,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "701:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "705:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "701:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2772,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "677:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:35:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2777,
                        "nodeType": "ExpressionStatement",
                        "src": "677:35:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2779,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "733:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2781,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2753,
                              "src": "741:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2778,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "723:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "723:32:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2783,
                        "nodeType": "ExpressionStatement",
                        "src": "723:32:18"
                      }
                    ]
                  },
                  "id": 2785,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4d79546f6b656e",
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          "value": "MyToken"
                        },
                        {
                          "hexValue": "4d544b",
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "563:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          "value": "MTK"
                        }
                      ],
                      "id": 2758,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2755,
                        "name": "ERC20",
                        "nameLocations": [
                          "546:5:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1268,
                        "src": "546:5:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "546:23:18"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2753,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "531:13:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2785,
                        "src": "523:21:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2752,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:23:18"
                  },
                  "returnParameters": {
                    "id": 2759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "570:0:18"
                  },
                  "scope": 2843,
                  "src": "511:251:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2794,
                    "nodeType": "Block",
                    "src": "814:25:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2791,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "824:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "824:8:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2793,
                        "nodeType": "ExpressionStatement",
                        "src": "824:8:18"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 2795,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2788,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2746,
                          "src": "801:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2789,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2787,
                        "name": "onlyRole",
                        "nameLocations": [
                          "792:8:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "792:8:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "792:21:18"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "777:5:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2786,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "782:2:18"
                  },
                  "returnParameters": {
                    "id": 2790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:0:18"
                  },
                  "scope": 2843,
                  "src": "768:71:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2804,
                    "nodeType": "Block",
                    "src": "893:27:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2801,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "903:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "903:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2803,
                        "nodeType": "ExpressionStatement",
                        "src": "903:10:18"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2805,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2798,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2746,
                          "src": "880:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2799,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2797,
                        "name": "onlyRole",
                        "nameLocations": [
                          "871:8:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "871:8:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "871:21:18"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "854:7:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2796,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "861:2:18"
                  },
                  "returnParameters": {
                    "id": 2800,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "893:0:18"
                  },
                  "scope": 2843,
                  "src": "845:75:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2820,
                    "nodeType": "Block",
                    "src": "997:34:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2816,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2807,
                              "src": "1013:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2817,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2809,
                              "src": "1017:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2815,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "1007:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1007:17:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2819,
                        "nodeType": "ExpressionStatement",
                        "src": "1007:17:18"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2812,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2751,
                          "src": "984:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2813,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2811,
                        "name": "onlyRole",
                        "nameLocations": [
                          "975:8:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "975:8:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "975:21:18"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "935:4:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2807,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "948:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2821,
                        "src": "940:10:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2809,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "960:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2821,
                        "src": "952:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:28:18"
                  },
                  "returnParameters": {
                    "id": 2814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "997:0:18"
                  },
                  "scope": 2843,
                  "src": "926:105:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "1156:48:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2836,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2823,
                              "src": "1180:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2837,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2825,
                              "src": "1186:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2838,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2827,
                              "src": "1190:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2833,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1166:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_MyToken_$2843_$",
                                "typeString": "type(contract super MyToken)"
                              }
                            },
                            "id": 2835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1172:7:18",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1075,
                            "src": "1166:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:31:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2840,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:31:18"
                      }
                    ]
                  },
                  "id": 2842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2831,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2830,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1138:13:18"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1945,
                        "src": "1138:13:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1138:13:18"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1046:7:18",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2829,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1121:8:18"
                  },
                  "parameters": {
                    "id": 2828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2823,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1062:4:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "1054:12:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1054:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2825,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1076:2:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "1068:10:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2824,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2827,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1088:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "1080:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2826,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1053:42:18"
                  },
                  "returnParameters": {
                    "id": 2832,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1156:0:18"
                  },
                  "scope": 2843,
                  "src": "1037:167:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2844,
              "src": "302:904:18",
              "usedErrors": [
                305,
                308,
                628,
                633,
                638,
                647,
                652,
                657,
                1934,
                1937
              ],
              "usedEvents": [
                317,
                326,
                335,
                1280,
                1289,
                1926,
                1931
              ]
            }
          ],
          "src": "32:1175:18"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n",
            "bytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "deployedBytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "methodIdentifiers": {}
          },
          "irOptimized": "/// @use-src 11:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1882\" {\n    code {\n        {\n            /// @src 11:698:10074  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_1882_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_1882_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1882_deployed\" {\n        code {\n            {\n                /// @src 11:698:10074  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202ad0f4496b5f2b36554e20579abddc4edd68ce08ff6578c432bc22f5e8178e9964736f6c634300081c0033\"\n    }\n}\n",
          "hash": "173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee",
          "factoryDependencies": {}
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/Insurance.sol": {
        "Insurance": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_currency",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "ClaimAccepted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "ClaimRejected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "claimTimestamp",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "ClaimSubmitted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "flightId",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "flight_origin",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_destination",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flight_date",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flight_time",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_number",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_airline",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_status",
                      "type": "string"
                    },
                    {
                      "internalType": "uint16",
                      "name": "flight_gate",
                      "type": "uint16"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Insurance.FlightData",
                  "name": "data",
                  "type": "tuple"
                }
              ],
              "name": "FlightDataUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "PolicyExpired",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "insurer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "insuredEvent",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "insuredAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "insuredAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "flightId",
                  "type": "string"
                }
              ],
              "name": "PolicyIssued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldRelayer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newRelayer",
                  "type": "address"
                }
              ],
              "name": "RelayerUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_EVENT_DESCRIPTION_SIZE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currency",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "expirePolicy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "insuranceClaims",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "insurancePolicies",
              "outputs": [
                {
                  "internalType": "enum Insurance.PolicyStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "insuredEvent",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "insuredAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "insuredAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "flightId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationTimestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "insuredEvent",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "insuredAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "insuredAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "flightId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationTimestamp",
                  "type": "uint256"
                }
              ],
              "name": "issueInsurance",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "lastVerificationTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                }
              ],
              "name": "rejectClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "relayer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_relayer",
                  "type": "address"
                }
              ],
              "name": "setRelayer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                }
              ],
              "name": "settleClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "policyId",
                  "type": "bytes32"
                }
              ],
              "name": "submitClaim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "flightId",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "flight_origin",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_destination",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flight_date",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "flight_time",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_number",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_airline",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "flight_status",
                      "type": "string"
                    },
                    {
                      "internalType": "uint16",
                      "name": "flight_gate",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct Insurance.FlightData",
                  "name": "data",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "updateFlightData",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "verifiedFlightData",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "flight_origin",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "flight_destination",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "flight_date",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flight_time",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "flight_number",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "flight_airline",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "flight_status",
                  "type": "string"
                },
                {
                  "internalType": "uint16",
                  "name": "flight_gate",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"ClaimAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"ClaimRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTimestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"flightId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"flight_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_destination\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"flight_date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flight_time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"flight_number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_airline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_status\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"flight_gate\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct Insurance.FlightData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"FlightDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"PolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"insurer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"insuredEvent\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"insuredAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuredAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"flightId\",\"type\":\"string\"}],\"name\":\"PolicyIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayer\",\"type\":\"address\"}],\"name\":\"RelayerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_EVENT_DESCRIPTION_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"expirePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"insuranceClaims\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"insurancePolicies\",\"outputs\":[{\"internalType\":\"enum Insurance.PolicyStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"insuredEvent\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"insuredAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"insuredAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"flightId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"insuredEvent\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"insuredAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"insuredAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"flightId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"}],\"name\":\"issueInsurance\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lastVerificationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"name\":\"rejectClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"}],\"name\":\"setRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"name\":\"settleClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"submitClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"flightId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"flight_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_destination\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"flight_date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flight_time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"flight_number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_airline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_status\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"flight_gate\",\"type\":\"uint16\"}],\"internalType\":\"struct Insurance.FlightData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"updateFlightData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedFlightData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"flight_origin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_destination\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"flight_date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flight_time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"flight_number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_airline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"flight_status\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"flight_gate\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Insurance.sol\":\"Insurance\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/Insurance.sol\":{\"keccak256\":\"0xa46fe3fd6a0b9f69e56f84247c66695568f6dbc7c499f6f608bfc163a1891a5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b70b2239a8c7219e562d4d499e673c7effa544e69e58f234cf384bbe5b3d091\",\"dweb:/ipfs/QmY3MjPbvLmp4vfbpEVytdipheQgpFiGnoR3K6dKRyRszP\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 548/66160 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 15691\n// Code size = 56099 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 7)\n   112: sp = sp + 0xffffffffffffffe8\n   115: u64 [sp + 0x10] = ra\n   118: u64 [sp + 0x8] = s0\n   121: u64 [sp] = s1\n   123: s1 = 0x20220\n   128: s0 = i32 [0x20220]\n   133: jump @18 if s0 == 0\n      : @16 (gas: 5)\n   136: a0 = 0x30250\n   141: i32 a0 = a0 + 0\n   143: i32 a1 = s1 + 0\n   145: ecalli 9 // 'get_immutable_data'\n   147: fallthrough\n      : @17 (gas: 3)\n   148: a0 = i32 [0x20220]\n   153: u32 [0x20220] = 0\n   158: jump @19 if a0 <u s0\n      : @18 (gas: 5)\n   161: ra = u64 [sp + 0x10]\n   164: s0 = u64 [sp + 0x8]\n   167: s1 = u64 [sp]\n   169: sp = sp + 0x18\n   172: ret\n      : @19 (gas: 1)\n   174: trap\n      : @20 (gas: 2)\n   175: a1 = i32 [0x20220]\n   180: jump @76 if a1 == 0\n      : @21 (gas: 4)\n   184: a0 = 0x30250\n   189: i32 a0 = a0 + 0\n   191: ecalli 17 // 'set_immutable_data'\n   193: jump @76\n      : @22 (gas: 8)\n   196: sp = sp + 0xfffffffffffffff0\n   199: u64 [sp + 0x8] = ra\n   202: u64 [sp] = s0\n   204: a2 = a1\n   206: s0 = a0\n   208: a1 = 0x20\n   211: a0 = a2\n   213: ra = 2, jump @36\n      : @23 [@dyn 1] (gas: 100)\n   218: a1 = u8 [a0 + 0x1]\n   221: a2 = u8 [a0]\n   223: a3 = u8 [a0 + 0x2]\n   226: a4 = u8 [a0 + 0x3]\n   229: a1 = a1 << 0x8\n   232: a1 = a1 | a2\n   235: a3 = a3 << 0x10\n   238: a4 = a4 << 0x18\n   241: a3 = a3 | a4\n   244: a1 = a1 | a3\n   247: a2 = u8 [a0 + 0x5]\n   250: a3 = u8 [a0 + 0x4]\n   253: a4 = u8 [a0 + 0x6]\n   256: a5 = u8 [a0 + 0x7]\n   259: a2 = a2 << 0x8\n   262: a2 = a2 | a3\n   265: a4 = a4 << 0x10\n   268: a5 = a5 << 0x18\n   271: a4 = a4 | a5\n   274: a2 = a2 | a4\n   277: a2 = a2 << 0x20\n   280: t0 = a2 | a1\n   283: a2 = u8 [a0 + 0x9]\n   286: a3 = u8 [a0 + 0x8]\n   289: a4 = u8 [a0 + 0xa]\n   292: a5 = u8 [a0 + 0xb]\n   295: a2 = a2 << 0x8\n   298: a2 = a2 | a3\n   301: a4 = a4 << 0x10\n   304: a5 = a5 << 0x18\n   307: a4 = a4 | a5\n   310: a2 = a2 | a4\n   313: a3 = u8 [a0 + 0xd]\n   316: a4 = u8 [a0 + 0xc]\n   319: a5 = u8 [a0 + 0xe]\n   322: a1 = u8 [a0 + 0xf]\n   325: a3 = a3 << 0x8\n   328: a3 = a3 | a4\n   331: a5 = a5 << 0x10\n   334: a1 = a1 << 0x18\n   337: a1 = a1 | a5\n   340: a1 = a1 | a3\n   343: a1 = a1 << 0x20\n   346: t1 = a1 | a2\n   349: a1 = u8 [a0 + 0x11]\n   352: a3 = u8 [a0 + 0x10]\n   355: a4 = u8 [a0 + 0x12]\n   358: a5 = u8 [a0 + 0x13]\n   361: a1 = a1 << 0x8\n   364: a1 = a1 | a3\n   367: a4 = a4 << 0x10\n   370: a5 = a5 << 0x18\n   373: a4 = a4 | a5\n   376: a1 = a1 | a4\n   379: a3 = u8 [a0 + 0x15]\n   382: a4 = u8 [a0 + 0x14]\n   385: a5 = u8 [a0 + 0x16]\n   388: a2 = u8 [a0 + 0x17]\n   391: a3 = a3 << 0x8\n   394: a3 = a3 | a4\n   397: a5 = a5 << 0x10\n   400: a2 = a2 << 0x18\n   403: a2 = a2 | a5\n   406: a2 = a2 | a3\n   409: a2 = a2 << 0x20\n   412: a3 = a2 | a1\n   415: a1 = u8 [a0 + 0x19]\n   418: a2 = u8 [a0 + 0x18]\n   421: a4 = u8 [a0 + 0x1a]\n   424: a5 = u8 [a0 + 0x1b]\n   427: a1 = a1 << 0x8\n   430: a1 = a1 | a2\n   433: a4 = a4 << 0x10\n   436: a5 = a5 << 0x18\n   439: a4 = a4 | a5\n   442: a1 = a1 | a4\n   445: a2 = u8 [a0 + 0x1d]\n   448: a4 = u8 [a0 + 0x1c]\n   451: a5 = u8 [a0 + 0x1e]\n   454: a0 = u8 [a0 + 0x1f]\n   457: a2 = a2 << 0x8\n   460: a2 = a2 | a4\n   463: a5 = a5 << 0x10\n   466: a0 = a0 << 0x18\n   469: a0 = a0 | a5\n   472: a0 = a0 | a2\n   475: a0 = a0 << 0x20\n   478: a0 = a0 | a1\n   481: a0 = reverse a0\n   483: a1 = reverse a3\n   485: a2 = reverse t1\n   487: a3 = reverse t0\n   489: u64 [s0 + 0x18] = a3\n   492: u64 [s0 + 0x10] = a2\n   495: u64 [s0 + 0x8] = a1\n   498: u64 [s0] = a0\n   500: ra = u64 [sp + 0x8]\n   503: s0 = u64 [sp]\n   505: sp = sp + 0x10\n   508: ret\n      : @24 (gas: 12)\n   510: sp = sp + 0xffffffffffffffd8\n   513: u64 [sp + 0x20] = ra\n   516: u64 [sp + 0x18] = s0\n   519: u64 [sp + 0x10] = s1\n   522: a2 = u64 [a1]\n   524: u64 [sp + 0x8] = a2\n   527: a2 = u64 [a1 + 0x8]\n   530: u64 [sp] = a2\n   532: s0 = u64 [a1 + 0x10]\n   535: s1 = u64 [a1 + 0x18]\n   538: a1 = 0x20\n   541: ra = 4, jump @36\n      : @25 [@dyn 2] (gas: 71)\n   546: a1 = reverse s1\n   548: a2 = reverse s0\n   550: a3 = u64 [sp]\n   552: a3 = reverse a3\n   554: a4 = u64 [sp + 0x8]\n   557: a4 = reverse a4\n   559: u8 [a0 + 0x18] = a4\n   562: u8 [a0 + 0x10] = a3\n   565: u8 [a0 + 0x8] = a2\n   568: u8 [a0] = a1\n   570: a5 = a4 >> 0x38\n   573: u8 [a0 + 0x1f] = a5\n   576: a5 = a4 >> 0x30\n   579: u8 [a0 + 0x1e] = a5\n   582: a5 = a4 >> 0x28\n   585: u8 [a0 + 0x1d] = a5\n   588: a5 = a4 >> 0x20\n   591: u8 [a0 + 0x1c] = a5\n   594: a5 = a4 >> 0x18\n   597: u8 [a0 + 0x1b] = a5\n   600: a5 = a4 >> 0x10\n   603: u8 [a0 + 0x1a] = a5\n   606: a4 = a4 >> 0x8\n   609: u8 [a0 + 0x19] = a4\n   612: a4 = a3 >> 0x38\n   615: u8 [a0 + 0x17] = a4\n   618: a4 = a3 >> 0x30\n   621: u8 [a0 + 0x16] = a4\n   624: a4 = a3 >> 0x28\n   627: u8 [a0 + 0x15] = a4\n   630: a4 = a3 >> 0x20\n   633: u8 [a0 + 0x14] = a4\n   636: a4 = a3 >> 0x18\n   639: u8 [a0 + 0x13] = a4\n   642: a4 = a3 >> 0x10\n   645: u8 [a0 + 0x12] = a4\n   648: a3 = a3 >> 0x8\n   651: u8 [a0 + 0x11] = a3\n   654: a3 = a2 >> 0x38\n   657: u8 [a0 + 0xf] = a3\n   660: a3 = a2 >> 0x30\n   663: u8 [a0 + 0xe] = a3\n   666: a3 = a2 >> 0x28\n   669: u8 [a0 + 0xd] = a3\n   672: a3 = a2 >> 0x20\n   675: u8 [a0 + 0xc] = a3\n   678: a3 = a2 >> 0x18\n   681: u8 [a0 + 0xb] = a3\n   684: a3 = a2 >> 0x10\n   687: u8 [a0 + 0xa] = a3\n   690: a2 = a2 >> 0x8\n   693: u8 [a0 + 0x9] = a2\n   696: a2 = a1 >> 0x38\n   699: u8 [a0 + 0x7] = a2\n   702: a2 = a1 >> 0x30\n   705: u8 [a0 + 0x6] = a2\n   708: a2 = a1 >> 0x28\n   711: u8 [a0 + 0x5] = a2\n   714: a2 = a1 >> 0x20\n   717: u8 [a0 + 0x4] = a2\n   720: a2 = a1 >> 0x18\n   723: u8 [a0 + 0x3] = a2\n   726: a2 = a1 >> 0x10\n   729: u8 [a0 + 0x2] = a2\n   732: a1 = a1 >> 0x8\n   735: u8 [a0 + 0x1] = a1\n   738: ra = u64 [sp + 0x20]\n   741: s0 = u64 [sp + 0x18]\n   744: s1 = u64 [sp + 0x10]\n   747: sp = sp + 0x28\n   750: ret\n      : @26 (gas: 43)\n   752: sp = sp + 0xffffffffffffffa0\n   755: u64 [sp + 0x58] = ra\n   758: u64 [sp + 0x50] = s0\n   761: u64 [sp + 0x48] = s1\n   764: s0 = sp + 0x60\n   767: sp = sp & 0xffffffffffffffe0\n   770: s1 = a0\n   772: a0 = u64 [a1 + 0x18]\n   775: a2 = u64 [a1 + 0x10]\n   778: a3 = u64 [a1 + 0x8]\n   781: a1 = u64 [a1]\n   783: a0 = reverse a0\n   785: a2 = reverse a2\n   787: a3 = reverse a3\n   789: a1 = reverse a1\n   791: u64 [sp + 0x18] = a1\n   794: u64 [sp + 0x10] = a3\n   797: u64 [sp + 0x8] = a2\n   800: u64 [sp] = a0\n   802: u64 [sp + 56] = 0\n   805: u64 [sp + 48] = 0\n   808: u64 [sp + 40] = 0\n   811: u64 [sp + 32] = 0\n   814: u32 [sp + 64] = 0x20\n   818: i32 a1 = sp + 0\n   820: i32 a3 = sp + 0x20\n   823: i32 a4 = sp + 0x40\n   826: a2 = 0xffffffffffffffff\n   829: a0 = 0\n   831: ecalli 10 // 'get_storage'\n   833: a0 = u64 [sp + 0x38]\n   836: a1 = u64 [sp + 0x30]\n   839: a2 = u64 [sp + 0x28]\n   842: a3 = u64 [sp + 0x20]\n   845: a0 = reverse a0\n   847: a1 = reverse a1\n   849: a2 = reverse a2\n   851: a3 = reverse a3\n   853: u64 [s1 + 0x18] = a3\n   856: u64 [s1 + 0x10] = a2\n   859: u64 [s1 + 0x8] = a1\n   862: u64 [s1] = a0\n   864: t0 = 6, jump @1802\n      : @27 [@dyn 3] (gas: 1)\n   870: ret\n      : @28 (gas: 40)\n   872: sp = sp + 0xffffffffffffffa0\n   875: u64 [sp + 0x58] = ra\n   878: u64 [sp + 0x50] = s0\n   881: s0 = sp + 0x60\n   884: sp = sp & 0xffffffffffffffe0\n   887: t0 = u64 [a0]\n   889: a3 = u64 [a0 + 0x8]\n   892: a4 = u64 [a0 + 0x10]\n   895: a0 = u64 [a0 + 0x18]\n   898: t1 = u64 [a1]\n   900: a2 = u64 [a1 + 0x8]\n   903: a5 = u64 [a1 + 0x10]\n   906: a1 = u64 [a1 + 0x18]\n   909: t2 = reverse a0\n   911: a4 = reverse a4\n   913: a3 = reverse a3\n   915: a0 = reverse t0\n   917: t0 = reverse a1\n   919: a5 = reverse a5\n   921: a2 = reverse a2\n   923: a1 = reverse t1\n   925: u64 [sp + 0x18] = a0\n   928: u64 [sp + 0x10] = a3\n   931: u64 [sp + 0x8] = a4\n   934: u64 [sp] = t2\n   936: u64 [sp + 0x38] = a1\n   939: u64 [sp + 0x30] = a2\n   942: u64 [sp + 0x28] = a5\n   945: u64 [sp + 0x20] = t0\n   948: i32 a1 = sp + 0\n   950: i32 a3 = sp + 0x20\n   953: a2 = 0xffffffffffffffff\n   956: a4 = 0x20\n   959: a0 = 0\n   961: ecalli 18 // 'set_storage'\n   963: sp = s0 + 0xffffffffffffffa0\n   966: ra = u64 [sp + 0x58]\n   969: s0 = u64 [sp + 0x50]\n   972: sp = sp + 0x60\n   975: ret\n      : @29 (gas: 24)\n   977: sp = sp + 0xffffffffffffff60\n   981: u64 [sp + 0x98] = ra\n   985: u64 [sp + 0x90] = s0\n   989: u64 [sp + 0x88] = s1\n   993: s0 = sp + 0xa0\n   997: sp = sp & 0xffffffffffffffe0\n  1000: a4 = u64 [a3]\n  1002: u64 [sp + 0x38] = a4\n  1005: a4 = u64 [a3 + 0x8]\n  1008: u64 [sp + 0x30] = a4\n  1011: a4 = u64 [a3 + 0x10]\n  1014: u64 [sp + 0x28] = a4\n  1017: a3 = u64 [a3 + 0x18]\n  1020: u64 [sp + 0x20] = a3\n  1023: a3 = u64 [a2]\n  1025: u64 [sp + 0x18] = a3\n  1028: a3 = u64 [a2 + 0x8]\n  1031: u64 [sp + 0x10] = a3\n  1034: a3 = u64 [a2 + 0x10]\n  1037: u64 [sp + 0x8] = a3\n  1040: a2 = u64 [a2 + 0x18]\n  1043: u64 [sp] = a2\n  1045: s1 = a1\n  1047: ra = 8, jump @36\n      : @30 [@dyn 4] (gas: 35)\n  1052: a1 = u64 [sp]\n  1054: a1 = reverse a1\n  1056: a2 = u64 [sp + 0x8]\n  1059: a2 = reverse a2\n  1061: a3 = u64 [sp + 0x10]\n  1064: a3 = reverse a3\n  1066: a4 = u64 [sp + 0x18]\n  1069: a4 = reverse a4\n  1071: u64 [sp + 0x58] = a4\n  1074: u64 [sp + 0x50] = a3\n  1077: u64 [sp + 0x48] = a2\n  1080: u64 [sp + 0x40] = a1\n  1083: a1 = u64 [sp + 0x20]\n  1086: a1 = reverse a1\n  1088: a2 = u64 [sp + 0x28]\n  1091: a2 = reverse a2\n  1093: a3 = u64 [sp + 0x30]\n  1096: a3 = reverse a3\n  1098: a4 = u64 [sp + 0x38]\n  1101: a4 = reverse a4\n  1103: u64 [sp + 0x78] = a4\n  1106: u64 [sp + 0x70] = a3\n  1109: u64 [sp + 0x68] = a2\n  1112: u64 [sp + 0x60] = a1\n  1115: i32 a2 = a0 + 0\n  1117: i32 a3 = s1 + 0\n  1119: i32 a0 = sp + 0x40\n  1122: a1 = 0x2\n  1125: ecalli 8 // 'deposit_event'\n  1127: sp = s0 + 0xffffffffffffff60\n  1131: ra = u64 [sp + 0x98]\n  1135: s0 = u64 [sp + 0x90]\n  1139: s1 = u64 [sp + 0x88]\n  1143: sp = sp + 0xa0\n  1147: ret\n      : @31 (gas: 15)\n  1149: sp = sp + 0xffffffffffffff20\n  1153: u64 [sp + 0xd8] = ra\n  1157: u64 [sp + 0xd0] = s0\n  1161: u64 [sp + 0xc8] = s1\n  1165: s0 = sp + 0xe0\n  1169: sp = sp & 0xffffffffffffffe0\n  1172: a5 = u64 [a4]\n  1174: u64 [sp + 0x40] = a5\n  1177: a5 = u64 [a4 + 0x8]\n  1180: u64 [sp + 0x48] = a5\n  1183: a5 = u64 [a4 + 0x10]\n  1186: u64 [sp + 0x50] = a5\n  1189: a4 = u64 [a4 + 0x18]\n  1192: u64 [sp + 0x58] = a4\n  1195: t0 = 10, jump @1777\n      : @32 [@dyn 5] (gas: 2)\n  1201: u64 [sp + 0x38] = a1\n  1204: ra = 12, jump @36\n      : @33 [@dyn 6] (gas: 46)\n  1209: a1 = reverse s1\n  1211: u64 [sp + 0x78] = a1\n  1214: a1 = u64 [sp]\n  1216: a1 = reverse a1\n  1218: u64 [sp + 0x70] = a1\n  1221: a1 = u64 [sp + 0x8]\n  1224: a1 = reverse a1\n  1226: u64 [sp + 0x68] = a1\n  1229: a1 = u64 [sp + 0x10]\n  1232: a1 = reverse a1\n  1234: u64 [sp + 0x60] = a1\n  1237: a1 = u64 [sp + 0x18]\n  1240: a1 = reverse a1\n  1242: u64 [sp + 0x98] = a1\n  1246: a1 = u64 [sp + 0x20]\n  1249: a1 = reverse a1\n  1251: u64 [sp + 0x90] = a1\n  1255: a1 = u64 [sp + 0x28]\n  1258: a1 = reverse a1\n  1260: u64 [sp + 0x88] = a1\n  1264: a1 = u64 [sp + 0x30]\n  1267: a1 = reverse a1\n  1269: u64 [sp + 0x80] = a1\n  1273: a1 = u64 [sp + 0x40]\n  1276: a1 = reverse a1\n  1278: u64 [sp + 0xb8] = a1\n  1282: a1 = u64 [sp + 0x48]\n  1285: a1 = reverse a1\n  1287: u64 [sp + 0xb0] = a1\n  1291: a1 = u64 [sp + 0x50]\n  1294: a1 = reverse a1\n  1296: u64 [sp + 0xa8] = a1\n  1300: a1 = u64 [sp + 0x58]\n  1303: a1 = reverse a1\n  1305: u64 [sp + 0xa0] = a1\n  1309: i32 a2 = a0 + 0\n  1311: a3 = i32 [sp + 0x38]\n  1314: i32 a0 = sp + 0x60\n  1317: a1 = 0x3\n  1320: ecalli 8 // 'deposit_event'\n  1322: sp = s0 + 0xffffffffffffff20\n  1326: ra = u64 [sp + 0xd8]\n  1330: s0 = u64 [sp + 0xd0]\n  1334: s1 = u64 [sp + 0xc8]\n  1338: sp = sp + 0xe0\n  1342: ret\n      : @34 [@dyn 7] (gas: 2)\n  1344: u64 [sp + 0x58] = a1\n  1347: ra = 16, jump @36\n      : @35 [@dyn 8] (gas: 58)\n  1352: a1 = reverse s1\n  1354: u64 [sp + 0x98] = a1\n  1358: a1 = u64 [sp]\n  1360: a1 = reverse a1\n  1362: u64 [sp + 0x90] = a1\n  1366: a1 = u64 [sp + 0x8]\n  1369: a1 = reverse a1\n  1371: u64 [sp + 0x88] = a1\n  1375: a1 = u64 [sp + 0x10]\n  1378: a1 = reverse a1\n  1380: u64 [sp + 0x80] = a1\n  1384: a1 = u64 [sp + 0x18]\n  1387: a1 = reverse a1\n  1389: u64 [sp + 0xb8] = a1\n  1393: a1 = u64 [sp + 0x20]\n  1396: a1 = reverse a1\n  1398: u64 [sp + 0xb0] = a1\n  1402: a1 = u64 [sp + 0x28]\n  1405: a1 = reverse a1\n  1407: u64 [sp + 0xa8] = a1\n  1411: a1 = u64 [sp + 0x30]\n  1414: a1 = reverse a1\n  1416: u64 [sp + 0xa0] = a1\n  1420: a1 = u64 [sp + 0x38]\n  1423: a1 = reverse a1\n  1425: u64 [sp + 0xd8] = a1\n  1429: a1 = u64 [sp + 0x40]\n  1432: a1 = reverse a1\n  1434: u64 [sp + 0xd0] = a1\n  1438: a1 = u64 [sp + 0x48]\n  1441: a1 = reverse a1\n  1443: u64 [sp + 0xc8] = a1\n  1447: a1 = u64 [sp + 0x50]\n  1450: a1 = reverse a1\n  1452: u64 [sp + 0xc0] = a1\n  1456: a1 = u64 [sp + 0x60]\n  1459: a1 = reverse a1\n  1461: u64 [sp + 0xf8] = a1\n  1465: a1 = u64 [sp + 0x68]\n  1468: a1 = reverse a1\n  1470: u64 [sp + 0xf0] = a1\n  1474: a1 = u64 [sp + 0x70]\n  1477: a1 = reverse a1\n  1479: u64 [sp + 0xe8] = a1\n  1483: a1 = u64 [sp + 0x78]\n  1486: a1 = reverse a1\n  1488: u64 [sp + 0xe0] = a1\n  1492: i32 a2 = a0 + 0\n  1494: a3 = i32 [sp + 0x58]\n  1497: i32 a0 = sp + 0x80\n  1501: a1 = 0x4\n  1504: ecalli 8 // 'deposit_event'\n  1506: sp = s0 + 0xfffffffffffffee0\n  1510: ra = u64 [sp + 0x118]\n  1514: s0 = u64 [sp + 0x110]\n  1518: s1 = u64 [sp + 0x108]\n  1522: sp = sp + 0x120\n  1526: ret\n      : @36 (gas: 2)\n  1528: i32 a2 = a0 >> 0x10\n  1531: jump @41 if a2 != 0\n      : @37 (gas: 4)\n  1534: a1 = a1 + a0\n  1537: i32 a1 = a1 + 0x1f\n  1540: a1 = a1 & 0xffffffffffffffe0\n  1543: jump @41 if a1 >u 65536\n      : @38 (gas: 3)\n  1549: a2 = 0x20228\n  1554: a3 = i32 [0x20228]\n  1559: jump @40 if a3 >=u a1\n      : @39 (gas: 2)\n  1562: u32 [0x20228] = a1\n  1567: fallthrough\n      : @40 (gas: 4)\n  1568: a1 = 0x20230\n  1573: i32 a0 = a0 + 0\n  1575: a0 = a0 + a1\n  1578: ret\n      : @41 (gas: 1)\n  1580: trap\n      : @42 (gas: 6)\n  1581: sp = sp + 0xfffffffffffffff0\n  1584: u64 [sp + 0x8] = ra\n  1587: u64 [sp] = s0\n  1589: s0 = a0 & 0x1\n  1592: ecalli 5 // 'call_data_size'\n  1594: fallthrough\n      : @43 (gas: 2)\n  1595: u32 [0x20224] = a0\n  1600: jump @45 if s0 == 0\n      : @44 (gas: 1)\n  1603: ra = 18, jump @46\n      : @45 [@dyn 9] (gas: 1)\n  1607: ra = 20, jump @79\n      : @46 [@dyn 10] (gas: 14)\n  1612: sp = sp + 0xfffffffffffffda0\n  1616: a0 = sp + 0x200\n  1620: u64 [a0 + 0x58] = ra\n  1623: u64 [a0 + 0x50] = s0\n  1626: u64 [a0 + 0x48] = s1\n  1629: s0 = sp + 0x260\n  1633: sp = sp & 0xffffffffffffffe0\n  1636: u64 [sp + 472] = 0\n  1640: u64 [sp + 464] = 0\n  1644: u64 [sp + 456] = 0\n  1648: u64 [sp + 448] = 0\n  1652: i32 a0 = sp + 0x1c0\n  1656: ecalli 19 // 'value_transferred'\n  1658: fallthrough\n      : @47 (gas: 8)\n  1659: a0 = u64 [sp + 0x1d0]\n  1663: a1 = u64 [sp + 0x1d8]\n  1667: a2 = u64 [sp + 0x1c8]\n  1671: a3 = u64 [sp + 0x1c0]\n  1675: a1 = a1 | a2\n  1678: a0 = a0 | a3\n  1681: a0 = a0 | a1\n  1684: jump @65 if a0 != 0\n      : @48 (gas: 15)\n  1688: s1 = i32 [0x20224]\n  1693: a0 = s1 << 0x20\n  1696: a0 = a0 >> 0x20\n  1699: a0 = a0 + 0x1f\n  1702: a0 = a0 & 0xffffffffffffffe0\n  1705: a1 = a0 + 0xa0\n  1709: a0 = a1 <u a0\n  1712: u64 [sp + 0x1a0] = a1\n  1716: u64 [sp + 0x1a8] = a0\n  1720: a0 = 0 if a0 != 0\n  1722: u64 [sp + 0x1b0] = a0\n  1726: a0 = 0x40\n  1729: a1 = sp + 0x1a0\n  1733: u64 [sp + 440] = 0\n  1737: ra = 22, jump @24\n      : @49 [@dyn 11] (gas: 3)\n  1742: a0 = 0xa0\n  1746: a1 = s1\n  1748: ra = 24, jump @36\n      : @50 [@dyn 12] (gas: 5)\n  1753: i32 a0 = a0 + 0\n  1755: a1 = s1\n  1757: a2 = 0\n  1759: ecalli 3 // 'call_data_copy'\n  1761: fallthrough\n      : @51 (gas: 1)\n  1762: jump @66 if s1 <=u 31\n      : @52 (gas: 3)\n  1767: a0 = sp + 0x180\n  1771: a1 = 0xa0\n  1775: ra = 26, jump @22\n      : @53 [@dyn 13] (gas: 11)\n  1780: a2 = u64 [sp + 0x190]\n  1784: a0 = u64 [sp + 0x198]\n  1788: a1 = 0x100000000\n  1798: a1 = a1 ^ a2\n  1801: a1 = a1 | a0\n  1804: u64 [sp + 0x50] = a2\n  1807: a2 = a2 >> 0x20\n  1810: a2 = a2 <u 0x1\n  1813: a2 = 0 if a0 != 0\n  1815: a2 = 0 if a1 == 0\n  1817: jump @67 if a2 == 0\n      : @54 (gas: 9)\n  1821: a0 = u64 [sp + 0x188]\n  1825: u64 [sp + 0x40] = a0\n  1828: a0 = u64 [sp + 0x180]\n  1832: u64 [sp + 0x48] = a0\n  1835: s1 = 0x30230\n  1840: i32 a0 = s1 + 0\n  1842: u64 [sp + 0x58] = a0\n  1845: ecalli 6 // 'caller'\n  1847: fallthrough\n      : @55 (gas: 6)\n  1848: a0 = u32 [0x30240]\n  1853: a1 = u64 [0x30230]\n  1858: a2 = u64 [0x30238]\n  1863: a0 = a0 | a1\n  1866: a0 = a0 | a2\n  1869: jump @68 if a0 == 0\n      : @56 (gas: 13)\n  1873: a0 = 0xffffffff\n  1883: u64 [sp + 0x30] = a0\n  1886: a0 = u64 [sp + 0x50]\n  1889: a0 = a0 << 0x20\n  1892: a0 = a0 >> 0x20\n  1895: u64 [sp + 0x38] = a0\n  1898: u64 [sp + 504] = 0\n  1902: u64 [sp + 496] = 0\n  1906: u64 [sp + 488] = 0\n  1910: u64 [sp + 480] = 0\n  1914: a0 = sp + 0x160\n  1918: a1 = sp + 0x1e0\n  1922: ra = 28, jump @26\n      : @57 [@dyn 14] (gas: 12)\n  1927: a0 = u64 [sp + 0x168]\n  1931: u64 [sp + 0x10] = a0\n  1934: a0 = u64 [sp + 0x160]\n  1938: u64 [sp + 0x8] = a0\n  1941: a0 = u64 [sp + 0x178]\n  1945: u64 [sp + 0x28] = a0\n  1948: a0 = u64 [sp + 0x170]\n  1952: u64 [sp + 0x50] = a0\n  1955: a0 = u64 [sp + 0x58]\n  1958: ra = 0x1e\n  1961: ecalli 6 // 'caller'\n  1963: fallthrough\n      : @58 [@dyn 15] (gas: 4)\n  1964: a0 = u64 [s1 + 0x8]\n  1967: a1 = i32 [s1 + 0x10]\n  1970: a2 = u64 [s1]\n  1972: t0 = 32, jump @1787\n      : @59 [@dyn 16] (gas: 22)\n  1978: a0 = a0 >> 0x20\n  1981: a2 = reverse a2\n  1983: a3 = a2 << 0x20\n  1986: a0 = a0 | a3\n  1989: a2 = a2 >> 0x20\n  1992: a3 = u64 [sp + 0x50]\n  1995: a3 = a3 >> 0x20\n  1998: a3 = a3 << 0x20\n  2001: a2 = a2 | a3\n  2004: a4 = sp + 0x200\n  2008: u64 [a4 + 24] = 0\n  2011: u64 [a4 + 16] = 0\n  2014: u64 [a4 + 8] = 0\n  2017: u64 [a4 + 0] = 0\n  2019: a3 = u64 [sp + 0x28]\n  2022: u64 [a4 + 0x38] = a3\n  2025: u64 [a4 + 0x30] = a2\n  2028: u64 [a4 + 0x28] = a0\n  2031: u64 [a4 + 0x20] = a1\n  2034: a0 = sp + 0x200\n  2038: a1 = sp + 0x220\n  2042: ra = 34, jump @28\n      : @60 [@dyn 17] (gas: 3)\n  2047: a0 = sp + 0x140\n  2051: a1 = 0x40\n  2054: ra = 36, jump @22\n      : @61 [@dyn 18] (gas: 53)\n  2059: a0 = u64 [sp + 0x158]\n  2063: u64 [sp + 0x28] = a0\n  2066: a0 = u64 [sp + 0x150]\n  2070: u64 [sp + 0x20] = a0\n  2073: a0 = u64 [sp + 0x148]\n  2077: u64 [sp + 0x18] = a0\n  2080: a0 = u64 [sp + 0x140]\n  2084: u64 [sp] = a0\n  2086: a0 = u64 [sp + 0x58]\n  2089: ecalli 6 // 'caller'\n  2091: a0 = u64 [s1 + 0x8]\n  2094: a1 = i32 [s1 + 0x10]\n  2097: a2 = u64 [s1]\n  2099: a3 = reverse a0\n  2101: a0 = a3 << 0x20\n  2104: a1 = reverse a1\n  2106: a1 = a1 >> 0x20\n  2109: a0 = a0 | a1\n  2112: a3 = a3 >> 0x20\n  2115: a2 = reverse a2\n  2117: a1 = a2 << 0x20\n  2120: a1 = a1 | a3\n  2123: a2 = a2 >> 0x20\n  2126: a3 = u64 [sp + 0x8]\n  2129: a3 = a3 & 0xffffffffffffffff\n  2132: a5 = u64 [sp + 0x10]\n  2135: a4 = a5 & 0xffffffffffffffff\n  2138: a5 = u64 [sp + 0x30]\n  2141: s1 = u64 [sp + 0x50]\n  2144: a5 = a5 & s1\n  2147: u64 [sp + 248] = 0\n  2151: u64 [sp + 280] = 0\n  2155: u64 [sp + 0x110] = a5\n  2159: u64 [sp + 0x108] = a4\n  2163: u64 [sp + 0x100] = a3\n  2167: a3 = u64 [0x20000]\n  2172: a4 = u64 [0x20008]\n  2177: a5 = u64 [0x20010]\n  2182: s1 = u64 [0x20018]\n  2187: u64 [sp + 0x138] = a3\n  2191: u64 [sp + 0x130] = a4\n  2195: u64 [sp + 0x128] = a5\n  2199: u64 [sp + 0x120] = s1\n  2203: s1 = u64 [sp]\n  2205: u64 [sp + 0xf0] = a2\n  2209: u64 [sp + 0xe8] = a1\n  2213: a2 = sp + 0x120\n  2217: a3 = sp + 0x100\n  2221: a4 = sp + 0xe0\n  2225: u64 [sp + 0xe0] = a0\n  2229: a0 = 0\n  2231: a1 = 0\n  2233: ra = 38, jump @31\n      : @62 [@dyn 19] (gas: 10)\n  2238: u64 [sp + 216] = 0\n  2242: a0 = u64 [sp + 0x38]\n  2245: u64 [sp + 0xd0] = a0\n  2249: a0 = u64 [sp + 0x40]\n  2252: u64 [sp + 0xc8] = a0\n  2256: a0 = 0x80\n  2260: a1 = sp + 0xc0\n  2264: a2 = u64 [sp + 0x48]\n  2267: u64 [sp + 0xc0] = a2\n  2271: ra = 40, jump @24\n      : @63 [@dyn 20] (gas: 11)\n  2276: a0 = u64 [sp + 0x28]\n  2279: a1 = u64 [sp + 0x18]\n  2282: a0 = a0 | a1\n  2285: a2 = u64 [sp + 0x20]\n  2288: a1 = s1 | a2\n  2291: a1 = a1 | a0\n  2294: a1 = a1 >> 0x20\n  2297: a0 = a0 | a2\n  2300: a0 = a0 << 0x20\n  2303: a0 = a0 | a1\n  2306: jump @73 if a0 == 0\n      : @64 (gas: 1)\n  2310: trap\n      : @65 (gas: 4)\n  2311: a1 = 0x20230\n  2316: i32 a1 = a1 + 0\n  2318: a0 = 0x1\n  2321: jump @78\n      : @66 (gas: 4)\n  2324: a1 = 0x20230\n  2329: i32 a1 = a1 + 0\n  2331: a0 = 0x1\n  2334: jump @78\n      : @67 (gas: 5)\n  2337: a1 = 0x20230\n  2342: i32 a1 = a1 + 0\n  2344: a0 = 0x1\n  2347: ecalli 16 // 'seal_return'\n  2349: fallthrough\n      : @68 (gas: 8)\n  2350: u64 [sp + 144] = 0\n  2354: u64 [sp + 136] = 0\n  2358: u64 [sp + 128] = 0\n  2362: a0 = 0x1e4fbdf700000000\n  2372: a1 = sp + 0x80\n  2376: u64 [sp + 0x98] = a0\n  2380: a0 = 0\n  2382: ra = 42, jump @24\n      : @69 [@dyn 21] (gas: 7)\n  2387: u64 [sp + 120] = 0\n  2390: u64 [sp + 112] = 0\n  2393: u64 [sp + 104] = 0\n  2396: a0 = 0x4\n  2399: a1 = sp + 0x60\n  2402: u64 [sp + 96] = 0\n  2405: ra = 44, jump @24\n      : @70 [@dyn 22] (gas: 2)\n  2410: a1 = i32 [0x20228]\n  2415: jump @72 if a1 >u 63\n      : @71 (gas: 2)\n  2419: u32 [0x20228] = 0x40\n  2425: fallthrough\n      : @72 (gas: 6)\n  2426: a1 = 0x20230\n  2431: i32 a1 = a1 + 0\n  2433: a0 = 0x1\n  2436: a2 = 0x24\n  2439: ecalli 16 // 'seal_return'\n  2441: fallthrough\n      : @73 (gas: 3)\n  2442: a0 = s1\n  2444: a1 = 0\n  2446: ra = 46, jump @36\n      : @74 [@dyn 23] (gas: 7)\n  2451: i32 a0 = a0 + 0\n  2453: a1 = 0\n  2455: a2 = 0\n  2457: ecalli 3 // 'call_data_copy'\n  2459: a0 = sp + 0xa0\n  2463: a1 = 0x80\n  2467: ra = 48, jump @22\n      : @75 [@dyn 24] (gas: 9)\n  2472: a0 = u64 [sp + 0xb8]\n  2476: a2 = u64 [sp + 0xb0]\n  2480: a3 = u64 [sp + 0xa8]\n  2484: a4 = u64 [sp + 0xa0]\n  2488: u64 [0x30268] = a0\n  2493: u64 [0x30260] = a2\n  2498: u64 [0x30258] = a3\n  2503: u64 [0x30250] = a4\n  2508: jump @20\n      : @76 (gas: 3)\n  2511: a0 = s1\n  2513: a1 = 0\n  2515: ra = 50, jump @36\n      : @77 [@dyn 25] (gas: 6)\n  2520: i32 a1 = a0 + 0\n  2522: a0 = 0\n  2524: a2 = 0\n  2526: ra = 0x34\n  2529: ecalli 16 // 'seal_return'\n  2531: jump @79\n      : @78 (gas: 4)\n  2533: a2 = 0\n  2535: ra = 0x34\n  2538: ecalli 16 // 'seal_return'\n  2540: fallthrough\n      : @79 [@dyn 26] (gas: 16)\n  2541: sp = sp + 0xfffffffffffffe10\n  2545: u64 [sp + 0x1e8] = ra\n  2549: u64 [sp + 0x1e0] = s0\n  2553: u64 [sp + 0x1d8] = s1\n  2557: s0 = sp + 0x1f0\n  2561: sp = sp + 0xffffffffffffb470\n  2565: sp = sp & 0xffffffffffffffe0\n  2568: s1 = sp\n  2570: a2 = s1 + 0x3998\n  2574: u64 [a2 + 800] = 0\n  2578: u64 [a2 + 792] = 0\n  2582: u64 [a2 + 776] = 0x80\n  2588: a0 = 0x40\n  2591: a1 = s1 + 0x3ca0\n  2595: u64 [a2 + 784] = 0\n  2599: ra = 54, jump @24\n      : @80 [@dyn 27] (gas: 4)\n  2604: a0 = 0x20224\n  2609: u64 [s1 + 0x218] = a0\n  2613: a0 = i32 [0x20224]\n  2618: jump @82 if a0 >=u 4\n      : @81 (gas: 1)\n  2622: jump @1409\n      : @82 (gas: 6)\n  2626: a0 = s1 + 0x4000\n  2630: i32 a0 = a0 + 0xfffffffffffffcc0\n  2634: a1 = 0\n  2636: ra = 0x38\n  2639: ecalli 4 // 'call_data_load'\n  2641: fallthrough\n      : @83 [@dyn 28] (gas: 3)\n  2642: a3 = s1 + 0x3998\n  2646: a0 = i32 [a3 + 0x344]\n  2650: jump @85 if a0 != 2215035001\n      : @84 (gas: 1)\n  2657: jump @432\n      : @85 (gas: 1)\n  2660: jump @209 if a0 == 2335564110\n      : @86 (gas: 2)\n  2668: a2 = s1 + 0x4998\n  2672: jump @133 if a0 == 2376452955\n      : @87 (gas: 1)\n  2680: jump @89 if a0 != 3187147829\n      : @88 (gas: 1)\n  2687: jump @515\n      : @89 (gas: 1)\n  2690: jump @91 if a0 != 3233198974\n      : @90 (gas: 1)\n  2697: jump @246\n      : @91 (gas: 1)\n  2700: jump @93 if a0 != 3852906767\n      : @92 (gas: 1)\n  2707: jump @567\n      : @93 (gas: 2)\n  2710: a2 = s1 + 0x4198\n  2714: jump @95 if a0 != 220507118\n      : @94 (gas: 1)\n  2721: jump @326\n      : @95 (gas: 1)\n  2724: jump @97 if a0 != 1188869209\n      : @96 (gas: 1)\n  2731: jump @446\n      : @97 (gas: 1)\n  2734: jump @99 if a0 != 1206104376\n      : @98 (gas: 1)\n  2741: jump @393\n      : @99 (gas: 1)\n  2744: jump @145 if a0 == 1447021539\n      : @100 (gas: 1)\n  2752: jump @102 if a0 != 1461804294\n      : @101 (gas: 1)\n  2759: jump @314\n      : @102 (gas: 1)\n  2762: jump @104 if a0 != 1676912443\n      : @103 (gas: 1)\n  2769: jump @269\n      : @104 (gas: 1)\n  2772: jump @106 if a0 == 1699277244\n      : @105 (gas: 1)\n  2779: jump @369\n      : @106 (gas: 9)\n  2782: u64 [a2 + 1728] = 0\n  2786: u64 [a2 + 1720] = 0\n  2790: u64 [a2 + 1712] = 0\n  2794: u64 [a2 + 1704] = 0\n  2798: a0 = s1 + 0x5000\n  2802: i32 a0 = a0 + 0xfffffffffffff840\n  2806: ra = 0x3a\n  2809: ecalli 19 // 'value_transferred'\n  2811: fallthrough\n      : @107 [@dyn 29] (gas: 10)\n  2812: a3 = s1 + 0x4198\n  2816: a4 = a3 + 0x600\n  2820: a0 = u64 [a4 + 0xb8]\n  2824: a1 = u64 [a4 + 0xc0]\n  2828: a2 = u64 [a4 + 0xb0]\n  2832: a3 = u64 [a4 + 0xa8]\n  2836: a1 = a1 | a2\n  2839: a0 = a0 | a3\n  2842: a0 = a0 | a1\n  2845: jump @109 if a0 == 0\n      : @108 (gas: 1)\n  2848: jump @1303\n      : @109 (gas: 1)\n  2852: t0 = 60, jump @1782\n      : @110 [@dyn 30] (gas: 1)\n  2858: jump @112 if a1 <u a0\n      : @111 (gas: 1)\n  2861: jump @1304\n      : @112 (gas: 2)\n  2865: a0 = s1 + 0x2ac0\n  2869: ra = 62, jump @1544\n      : @113 [@dyn 31] (gas: 8)\n  2875: a0 = s1 + 0x2998\n  2879: a1 = u64 [a0 + 0x130]\n  2883: u64 [s1 + 0x210] = a1\n  2887: a1 = u64 [a0 + 0x128]\n  2891: u64 [s1 + 0x218] = a1\n  2895: a0 = u32 [a0 + 0x138]\n  2899: u64 [s1 + 0x208] = a0\n  2903: ra = 64, jump @1680\n      : @114 [@dyn 32] (gas: 7)\n  2909: a2 = s1 + 0x200\n  2913: a0 = u64 [a2 + 0x18]\n  2916: a1 = u64 [a2 + 0x8]\n  2919: a0 = a0 | a1\n  2922: a1 = u64 [a2 + 0x10]\n  2925: a0 = a0 | a1\n  2928: jump @116 if a0 == 0\n      : @115 (gas: 1)\n  2931: jump @1305\n      : @116 (gas: 3)\n  2935: a0 = s1 + 0x2a20\n  2939: a1 = 0x40\n  2942: ra = 66, jump @22\n      : @117 [@dyn 33] (gas: 13)\n  2947: a3 = s1 + 0x2998\n  2951: t0 = u64 [a3 + 0xa0]\n  2955: a5 = u64 [a3 + 0x98]\n  2959: a4 = u64 [a3 + 0x90]\n  2963: a0 = u64 [a3 + 0x88]\n  2967: a2 = a4 | t0\n  2970: a1 = a0 | a5\n  2973: a1 = a1 | a2\n  2976: a1 = a1 >> 0x20\n  2979: a2 = a2 | a5\n  2982: a2 = a2 << 0x20\n  2985: a1 = a1 | a2\n  2988: jump @119 if a1 == 0\n      : @118 (gas: 1)\n  2991: jump @576\n      : @119 (gas: 12)\n  2994: a2 = a3\n  2996: u64 [a3 + 120] = 0\n  2999: u64 [a3 + 112] = 0\n  3002: u64 [a3 + 104] = 0\n  3005: a3 = 0x8c379a000000000\n  3015: a1 = s1 + 0x2a00\n  3019: u64 [a2 + 0x80] = a3\n  3023: u64 [s1 + 0x218] = a0\n  3027: u64 [s1 + 0x210] = a4\n  3031: u64 [s1 + 0x200] = t0\n  3035: u64 [s1 + 0x208] = a5\n  3039: ra = 68, jump @24\n      : @120 [@dyn 34] (gas: 1)\n  3044: t0 = 70, jump @1726\n      : @121 [@dyn 35] (gas: 1)\n  3050: jump @123 if a0 != 0\n      : @122 (gas: 1)\n  3053: jump @576\n      : @123 (gas: 1)\n  3056: t0 = 72, jump @1800\n      : @124 [@dyn 36] (gas: 9)\n  3062: a5 = 0\n  3064: u64 [a2 + 96] = 0\n  3067: u64 [a2 + 88] = 0\n  3070: u64 [a2 + 72] = 0x20\n  3074: a1 = s1 + 0x29e0\n  3078: u64 [a2 + 80] = 0\n  3081: u64 [s1 + 0x208] = a3\n  3085: u64 [s1 + 0x200] = a4\n  3089: ra = 74, jump @24\n      : @125 [@dyn 37] (gas: 1)\n  3094: t0 = 76, jump @1729\n      : @126 [@dyn 38] (gas: 1)\n  3100: jump @128 if a0 != 0\n      : @127 (gas: 1)\n  3103: jump @576\n      : @128 (gas: 8)\n  3106: i32 a0 = a1 + 0x24\n  3109: a3 = s1 + 0x2998\n  3113: u64 [a3 + 64] = 0\n  3116: u64 [a3 + 56] = 0\n  3119: u64 [a3 + 40] = 0x17\n  3123: a1 = s1 + 0x29c0\n  3127: u64 [a3 + 48] = 0\n  3130: ra = 78, jump @24\n      : @129 [@dyn 39] (gas: 1)\n  3135: t0 = 80, jump @1727\n      : @130 [@dyn 40] (gas: 1)\n  3141: jump @132 if a0 != 0\n      : @131 (gas: 1)\n  3144: jump @576\n      : @132 (gas: 12)\n  3147: i32 a0 = a3 + 0x44\n  3150: a1 = u64 [0x200f0]\n  3155: a2 = u64 [0x200f8]\n  3160: a3 = u64 [0x20100]\n  3165: a4 = s1 + 0x2998\n  3169: u64 [a4 + 0x20] = a1\n  3172: u64 [a4 + 0x18] = a2\n  3175: u64 [a4 + 0x10] = a3\n  3178: a1 = s1 + 0x29a0\n  3182: u64 [a4 + 8] = 0\n  3185: ra = 0x50c\n  3189: jump @24\n      : @133 (gas: 8)\n  3192: u64 [a2 + 480] = 0\n  3196: u64 [a2 + 472] = 0\n  3200: u64 [a2 + 464] = 0\n  3204: u64 [a2 + 456] = 0\n  3208: a0 = s1 + 0x5000\n  3212: i32 a0 = a0 + 0xfffffffffffffb60\n  3216: ecalli 19 // 'value_transferred'\n  3218: fallthrough\n      : @134 (gas: 10)\n  3219: a4 = s1 + 0x4998\n  3223: a5 = a4 + 0x100\n  3227: a0 = u64 [a5 + 0xd8]\n  3231: a1 = u64 [a5 + 0xe0]\n  3235: a2 = u64 [a5 + 0xd0]\n  3239: a3 = u64 [a5 + 0xc8]\n  3243: a1 = a1 | a2\n  3246: a0 = a0 | a3\n  3249: a0 = a0 | a1\n  3252: jump @136 if a0 == 0\n      : @135 (gas: 1)\n  3255: jump @1310\n      : @136 (gas: 3)\n  3259: a0 = u64 [s1 + 0x218]\n  3263: a0 = i32 [a0]\n  3265: jump @138 if a0 >u 3\n      : @137 (gas: 1)\n  3269: jump @1311\n      : @138 (gas: 7)\n  3273: u64 [a4 + 512] = 0\n  3277: u64 [a4 + 504] = 0\n  3281: u64 [a4 + 496] = 0\n  3285: u64 [a4 + 488] = 0\n  3289: a0 = s1 + 0x37c0\n  3293: a1 = s1 + 0x4b80\n  3297: ra = 82, jump @26\n      : @139 [@dyn 41] (gas: 3)\n  3302: t0 = 0x54\n  3305: a1 = s1 + 0x3198\n  3309: fallthrough\n      : @140 [@dyn 42] (gas: 11)\n  3310: a2 = a1 + 0x600\n  3314: a0 = u64 [a2 + 0x38]\n  3317: a1 = s1 + 0x200\n  3321: u64 [a1 + 0x8] = a0\n  3324: a0 = u64 [a2 + 0x30]\n  3327: u64 [a1 + 0x18] = a0\n  3330: a0 = u64 [a2 + 0x28]\n  3333: u64 [a1 + 0x10] = a0\n  3336: a0 = s1 + 0x37a0\n  3340: a1 = 0x40\n  3343: ra = 86, jump @22\n      : @141 [@dyn 43] (gas: 7)\n  3348: a3 = s1 + 0x3198\n  3352: a5 = a3 + 0x600\n  3356: a4 = u64 [a5 + 0x20]\n  3359: a1 = u64 [a5 + 0x18]\n  3362: a2 = u64 [a5 + 0x10]\n  3365: a0 = u64 [a5 + 0x8]\n  3368: t0 = 88, jump @1791\n      : @142 [@dyn 44] (gas: 1)\n  3374: jump @144 if a1 == 0\n      : @143 (gas: 1)\n  3377: jump @576\n      : @144 (gas: 15)\n  3380: a4 = s1 + 0x200\n  3384: a1 = u64 [a4 + 0x8]\n  3387: a1 = a1 << 0x20\n  3390: a2 = a1 >> 0x20\n  3393: u64 [a3 + 1536] = 0\n  3397: a1 = u64 [a4 + 0x10]\n  3400: a5 = a3 + 0x500\n  3404: u64 [a5 + 0xe8] = a1\n  3408: a1 = u64 [a4 + 0x18]\n  3411: u64 [a5 + 0xf0] = a1\n  3415: a1 = s1 + 0x3780\n  3419: u64 [a5 + 0xf8] = a2\n  3423: u64 [s1 + 0x218] = a0\n  3427: ra = 0x178\n  3431: jump @24\n      : @145 (gas: 10)\n  3434: u64 [a2 + 800] = 0\n  3438: u64 [a2 + 792] = 0\n  3442: u64 [a2 + 784] = 0\n  3446: u64 [a2 + 776] = 0\n  3450: a0 = s1 + 0x4000\n  3454: i32 a0 = a0 + 0x4a0\n  3458: ra = 0x5a\n  3461: ecalli 19 // 'value_transferred'\n  3463: t0 = 0x5c\n  3466: jump @1785\n      : @146 [@dyn 45] (gas: 1)\n  3470: t0 = 92, jump @1785\n      : @147 [@dyn 46] (gas: 1)\n  3476: t0 = 94, jump @1811\n      : @148 [@dyn 47] (gas: 1)\n  3482: jump @150 if a0 == 0\n      : @149 (gas: 1)\n  3485: jump @1312\n      : @150 (gas: 1)\n  3489: t0 = 96, jump @1782\n      : @151 [@dyn 48] (gas: 1)\n  3495: jump @153 if a1 <u a0\n      : @152 (gas: 1)\n  3498: jump @1313\n      : @153 (gas: 7)\n  3502: a0 = s1 + 0x4000\n  3506: i32 a0 = a0 + 0x4c0\n  3510: a1 = 0x4\n  3513: ra = 0x62\n  3516: ecalli 4 // 'call_data_load'\n  3518: t0 = 0x64\n  3521: jump @1785\n      : @154 [@dyn 49] (gas: 1)\n  3525: t0 = 100, jump @1785\n      : @155 [@dyn 50] (gas: 13)\n  3531: a0 = u64 [a4 + 0x28]\n  3534: a1 = u64 [a4 + 0x30]\n  3537: a2 = u64 [a4 + 0x38]\n  3540: a3 = u64 [a4 + 0x40]\n  3543: a4 = s1 + 0x1998\n  3547: a5 = a4 + 0x400\n  3551: u64 [a5 + 0x40] = a3\n  3554: u64 [a5 + 0x38] = a2\n  3557: u64 [a5 + 0x30] = a1\n  3560: a1 = s1 + 0x1dc0\n  3564: u64 [a5 + 0x28] = a0\n  3567: a0 = 0\n  3569: ra = 102, jump @24\n      : @156 [@dyn 51] (gas: 3)\n  3574: t0 = 0x68\n  3577: a1 = s1 + 0x1998\n  3581: fallthrough\n      : @157 [@dyn 52] (gas: 8)\n  3582: u64 [a1 + 1056] = 0\n  3586: u64 [a1 + 1048] = 0\n  3590: u64 [a1 + 1032] = 0x1\n  3595: a2 = a1\n  3597: a0 = 0x20\n  3600: a1 = s1 + 0x1da0\n  3604: u64 [a2 + 1040] = 0\n  3608: ra = 106, jump @24\n      : @158 [@dyn 53] (gas: 8)\n  3613: a0 = sp + 0xffffffffffffffe0\n  3616: a0 = a0 & 0xffffffffffffffe0\n  3619: u64 [s1 + 0x1f8] = a0\n  3623: sp = a0\n  3625: a2 = 0x20228\n  3630: a0 = i32 [0x20228]\n  3635: a1 = 0x3f\n  3638: jump @160 if a1 <u a0\n      : @159 (gas: 4)\n  3641: u32 [0x20228] = 0x40\n  3647: u64 [s1 + 0x138] = a2\n  3651: t0 = 0x6c\n  3654: jump @1756\n      : @160 (gas: 2)\n  3658: u64 [s1 + 0x138] = a2\n  3662: t0 = 108, jump @1756\n      : @161 [@dyn 54] (gas: 9)\n  3668: a0 = 0x20230\n  3673: i32 a0 = a0 + 0\n  3675: i32 a2 = a2 + 0\n  3677: a1 = 0x40\n  3680: u64 [s1 + 0x130] = a0\n  3684: ra = 0x6e\n  3687: ecalli 11 // 'hash_keccak_256'\n  3689: t0 = 0x70\n  3692: jump @1769\n      : @162 [@dyn 55] (gas: 1)\n  3696: t0 = 112, jump @1769\n      : @163 [@dyn 56] (gas: 9)\n  3702: a0 = reverse a3\n  3704: u64 [s1 + 0x218] = a0\n  3708: a1 = u64 [s1 + 0x1f8]\n  3712: u64 [a1 + 0x18] = a0\n  3715: u64 [a1 + 0x10] = a2\n  3718: u64 [a1 + 0x8] = a4\n  3721: u64 [a1] = a5\n  3723: a0 = s1 + 0x1d80\n  3727: ra = 114, jump @26\n      : @164 [@dyn 57] (gas: 3)\n  3732: a5 = s1 + 0x1998\n  3736: a0 = u8 [a5 + 0x3e8]\n  3740: t0 = 116, jump @1762\n      : @165 [@dyn 58] (gas: 10)\n  3746: a4 = u64 [s1 + 0x218]\n  3750: a3 = a3 + a4\n  3753: a4 = a5 + 0x300\n  3757: u64 [a4 + 0xb0] = a1\n  3761: u64 [a4 + 0xa8] = a0\n  3765: u64 [a4 + 0xb8] = a2\n  3769: a0 = s1 + 0x1d60\n  3773: a1 = s1 + 0x1d40\n  3777: u64 [a4 + 0xc0] = a3\n  3781: ra = 118, jump @1504\n      : @166 [@dyn 59] (gas: 13)\n  3787: a1 = s1 + 0x1998\n  3791: a2 = a1 + 0x300\n  3795: a0 = u64 [a2 + 0xe0]\n  3799: u64 [s1 + 0x1d8] = a0\n  3803: a0 = u64 [a2 + 0xd8]\n  3807: u64 [s1 + 0x1e0] = a0\n  3811: a0 = u64 [a2 + 0xd0]\n  3815: u64 [s1 + 0x1e8] = a0\n  3819: a0 = u64 [a2 + 0xc8]\n  3823: u64 [s1 + 0x1f0] = a0\n  3827: a1 = u64 [s1 + 0x208]\n  3831: a0 = a1 + 0x2\n  3834: t0 = 120, jump @1736\n      : @167 [@dyn 60] (gas: 7)\n  3840: u64 [a5 + 0x60] = a1\n  3843: u64 [a5 + 0x58] = a3\n  3846: u64 [a5 + 0x50] = a2\n  3849: u64 [a5 + 0x48] = a0\n  3852: a0 = s1 + 0x1d20\n  3856: a1 = s1 + 0x44e0\n  3860: ra = 122, jump @26\n      : @168 [@dyn 61] (gas: 10)\n  3865: a1 = s1 + 0x1998\n  3869: a0 = u32 [a1 + 0x398]\n  3873: u64 [s1 + 0x1d0] = a0\n  3877: a0 = u64 [a1 + 0x390]\n  3881: u64 [s1 + 0x1c8] = a0\n  3885: a0 = u64 [a1 + 0x388]\n  3889: u64 [s1 + 0x1c0] = a0\n  3893: a1 = u64 [s1 + 0x208]\n  3897: a0 = a1 + 0x3\n  3900: t0 = 124, jump @1736\n      : @169 [@dyn 62] (gas: 7)\n  3906: u64 [a5 + 0x80] = a1\n  3910: u64 [a5 + 0x78] = a3\n  3913: u64 [a5 + 0x70] = a2\n  3916: u64 [a5 + 0x68] = a0\n  3919: a0 = s1 + 0x1d00\n  3923: a1 = s1 + 0x4500\n  3927: ra = 126, jump @26\n      : @170 [@dyn 63] (gas: 29)\n  3932: a4 = s1 + 0x1998\n  3936: a0 = u64 [a4 + 0x380]\n  3940: u64 [s1 + 0x1b8] = a0\n  3944: a0 = u64 [a4 + 0x378]\n  3948: u64 [s1 + 0x1b0] = a0\n  3952: a0 = u64 [a4 + 0x370]\n  3956: u64 [s1 + 0x1a8] = a0\n  3960: a0 = u64 [a4 + 0x368]\n  3964: u64 [s1 + 0x1a0] = a0\n  3968: a0 = u64 [s1 + 0x208]\n  3972: a2 = a0 + 0x4\n  3975: a0 = a2 <u a0\n  3978: a3 = u64 [s1 + 0x210]\n  3982: a1 = a3 + a0\n  3985: a3 = a1 <u a3\n  3988: a3 = a0 if a0 == 0\n  3991: a0 = u64 [s1 + 0x200]\n  3995: a3 = a3 + a0\n  3998: a0 = a3 <u a0\n  4001: a5 = u64 [s1 + 0x218]\n  4005: a0 = a0 + a5\n  4008: a5 = a4 + 0x300\n  4012: u64 [a5 + 0x40] = a0\n  4015: u64 [a5 + 0x38] = a3\n  4018: u64 [a5 + 0x30] = a1\n  4021: a0 = s1 + 0x1ce0\n  4025: a1 = s1 + 0x1cc0\n  4029: u64 [a5 + 0x28] = a2\n  4032: ra = 128, jump @1504\n      : @171 [@dyn 64] (gas: 13)\n  4039: a1 = s1 + 0x1998\n  4043: a2 = a1 + 0x300\n  4047: a0 = u64 [a2 + 0x60]\n  4050: u64 [s1 + 0x180] = a0\n  4054: a0 = u64 [a2 + 0x58]\n  4057: u64 [s1 + 0x188] = a0\n  4061: a0 = u64 [a2 + 0x50]\n  4064: u64 [s1 + 0x190] = a0\n  4068: a0 = u64 [a2 + 0x48]\n  4071: u64 [s1 + 0x198] = a0\n  4075: a1 = u64 [s1 + 0x208]\n  4079: a0 = a1 + 0x5\n  4082: t0 = 130, jump @1736\n      : @172 [@dyn 65] (gas: 7)\n  4089: u64 [a5 + 0xa0] = a1\n  4093: u64 [a5 + 0x98] = a3\n  4097: u64 [a5 + 0x90] = a2\n  4101: u64 [a5 + 0x88] = a0\n  4105: a0 = s1 + 0x1ca0\n  4109: a1 = s1 + 0x4520\n  4113: ra = 132, jump @26\n      : @173 [@dyn 66] (gas: 8)\n  4119: a5 = s1 + 0x1998\n  4123: a0 = u64 [a5 + 0x320]\n  4127: u64 [s1 + 0x178] = a0\n  4131: a0 = u64 [a5 + 0x318]\n  4135: u64 [s1 + 0x170] = a0\n  4139: a1 = u64 [s1 + 0x208]\n  4143: a0 = a1 + 0x6\n  4146: t0 = 134, jump @1754\n      : @174 [@dyn 67] (gas: 18)\n  4153: a1 = u64 [a5 + 0x310]\n  4157: u64 [s1 + 0x168] = a1\n  4161: a1 = u64 [s1 + 0x200]\n  4165: a3 = a3 + a1\n  4168: a1 = a3 <u a1\n  4171: a4 = u64 [s1 + 0x218]\n  4175: a1 = a1 + a4\n  4178: a4 = u64 [a5 + 0x308]\n  4182: u64 [s1 + 0x160] = a4\n  4186: a4 = s1 + 0x4198\n  4190: a5 = a4 + 0x300\n  4194: u64 [a5 + 0xc0] = a1\n  4198: u64 [a5 + 0xb8] = a3\n  4202: u64 [a5 + 0xb0] = a2\n  4206: u64 [a5 + 0xa8] = a0\n  4210: a0 = s1 + 0x1c80\n  4214: a1 = s1 + 0x4540\n  4218: ra = 136, jump @26\n      : @175 [@dyn 68] (gas: 3)\n  4224: t0 = 0x8a\n  4228: a1 = s1 + 0x1998\n  4232: fallthrough\n      : @176 [@dyn 69] (gas: 13)\n  4233: a0 = u64 [a1 + 0x300]\n  4237: a2 = s1 + 0x100\n  4241: u64 [a2 + 0x58] = a0\n  4244: a3 = a1 + 0x200\n  4248: a0 = u64 [a3 + 0xf8]\n  4252: u64 [a2 + 0x50] = a0\n  4255: a0 = u64 [a3 + 0xf0]\n  4259: u64 [a2 + 0x48] = a0\n  4262: a0 = u64 [a3 + 0xe8]\n  4266: u64 [a2 + 0x40] = a0\n  4269: a0 = s1 + 0x1c60\n  4273: a1 = 0x40\n  4276: ra = 140, jump @22\n      : @177 [@dyn 70] (gas: 2)\n  4282: t0 = u64 [s1 + 0x1f8]\n  4286: jump @179 if t0 <=u 3\n      : @178 (gas: 1)\n  4290: jump @1314\n      : @179 (gas: 15)\n  4294: a5 = s1 + 0x1998\n  4298: a2 = a5 + 0x200\n  4302: a3 = u64 [a2 + 0xe0]\n  4306: a4 = u64 [a2 + 0xd8]\n  4310: a0 = u64 [a2 + 0xc8]\n  4314: a1 = u64 [a2 + 0xd0]\n  4318: a2 = a0 | a4\n  4321: u64 [s1 + 0x218] = a1\n  4325: a1 = a1 | a3\n  4328: a2 = a2 | a1\n  4331: a2 = a2 >> 0x20\n  4334: a1 = a1 | a4\n  4337: a1 = a1 << 0x20\n  4340: a1 = a1 | a2\n  4343: jump @181 if a1 == 0\n      : @180 (gas: 1)\n  4346: jump @576\n      : @181 (gas: 9)\n  4349: u64 [a5 + 704] = 0\n  4353: u64 [a5 + 696] = 0\n  4357: u64 [a5 + 688] = 0\n  4361: a1 = s1 + 0x1c40\n  4365: u64 [a5 + 0x2a8] = t0\n  4369: u64 [s1 + 0x210] = a0\n  4373: u64 [s1 + 0x208] = a3\n  4377: u64 [s1 + 0x200] = a4\n  4381: ra = 142, jump @24\n      : @182 [@dyn 71] (gas: 11)\n  4387: t0 = u64 [s1 + 0x200]\n  4391: a3 = u64 [s1 + 0x208]\n  4395: a1 = u64 [s1 + 0x210]\n  4399: a5 = t0 | a3\n  4402: a4 = 0x100000000\n  4412: a0 = 0xffffffe0\n  4422: a0 = a1 <u a0\n  4425: a2 = u64 [s1 + 0x218]\n  4429: a0 = 0 if a2 != 0\n  4431: a0 = 0 if a5 != 0\n  4433: jump @184 if a0 != 0\n      : @183 (gas: 1)\n  4436: jump @576\n      : @184 (gas: 10)\n  4439: i32 a0 = a1 + 0x20\n  4442: a2 = s1 + 0x1998\n  4446: u64 [a2 + 672] = 0\n  4450: u64 [a2 + 664] = 0\n  4454: u64 [a2 + 648] = 0xe0\n  4460: a1 = s1 + 0x1c20\n  4464: u64 [a2 + 656] = 0\n  4468: u64 [s1 + 0x1f8] = a5\n  4472: u64 [s1 + 0x138] = a4\n  4476: ra = 144, jump @24\n      : @185 [@dyn 72] (gas: 32)\n  4482: a0 = u64 [s1 + 0x210]\n  4486: a0 = a0 + 0xe0\n  4490: a1 = u64 [s1 + 0x210]\n  4494: a1 = a0 <u a1\n  4497: a3 = u64 [s1 + 0x218]\n  4501: a2 = a3 + a1\n  4504: a3 = a2 <u a3\n  4507: a3 = a1 if a1 == 0\n  4510: a1 = u64 [s1 + 0x200]\n  4514: a3 = a3 + a1\n  4517: a1 = a3 <u a1\n  4520: a4 = u64 [s1 + 0x208]\n  4524: a4 = a4 + a1\n  4527: a1 = s1 + 0x1998\n  4531: a5 = a1 + 0x200\n  4535: u64 [a5 + 0x30] = a2\n  4538: u64 [a5 + 0x28] = a0\n  4541: a0 = u64 [s1 + 0x1d8]\n  4545: u64 [a5 + 0x60] = a0\n  4548: a0 = u64 [s1 + 0x1e0]\n  4552: u64 [a5 + 0x58] = a0\n  4555: a0 = u64 [s1 + 0x1e8]\n  4559: u64 [a5 + 0x50] = a0\n  4562: a0 = u64 [s1 + 0x1f0]\n  4566: u64 [a5 + 0x48] = a0\n  4569: u64 [a5 + 0x38] = a3\n  4572: a3 = a1\n  4574: a0 = s1 + 0x1c00\n  4578: a1 = s1 + 0x1be0\n  4582: a2 = s1 + 0x1bc0\n  4586: u64 [a3 + 0x240] = a4\n  4590: ra = 146, jump @1527\n      : @186 [@dyn 73] (gas: 4)\n  4597: a1 = u64 [s1 + 0x210]\n  4601: a0 = u64 [s1 + 0x138]\n  4605: a0 = a0 + 0xffffffffffffffc0\n  4608: t0 = 148, jump @1750\n      : @187 [@dyn 74] (gas: 1)\n  4615: jump @189 if a0 != 0\n      : @188 (gas: 1)\n  4618: jump @576\n      : @189 (gas: 2)\n  4621: a0 = 0x2000\n  4625: t0 = 150, jump @1806\n      : @190 [@dyn 75] (gas: 18)\n  4632: a0 = u64 [a4 + 0x80]\n  4636: u64 [s1 + 0x1d8] = a0\n  4640: a0 = u64 [a4 + 0x78]\n  4643: u64 [s1 + 0x1e0] = a0\n  4647: a0 = u64 [a4 + 0x70]\n  4650: u64 [s1 + 0x1e8] = a0\n  4654: a0 = u64 [a4 + 0x68]\n  4657: u64 [s1 + 0x1f0] = a0\n  4661: i32 a0 = a1 + 0x40\n  4664: u64 [a3 + 544] = 0\n  4668: a1 = u64 [s1 + 0x1c0]\n  4672: u64 [a4 + 0x8] = a1\n  4675: a1 = u64 [s1 + 0x1c8]\n  4679: u64 [a4 + 0x10] = a1\n  4682: a1 = s1 + 0x1ba0\n  4686: a2 = u64 [s1 + 0x1d0]\n  4690: u64 [a4 + 0x18] = a2\n  4693: ra = 152, jump @24\n      : @191 [@dyn 76] (gas: 4)\n  4699: a1 = u64 [s1 + 0x210]\n  4703: a3 = 0x100000000\n  4713: a0 = 0xffffffa0\n  4723: t0 = 154, jump @1750\n      : @192 [@dyn 77] (gas: 1)\n  4730: jump @194 if a0 != 0\n      : @193 (gas: 1)\n  4733: jump @576\n      : @194 (gas: 15)\n  4736: i32 a0 = a1 + 0x60\n  4739: a1 = s1 + 0x1998\n  4743: u64 [s1 + 0x1d0] = a3\n  4747: a3 = a1\n  4749: a1 = u64 [s1 + 0x1a0]\n  4753: a2 = a3 + 0x100\n  4757: u64 [a2 + 0xe8] = a1\n  4761: a1 = u64 [s1 + 0x1a8]\n  4765: u64 [a2 + 0xf0] = a1\n  4769: a1 = u64 [s1 + 0x1b0]\n  4773: u64 [a2 + 0xf8] = a1\n  4777: a1 = s1 + 0x1b80\n  4781: a2 = u64 [s1 + 0x1b8]\n  4785: u64 [a3 + 0x200] = a2\n  4789: ra = 156, jump @24\n      : @195 [@dyn 78] (gas: 4)\n  4795: a1 = u64 [s1 + 0x210]\n  4799: a0 = u64 [s1 + 0x1d0]\n  4803: a0 = a0 + 0xffffffffffffff80\n  4806: t0 = 158, jump @1750\n      : @196 [@dyn 79] (gas: 1)\n  4813: jump @198 if a0 != 0\n      : @197 (gas: 1)\n  4816: jump @576\n      : @198 (gas: 35)\n  4819: a2 = u64 [s1 + 0x1f0]\n  4823: t1 = a2 <u a1\n  4826: t0 = a2\n  4828: a3 = u64 [s1 + 0x218]\n  4832: a4 = u64 [s1 + 0x1e8]\n  4836: a1 = a4 ^ a3\n  4839: a2 = a4 <u a3\n  4842: a0 = a4\n  4844: a5 = a3\n  4846: a2 = t1 if a1 == 0\n  4849: a3 = u64 [s1 + 0x200]\n  4853: a4 = u64 [s1 + 0x1e0]\n  4857: a1 = a4 - a3\n  4860: t2 = a4 <u a3\n  4863: a4 = u64 [s1 + 0x208]\n  4867: a3 = u64 [s1 + 0x1d8]\n  4871: a4 = a3 - a4\n  4874: a4 = a4 - t2\n  4877: a3 = a1 <u a2\n  4880: a4 = a4 - a3\n  4883: a1 = a1 - a2\n  4886: a2 = a0 - a5\n  4889: a2 = a2 - t1\n  4892: a0 = u64 [s1 + 0x210]\n  4896: a3 = t0 - a0\n  4899: a0 = u64 [s1 + 0x210]\n  4903: i32 a0 = a0 + 0x80\n  4907: a5 = s1 + 0x1998\n  4911: u64 [a5 + 0x1c8] = a3\n  4915: a3 = a5 + 0x100\n  4919: u64 [a3 + 0xd0] = a2\n  4923: u64 [a3 + 0xd8] = a1\n  4927: a1 = s1 + 0x1b60\n  4931: u64 [a3 + 0xe0] = a4\n  4935: ra = 160, jump @24\n      : @199 [@dyn 80] (gas: 3)\n  4941: t0 = 0xa2\n  4945: a1 = s1 + 0x1998\n  4949: fallthrough\n      : @200 [@dyn 81] (gas: 22)\n  4950: a0 = u64 [s1 + 0x1d8]\n  4954: a2 = a1 + 0x100\n  4958: u64 [a2 + 0x80] = a0\n  4962: a0 = u64 [s1 + 0x1e0]\n  4966: u64 [a2 + 0x78] = a0\n  4969: a0 = u64 [s1 + 0x1e8]\n  4973: u64 [a2 + 0x70] = a0\n  4976: a0 = u64 [s1 + 0x1f0]\n  4980: u64 [a2 + 0x68] = a0\n  4983: a0 = u64 [s1 + 0x180]\n  4987: u64 [a2 + 0xa0] = a0\n  4991: a0 = u64 [s1 + 0x188]\n  4995: u64 [a2 + 0x98] = a0\n  4999: a0 = u64 [s1 + 0x190]\n  5003: u64 [a2 + 0x90] = a0\n  5007: a4 = a1\n  5009: a0 = s1 + 0x1b40\n  5013: a1 = s1 + 0x1b20\n  5017: a2 = s1 + 0x1b00\n  5021: a3 = u64 [s1 + 0x198]\n  5025: u64 [a4 + 0x188] = a3\n  5029: ra = 164, jump @1527\n      : @201 [@dyn 82] (gas: 9)\n  5036: a4 = u64 [s1 + 0x1f8]\n  5040: a1 = u64 [s1 + 0x210]\n  5044: a3 = 0x100000000\n  5054: a0 = 0xffffff60\n  5064: a0 = a1 <u a0\n  5067: a2 = u64 [s1 + 0x218]\n  5071: a0 = 0 if a2 != 0\n  5073: a0 = 0 if a4 != 0\n  5075: jump @203 if a0 != 0\n      : @202 (gas: 1)\n  5078: jump @576\n      : @203 (gas: 23)\n  5081: a0 = s1 + 0x1998\n  5085: u64 [s1 + 0x1f0] = a3\n  5089: a3 = a0\n  5091: a0 = u64 [a0 + 0x1c0]\n  5095: u64 [s1 + 0x1d8] = a0\n  5099: a4 = a3 + 0x100\n  5103: a0 = u64 [a4 + 0xb8]\n  5107: u64 [s1 + 0x1d0] = a0\n  5111: a0 = u64 [a4 + 0xb0]\n  5115: u64 [s1 + 0x1e0] = a0\n  5119: a0 = u64 [a4 + 0xa8]\n  5123: u64 [s1 + 0x1e8] = a0\n  5127: i32 a0 = a1 + 0xa0\n  5131: a1 = u64 [s1 + 0x160]\n  5135: u64 [a4 + 0x48] = a1\n  5138: a1 = u64 [s1 + 0x168]\n  5142: u64 [a4 + 0x50] = a1\n  5145: a1 = u64 [s1 + 0x170]\n  5149: u64 [a4 + 0x58] = a1\n  5152: a1 = s1 + 0x1ae0\n  5156: a2 = u64 [s1 + 0x178]\n  5160: u64 [a4 + 0x60] = a2\n  5163: ra = 166, jump @24\n      : @204 [@dyn 83] (gas: 4)\n  5169: a1 = u64 [s1 + 0x210]\n  5173: a0 = u64 [s1 + 0x1f0]\n  5177: a0 = a0 + 0xffffffffffffff40\n  5181: t0 = 168, jump @1750\n      : @205 [@dyn 84] (gas: 1)\n  5188: jump @207 if a0 != 0\n      : @206 (gas: 1)\n  5191: jump @576\n      : @207 (gas: 13)\n  5194: i32 a0 = a1 + 0xc0\n  5198: a1 = u64 [s1 + 0x140]\n  5202: a3 = s1 + 0x1998\n  5206: a4 = a3 + 0x100\n  5210: u64 [a4 + 0x28] = a1\n  5213: a1 = u64 [s1 + 0x148]\n  5217: u64 [a4 + 0x30] = a1\n  5220: a1 = u64 [s1 + 0x150]\n  5224: u64 [a4 + 0x38] = a1\n  5227: a1 = s1 + 0x1ac0\n  5231: a2 = u64 [s1 + 0x158]\n  5235: u64 [a4 + 0x40] = a2\n  5238: ra = 170, jump @24\n      : @208 [@dyn 85] (gas: 22)\n  5244: a0 = u64 [s1 + 0x210]\n  5248: t1 = u64 [s1 + 0x1e8]\n  5252: t0 = t1 <u a0\n  5255: a5 = u64 [s1 + 0x218]\n  5259: a1 = u64 [s1 + 0x1e0]\n  5263: a0 = a1 ^ a5\n  5266: a2 = a1 <u a5\n  5269: a2 = t0 if a0 == 0\n  5272: a0 = u64 [s1 + 0x200]\n  5276: a3 = u64 [s1 + 0x1d0]\n  5280: t2 = a3 - a0\n  5283: a3 = a3 <u a0\n  5286: a0 = u64 [s1 + 0x208]\n  5290: a4 = u64 [s1 + 0x1d8]\n  5294: a4 = a4 - a0\n  5297: a4 = a4 - a3\n  5300: a3 = t2 <u a2\n  5303: a3 = a4 - a3\n  5306: a0 = u64 [s1 + 0x210]\n  5310: a4 = t2 - a2\n  5313: a2 = a1 - a5\n  5316: jump @512\n      : @209 (gas: 10)\n  5319: a0 = s1 + 0x4998\n  5323: u64 [a0 + 96] = 0\n  5326: u64 [a0 + 88] = 0\n  5329: u64 [a0 + 80] = 0\n  5332: u64 [a0 + 72] = 0\n  5335: a0 = s1 + 0x5000\n  5339: i32 a0 = a0 + 0xfffffffffffff9e0\n  5343: ra = 0xac\n  5347: ecalli 19 // 'value_transferred'\n  5349: fallthrough\n      : @210 [@dyn 86] (gas: 9)\n  5350: a3 = s1 + 0x4998\n  5354: a0 = u64 [a3 + 0x58]\n  5357: a1 = u64 [a3 + 0x60]\n  5360: a2 = u64 [a3 + 0x50]\n  5363: a3 = u64 [a3 + 0x48]\n  5366: a1 = a1 | a2\n  5369: a0 = a0 | a3\n  5372: a0 = a0 | a1\n  5375: jump @212 if a0 == 0\n      : @211 (gas: 1)\n  5378: jump @1321\n      : @212 (gas: 1)\n  5382: t0 = 174, jump @1782\n      : @213 [@dyn 87] (gas: 1)\n  5389: jump @215 if a1 <u a0\n      : @214 (gas: 1)\n  5392: jump @1322\n      : @215 (gas: 31)\n  5396: a0 = sp + 0xffffffffffffffe0\n  5399: a0 = a0 & 0xffffffffffffffe0\n  5402: u64 [s1 + 0x168] = a0\n  5406: sp = a0\n  5408: a0 = s1 + 0x5000\n  5412: i32 a0 = a0 + 0xfffffffffffffa00\n  5416: a1 = 0x4\n  5419: ecalli 4 // 'call_data_load'\n  5421: a0 = s1 + 0x4998\n  5425: a3 = u64 [a0 + 0x80]\n  5429: a2 = u64 [a0 + 0x78]\n  5432: a1 = u64 [a0 + 0x70]\n  5435: a0 = u64 [a0 + 0x68]\n  5438: a4 = u64 [s1 + 0x168]\n  5442: u64 [a4 + 0x18] = a3\n  5445: u64 [a4 + 0x10] = a2\n  5448: u64 [a4 + 0x8] = a1\n  5451: u64 [a4] = a0\n  5453: u64 [s1 + 0x138] = a3\n  5457: a4 = s1 + 0x3198\n  5461: a5 = a4 + 0x500\n  5465: u64 [a5 + 0xe0] = a3\n  5469: u64 [s1 + 0x140] = a2\n  5473: u64 [a5 + 0xd8] = a2\n  5477: u64 [s1 + 0x148] = a1\n  5481: u64 [a5 + 0xd0] = a1\n  5485: a1 = s1 + 0x3760\n  5489: u64 [s1 + 0x150] = a0\n  5493: u64 [a5 + 0xc8] = a0\n  5497: a0 = 0\n  5499: ra = 176, jump @24\n      : @216 [@dyn 88] (gas: 3)\n  5505: t0 = 0xb2\n  5509: a1 = s1 + 0x3198\n  5513: fallthrough\n      : @217 [@dyn 89] (gas: 8)\n  5514: u64 [a1 + 1472] = 0\n  5518: u64 [a1 + 1464] = 0\n  5522: u64 [a1 + 1448] = 0x1\n  5527: a2 = a1\n  5529: a0 = 0x20\n  5532: a1 = s1 + 0x3740\n  5536: u64 [a2 + 1456] = 0\n  5540: ra = 180, jump @24\n      : @218 [@dyn 90] (gas: 8)\n  5546: a0 = sp + 0xffffffffffffffe0\n  5549: a0 = a0 & 0xffffffffffffffe0\n  5552: u64 [s1 + 0x170] = a0\n  5556: sp = a0\n  5558: a2 = 0x20228\n  5563: a0 = i32 [0x20228]\n  5568: a1 = 0x3f\n  5571: jump @220 if a1 <u a0\n      : @219 (gas: 4)\n  5574: u32 [0x20228] = 0x40\n  5580: u64 [s1 + 0x158] = a2\n  5584: t0 = 0xb6\n  5588: jump @1756\n      : @220 (gas: 2)\n  5592: u64 [s1 + 0x158] = a2\n  5596: t0 = 182, jump @1756\n      : @221 [@dyn 91] (gas: 27)\n  5603: a0 = 0x20230\n  5608: i32 a0 = a0 + 0\n  5610: i32 a2 = a2 + 0\n  5612: a1 = 0x40\n  5615: u64 [s1 + 0x160] = a0\n  5619: ecalli 11 // 'hash_keccak_256'\n  5621: a3 = u64 [s1 + 0x218]\n  5625: a0 = u64 [a3 + 0x18]\n  5628: a1 = u64 [a3 + 0x10]\n  5631: a2 = u64 [a3 + 0x8]\n  5634: a3 = u64 [a3]\n  5636: a5 = reverse a0\n  5638: a4 = reverse a1\n  5640: a0 = reverse a2\n  5642: a2 = reverse a3\n  5644: a3 = s1 + 0x100\n  5648: a1 = u64 [a3 + 0x70]\n  5651: u64 [a3 + 0x88] = a2\n  5655: u64 [a1 + 0x18] = a2\n  5658: u64 [a3 + 0x90] = a0\n  5662: u64 [a1 + 0x10] = a0\n  5665: u64 [a3 + 0x80] = a4\n  5669: u64 [a1 + 0x8] = a4\n  5672: u64 [a3 + 0x78] = a5\n  5675: u64 [a1] = a5\n  5677: a0 = s1 + 0x3720\n  5681: ra = 184, jump @26\n      : @222 [@dyn 92] (gas: 3)\n  5687: a2 = s1 + 0x3198\n  5691: a0 = u8 [a2 + 0x588]\n  5695: jump @224 if a0 <=u 3\n      : @223 (gas: 1)\n  5699: jump @1323\n      : @224 (gas: 9)\n  5703: a0 = a0 <u 0x1\n  5706: u64 [a2 + 1408] = 0\n  5710: u64 [a2 + 1400] = 0\n  5714: u64 [a2 + 0x568] = a0\n  5718: a0 = s1 + 0x3700\n  5722: u64 [a2 + 1392] = 0\n  5726: ra = 0xba\n  5730: t0 = 0x6a6\n  5734: jump @1780\n      : @225 [@dyn 93] (gas: 21)\n  5738: a5 = s1 + 0x100\n  5742: a1 = u64 [a5 + 0x78]\n  5745: a0 = a1 + 0x5\n  5748: a1 = a0 <u a1\n  5751: a3 = u64 [a5 + 0x80]\n  5755: a2 = a3 + a1\n  5758: a3 = a2 <u a3\n  5761: a3 = a1 if a1 == 0\n  5764: a1 = u64 [a5 + 0x90]\n  5768: a3 = a3 + a1\n  5771: a1 = a3 <u a1\n  5774: a4 = u64 [a5 + 0x88]\n  5778: a1 = a1 + a4\n  5781: a4 = s1 + 0x4998\n  5785: u64 [a4 + 0x90] = a2\n  5789: u64 [a4 + 0x88] = a0\n  5793: u64 [a4 + 0x98] = a3\n  5797: u64 [a4 + 0xa0] = a1\n  5801: a0 = s1 + 0x36e0\n  5805: a1 = s1 + 0x4a20\n  5809: ra = 188, jump @26\n      : @226 [@dyn 94] (gas: 14)\n  5815: a0 = s1 + 0x3198\n  5819: a2 = a0 + 0x500\n  5823: a1 = u64 [a2 + 0x48]\n  5826: u64 [s1 + 0x218] = a1\n  5830: a1 = u64 [a2 + 0x50]\n  5833: u64 [s1 + 0x210] = a1\n  5837: a1 = u64 [a2 + 0x58]\n  5840: u64 [s1 + 0x208] = a1\n  5844: a0 = u64 [a2 + 0x60]\n  5847: u64 [s1 + 0x200] = a0\n  5851: a0 = s1 + 0x5000\n  5855: i32 a0 = a0 + 0xfffffffffffffa40\n  5859: ecalli 12 // 'now'\n  5861: fallthrough\n      : @227 (gas: 22)\n  5862: t0 = s1 + 0x4998\n  5866: a1 = t0\n  5868: a0 = u64 [a1 + 0xc0]\n  5872: t1 = u64 [t0 + 0xa8]\n  5876: a2 = u64 [a1 + 0xb8]\n  5880: a3 = u64 [a1 + 0xb0]\n  5884: a1 = u64 [s1 + 0x200]\n  5888: a4 = a0 ^ a1\n  5891: a1 = a0 <u a1\n  5894: a0 = u64 [s1 + 0x208]\n  5898: a5 = a2 <u a0\n  5901: a5 = a1 if a4 != 0\n  5904: a1 = u64 [s1 + 0x210]\n  5908: t2 = a3 ^ a1\n  5911: a3 = a3 <u a1\n  5914: a1 = u64 [s1 + 0x218]\n  5918: a1 = t1 <u a1\n  5921: a1 = a3 if t2 != 0\n  5924: a0 = a0 ^ a2\n  5927: a0 = a0 | a4\n  5930: a1 = a5 if a0 != 0\n  5933: jump @229 if a1 != 0\n      : @228 (gas: 1)\n  5936: jump @577\n      : @229 (gas: 3)\n  5939: a0 = s1 + 0x2d20\n  5943: a1 = 0x40\n  5946: ra = 190, jump @22\n      : @230 [@dyn 95] (gas: 14)\n  5952: a2 = s1 + 0x2998\n  5956: t0 = u64 [a2 + 0x3a0]\n  5960: a1 = a2 + 0x300\n  5964: a5 = u64 [a1 + 0x98]\n  5968: a4 = u64 [a1 + 0x90]\n  5972: a0 = u64 [a1 + 0x88]\n  5976: a3 = a4 | t0\n  5979: a1 = a0 | a5\n  5982: a1 = a1 | a3\n  5985: a1 = a1 >> 0x20\n  5988: a3 = a3 | a5\n  5991: a3 = a3 << 0x20\n  5994: a1 = a1 | a3\n  5997: jump @232 if a1 == 0\n      : @231 (gas: 1)\n  6000: jump @576\n      : @232 (gas: 11)\n  6003: u64 [a2 + 888] = 0\n  6007: u64 [a2 + 880] = 0\n  6011: u64 [a2 + 872] = 0\n  6015: a3 = 0x8c379a000000000\n  6025: a1 = s1 + 0x2d00\n  6029: u64 [a2 + 0x380] = a3\n  6033: u64 [s1 + 0x218] = a0\n  6037: u64 [s1 + 0x210] = a4\n  6041: u64 [s1 + 0x200] = t0\n  6045: u64 [s1 + 0x208] = a5\n  6049: ra = 192, jump @24\n      : @233 [@dyn 96] (gas: 1)\n  6055: t0 = 194, jump @1726\n      : @234 [@dyn 97] (gas: 1)\n  6062: jump @236 if a0 != 0\n      : @235 (gas: 1)\n  6065: jump @576\n      : @236 (gas: 1)\n  6068: t0 = 196, jump @1800\n      : @237 [@dyn 98] (gas: 8)\n  6075: u64 [a2 + 864] = 0\n  6079: u64 [a2 + 856] = 0\n  6083: u64 [a2 + 840] = 0x20\n  6088: a1 = s1 + 0x2ce0\n  6092: u64 [a2 + 848] = 0\n  6096: u64 [s1 + 0x208] = a3\n  6100: u64 [s1 + 0x200] = a4\n  6104: ra = 198, jump @24\n      : @238 [@dyn 99] (gas: 1)\n  6110: t0 = 200, jump @1778\n      : @239 [@dyn 100] (gas: 1)\n  6117: jump @241 if a0 != 0\n      : @240 (gas: 1)\n  6120: jump @576\n      : @241 (gas: 8)\n  6123: i32 a0 = a1 + 0x24\n  6126: a2 = s1 + 0x2998\n  6130: u64 [a2 + 832] = 0\n  6134: u64 [a2 + 824] = 0\n  6138: u64 [a2 + 808] = 0x15\n  6143: a1 = s1 + 0x2cc0\n  6147: u64 [a2 + 816] = 0\n  6151: ra = 202, jump @24\n      : @242 [@dyn 101] (gas: 1)\n  6157: t0 = 204, jump @1727\n      : @243 [@dyn 102] (gas: 1)\n  6164: jump @245 if a0 != 0\n      : @244 (gas: 1)\n  6167: jump @576\n      : @245 (gas: 13)\n  6170: i32 a0 = a3 + 0x44\n  6173: a1 = u64 [0x200c0]\n  6178: a2 = u64 [0x200c8]\n  6183: a4 = s1 + 0x2998\n  6187: a3 = a4 + 0x300\n  6191: u64 [a3 + 0x20] = a1\n  6194: u64 [a3 + 0x18] = a2\n  6197: a1 = 0x6374697665000000\n  6207: u64 [a3 + 0x10] = a1\n  6210: a1 = s1 + 0x2ca0\n  6214: u64 [a4 + 776] = 0\n  6218: ra = 0x50c\n  6222: jump @24\n      : @246 (gas: 11)\n  6225: u64 [a2 + 736] = 0\n  6229: u64 [a2 + 728] = 0\n  6233: u64 [a2 + 720] = 0\n  6237: u64 [a2 + 712] = 0\n  6241: a0 = s1 + 0x5000\n  6245: i32 a0 = a0 + 0xfffffffffffffc60\n  6249: ra = 0xce\n  6253: ecalli 19 // 'value_transferred'\n  6255: a0 = 0x5000\n  6259: t0 = 0xd0\n  6263: jump @1806\n      : @247 [@dyn 103] (gas: 2)\n  6267: a0 = 0x5000\n  6271: t0 = 208, jump @1806\n      : @248 [@dyn 104] (gas: 1)\n  6278: t0 = 210, jump @1810\n      : @249 [@dyn 105] (gas: 1)\n  6285: jump @251 if a0 == 0\n      : @250 (gas: 1)\n  6288: jump @1328\n      : @251 (gas: 1)\n  6292: t0 = 212, jump @1782\n      : @252 [@dyn 106] (gas: 1)\n  6299: jump @254 if a1 <u a0\n      : @253 (gas: 1)\n  6302: jump @1329\n      : @254 (gas: 8)\n  6306: a0 = s1 + 0x5000\n  6310: i32 a0 = a0 + 0xfffffffffffffc80\n  6314: a1 = 0x4\n  6317: ra = 0xd6\n  6321: ecalli 4 // 'call_data_load'\n  6323: a0 = 0x5000\n  6327: t0 = 0xd8\n  6331: jump @1806\n      : @255 [@dyn 107] (gas: 2)\n  6335: a0 = 0x5000\n  6339: t0 = 216, jump @1806\n      : @256 [@dyn 108] (gas: 13)\n  6346: a0 = u64 [a4 + 0xe8]\n  6350: a1 = u64 [a4 + 0xf0]\n  6354: a2 = u64 [a4 + 0xf8]\n  6358: a3 = u64 [a3 + 0x300]\n  6362: a4 = s1 + 0x3998\n  6366: a5 = a4 + 0x100\n  6370: u64 [a5 + 0xe0] = a3\n  6374: u64 [a5 + 0xd8] = a2\n  6378: u64 [a5 + 0xd0] = a1\n  6382: a1 = s1 + 0x3b60\n  6386: u64 [a5 + 0xc8] = a0\n  6390: a0 = 0\n  6392: ra = 218, jump @24\n      : @257 [@dyn 109] (gas: 9)\n  6398: a1 = s1 + 0x3998\n  6402: u64 [a1 + 448] = 0\n  6406: u64 [a1 + 440] = 0\n  6410: u64 [a1 + 424] = 0x2\n  6415: a2 = a1\n  6417: a0 = 0x20\n  6420: a1 = s1 + 0x3b40\n  6424: u64 [a2 + 432] = 0\n  6428: ra = 220, jump @24\n      : @258 [@dyn 110] (gas: 2)\n  6434: a1 = i32 [0x20228]\n  6439: jump @260 if a1 >u 63\n      : @259 (gas: 4)\n  6443: a1 = 0x40\n  6446: u32 [0x20228] = a1\n  6451: t0 = 0xde\n  6455: jump @1756\n      : @260 (gas: 1)\n  6459: t0 = 222, jump @1756\n      : @261 [@dyn 111] (gas: 8)\n  6466: a0 = 0x20230\n  6471: i32 a0 = a0 + 0\n  6473: i32 a2 = a2 + 0\n  6475: a1 = 0x40\n  6478: ra = 0xe0\n  6482: ecalli 11 // 'hash_keccak_256'\n  6484: t0 = 0xe2\n  6488: jump @1734\n      : @262 [@dyn 112] (gas: 1)\n  6492: t0 = 226, jump @1734\n      : @263 [@dyn 113] (gas: 8)\n  6499: a5 = a4 + 0x300\n  6503: u64 [a5 + 0x20] = a3\n  6506: u64 [a5 + 0x18] = a2\n  6509: u64 [a5 + 0x10] = a1\n  6512: u64 [a5 + 0x8] = a0\n  6515: a0 = s1 + 0x3b20\n  6519: a1 = s1 + 0x4ca0\n  6523: ra = 228, jump @26\n      : @264 [@dyn 114] (gas: 14)\n  6529: a1 = s1 + 0x3998\n  6533: a2 = a1 + 0x100\n  6537: a0 = u64 [a2 + 0xa0]\n  6541: a1 = s1 + 0x200\n  6545: u64 [a1 + 0x18] = a0\n  6548: a0 = u64 [a2 + 0x98]\n  6552: u64 [a1 + 0x10] = a0\n  6555: a0 = u64 [a2 + 0x90]\n  6559: u64 [a1 + 0x8] = a0\n  6562: a0 = u64 [a2 + 0x88]\n  6566: u64 [a1] = a0\n  6568: a0 = s1 + 0x3b00\n  6572: a1 = 0x40\n  6575: ra = 230, jump @22\n      : @265 [@dyn 115] (gas: 7)\n  6581: a3 = s1 + 0x3998\n  6585: a5 = a3 + 0x100\n  6589: a0 = u64 [a5 + 0x80]\n  6593: a1 = u64 [a5 + 0x78]\n  6596: a2 = u64 [a5 + 0x70]\n  6599: a4 = u64 [a5 + 0x68]\n  6602: t0 = 232, jump @1773\n      : @266 [@dyn 116] (gas: 1)\n  6609: jump @268 if a0 == 0\n      : @267 (gas: 1)\n  6612: jump @576\n      : @268 (gas: 15)\n  6615: a2 = s1 + 0x200\n  6619: a0 = u64 [a2]\n  6621: a5 = a3 + 0x100\n  6625: u64 [a5 + 0x48] = a0\n  6628: a0 = u64 [a2 + 0x8]\n  6631: u64 [a5 + 0x50] = a0\n  6634: a0 = u64 [a2 + 0x10]\n  6637: u64 [a5 + 0x58] = a0\n  6640: a1 = s1 + 0x3ae0\n  6644: a0 = u64 [a2 + 0x18]\n  6647: u64 [a5 + 0x60] = a0\n  6650: a0 = a4\n  6652: u64 [s1 + 0x218] = a4\n  6656: ra = 0x178\n  6660: jump @24\n      : @269 (gas: 10)\n  6663: u64 [a2 + 1024] = 0\n  6667: u64 [a2 + 1016] = 0\n  6671: u64 [a2 + 1008] = 0\n  6675: u64 [a2 + 1000] = 0\n  6679: a0 = s1 + 0x4000\n  6683: i32 a0 = a0 + 0x580\n  6687: ra = 0xea\n  6691: ecalli 19 // 'value_transferred'\n  6693: t0 = 0xec\n  6697: jump @1785\n      : @270 [@dyn 117] (gas: 1)\n  6701: t0 = 236, jump @1785\n      : @271 [@dyn 118] (gas: 8)\n  6708: a0 = u64 [a4 + 0xf8]\n  6712: a1 = u64 [a3 + 0x400]\n  6716: a2 = u64 [a4 + 0xf0]\n  6720: a3 = u64 [a4 + 0xe8]\n  6724: a1 = a1 | a2\n  6727: a0 = a0 | a3\n  6730: a0 = a0 | a1\n  6733: jump @273 if a0 == 0\n      : @272 (gas: 1)\n  6736: jump @1330\n      : @273 (gas: 3)\n  6740: a0 = u64 [s1 + 0x218]\n  6744: a0 = i32 [a0]\n  6746: jump @275 if a0 >u 195\n      : @274 (gas: 1)\n  6751: jump @1331\n      : @275 (gas: 5)\n  6755: a0 = s1 + 0x4000\n  6759: i32 a0 = a0 + 0x5a0\n  6763: a1 = 0x4\n  6766: ecalli 4 // 'call_data_load'\n  6768: fallthrough\n      : @276 (gas: 9)\n  6769: a2 = s1 + 0x4198\n  6773: a0 = a2 + 0x400\n  6777: a5 = u64 [a0 + 0x20]\n  6780: a3 = u64 [a0 + 0x18]\n  6783: a4 = u64 [a0 + 0x10]\n  6786: a0 = a3 | a5\n  6789: a1 = a4 <u 0x1\n  6792: a1 = 0 if a0 != 0\n  6794: jump @278 if a1 != 0\n      : @277 (gas: 1)\n  6797: jump @1332\n      : @278 (gas: 19)\n  6801: a1 = u64 [a2 + 0x408]\n  6805: a0 = u64 [s1 + 0x218]\n  6809: t1 = u32 [a0]\n  6811: a0 = a1 + 0x23\n  6814: a2 = a0 <u a1\n  6817: t0 = a4 + a2\n  6820: u64 [s1 + 0x1f8] = a4\n  6824: a4 = t0 <u a4\n  6827: a4 = a2 if a2 == 0\n  6830: a4 = a4 + a3\n  6833: u64 [s1 + 0x200] = a3\n  6837: a2 = a4 <u a3\n  6840: u64 [s1 + 0x210] = a5\n  6844: a2 = a2 + a5\n  6847: a2 = a2 | a4\n  6850: a0 = a0 <u t1\n  6853: a0 = 0 if t0 != 0\n  6855: a0 = 0 if a2 != 0\n  6857: jump @280 if a0 != 0\n      : @279 (gas: 1)\n  6860: jump @1333\n      : @280 (gas: 6)\n  6864: u64 [s1 + 0x1f0] = a1\n  6868: i32 a1 = a1 + 0x4\n  6871: a0 = s1 + 0x4000\n  6875: i32 a0 = a0 + 0x5c0\n  6879: ecalli 4 // 'call_data_load'\n  6881: fallthrough\n      : @281 (gas: 9)\n  6882: a2 = s1 + 0x4198\n  6886: t0 = u64 [a2 + 0x440]\n  6890: t2 = u64 [a2 + 0x438]\n  6894: a4 = u64 [a2 + 0x430]\n  6898: a1 = t2 | t0\n  6901: a0 = a4 <u 0x1\n  6904: u64 [s1 + 0x208] = a1\n  6908: a0 = 0 if a1 != 0\n  6910: jump @283 if a0 != 0\n      : @282 (gas: 1)\n  6913: jump @1334\n      : @283 (gas: 47)\n  6917: a5 = u64 [a2 + 0x428]\n  6921: a0 = u64 [s1 + 0x1f0]\n  6925: a2 = a0 + 0x24\n  6928: a0 = a2 <u a0\n  6931: a1 = u64 [s1 + 0x1f8]\n  6935: a3 = a1 + a0\n  6938: a1 = a3 <u a1\n  6941: a1 = a0 if a0 == 0\n  6944: a0 = u64 [s1 + 0x200]\n  6948: a1 = a1 + a0\n  6951: a0 = a1 <u a0\n  6954: t1 = u64 [s1 + 0x210]\n  6958: t1 = t1 + a0\n  6961: u64 [s1 + 0x188] = a5\n  6965: ra = a2 + a5\n  6968: u64 [s1 + 0x128] = a2\n  6972: a2 = ra <u a2\n  6975: u64 [s1 + 0x180] = a4\n  6979: a0 = a3 + a4\n  6982: a0 = a0 + a2\n  6985: a5 = a0 ^ a3\n  6988: u64 [s1 + 0x120] = a3\n  6992: a4 = a0 <u a3\n  6995: a4 = a2 if a5 == 0\n  6998: u64 [s1 + 0x138] = t2\n  7002: a2 = a1 + t2\n  7005: u64 [s1 + 0x118] = a1\n  7009: a3 = a2 <u a1\n  7012: u64 [s1 + 0x130] = t0\n  7016: u64 [s1 + 0x110] = t1\n  7020: a5 = t1 + t0\n  7023: a3 = a3 + a5\n  7026: a1 = u64 [s1 + 0x218]\n  7030: a5 = u32 [a1]\n  7032: a4 = a4 + a2\n  7035: a2 = a4 <u a2\n  7038: a2 = a2 + a3\n  7041: a1 = a5 <u ra\n  7044: a3 = a0 <u 0x1\n  7047: a1 = a1 ^ 0x1\n  7050: a1 = a3 if a0 != 0\n  7053: a0 = a2 <u 0x1\n  7056: a3 = a4 <u 0x1\n  7059: a3 = a0 if a2 != 0\n  7062: a2 = a2 | a4\n  7065: a1 = a3 if a2 != 0\n  7068: jump @285 if a1 != 0\n      : @284 (gas: 1)\n  7071: jump @1335\n      : @285 (gas: 5)\n  7075: a0 = s1 + 0x4000\n  7079: i32 a0 = a0 + 0x5e0\n  7083: a1 = 0x24\n  7086: ecalli 4 // 'call_data_load'\n  7088: fallthrough\n      : @286 (gas: 13)\n  7089: a3 = s1 + 0x4198\n  7093: a1 = u64 [a3 + 0x458]\n  7097: a2 = u64 [a3 + 0x460]\n  7101: a0 = 0x100000000\n  7111: a0 = a0 ^ a1\n  7114: a0 = a0 | a2\n  7117: u64 [s1 + 0x1d8] = a1\n  7121: a1 = a1 >> 0x20\n  7124: a1 = a1 <u 0x1\n  7127: u64 [s1 + 0x1d0] = a2\n  7131: a1 = 0 if a2 != 0\n  7133: a1 = 0 if a0 == 0\n  7135: jump @288 if a1 != 0\n      : @287 (gas: 1)\n  7138: jump @1336\n      : @288 (gas: 35)\n  7142: a1 = u64 [a3 + 0x450]\n  7146: u64 [s1 + 0x168] = a1\n  7150: a0 = u64 [a3 + 0x448]\n  7154: u64 [s1 + 0x160] = a0\n  7158: a0 = sp + 0xffffffffffffffe0\n  7161: a0 = a0 & 0xffffffffffffffe0\n  7164: u64 [s1 + 0x210] = a0\n  7168: sp = a0\n  7170: a0 = s1 + 0x4000\n  7174: i32 a0 = a0 + 0x600\n  7178: a1 = 0x44\n  7181: ecalli 4 // 'call_data_load'\n  7183: a0 = s1 + 0x4198\n  7187: a1 = u64 [a0 + 0x480]\n  7191: a0 = s1 + 0x4198\n  7195: a2 = u64 [a0 + 0x478]\n  7199: a0 = s1 + 0x4198\n  7203: a3 = u64 [a0 + 0x470]\n  7207: a0 = s1 + 0x4198\n  7211: a0 = u64 [a0 + 0x468]\n  7215: a5 = s1 + 0x100\n  7219: u64 [a5 + 0x58] = a1\n  7222: a4 = u64 [s1 + 0x210]\n  7226: u64 [a4 + 0x18] = a1\n  7229: u64 [a5 + 0x50] = a2\n  7232: u64 [a4 + 0x10] = a2\n  7235: u64 [a5 + 0x48] = a3\n  7238: u64 [a4 + 0x8] = a3\n  7241: u64 [a5 + 0x40] = a0\n  7244: u64 [a4] = a0\n  7246: a0 = s1 + 0x4000\n  7250: i32 a0 = a0 + 0x620\n  7254: a1 = 0x64\n  7257: ecalli 4 // 'call_data_load'\n  7259: fallthrough\n      : @289 (gas: 9)\n  7260: a2 = s1 + 0x4198\n  7264: a0 = a2 + 0x400\n  7268: a4 = u64 [a0 + 0xa0]\n  7272: a5 = u64 [a0 + 0x98]\n  7276: a3 = u64 [a0 + 0x90]\n  7280: a0 = a5 | a4\n  7283: a1 = a3 <u 0x1\n  7286: a1 = 0 if a0 != 0\n  7288: jump @291 if a1 != 0\n      : @290 (gas: 1)\n  7291: jump @1337\n      : @291 (gas: 20)\n  7295: a2 = u64 [a2 + 0x488]\n  7299: a0 = u64 [s1 + 0x218]\n  7303: t0 = u32 [a0]\n  7305: a0 = a2 + 0x23\n  7308: a1 = a0 <u a2\n  7311: t1 = a3 + a1\n  7314: u64 [s1 + 0x1e8] = a3\n  7318: a3 = t1 <u a3\n  7321: a3 = a1 if a1 == 0\n  7324: a3 = a3 + a5\n  7327: u64 [s1 + 0x1f8] = a5\n  7331: a1 = a3 <u a5\n  7334: u64 [s1 + 0x200] = a4\n  7338: a1 = a1 + a4\n  7341: a1 = a1 | a3\n  7344: u64 [s1 + 0x1f0] = t0\n  7348: a0 = a0 <u t0\n  7351: a0 = 0 if t1 != 0\n  7353: a0 = 0 if a1 != 0\n  7355: jump @293 if a0 != 0\n      : @292 (gas: 1)\n  7358: jump @1338\n      : @293 (gas: 44)\n  7362: i32 a1 = a2 + 0x4\n  7365: a0 = s1 + 0x4000\n  7369: i32 a0 = a0 + 0x640\n  7373: u64 [s1 + 0x1e0] = a2\n  7377: ecalli 4 // 'call_data_load'\n  7379: a0 = s1 + 0x4198\n  7383: t0 = u64 [a0 + 0x4a8]\n  7387: t2 = u64 [a0 + 0x4b0]\n  7391: ra = u64 [a0 + 0x4b8]\n  7395: a1 = a0\n  7397: a0 = u64 [s1 + 0x1e0]\n  7401: a2 = a0 + 0x24\n  7404: a4 = a2 <u a0\n  7407: a0 = u64 [s1 + 0x1e8]\n  7411: a5 = a0 + a4\n  7414: a0 = a5 <u a0\n  7417: a0 = a4 if a4 == 0\n  7420: a4 = u64 [a1 + 0x4c0]\n  7424: a1 = u64 [s1 + 0x1f8]\n  7428: a0 = a0 + a1\n  7431: t1 = a0 <u a1\n  7434: a1 = u64 [s1 + 0x200]\n  7438: t1 = t1 + a1\n  7441: a3 = s1 + 0x2198\n  7445: u64 [a3 + 1952] = 0\n  7449: u64 [a3 + 1944] = 0\n  7453: u64 [a3 + 1936] = 0\n  7457: a1 = u64 [s1 + 0x1f0]\n  7461: u64 [a3 + 0x788] = a1\n  7465: a1 = a3 + 0x700\n  7469: u64 [a1 + 0xc0] = a4\n  7473: u64 [a3 + 0x7b8] = ra\n  7477: u64 [a3 + 0x7b0] = t2\n  7481: u64 [a3 + 0x7a8] = t0\n  7485: u64 [a1 + 0xd0] = a5\n  7489: u64 [a1 + 0xc8] = a2\n  7493: u64 [a1 + 0xd8] = a0\n  7497: a4 = a3\n  7499: a0 = s1 + 0x2980\n  7503: a1 = s1 + 0x2960\n  7507: a2 = s1 + 0x2940\n  7511: a3 = s1 + 0x2920\n  7515: u64 [a4 + 0x7e0] = t1\n  7519: ra = 238, jump @1548\n      : @294 [@dyn 119] (gas: 42)\n  7526: a0 = s1 + 0x2998\n  7530: a1 = u64 [a0]\n  7532: u64 [s1 + 0x198] = a1\n  7536: a2 = a0 + 0xffffffffffffff00\n  7540: a1 = u64 [a2 + 0xf8]\n  7544: u64 [s1 + 0x1a0] = a1\n  7548: a1 = u64 [a2 + 0xf0]\n  7552: u64 [s1 + 0x1a8] = a1\n  7556: a0 = u64 [a2 + 0xe8]\n  7560: u64 [s1 + 0x1b0] = a0\n  7564: a0 = sp + 0xffffffffffffffe0\n  7567: a0 = a0 & 0xffffffffffffffe0\n  7570: u64 [s1 + 0x178] = a0\n  7574: sp = a0\n  7576: a0 = s1 + 0x4000\n  7580: i32 a0 = a0 + 0x660\n  7584: a1 = 0x84\n  7588: ecalli 4 // 'call_data_load'\n  7590: a0 = s1 + 0x4198\n  7594: a5 = a0 + 0x400\n  7598: a2 = u64 [a5 + 0xe0]\n  7602: a1 = u64 [a5 + 0xd8]\n  7606: a3 = u64 [a5 + 0xd0]\n  7610: a4 = u64 [a5 + 0xc8]\n  7614: u64 [s1 + 0x1f8] = a2\n  7618: a0 = u64 [s1 + 0x178]\n  7622: u64 [a0 + 0x18] = a2\n  7625: u64 [s1 + 0x200] = a1\n  7629: u64 [a0 + 0x10] = a1\n  7632: u64 [s1 + 0x1f0] = a3\n  7636: u64 [a0 + 0x8] = a3\n  7639: u64 [s1 + 0x1e8] = a4\n  7643: u64 [a0] = a4\n  7645: a0 = sp + 0xffffffffffffffe0\n  7648: a0 = a0 & 0xffffffffffffffe0\n  7651: u64 [s1 + 0x170] = a0\n  7655: sp = a0\n  7657: a0 = s1 + 0x4000\n  7661: i32 a0 = a0 + 0x680\n  7665: a1 = 0xa4\n  7669: ecalli 4 // 'call_data_load'\n  7671: fallthrough\n      : @295 (gas: 17)\n  7672: a0 = s1 + 0x4198\n  7676: a1 = u64 [a0 + 0x500]\n  7680: ra = u64 [a0 + 0x4f8]\n  7684: a2 = u64 [a0 + 0x4f0]\n  7688: a3 = u64 [a0 + 0x4e8]\n  7692: a0 = u64 [s1 + 0x170]\n  7696: u64 [a0 + 0x18] = a1\n  7699: u64 [a0 + 0x10] = ra\n  7702: u64 [a0 + 0x8] = a2\n  7705: a4 = u64 [s1 + 0x188]\n  7709: a4 = a4 <u 0x7\n  7712: t0 = u64 [s1 + 0x180]\n  7716: a4 = 0 if t0 != 0\n  7718: a5 = u64 [s1 + 0x208]\n  7722: a4 = 0 if a5 != 0\n  7724: u64 [a0] = a3\n  7726: jump @297 if a4 == 0\n      : @296 (gas: 1)\n  7729: jump @595\n      : @297 (gas: 3)\n  7732: a0 = s1 + 0x1ea0\n  7736: a1 = 0x40\n  7739: ra = 240, jump @22\n      : @298 [@dyn 120] (gas: 14)\n  7745: a2 = s1 + 0x1998\n  7749: t0 = u64 [a2 + 0x520]\n  7753: a1 = a2 + 0x500\n  7757: a5 = u64 [a1 + 0x18]\n  7760: a4 = u64 [a1 + 0x10]\n  7763: a0 = u64 [a1 + 0x8]\n  7766: a3 = a4 | t0\n  7769: a1 = a0 | a5\n  7772: a1 = a1 | a3\n  7775: a1 = a1 >> 0x20\n  7778: a3 = a3 | a5\n  7781: a3 = a3 << 0x20\n  7784: a1 = a1 | a3\n  7787: jump @300 if a1 == 0\n      : @299 (gas: 1)\n  7790: jump @576\n      : @300 (gas: 11)\n  7793: u64 [a2 + 1272] = 0\n  7797: u64 [a2 + 1264] = 0\n  7801: u64 [a2 + 1256] = 0\n  7805: a3 = 0x8c379a000000000\n  7815: a1 = s1 + 0x1e80\n  7819: u64 [a2 + 0x500] = a3\n  7823: u64 [s1 + 0x218] = a0\n  7827: u64 [s1 + 0x210] = a4\n  7831: u64 [s1 + 0x200] = t0\n  7835: u64 [s1 + 0x208] = a5\n  7839: ra = 242, jump @24\n      : @301 [@dyn 121] (gas: 1)\n  7845: t0 = 244, jump @1726\n      : @302 [@dyn 122] (gas: 1)\n  7852: jump @304 if a0 != 0\n      : @303 (gas: 1)\n  7855: jump @576\n      : @304 (gas: 1)\n  7858: t0 = 246, jump @1781\n      : @305 [@dyn 123] (gas: 8)\n  7865: u64 [a2 + 1248] = 0\n  7869: u64 [a2 + 1240] = 0\n  7873: u64 [a2 + 1224] = 0x20\n  7878: a1 = s1 + 0x1e60\n  7882: u64 [a2 + 1232] = 0\n  7886: u64 [s1 + 0x208] = a3\n  7890: u64 [s1 + 0x200] = a4\n  7894: ra = 248, jump @24\n      : @306 [@dyn 124] (gas: 1)\n  7900: t0 = 250, jump @1778\n      : @307 [@dyn 125] (gas: 1)\n  7907: jump @309 if a0 != 0\n      : @308 (gas: 1)\n  7910: jump @576\n      : @309 (gas: 8)\n  7913: i32 a0 = a1 + 0x24\n  7916: a2 = s1 + 0x1998\n  7920: u64 [a2 + 1216] = 0\n  7924: u64 [a2 + 1208] = 0\n  7928: u64 [a2 + 1192] = 0x1a\n  7933: a1 = s1 + 0x1e40\n  7937: u64 [a2 + 1200] = 0\n  7941: ra = 252, jump @24\n      : @310 [@dyn 126] (gas: 1)\n  7947: t0 = 254, jump @1727\n      : @311 [@dyn 127] (gas: 1)\n  7954: jump @313 if a0 != 0\n      : @312 (gas: 1)\n  7957: jump @576\n      : @313 (gas: 14)\n  7960: i32 a0 = a3 + 0x44\n  7963: a1 = u64 [0x20160]\n  7968: a2 = u64 [0x20168]\n  7973: a3 = u64 [0x20170]\n  7978: a4 = s1 + 0x1998\n  7982: a5 = a4 + 0x400\n  7986: u64 [a5 + 0xa0] = a1\n  7990: u64 [a5 + 0x98] = a2\n  7994: u64 [a5 + 0x90] = a3\n  7998: a2 = 0x6e67000000000000\n  8008: a1 = s1 + 0x1e20\n  8012: u64 [a5 + 0x88] = a2\n  8016: ra = 0x50c\n  8020: jump @24\n      : @314 (gas: 10)\n  8023: u64 [a2 + 992] = 0\n  8027: u64 [a2 + 984] = 0\n  8031: u64 [a2 + 976] = 0\n  8035: u64 [a2 + 968] = 0\n  8039: a0 = s1 + 0x4000\n  8043: i32 a0 = a0 + 0x560\n  8047: ra = 0x100\n  8051: ecalli 19 // 'value_transferred'\n  8053: t0 = 0x102\n  8057: jump @1785\n      : @315 [@dyn 128] (gas: 1)\n  8061: t0 = 258, jump @1785\n      : @316 [@dyn 129] (gas: 1)\n  8068: t0 = 260, jump @1810\n      : @317 [@dyn 130] (gas: 1)\n  8075: jump @319 if a0 == 0\n      : @318 (gas: 1)\n  8078: jump @1339\n      : @319 (gas: 3)\n  8082: a0 = u64 [s1 + 0x218]\n  8086: a0 = i32 [a0]\n  8088: jump @321 if a0 >u 3\n      : @320 (gas: 1)\n  8092: jump @1340\n      : @321 (gas: 3)\n  8096: a0 = s1 + 0x1e00\n  8100: a1 = 0x40\n  8103: ra = 262, jump @22\n      : @322 [@dyn 131] (gas: 7)\n  8109: a3 = s1 + 0x1998\n  8113: a5 = a3 + 0x400\n  8117: a4 = u64 [a5 + 0x80]\n  8121: a1 = u64 [a5 + 0x78]\n  8124: a2 = u64 [a5 + 0x70]\n  8127: a0 = u64 [a5 + 0x68]\n  8130: t0 = 264, jump @1791\n      : @323 [@dyn 132] (gas: 1)\n  8137: jump @325 if a1 == 0\n      : @324 (gas: 1)\n  8140: jump @576\n      : @325 (gas: 8)\n  8143: u64 [a3 + 1120] = 0\n  8147: u64 [a3 + 1112] = 0\n  8151: u64 [a3 + 1096] = 0x6\n  8156: a1 = s1 + 0x1de0\n  8160: u64 [a3 + 1104] = 0\n  8164: u64 [s1 + 0x218] = a0\n  8168: ra = 0x178\n  8172: jump @24\n      : @326 (gas: 11)\n  8175: u64 [a3 + 864] = 0\n  8179: u64 [a3 + 856] = 0\n  8183: u64 [a3 + 848] = 0\n  8187: u64 [a3 + 840] = 0\n  8191: a0 = s1 + 0x4000\n  8195: i32 a0 = a0 + 0xfffffffffffffce0\n  8199: ra = 0x10a\n  8203: ecalli 19 // 'value_transferred'\n  8205: a0 = 0x4000\n  8209: t0 = 0x10c\n  8213: jump @1784\n      : @327 [@dyn 133] (gas: 2)\n  8217: a0 = 0x4000\n  8221: t0 = 268, jump @1784\n      : @328 [@dyn 134] (gas: 1)\n  8228: jump @330 if a0 == 0\n      : @329 (gas: 1)\n  8231: jump @1341\n      : @330 (gas: 3)\n  8235: a0 = u64 [s1 + 0x218]\n  8239: a0 = i32 [a0]\n  8241: jump @332 if a0 >u 99\n      : @331 (gas: 1)\n  8245: jump @1342\n      : @332 (gas: 20)\n  8249: a0 = s1 + 0x4000\n  8253: i32 a0 = a0 + 0xfffffffffffffd00\n  8257: a1 = 0x4\n  8260: ecalli 4 // 'call_data_load'\n  8262: a1 = s1 + 0x3998\n  8266: a2 = a1 + 0x300\n  8270: a0 = u64 [a2 + 0x80]\n  8274: a1 = s1 + 0x100\n  8278: u64 [a1 + 0x20] = a0\n  8281: a0 = u64 [a2 + 0x78]\n  8284: u64 [a1 + 0x18] = a0\n  8287: a0 = u64 [a2 + 0x70]\n  8290: u64 [a1 + 0x10] = a0\n  8293: a0 = u64 [a2 + 0x68]\n  8296: u64 [a1 + 0x8] = a0\n  8299: a0 = s1 + 0x4000\n  8303: i32 a0 = a0 + 0xfffffffffffffd20\n  8307: a1 = 0x24\n  8310: ecalli 4 // 'call_data_load'\n  8312: fallthrough\n      : @333 (gas: 9)\n  8313: t0 = s1 + 0x3998\n  8317: a0 = t0 + 0x300\n  8321: a2 = u64 [a0 + 0xa0]\n  8325: a1 = u64 [a0 + 0x98]\n  8329: a5 = u64 [a0 + 0x90]\n  8333: a3 = a1 | a2\n  8336: a0 = a5 <u 0x1\n  8339: a0 = 0 if a3 != 0\n  8341: jump @335 if a0 != 0\n      : @334 (gas: 1)\n  8344: jump @1343\n      : @335 (gas: 32)\n  8348: u64 [s1 + 0xe0] = a3\n  8352: a0 = u64 [t0 + 0x388]\n  8356: a3 = u64 [s1 + 0x218]\n  8360: t2 = u32 [a3]\n  8362: ra = t2 <u a0\n  8365: a3 = a5 >u 0\n  8367: a3 = ra if a5 == 0\n  8370: a4 = -a1\n  8372: t1 = a4 - a3\n  8375: a3 = a4 <u a3\n  8378: u64 [s1 + 0x128] = a1\n  8382: a4 = a1 >u 0\n  8384: a1 = s1 + 0x100\n  8388: u64 [a1 + 0x30] = a2\n  8391: a4 = a4 + a2\n  8394: a4 = -a4\n  8396: a4 = a4 - a3\n  8399: u64 [a1 + 0x60] = a5\n  8402: a3 = -a5\n  8404: a3 = a3 - ra\n  8407: u64 [a1 + 0x58] = a0\n  8410: a1 = t2 - a0\n  8413: a1 = a1 <u 0x104\n  8417: a1 = a1 ^ 0x1\n  8420: a2 = a3 >u 0\n  8422: a2 = a1 if a3 == 0\n  8425: a1 = a4 >s 0\n  8427: a3 = t1 >u 0\n  8429: a3 = a1 if a4 != 0\n  8432: a0 = t1 | a4\n  8435: a2 = a3 if a0 != 0\n  8438: jump @337 if a2 != 0\n      : @336 (gas: 1)\n  8441: jump @1344\n      : @337 (gas: 7)\n  8445: u64 [t0 + 960] = 0\n  8449: u64 [t0 + 952] = 0\n  8453: u64 [t0 + 944] = 0\n  8457: u64 [t0 + 936] = 0x5\n  8462: a0 = s1 + 0x1200\n  8466: a1 = s1 + 0x3d40\n  8470: ra = 270, jump @26\n      : @338 [@dyn 135] (gas: 13)\n  8476: a0 = s1 + 0x1198\n  8480: a1 = u64 [a0 + 0x70]\n  8483: u64 [s1 + 0x218] = a1\n  8487: a1 = u64 [a0 + 0x68]\n  8490: u64 [s1 + 0x210] = a1\n  8494: a0 = u32 [a0 + 0x78]\n  8497: u64 [s1 + 0x208] = a0\n  8501: a0 = 0x30230\n  8506: u64 [s1 + 0x200] = a0\n  8510: i32 a0 = a0 + 0\n  8512: ra = 0x110\n  8516: ecalli 6 // 'caller'\n  8518: fallthrough\n      : @339 [@dyn 136] (gas: 6)\n  8519: a5 = s1 + 0x200\n  8523: a2 = u64 [a5]\n  8525: a0 = u64 [a2 + 0x8]\n  8528: a1 = u64 [a2]\n  8530: a2 = i32 [a2 + 0x10]\n  8533: t0 = 274, jump @1774\n      : @340 [@dyn 137] (gas: 9)\n  8540: a2 = u64 [a5 + 0x8]\n  8543: a1 = a1 ^ a2\n  8546: a2 = u64 [a5 + 0x10]\n  8549: a0 = a0 ^ a2\n  8552: a0 = a0 | a1\n  8555: a1 = u64 [a5 + 0x18]\n  8558: a1 = a1 ^ a3\n  8561: a0 = a0 | a1\n  8564: jump @342 if a0 == 0\n      : @341 (gas: 1)\n  8567: jump @1345\n      : @342 (gas: 30)\n  8571: a1 = u64 [s1 + 0x158]\n  8575: a0 = a1 + 0x4\n  8578: u64 [s1 + 0x150] = a0\n  8582: a0 = a0 <u a1\n  8585: a2 = u64 [s1 + 0x160]\n  8589: a1 = a2 + a0\n  8592: u64 [s1 + 0x148] = a1\n  8596: a1 = a1 <u a2\n  8599: a1 = a0 if a0 == 0\n  8602: a0 = u64 [s1 + 0x128]\n  8606: a1 = a1 + a0\n  8609: u64 [s1 + 0x140] = a1\n  8613: a0 = a1 <u a0\n  8616: a1 = u64 [s1 + 0x130]\n  8620: a0 = a0 + a1\n  8623: u64 [s1 + 0x138] = a0\n  8627: a0 = u64 [s1 + 0x108]\n  8631: a2 = s1 + 0x7ff\n  8635: a2 = a2 + 0x199\n  8639: a3 = a2 + 0x700\n  8643: u64 [a3 + 0xa8] = a0\n  8647: a0 = u64 [s1 + 0x110]\n  8651: u64 [a3 + 0xb0] = a0\n  8655: a0 = u64 [s1 + 0x118]\n  8659: u64 [a3 + 0xb8] = a0\n  8663: a1 = s1 + 0x1140\n  8667: a0 = u64 [s1 + 0x120]\n  8671: u64 [a3 + 0xc0] = a0\n  8675: a0 = 0\n  8677: ra = 276, jump @24\n      : @343 [@dyn 138] (gas: 10)\n  8683: a1 = s1 + 0x7ff\n  8687: a1 = a1 + 0x199\n  8691: u64 [a1 + 1952] = 0\n  8695: u64 [a1 + 1944] = 0\n  8699: u64 [a1 + 1928] = 0x3\n  8704: a2 = a1\n  8706: a0 = 0x20\n  8709: a1 = s1 + 0x1120\n  8713: u64 [a2 + 1936] = 0\n  8717: ra = 278, jump @24\n      : @344 [@dyn 139] (gas: 8)\n  8723: a0 = sp + 0xffffffffffffffe0\n  8726: a0 = a0 & 0xffffffffffffffe0\n  8729: u64 [s1 + 0x1d0] = a0\n  8733: sp = a0\n  8735: a2 = 0x20228\n  8740: a0 = i32 [0x20228]\n  8745: a1 = 0x3f\n  8748: jump @346 if a1 <u a0\n      : @345 (gas: 4)\n  8751: u32 [0x20228] = 0x40\n  8757: u64 [s1 + 0xf8] = a2\n  8761: t0 = 0x118\n  8765: jump @1756\n      : @346 (gas: 2)\n  8769: u64 [s1 + 0xf8] = a2\n  8773: t0 = 280, jump @1756\n      : @347 [@dyn 140] (gas: 10)\n  8780: a0 = 0x20230\n  8785: i32 a0 = a0 + 0\n  8787: i32 a2 = a2 + 0\n  8789: a1 = 0x40\n  8792: u64 [s1 + 0x100] = a0\n  8796: ra = 0x11a\n  8800: ecalli 11 // 'hash_keccak_256'\n  8802: a3 = u64 [s1 + 0x218]\n  8806: t0 = 0x11c\n  8810: jump @1759\n      : @348 [@dyn 141] (gas: 2)\n  8814: a3 = u64 [s1 + 0x218]\n  8818: t0 = 284, jump @1759\n      : @349 [@dyn 142] (gas: 30)\n  8825: a3 = u64 [s1 + 0x1d0]\n  8829: u64 [s1 + 0x178] = a0\n  8833: u64 [a3 + 0x18] = a0\n  8836: u64 [s1 + 0x180] = a2\n  8840: u64 [a3 + 0x10] = a2\n  8843: u64 [s1 + 0x170] = a1\n  8847: u64 [a3 + 0x8] = a1\n  8850: u64 [s1 + 0x168] = a4\n  8854: u64 [a3] = a4\n  8856: a2 = u64 [s1 + 0x138]\n  8860: a4 = s1 + 0x7ff\n  8864: a4 = a4 + 0x199\n  8868: a5 = a4 + 0x700\n  8872: u64 [a5 + 0x20] = a2\n  8875: a1 = u64 [s1 + 0x140]\n  8879: u64 [a5 + 0x18] = a1\n  8882: a0 = u64 [s1 + 0x148]\n  8886: u64 [a5 + 0x10] = a0\n  8889: a3 = u64 [s1 + 0x150]\n  8893: u64 [a5 + 0x8] = a3\n  8896: u64 [a5 + 0x40] = a2\n  8899: u64 [a5 + 0x38] = a1\n  8902: u64 [a5 + 0x30] = a0\n  8905: a0 = s1 + 0x10e0\n  8909: a1 = s1 + 0x10c0\n  8913: a2 = s1 + 0x10a0\n  8917: u64 [a5 + 0x28] = a3\n  8920: ra = 0x11e\n  8924: t0 = 0x66c\n  8928: jump @1760\n      : @350 [@dyn 143] (gas: 20)\n  8932: a1 = s1 + 0x7ff\n  8936: a1 = a1 + 0x199\n  8940: a0 = a1 + 0x700\n  8944: a4 = u64 [a0 + 0x80]\n  8948: a2 = u64 [a0 + 0x78]\n  8951: a3 = u64 [a0 + 0x70]\n  8954: a0 = a4 >u 0\n  8956: a5 = a2 >u 0\n  8958: a5 = a0 if a4 != 0\n  8961: u64 [s1 + 0x218] = a3\n  8965: a0 = a3 >u 0\n  8967: u64 [s1 + 0x1c8] = a2\n  8971: a3 = s1 + 0x200\n  8975: u64 [a3 + 0x10] = a4\n  8978: a2 = a2 | a4\n  8981: u64 [s1 + 0x1f8] = a0\n  8985: u64 [a3 + 0x8] = a5\n  8988: u64 [a3] = a2\n  8990: a0 = a5 if a2 != 0\n  8993: jump @352 if a0 == 0\n      : @351 (gas: 1)\n  8996: jump @1353\n      : @352 (gas: 14)\n  9000: a2 = a1 + 0x700\n  9004: a0 = u64 [a2 + 0x60]\n  9007: u64 [s1 + 0x1b0] = a0\n  9011: a0 = u64 [a2 + 0x58]\n  9014: u64 [s1 + 0x1b8] = a0\n  9018: a0 = u64 [a2 + 0x50]\n  9021: u64 [s1 + 0x1a8] = a0\n  9025: a0 = u64 [a2 + 0x48]\n  9028: u64 [s1 + 0x1c0] = a0\n  9032: a0 = u64 [a2 + 0x68]\n  9035: u64 [s1 + 0x188] = a0\n  9039: a0 = s1 + 0x1080\n  9043: a1 = u64 [s1 + 0x1d0]\n  9047: ra = 288, jump @26\n      : @353 [@dyn 144] (gas: 14)\n  9053: a4 = s1 + 0x7ff\n  9057: a4 = a4 + 0x199\n  9061: a5 = a4 + 0x600\n  9065: a2 = u64 [a5 + 0xe8]\n  9069: a0 = u64 [a5 + 0xf0]\n  9073: a1 = u64 [a5 + 0xf8]\n  9077: a3 = u64 [a4 + 0x700]\n  9081: u64 [a5 + 0xc0] = a3\n  9085: u64 [a5 + 0xb8] = a1\n  9089: u64 [a5 + 0xb0] = a0\n  9093: a0 = s1 + 0x1060\n  9097: a1 = s1 + 0x1040\n  9101: u64 [a5 + 0xa8] = a2\n  9105: ra = 290, jump @1485\n      : @354 [@dyn 145] (gas: 32)\n  9112: a4 = s1 + 0x7ff\n  9116: a4 = a4 + 0x199\n  9120: a5 = a4 + 0x600\n  9124: a0 = u64 [a5 + 0xc8]\n  9128: a1 = u64 [a5 + 0xd0]\n  9132: a2 = u64 [a5 + 0xd8]\n  9136: a3 = u64 [a5 + 0xe0]\n  9140: u64 [a5 + 0x80] = a3\n  9144: a3 = u64 [s1 + 0x210]\n  9148: u64 [a5 + 0x60] = a3\n  9151: a3 = u64 [s1 + 0x1c8]\n  9155: u64 [a5 + 0x58] = a3\n  9158: a3 = u64 [s1 + 0x218]\n  9162: u64 [a5 + 0x50] = a3\n  9165: a3 = u64 [s1 + 0x188]\n  9169: u64 [a5 + 0x48] = a3\n  9172: u64 [a5 + 0x78] = a2\n  9175: u64 [a5 + 0x70] = a1\n  9178: u64 [a5 + 0x68] = a0\n  9181: a0 = u64 [s1 + 0x178]\n  9185: u64 [a5 + 0xa0] = a0\n  9189: a0 = u64 [s1 + 0x180]\n  9193: u64 [a5 + 0x98] = a0\n  9197: a0 = u64 [s1 + 0x170]\n  9201: u64 [a5 + 0x90] = a0\n  9205: a0 = s1 + 0x1020\n  9209: a1 = s1 + 0x1000\n  9213: a2 = s1 + 0x7ff\n  9217: a2 = a2 + 0x7e1\n  9221: a3 = u64 [s1 + 0x168]\n  9225: u64 [a5 + 0x88] = a3\n  9229: ra = 292, jump @1586\n      : @355 [@dyn 146] (gas: 23)\n  9236: a3 = u64 [s1 + 0x188]\n  9240: a0 = a3 <u 0x20\n  9243: a0 = a0 ^ 0x1\n  9246: a1 = u64 [s1 + 0x1f8]\n  9250: a5 = s1 + 0x200\n  9254: a4 = u64 [a5 + 0x18]\n  9257: a0 = a1 if a4 != 0\n  9260: a1 = u64 [a5 + 0x8]\n  9263: a2 = u64 [a5]\n  9265: a0 = a1 if a2 != 0\n  9268: t1 = u64 [s1 + 0x210]\n  9272: a1 = a4 | t1\n  9275: a5 = u64 [s1 + 0x1c8]\n  9279: t0 = a5 >> 0x3f\n  9282: t1 = t1 << 0x1\n  9285: ra = a4 >> 0x3f\n  9288: a2 = a5 << 0x1\n  9291: u64 [s1 + 0xe8] = a2\n  9295: t2 = a3 >> 0x3f\n  9298: a2 = a4 << 0x1\n  9301: u64 [s1 + 0xf0] = a2\n  9305: a2 = a3 << 0x1\n  9308: jump @357 if a0 != 0\n      : @356 (gas: 1)\n  9311: jump @593\n      : @357 (gas: 21)\n  9314: u64 [s1 + 0x198] = a1\n  9318: u64 [s1 + 0xd0] = ra\n  9322: u64 [s1 + 0xb8] = t2\n  9326: u64 [s1 + 0xc0] = t1\n  9330: u64 [s1 + 0xc8] = t0\n  9334: u64 [s1 + 0xd8] = a2\n  9338: a0 = u64 [s1 + 0x168]\n  9342: a2 = s1 + 0x7ff\n  9346: a2 = a2 + 0x199\n  9350: a3 = a2 + 0x600\n  9354: u64 [a3 + 0x28] = a0\n  9357: a0 = u64 [s1 + 0x170]\n  9361: u64 [a3 + 0x30] = a0\n  9364: a0 = u64 [s1 + 0x180]\n  9368: u64 [a3 + 0x38] = a0\n  9371: a1 = s1 + 0x7ff\n  9375: a1 = a1 + 0x7c1\n  9379: a0 = u64 [s1 + 0x178]\n  9383: u64 [a3 + 0x40] = a0\n  9386: a0 = 0\n  9388: ra = 294, jump @24\n      : @358 [@dyn 147] (gas: 1)\n  9394: t0 = 296, jump @1763\n      : @359 [@dyn 148] (gas: 1)\n  9401: jump @361 if a1 <u a0\n      : @360 (gas: 2)\n  9404: u32 [a2 + 0] = 0x20\n  9407: fallthrough\n      : @361 (gas: 37)\n  9408: a0 = u64 [s1 + 0x188]\n  9412: a0 = a0 & 0xffffffffffffffe0\n  9415: u64 [s1 + 0x1a0] = a0\n  9419: a0 = sp + 0xffffffffffffffe0\n  9422: a0 = a0 & 0xffffffffffffffe0\n  9425: u64 [s1 + 0x208] = a0\n  9429: sp = a0\n  9431: i32 a2 = a0 + 0\n  9433: a1 = 0x20\n  9436: a0 = u64 [s1 + 0x100]\n  9440: ecalli 11 // 'hash_keccak_256'\n  9442: a5 = 0\n  9444: u64 [s1 + 528] = 0\n  9448: u64 [s1 + 536] = 0\n  9452: u64 [s1 + 512] = 0\n  9456: a3 = u64 [s1 + 0x208]\n  9460: a0 = u64 [a3 + 0x18]\n  9463: a1 = u64 [a3 + 0x10]\n  9466: a2 = u64 [a3 + 0x8]\n  9469: a3 = u64 [a3]\n  9471: t0 = reverse a0\n  9473: a4 = reverse a1\n  9475: a1 = reverse a2\n  9477: a3 = reverse a3\n  9479: a0 = u64 [s1 + 0x1f8]\n  9483: a2 = a3\n  9485: u64 [a0 + 0x18] = a3\n  9488: u64 [s1 + 0x1e8] = a1\n  9492: u64 [a0 + 0x10] = a1\n  9495: a1 = a4\n  9497: u64 [a0 + 0x8] = a4\n  9500: t2 = t0\n  9502: u64 [a0] = t0\n  9504: a0 = s1 + 0x4000\n  9508: i32 a0 = a0 + 0xfffffffffffffd60\n  9512: u64 [s1 + 0x190] = a0\n  9516: fallthrough\n      : @362 (gas: 24)\n  9517: u64 [s1 + 0x208] = a5\n  9521: u64 [s1 + 0x1f0] = a2\n  9525: t0 = a1\n  9527: a0 = u64 [s1 + 0x1a0]\n  9531: a0 = a5 <u a0\n  9534: a3 = a0 ^ 0x1\n  9537: a1 = u64 [s1 + 0x210]\n  9541: a3 = 0x1 if a1 != 0\n  9544: a4 = u64 [s1 + 0x218]\n  9548: t1 = u64 [s1 + 0x200]\n  9552: a0 = a4 | t1\n  9555: a3 = 0x1 if a0 != 0\n  9558: a0 = u64 [s1 + 0x1c0]\n  9562: ra = a5 + a0\n  9565: a2 = u64 [s1 + 0x1a8]\n  9569: a2 = a2 + a1\n  9572: a1 = u64 [s1 + 0x1b8]\n  9576: a1 = a1 + a4\n  9579: a4 = u64 [s1 + 0x1b0]\n  9583: t1 = t1 + a4\n  9586: a0 = u64 [s1 + 0x1d0]\n  9590: a5 = u64 [s1 + 0x1c8]\n  9594: a4 = u64 [s1 + 0x198]\n  9598: jump @364 if a3 == 0\n      : @363 (gas: 1)\n  9601: jump @610\n      : @364 (gas: 23)\n  9604: a0 = u64 [s1 + 0x208]\n  9608: a3 = ra <u a0\n  9611: a2 = a2 + a3\n  9614: a4 = u64 [s1 + 0x210]\n  9618: a0 = a2 ^ a4\n  9621: a5 = a2 <u a4\n  9624: a5 = a3 if a0 == 0\n  9627: a5 = a5 + a1\n  9630: a3 = a5 <u a1\n  9633: a0 = u64 [s1 + 0x218]\n  9637: a1 = a1 <u a0\n  9640: a0 = t1 + a1\n  9643: a0 = a0 + a3\n  9646: a1 = ra | a5\n  9649: a0 = a0 | a2\n  9652: a1 = a1 | a0\n  9655: a1 = a1 >> 0x20\n  9658: a0 = a0 | a5\n  9661: a0 = a0 << 0x20\n  9664: a0 = a0 | a1\n  9667: u64 [s1 + 0x1e0] = t2\n  9671: u64 [s1 + 0x1d8] = t0\n  9675: jump @366 if a0 == 0\n      : @365 (gas: 1)\n  9678: jump @576\n      : @366 (gas: 16)\n  9681: i32 a1 = ra + 0\n  9683: a0 = u64 [s1 + 0x190]\n  9687: ecalli 4 // 'call_data_load'\n  9689: a4 = s1 + 0x3998\n  9693: a5 = a4 + 0x300\n  9697: a0 = u64 [a5 + 0xe0]\n  9701: a1 = u64 [a5 + 0xd8]\n  9705: a2 = u64 [a5 + 0xd0]\n  9709: a3 = u64 [a5 + 0xc8]\n  9713: u64 [a4 + 0x400] = a0\n  9717: u64 [a5 + 0xf8] = a1\n  9721: u64 [a5 + 0xf0] = a2\n  9725: u64 [a5 + 0xe8] = a3\n  9729: a1 = s1 + 0x3d80\n  9733: a0 = u64 [s1 + 0x1f8]\n  9737: ra = 298, jump @28\n      : @367 [@dyn 149] (gas: 1)\n  9743: t0 = 300, jump @1740\n      : @368 [@dyn 150] (gas: 31)\n  9750: t0 = a1 + a0\n  9753: a1 = t0 <u a1\n  9756: a0 = u64 [s1 + 0x1f0]\n  9760: a0 = a0 + a1\n  9763: a1 = u64 [s1 + 0x208]\n  9767: t1 = a1 + 0x20\n  9770: a2 = t1 <u a1\n  9773: a1 = u64 [s1 + 0x210]\n  9777: ra = a1 + a2\n  9780: a4 = ra <u a1\n  9783: a4 = a2 if a2 == 0\n  9786: a1 = u64 [s1 + 0x218]\n  9790: a4 = a4 + a1\n  9793: a2 = a4 <u a1\n  9796: a1 = u64 [s1 + 0x200]\n  9800: a1 = a1 + a2\n  9803: u64 [s1 + 0x200] = a1\n  9807: a2 = u64 [s1 + 0x1f8]\n  9811: u64 [a2 + 0x10] = t0\n  9814: a1 = a3\n  9816: u64 [a2 + 0x8] = a3\n  9819: t2 = a5\n  9821: u64 [a2] = a5\n  9823: a3 = a2\n  9825: a2 = a0\n  9827: u64 [a3 + 0x18] = a0\n  9830: u64 [s1 + 0x1e8] = t0\n  9834: a5 = t1\n  9836: u64 [s1 + 0x210] = ra\n  9840: u64 [s1 + 0x218] = a4\n  9844: jump @362\n      : @369 (gas: 1)\n  9847: jump @371 if a0 == 1999787794\n      : @370 (gas: 1)\n  9854: jump @1356\n      : @371 (gas: 11)\n  9858: u64 [a2 + 1984] = 0\n  9862: u64 [a2 + 1976] = 0\n  9866: u64 [a2 + 1968] = 0\n  9870: u64 [a2 + 1960] = 0\n  9874: a0 = s1 + 0x5000\n  9878: i32 a0 = a0 + 0xfffffffffffff940\n  9882: ra = 0x12e\n  9886: ecalli 19 // 'value_transferred'\n  9888: a0 = 0x4000\n  9892: t0 = 0x130\n  9896: jump @1805\n      : @372 [@dyn 151] (gas: 2)\n  9900: a0 = 0x4000\n  9904: t0 = 304, jump @1805\n      : @373 [@dyn 152] (gas: 8)\n  9911: a0 = u64 [a4 + 0xb8]\n  9915: a1 = u64 [a4 + 0xc0]\n  9919: a2 = u64 [a4 + 0xb0]\n  9923: a3 = u64 [a4 + 0xa8]\n  9927: a1 = a1 | a2\n  9930: a0 = a0 | a3\n  9933: a0 = a0 | a1\n  9936: jump @375 if a0 == 0\n      : @374 (gas: 1)\n  9939: jump @1361\n      : @375 (gas: 1)\n  9943: t0 = 306, jump @1782\n      : @376 [@dyn 153] (gas: 1)\n  9950: jump @378 if a1 <u a0\n      : @377 (gas: 1)\n  9953: jump @1362\n      : @378 (gas: 8)\n  9957: a0 = s1 + 0x5000\n  9961: i32 a0 = a0 + 0xfffffffffffff960\n  9965: a1 = 0x4\n  9968: ra = 0x134\n  9972: ecalli 4 // 'call_data_load'\n  9974: a0 = 0x4000\n  9978: t0 = 0x136\n  9982: jump @1805\n      : @379 [@dyn 154] (gas: 2)\n  9986: a0 = 0x4000\n  9990: t0 = 310, jump @1805\n      : @380 [@dyn 155] (gas: 13)\n  9997: a0 = u64 [a4 + 0xc8]\n 10001: a1 = u64 [a4 + 0xd0]\n 10005: a2 = u64 [a4 + 0xd8]\n 10009: a3 = u64 [a4 + 0xe0]\n 10013: a4 = s1 + 0x2998\n 10017: a5 = a4 + 0x200\n 10021: u64 [a5 + 0x60] = a3\n 10024: u64 [a5 + 0x58] = a2\n 10027: u64 [a5 + 0x50] = a1\n 10030: a1 = s1 + 0x2be0\n 10034: u64 [a5 + 0x48] = a0\n 10037: a0 = 0\n 10039: ra = 312, jump @24\n      : @381 [@dyn 156] (gas: 9)\n 10045: a1 = s1 + 0x2998\n 10049: u64 [a1 + 576] = 0\n 10053: u64 [a1 + 568] = 0\n 10057: u64 [a1 + 552] = 0x4\n 10062: a2 = a1\n 10064: a0 = 0x20\n 10067: a1 = s1 + 0x2bc0\n 10071: u64 [a2 + 560] = 0\n 10075: ra = 314, jump @24\n      : @382 [@dyn 157] (gas: 2)\n 10081: a1 = i32 [0x20228]\n 10086: jump @384 if a1 >u 63\n      : @383 (gas: 4)\n 10090: a1 = 0x40\n 10093: u32 [0x20228] = a1\n 10098: t0 = 0x13c\n 10102: jump @1756\n      : @384 (gas: 1)\n 10106: t0 = 316, jump @1756\n      : @385 [@dyn 158] (gas: 8)\n 10113: a0 = 0x20230\n 10118: i32 a0 = a0 + 0\n 10120: i32 a2 = a2 + 0\n 10122: a1 = 0x40\n 10125: ra = 0x13e\n 10129: ecalli 11 // 'hash_keccak_256'\n 10131: t0 = 0x140\n 10135: jump @1734\n      : @386 [@dyn 159] (gas: 1)\n 10139: t0 = 320, jump @1734\n      : @387 [@dyn 160] (gas: 8)\n 10146: u64 [a4] = a3\n 10148: a3 = a4 + 0xffffffffffffff00\n 10152: u64 [a3 + 0xf8] = a2\n 10156: u64 [a3 + 0xf0] = a1\n 10160: u64 [a3 + 0xe8] = a0\n 10164: a0 = s1 + 0x2ba0\n 10168: a1 = s1 + 0x4980\n 10172: ra = 322, jump @26\n      : @388 [@dyn 161] (gas: 14)\n 10178: a1 = s1 + 0x2998\n 10182: a2 = a1 + 0x200\n 10186: a0 = u64 [a2 + 0x20]\n 10189: a1 = s1 + 0x200\n 10193: u64 [a1 + 0x18] = a0\n 10196: a0 = u64 [a2 + 0x18]\n 10199: u64 [a1 + 0x10] = a0\n 10202: a0 = u64 [a2 + 0x10]\n 10205: u64 [a1 + 0x8] = a0\n 10208: a0 = u64 [a2 + 0x8]\n 10211: u64 [a1] = a0\n 10213: a0 = s1 + 0x2b80\n 10217: a1 = 0x40\n 10220: ra = 324, jump @22\n      : @389 [@dyn 162] (gas: 7)\n 10226: a3 = s1 + 0x2998\n 10230: a0 = u64 [a3 + 0x200]\n 10234: a5 = a3 + 0x100\n 10238: a1 = u64 [a5 + 0xf8]\n 10242: a2 = u64 [a5 + 0xf0]\n 10246: a4 = u64 [a5 + 0xe8]\n 10250: t0 = 326, jump @1773\n      : @390 [@dyn 163] (gas: 1)\n 10257: jump @392 if a0 == 0\n      : @391 (gas: 1)\n 10260: jump @576\n      : @392 (gas: 15)\n 10263: a2 = s1 + 0x200\n 10267: a0 = u64 [a2]\n 10269: a5 = a3 + 0x100\n 10273: u64 [a5 + 0xc8] = a0\n 10277: a0 = u64 [a2 + 0x8]\n 10280: u64 [a5 + 0xd0] = a0\n 10284: a0 = u64 [a2 + 0x10]\n 10287: u64 [a5 + 0xd8] = a0\n 10291: a1 = s1 + 0x2b60\n 10295: a0 = u64 [a2 + 0x18]\n 10298: u64 [a5 + 0xe0] = a0\n 10302: a0 = a4\n 10304: u64 [s1 + 0x218] = a4\n 10308: ra = 0x178\n 10312: jump @24\n      : @393 (gas: 9)\n 10315: u64 [a2 + 640] = 0\n 10319: u64 [a2 + 632] = 0\n 10323: u64 [a2 + 624] = 0\n 10327: u64 [a2 + 616] = 0\n 10331: a0 = s1 + 0x4000\n 10335: i32 a0 = a0 + 0x400\n 10339: ra = 0x148\n 10343: ecalli 19 // 'value_transferred'\n 10345: fallthrough\n      : @394 [@dyn 164] (gas: 10)\n 10346: a3 = s1 + 0x4198\n 10350: a4 = a3 + 0x200\n 10354: a0 = u64 [a4 + 0x78]\n 10357: a1 = u64 [a4 + 0x80]\n 10361: a2 = u64 [a4 + 0x70]\n 10364: a3 = u64 [a4 + 0x68]\n 10367: a1 = a1 | a2\n 10370: a0 = a0 | a3\n 10373: a0 = a0 | a1\n 10376: jump @396 if a0 == 0\n      : @395 (gas: 1)\n 10379: jump @1363\n      : @396 (gas: 1)\n 10382: t0 = 330, jump @1782\n      : @397 [@dyn 165] (gas: 1)\n 10389: jump @399 if a1 <u a0\n      : @398 (gas: 1)\n 10392: jump @1364\n      : @399 (gas: 23)\n 10395: a0 = s1 + 0x4000\n 10399: i32 a0 = a0 + 0x420\n 10403: a1 = 0x4\n 10406: ecalli 4 // 'call_data_load'\n 10408: a0 = s1 + 0x4198\n 10412: a5 = a0 + 0x200\n 10416: a4 = u64 [a5 + 0xa0]\n 10420: a3 = u64 [a5 + 0x98]\n 10424: a1 = u64 [a5 + 0x90]\n 10428: a2 = u64 [a5 + 0x88]\n 10432: a0 = s1 + 0x1998\n 10436: a5 = s1 + 0x100\n 10440: u64 [a5 + 0xd0] = a4\n 10444: u64 [a0 + 0xe0] = a4\n 10448: u64 [a5 + 0xd8] = a3\n 10452: u64 [a0 + 0xd8] = a3\n 10456: u64 [a5 + 0xe0] = a1\n 10460: u64 [a0 + 0xd0] = a1\n 10464: a1 = s1 + 0x1a60\n 10468: u64 [a5 + 0xe8] = a2\n 10472: u64 [a0 + 0xc8] = a2\n 10476: a0 = 0\n 10478: ra = 332, jump @24\n      : @400 [@dyn 166] (gas: 2)\n 10484: a0 = 0x2000\n 10488: t0 = 334, jump @1786\n      : @401 [@dyn 167] (gas: 3)\n 10495: a1 = s1 + 0x1a40\n 10499: u64 [a2 + 0xb0] = a3\n 10503: ra = 336, jump @24\n      : @402 [@dyn 168] (gas: 1)\n 10509: t0 = 338, jump @1809\n      : @403 [@dyn 169] (gas: 3)\n 10516: a2 = 0x20228\n 10521: a0 = i32 [0x20228]\n 10526: jump @405 if a0 >u 63\n      : @404 (gas: 2)\n 10530: u32 [0x20228] = 0x40\n 10536: fallthrough\n      : @405 (gas: 14)\n 10537: u64 [s1 + 0x1c8] = a2\n 10541: a0 = sp + 0xffffffffffffffe0\n 10544: a2 = a0 & 0xffffffffffffffe0\n 10547: u64 [s1 + 0x210] = a2\n 10551: sp = a2\n 10553: a0 = 0x20230\n 10558: i32 a0 = a0 + 0\n 10560: i32 a2 = a2 + 0\n 10562: a1 = 0x40\n 10565: u64 [s1 + 0x1f0] = a0\n 10569: ra = 0x154\n 10573: ecalli 11 // 'hash_keccak_256'\n 10575: t0 = 0x156\n 10579: jump @1772\n      : @406 [@dyn 170] (gas: 1)\n 10583: t0 = 342, jump @1772\n      : @407 [@dyn 171] (gas: 11)\n 10590: a1 = u64 [a3 + 0x18]\n 10593: u64 [a3 + 0x8] = a2\n 10596: u64 [a1 + 0x18] = a2\n 10599: u64 [a3 + 0x10] = a0\n 10602: u64 [a1 + 0x10] = a0\n 10605: u64 [a3] = a4\n 10607: u64 [a1 + 0x8] = a4\n 10610: u64 [s1 + 0x1f8] = a5\n 10614: u64 [a1] = a5\n 10616: a0 = s1 + 0x1a20\n 10620: ra = 344, jump @26\n      : @408 [@dyn 172] (gas: 3)\n 10626: a2 = s1 + 0x1998\n 10630: a0 = u8 [a2 + 0x88]\n 10634: jump @410 if a0 <=u 3\n      : @409 (gas: 1)\n 10638: jump @1365\n      : @410 (gas: 9)\n 10641: a0 = a0 <u 0x1\n 10644: u64 [a2 + 128] = 0\n 10648: u64 [a2 + 120] = 0\n 10651: u64 [a2 + 0x68] = a0\n 10654: a0 = s1 + 0x1a00\n 10658: u64 [a2 + 112] = 0\n 10661: ra = 0x15a\n 10665: t0 = 0x6a6\n 10669: jump @1780\n      : @411 [@dyn 173] (gas: 3)\n 10673: a1 = u64 [s1 + 0x1f8]\n 10677: a0 = a1 + 0x6\n 10680: t0 = 348, jump @1766\n      : @412 [@dyn 174] (gas: 9)\n 10687: a4 = s1 + 0x4198\n 10691: a5 = a4 + 0x200\n 10695: u64 [a5 + 0xb0] = a2\n 10699: u64 [a5 + 0xa8] = a0\n 10703: u64 [a5 + 0xb8] = a3\n 10707: u64 [a5 + 0xc0] = a1\n 10711: a0 = s1 + 0x19e0\n 10715: a1 = s1 + 0x4440\n 10719: ra = 350, jump @26\n      : @413 [@dyn 175] (gas: 13)\n 10725: a0 = s1 + 0x1998\n 10729: a1 = u64 [a0 + 0x48]\n 10732: u64 [s1 + 0x210] = a1\n 10736: a1 = u64 [a0 + 0x50]\n 10739: u64 [s1 + 0x208] = a1\n 10743: a1 = u64 [a0 + 0x58]\n 10746: u64 [s1 + 0x200] = a1\n 10750: a0 = u64 [a0 + 0x60]\n 10753: u64 [s1 + 0x1f8] = a0\n 10757: a0 = s1 + 0x4000\n 10761: i32 a0 = a0 + 0x460\n 10765: ecalli 12 // 'now'\n 10767: fallthrough\n      : @414 (gas: 22)\n 10768: a1 = s1 + 0x4198\n 10772: a4 = a1 + 0x200\n 10776: a0 = u64 [a4 + 0xe0]\n 10780: t0 = u64 [a1 + 0x2c8]\n 10784: a2 = u64 [a4 + 0xd8]\n 10788: a3 = u64 [a4 + 0xd0]\n 10792: a1 = u64 [s1 + 0x1f8]\n 10796: a4 = a0 ^ a1\n 10799: a1 = a1 <u a0\n 10802: a0 = u64 [s1 + 0x200]\n 10806: a5 = a0 <u a2\n 10809: a5 = a1 if a4 != 0\n 10812: a1 = u64 [s1 + 0x208]\n 10816: t1 = a3 ^ a1\n 10819: a3 = a1 <u a3\n 10822: a1 = u64 [s1 + 0x210]\n 10826: a1 = a1 <u t0\n 10829: a1 = a3 if t1 != 0\n 10832: a0 = a0 ^ a2\n 10835: a0 = a0 | a4\n 10838: a1 = a5 if a0 != 0\n 10841: jump @416 if a1 == 0\n      : @415 (gas: 1)\n 10844: jump @1371\n      : @416 (gas: 3)\n 10847: a0 = s1 + 0x19c0\n 10851: a1 = 0x40\n 10854: ra = 352, jump @22\n      : @417 [@dyn 176] (gas: 13)\n 10860: a4 = s1 + 0x1998\n 10864: t0 = u64 [a4 + 0x40]\n 10867: a5 = u64 [a4 + 0x38]\n 10870: a3 = u64 [a4 + 0x30]\n 10873: a0 = u64 [a4 + 0x28]\n 10876: a2 = a3 | t0\n 10879: a1 = a0 | a5\n 10882: a1 = a1 | a2\n 10885: a1 = a1 >> 0x20\n 10888: a2 = a2 | a5\n 10891: a2 = a2 << 0x20\n 10894: a1 = a1 | a2\n 10897: jump @419 if a1 == 0\n      : @418 (gas: 1)\n 10900: jump @576\n      : @419 (gas: 11)\n 10903: u64 [a4 + 24] = 0\n 10906: u64 [a4 + 16] = 0\n 10909: u64 [a4 + 8] = 0\n 10912: u64 [s1 + 0x210] = a3\n 10916: a3 = 0x8c379a000000000\n 10926: a1 = s1 + 0x19a0\n 10930: u64 [a4 + 0x20] = a3\n 10933: u64 [s1 + 0x218] = a0\n 10937: u64 [s1 + 0x208] = t0\n 10941: u64 [s1 + 0x200] = a5\n 10945: ra = 354, jump @24\n      : @420 [@dyn 177] (gas: 12)\n 10951: a5 = s1 + 0x200\n 10955: a1 = u64 [a5 + 0x18]\n 10958: a0 = u64 [a5 + 0x8]\n 10961: a3 = u64 [a5]\n 10963: a3 = a3 | a0\n 10966: a4 = 0x100000000\n 10976: a0 = 0xfffffffc\n 10986: a0 = a1 <u a0\n 10989: a2 = u64 [a5 + 0x10]\n 10992: a0 = 0 if a2 != 0\n 10994: a0 = 0 if a3 != 0\n 10996: jump @422 if a0 != 0\n      : @421 (gas: 1)\n 10999: jump @576\n      : @422 (gas: 1)\n 11002: t0 = 356, jump @1781\n      : @423 [@dyn 178] (gas: 8)\n 11009: u64 [a2 + 0] = 0\n 11011: u64 [a2 + 4294967288] = 0\n 11014: u64 [a2 + 4294967272] = 0x20\n 11018: a1 = s1 + 0x1980\n 11022: u64 [a2 + 4294967280] = 0\n 11025: u64 [s1 + 0x208] = a3\n 11029: u64 [s1 + 0x200] = a4\n 11033: ra = 358, jump @24\n      : @424 [@dyn 179] (gas: 1)\n 11039: t0 = 360, jump @1729\n      : @425 [@dyn 180] (gas: 1)\n 11046: jump @427 if a0 != 0\n      : @426 (gas: 1)\n 11049: jump @576\n      : @427 (gas: 8)\n 11052: i32 a0 = a1 + 0x24\n 11055: a4 = s1 + 0x1198\n 11059: u64 [a4 + 2016] = 0\n 11063: u64 [a4 + 2008] = 0\n 11067: u64 [a4 + 1992] = 0x12\n 11072: a1 = s1 + 0x1960\n 11076: u64 [a4 + 2000] = 0\n 11080: ra = 362, jump @24\n      : @428 [@dyn 181] (gas: 1)\n 11086: t0 = 364, jump @1727\n      : @429 [@dyn 182] (gas: 1)\n 11093: jump @431 if a0 != 0\n      : @430 (gas: 1)\n 11096: jump @576\n      : @431 (gas: 13)\n 11099: i32 a0 = a3 + 0x44\n 11102: a1 = u64 [0x200c0]\n 11107: a2 = u64 [0x20178]\n 11112: a4 = s1 + 0x1198\n 11116: a3 = a4 + 0x700\n 11120: u64 [a3 + 0xc0] = a1\n 11124: u64 [a3 + 0xb8] = a2\n 11128: a1 = 0x6564000000000000\n 11138: u64 [a3 + 0xb0] = a1\n 11142: a1 = s1 + 0x1940\n 11146: u64 [a4 + 1960] = 0\n 11150: ra = 0x50c\n 11154: jump @24\n      : @432 (gas: 12)\n 11157: a0 = s1 + 0x4998\n 11161: u64 [a0 + 32] = 0\n 11164: u64 [a0 + 24] = 0\n 11167: u64 [a0 + 16] = 0\n 11170: u64 [a0 + 8] = 0\n 11173: a0 = s1 + 0x5000\n 11177: i32 a0 = a0 + 0xfffffffffffff9a0\n 11181: ra = 0x16e\n 11185: ecalli 19 // 'value_transferred'\n 11187: a4 = s1 + 0x4998\n 11191: t0 = 0x170\n 11195: jump @1811\n      : @433 [@dyn 183] (gas: 2)\n 11199: a4 = s1 + 0x4998\n 11203: t0 = 368, jump @1811\n      : @434 [@dyn 184] (gas: 1)\n 11210: jump @436 if a0 == 0\n      : @435 (gas: 1)\n 11213: jump @1376\n      : @436 (gas: 3)\n 11216: a0 = u64 [s1 + 0x218]\n 11220: a0 = i32 [a0]\n 11222: jump @438 if a0 >u 3\n      : @437 (gas: 1)\n 11226: jump @1377\n      : @438 (gas: 7)\n 11229: u64 [a4 + 64] = 0\n 11232: u64 [a4 + 56] = 0\n 11235: u64 [a4 + 48] = 0\n 11238: u64 [a4 + 40] = 0x5\n 11242: a0 = s1 + 0x2c40\n 11246: a1 = s1 + 0x49c0\n 11250: ra = 370, jump @26\n      : @439 [@dyn 185] (gas: 12)\n 11256: a1 = s1 + 0x2998\n 11260: a2 = a1 + 0x200\n 11264: a0 = u64 [a2 + 0xb8]\n 11268: a1 = s1 + 0x200\n 11272: u64 [a1 + 0x8] = a0\n 11275: a0 = u64 [a2 + 0xb0]\n 11279: u64 [a1 + 0x18] = a0\n 11282: a0 = u64 [a2 + 0xa8]\n 11286: u64 [a1 + 0x10] = a0\n 11289: a0 = s1 + 0x2c20\n 11293: a1 = 0x40\n 11296: ra = 372, jump @22\n      : @440 [@dyn 186] (gas: 7)\n 11302: a3 = s1 + 0x2998\n 11306: a5 = a3 + 0x200\n 11310: a4 = u64 [a5 + 0xa0]\n 11314: a1 = u64 [a5 + 0x98]\n 11318: a2 = u64 [a5 + 0x90]\n 11322: a0 = u64 [a5 + 0x88]\n 11326: t0 = 374, jump @1791\n      : @441 [@dyn 187] (gas: 1)\n 11333: jump @443 if a1 == 0\n      : @442 (gas: 1)\n 11336: jump @576\n      : @443 (gas: 14)\n 11339: a4 = s1 + 0x200\n 11343: a1 = u64 [a4 + 0x8]\n 11346: a1 = a1 << 0x20\n 11349: a2 = a1 >> 0x20\n 11352: u64 [a3 + 640] = 0\n 11356: a1 = u64 [a4 + 0x10]\n 11359: a5 = a3 + 0x200\n 11363: u64 [a5 + 0x68] = a1\n 11366: a1 = u64 [a4 + 0x18]\n 11369: u64 [a5 + 0x70] = a1\n 11372: a1 = s1 + 0x2c00\n 11376: u64 [a5 + 0x78] = a2\n 11379: u64 [s1 + 0x218] = a0\n 11383: ra = 376, jump @24\n      : @444 [@dyn 188] (gas: 3)\n 11389: a1 = 0x20\n 11392: a0 = u64 [s1 + 0x218]\n 11396: ra = 378, jump @36\n      : @445 [@dyn 189] (gas: 5)\n 11402: i32 a1 = a0 + 0\n 11404: a2 = 0x20\n 11407: a0 = 0\n 11409: ecalli 16 // 'seal_return'\n 11411: fallthrough\n      : @446 (gas: 11)\n 11412: u64 [a2 + 480] = 0\n 11416: u64 [a2 + 472] = 0\n 11420: u64 [a2 + 464] = 0\n 11424: u64 [a2 + 456] = 0\n 11428: a0 = s1 + 0x4000\n 11432: i32 a0 = a0 + 0x360\n 11436: ra = 0x17c\n 11440: ecalli 19 // 'value_transferred'\n 11442: a0 = 0x4000\n 11446: t0 = 0x17e\n 11450: jump @1804\n      : @447 [@dyn 190] (gas: 2)\n 11454: a0 = 0x4000\n 11458: t0 = 382, jump @1804\n      : @448 [@dyn 191] (gas: 1)\n 11465: t0 = 384, jump @1810\n      : @449 [@dyn 192] (gas: 1)\n 11472: jump @451 if a0 == 0\n      : @450 (gas: 1)\n 11475: jump @1378\n      : @451 (gas: 1)\n 11478: t0 = 386, jump @1782\n      : @452 [@dyn 193] (gas: 1)\n 11485: jump @454 if a1 <u a0\n      : @453 (gas: 1)\n 11488: jump @1379\n      : @454 (gas: 8)\n 11491: a0 = s1 + 0x4000\n 11495: i32 a0 = a0 + 0x380\n 11499: a1 = 0x4\n 11502: ra = 0x184\n 11506: ecalli 4 // 'call_data_load'\n 11508: a0 = 0x4000\n 11512: t0 = 0x186\n 11516: jump @1804\n      : @455 [@dyn 194] (gas: 2)\n 11520: a0 = 0x4000\n 11524: t0 = 390, jump @1804\n      : @456 [@dyn 195] (gas: 13)\n 11531: a0 = u64 [a4 + 0xe8]\n 11535: a1 = u64 [a4 + 0xf0]\n 11539: a2 = u64 [a4 + 0xf8]\n 11543: a3 = u64 [a3 + 0x200]\n 11547: a4 = s1 + 0x1198\n 11551: u64 [a4 + 0x700] = a3\n 11555: a3 = a4 + 0x600\n 11559: u64 [a3 + 0xf8] = a2\n 11563: u64 [a3 + 0xf0] = a1\n 11567: a1 = s1 + 0x1880\n 11571: u64 [a3 + 0xe8] = a0\n 11575: a0 = 0\n 11577: ra = 392, jump @24\n      : @457 [@dyn 196] (gas: 3)\n 11583: t0 = 0x18a\n 11587: a1 = s1 + 0x1198\n 11591: fallthrough\n      : @458 [@dyn 197] (gas: 8)\n 11592: u64 [a1 + 1760] = 0\n 11596: u64 [a1 + 1752] = 0\n 11600: u64 [a1 + 1736] = 0x3\n 11605: a2 = a1\n 11607: a0 = 0x20\n 11610: a1 = s1 + 0x1860\n 11614: u64 [a2 + 1744] = 0\n 11618: ra = 396, jump @24\n      : @459 [@dyn 198] (gas: 2)\n 11624: a1 = i32 [0x20228]\n 11629: jump @461 if a1 >u 63\n      : @460 (gas: 4)\n 11633: a1 = 0x40\n 11636: u32 [0x20228] = a1\n 11641: t0 = 0x18e\n 11645: jump @1756\n      : @461 (gas: 1)\n 11649: t0 = 398, jump @1756\n      : @462 [@dyn 199] (gas: 8)\n 11656: a0 = 0x20230\n 11661: i32 a0 = a0 + 0\n 11663: i32 a2 = a2 + 0\n 11665: a1 = 0x40\n 11668: ra = 0x190\n 11672: ecalli 11 // 'hash_keccak_256'\n 11674: t0 = 0x192\n 11678: jump @1769\n      : @463 [@dyn 200] (gas: 1)\n 11682: t0 = 402, jump @1769\n      : @464 [@dyn 201] (gas: 10)\n 11689: a1 = reverse a3\n 11691: u64 [s1 + 0x218] = a1\n 11695: a3 = s1 + 0x1198\n 11699: u64 [a3 + 0x6a0] = a1\n 11703: u64 [a3 + 0x698] = a2\n 11707: u64 [a3 + 0x690] = a4\n 11711: a0 = s1 + 0x1840\n 11715: a1 = s1 + 0x1820\n 11719: u64 [a3 + 0x688] = a5\n 11723: ra = 404, jump @1504\n      : @465 [@dyn 202] (gas: 9)\n 11730: a4 = s1 + 0x1198\n 11734: a0 = u64 [a4 + 0x6c0]\n 11738: u64 [s1 + 0x1e0] = a0\n 11742: a0 = u64 [a4 + 0x6b8]\n 11746: u64 [s1 + 0x1e8] = a0\n 11750: a0 = u64 [a4 + 0x6b0]\n 11754: u64 [s1 + 0x1f0] = a0\n 11758: a0 = u64 [a4 + 0x6a8]\n 11762: t0 = 406, jump @1762\n      : @466 [@dyn 203] (gas: 10)\n 11769: a5 = u64 [s1 + 0x218]\n 11773: a3 = a3 + a5\n 11776: a5 = a4 + 0x600\n 11780: u64 [a5 + 0x50] = a1\n 11783: u64 [a5 + 0x48] = a0\n 11786: u64 [a5 + 0x58] = a2\n 11789: a0 = s1 + 0x1800\n 11793: a1 = s1 + 0x17e0\n 11797: u64 [a5 + 0x60] = a3\n 11800: ra = 408, jump @1504\n      : @467 [@dyn 204] (gas: 13)\n 11807: a1 = s1 + 0x1198\n 11811: a2 = a1 + 0x600\n 11815: a0 = u64 [a2 + 0x80]\n 11819: u64 [s1 + 0x1c0] = a0\n 11823: a0 = u64 [a2 + 0x78]\n 11826: u64 [s1 + 0x1c8] = a0\n 11830: a0 = u64 [a2 + 0x70]\n 11833: u64 [s1 + 0x1d0] = a0\n 11837: a0 = u64 [a2 + 0x68]\n 11840: u64 [s1 + 0x1d8] = a0\n 11844: a1 = u64 [s1 + 0x208]\n 11848: a0 = a1 + 0x2\n 11851: t0 = 410, jump @1747\n      : @468 [@dyn 205] (gas: 7)\n 11858: u64 [a5 + 0x20] = a1\n 11861: u64 [a5 + 0x18] = a3\n 11864: u64 [a5 + 0x10] = a2\n 11867: u64 [a5 + 0x8] = a0\n 11870: a0 = s1 + 0x17c0\n 11874: a1 = s1 + 0x43a0\n 11878: ra = 412, jump @26\n      : @469 [@dyn 206] (gas: 13)\n 11884: a1 = s1 + 0x1198\n 11888: a2 = a1 + 0x600\n 11892: a0 = u64 [a2 + 0x40]\n 11895: u64 [s1 + 0x1b8] = a0\n 11899: a0 = u64 [a2 + 0x38]\n 11902: u64 [s1 + 0x1b0] = a0\n 11906: a0 = u64 [a2 + 0x30]\n 11909: u64 [s1 + 0x1a8] = a0\n 11913: a0 = u64 [a2 + 0x28]\n 11916: u64 [s1 + 0x1a0] = a0\n 11920: a1 = u64 [s1 + 0x208]\n 11924: a0 = a1 + 0x3\n 11927: t0 = 414, jump @1747\n      : @470 [@dyn 207] (gas: 7)\n 11934: u64 [a5 + 0x40] = a1\n 11937: u64 [a5 + 0x38] = a3\n 11940: u64 [a5 + 0x30] = a2\n 11943: u64 [a5 + 0x28] = a0\n 11946: a0 = s1 + 0x17a0\n 11950: a1 = s1 + 0x43c0\n 11954: ra = 416, jump @26\n      : @471 [@dyn 208] (gas: 13)\n 11960: a5 = s1 + 0x1198\n 11964: a1 = a5 + 0x600\n 11968: a0 = u64 [a1 + 0x20]\n 11971: u64 [s1 + 0x198] = a0\n 11975: a0 = u64 [a1 + 0x18]\n 11978: u64 [s1 + 0x190] = a0\n 11982: a0 = u64 [a1 + 0x10]\n 11985: u64 [s1 + 0x188] = a0\n 11989: a0 = u64 [a1 + 0x8]\n 11992: u64 [s1 + 0x180] = a0\n 11996: a0 = u64 [s1 + 0x208]\n 12000: a2 = a0 + 0x4\n 12003: t0 = 418, jump @1739\n      : @472 [@dyn 209] (gas: 7)\n 12010: u64 [a4 + 0xe0] = a0\n 12014: u64 [a4 + 0xd8] = a3\n 12018: u64 [a4 + 0xd0] = a1\n 12022: a0 = s1 + 0x1780\n 12026: a1 = s1 + 0x1760\n 12030: u64 [a4 + 0xc8] = a2\n 12034: ra = 420, jump @1504\n      : @473 [@dyn 210] (gas: 12)\n 12041: a5 = s1 + 0x1198\n 12045: a0 = u64 [a5 + 0x600]\n 12049: u64 [s1 + 0x160] = a0\n 12053: a0 = u64 [a5 + 0x5f8]\n 12057: u64 [s1 + 0x168] = a0\n 12061: a0 = u64 [a5 + 0x5f0]\n 12065: u64 [s1 + 0x170] = a0\n 12069: a0 = u64 [a5 + 0x5e8]\n 12073: u64 [s1 + 0x178] = a0\n 12077: a0 = u64 [s1 + 0x208]\n 12081: a2 = a0 + 0x5\n 12084: t0 = 422, jump @1739\n      : @474 [@dyn 211] (gas: 7)\n 12091: u64 [a4 + 0xa0] = a0\n 12095: u64 [a4 + 0x98] = a3\n 12099: u64 [a4 + 0x90] = a1\n 12103: a0 = s1 + 0x1740\n 12107: a1 = s1 + 0x1720\n 12111: u64 [a4 + 0x88] = a2\n 12115: ra = 424, jump @1504\n      : @475 [@dyn 212] (gas: 12)\n 12122: a5 = s1 + 0x1198\n 12126: a0 = u64 [a5 + 0x5c0]\n 12130: u64 [s1 + 0x140] = a0\n 12134: a0 = u64 [a5 + 0x5b8]\n 12138: u64 [s1 + 0x148] = a0\n 12142: a0 = u64 [a5 + 0x5b0]\n 12146: u64 [s1 + 0x150] = a0\n 12150: a0 = u64 [a5 + 0x5a8]\n 12154: u64 [s1 + 0x158] = a0\n 12158: a0 = u64 [s1 + 0x208]\n 12162: a2 = a0 + 0x6\n 12165: t0 = 426, jump @1739\n      : @476 [@dyn 213] (gas: 7)\n 12172: u64 [a4 + 0x60] = a0\n 12175: u64 [a4 + 0x58] = a3\n 12178: u64 [a4 + 0x50] = a1\n 12181: a0 = s1 + 0x1700\n 12185: a1 = s1 + 0x16e0\n 12189: u64 [a4 + 0x48] = a2\n 12192: ra = 428, jump @1504\n      : @477 [@dyn 214] (gas: 8)\n 12199: a5 = s1 + 0x1198\n 12203: a0 = u64 [a5 + 0x580]\n 12207: u64 [s1 + 0x130] = a0\n 12211: a0 = u64 [a5 + 0x578]\n 12215: u64 [s1 + 0x138] = a0\n 12219: a1 = u64 [s1 + 0x208]\n 12223: a0 = a1 + 0x7\n 12226: t0 = 430, jump @1754\n      : @478 [@dyn 215] (gas: 18)\n 12233: a1 = u64 [a5 + 0x570]\n 12237: u64 [s1 + 0x120] = a1\n 12241: a1 = u64 [s1 + 0x200]\n 12245: a3 = a3 + a1\n 12248: a1 = a3 <u a1\n 12251: a4 = u64 [s1 + 0x218]\n 12255: a1 = a1 + a4\n 12258: a4 = u64 [a5 + 0x568]\n 12262: u64 [s1 + 0x128] = a4\n 12266: a4 = s1 + 0x4198\n 12270: a5 = a4 + 0x200\n 12274: u64 [a5 + 0x60] = a1\n 12277: u64 [a5 + 0x58] = a3\n 12280: u64 [a5 + 0x50] = a2\n 12283: u64 [a5 + 0x48] = a0\n 12286: a0 = s1 + 0x16c0\n 12290: a1 = s1 + 0x43e0\n 12294: ra = 432, jump @26\n      : @479 [@dyn 216] (gas: 6)\n 12300: a0 = s1 + 0x1198\n 12304: a0 = u16 [a0 + 0x528]\n 12308: u64 [s1 + 0x118] = a0\n 12312: a0 = s1 + 0x16a0\n 12316: a1 = 0x40\n 12319: ra = 434, jump @22\n      : @480 [@dyn 217] (gas: 15)\n 12325: a2 = s1 + 0x1198\n 12329: a3 = a2 + 0x500\n 12333: a4 = u64 [a3 + 0x20]\n 12336: a5 = u64 [a3 + 0x18]\n 12339: a1 = u64 [a3 + 0x10]\n 12342: a0 = u64 [a3 + 0x8]\n 12345: u64 [s1 + 0x210] = a1\n 12349: a3 = a1 | a4\n 12352: a1 = a0 | a5\n 12355: a1 = a1 | a3\n 12358: a1 = a1 >> 0x20\n 12361: a3 = a3 | a5\n 12364: a3 = a3 << 0x20\n 12367: a1 = a1 | a3\n 12370: jump @576 if a1 != 0\n      : @481 (gas: 9)\n 12374: u64 [a2 + 1280] = 0\n 12378: u64 [a2 + 1272] = 0\n 12382: u64 [a2 + 1264] = 0\n 12386: a1 = s1 + 0x1680\n 12390: u64 [a2 + 1256] = 0x100\n 12396: u64 [s1 + 0x218] = a0\n 12400: u64 [s1 + 0x200] = a4\n 12404: u64 [s1 + 0x208] = a5\n 12408: ra = 436, jump @24\n      : @482 [@dyn 218] (gas: 4)\n 12414: a0 = u64 [s1 + 0x218]\n 12418: a0 = a0 + 0x100\n 12422: a1 = u64 [s1 + 0x218]\n 12426: t0 = 438, jump @1754\n      : @483 [@dyn 219] (gas: 25)\n 12433: a1 = u64 [s1 + 0x208]\n 12437: a3 = a3 + a1\n 12440: a1 = u64 [s1 + 0x208]\n 12444: a1 = a3 <u a1\n 12447: a4 = u64 [s1 + 0x200]\n 12451: a4 = a4 + a1\n 12454: a1 = s1 + 0x1198\n 12458: a5 = a1 + 0x400\n 12462: u64 [a5 + 0x90] = a2\n 12466: u64 [a5 + 0x88] = a0\n 12470: a0 = u64 [s1 + 0x1e0]\n 12474: u64 [a5 + 0xc0] = a0\n 12478: a0 = u64 [s1 + 0x1e8]\n 12482: u64 [a5 + 0xb8] = a0\n 12486: a0 = u64 [s1 + 0x1f0]\n 12490: u64 [a5 + 0xb0] = a0\n 12494: a0 = u64 [s1 + 0x1f8]\n 12498: u64 [a5 + 0xa8] = a0\n 12502: u64 [a5 + 0x98] = a3\n 12506: a3 = a1\n 12508: a0 = s1 + 0x1660\n 12512: a1 = s1 + 0x1640\n 12516: a2 = s1 + 0x1620\n 12520: u64 [a3 + 0x4a0] = a4\n 12524: ra = 440, jump @1527\n      : @484 [@dyn 220] (gas: 13)\n 12531: a5 = s1 + 0x200\n 12535: a3 = u64 [a5 + 0x8]\n 12538: ra = u64 [s1 + 0x200]\n 12542: a1 = u64 [a5 + 0x18]\n 12545: a2 = a3 | ra\n 12548: a0 = 0x100000000\n 12558: u64 [s1 + 0x1f8] = a0\n 12562: a0 = 0xffffffe0\n 12572: a0 = a1 <u a0\n 12575: a4 = u64 [a5 + 0x10]\n 12578: a0 = 0 if a4 != 0\n 12580: a0 = 0 if a2 != 0\n 12582: jump @576 if a0 == 0\n      : @485 (gas: 42)\n 12586: a0 = s1 + 0x1198\n 12590: a5 = u64 [a0 + 0x4c8]\n 12594: a4 = u64 [a0 + 0x4d0]\n 12598: u64 [s1 + 0x1f0] = a4\n 12602: t0 = u64 [a0 + 0x4e0]\n 12606: u64 [s1 + 0x110] = t0\n 12610: a4 = u64 [a0 + 0x4d8]\n 12614: u64 [s1 + 0x1e0] = a4\n 12618: t1 = a5 <u a1\n 12621: t2 = a5\n 12623: u64 [s1 + 0x108] = a5\n 12627: a1 = u64 [s1 + 0x210]\n 12631: a5 = u64 [s1 + 0x1f0]\n 12635: a0 = a5 ^ a1\n 12638: u64 [s1 + 0x100] = a0\n 12642: u64 [s1 + 0x1e8] = a2\n 12646: a2 = a5 <u a1\n 12649: a0 = a5\n 12651: a5 = a1\n 12653: a1 = u64 [s1 + 0x100]\n 12657: a2 = t1 if a1 == 0\n 12660: a1 = a4 - a3\n 12663: a3 = a4 <u a3\n 12666: a4 = t0 - ra\n 12669: a4 = a4 - a3\n 12672: a3 = a1 <u a2\n 12675: a4 = a4 - a3\n 12678: a1 = a1 - a2\n 12681: a2 = a0 - a5\n 12684: a2 = a2 - t1\n 12687: a0 = u64 [s1 + 0x218]\n 12691: a3 = t2 - a0\n 12694: a0 = u64 [s1 + 0x218]\n 12698: i32 a0 = a0 + 0x20\n 12701: a5 = s1 + 0x1198\n 12705: u64 [a5 + 0x468] = a3\n 12709: a3 = a5 + 0x400\n 12713: u64 [a3 + 0x70] = a2\n 12716: u64 [a3 + 0x78] = a1\n 12719: a1 = s1 + 0x1600\n 12723: u64 [a3 + 0x80] = a4\n 12727: ra = 442, jump @24\n      : @486 [@dyn 221] (gas: 3)\n 12733: t0 = 0x1bc\n 12737: a1 = s1 + 0x1198\n 12741: fallthrough\n      : @487 [@dyn 222] (gas: 22)\n 12742: a0 = u64 [s1 + 0x110]\n 12746: a2 = a1 + 0x400\n 12750: u64 [a2 + 0x20] = a0\n 12753: a0 = u64 [s1 + 0x1e0]\n 12757: u64 [a2 + 0x18] = a0\n 12760: a0 = u64 [s1 + 0x1f0]\n 12764: u64 [a2 + 0x10] = a0\n 12767: a0 = u64 [s1 + 0x108]\n 12771: u64 [a2 + 0x8] = a0\n 12774: a0 = u64 [s1 + 0x1c0]\n 12778: u64 [a2 + 0x40] = a0\n 12781: a0 = u64 [s1 + 0x1c8]\n 12785: u64 [a2 + 0x38] = a0\n 12788: a0 = u64 [s1 + 0x1d0]\n 12792: u64 [a2 + 0x30] = a0\n 12795: a4 = a1\n 12797: a0 = s1 + 0x15e0\n 12801: a1 = s1 + 0x15c0\n 12805: a2 = s1 + 0x15a0\n 12809: a3 = u64 [s1 + 0x1d8]\n 12813: u64 [a4 + 0x428] = a3\n 12817: ra = 446, jump @1527\n      : @488 [@dyn 223] (gas: 4)\n 12824: a1 = u64 [s1 + 0x218]\n 12828: a0 = u64 [s1 + 0x1f8]\n 12832: a0 = a0 + 0xffffffffffffffc0\n 12835: t0 = 448, jump @1744\n      : @489 [@dyn 224] (gas: 1)\n 12842: jump @576 if a0 == 0\n      : @490 (gas: 22)\n 12846: a2 = s1 + 0x1198\n 12850: a4 = a2 + 0x400\n 12854: a0 = u64 [a4 + 0x60]\n 12857: u64 [s1 + 0x1d8] = a0\n 12861: a0 = u64 [a4 + 0x58]\n 12864: u64 [s1 + 0x1e0] = a0\n 12868: a0 = u64 [a4 + 0x50]\n 12871: u64 [s1 + 0x1f0] = a0\n 12875: a0 = u64 [a4 + 0x48]\n 12878: u64 [s1 + 0x1f8] = a0\n 12882: i32 a0 = a1 + 0x40\n 12885: a1 = u64 [s1 + 0x1a0]\n 12889: a3 = a2 + 0x300\n 12893: u64 [a3 + 0xe8] = a1\n 12897: a1 = u64 [s1 + 0x1a8]\n 12901: u64 [a3 + 0xf0] = a1\n 12905: a1 = u64 [s1 + 0x1b0]\n 12909: u64 [a3 + 0xf8] = a1\n 12913: a1 = s1 + 0x1580\n 12917: a3 = u64 [s1 + 0x1b8]\n 12921: u64 [a4] = a3\n 12923: ra = 450, jump @24\n      : @491 [@dyn 225] (gas: 4)\n 12929: a1 = u64 [s1 + 0x218]\n 12933: a3 = 0x100000000\n 12943: a0 = 0xffffffa0\n 12953: t0 = 452, jump @1744\n      : @492 [@dyn 226] (gas: 1)\n 12960: jump @576 if a0 == 0\n      : @493 (gas: 14)\n 12964: i32 a0 = a1 + 0x60\n 12967: a2 = s1 + 0x1198\n 12971: a1 = u64 [s1 + 0x180]\n 12975: a4 = a2 + 0x300\n 12979: u64 [a4 + 0xc8] = a1\n 12983: a1 = u64 [s1 + 0x188]\n 12987: u64 [a4 + 0xd0] = a1\n 12991: a1 = u64 [s1 + 0x190]\n 12995: u64 [a4 + 0xd8] = a1\n 12999: a1 = s1 + 0x1560\n 13003: u64 [s1 + 0x1d0] = a3\n 13007: a3 = u64 [s1 + 0x198]\n 13011: u64 [a4 + 0xe0] = a3\n 13015: ra = 454, jump @24\n      : @494 [@dyn 227] (gas: 4)\n 13021: a1 = u64 [s1 + 0x218]\n 13025: a0 = u64 [s1 + 0x1d0]\n 13029: a0 = a0 + 0xffffffffffffff80\n 13032: t0 = 456, jump @1744\n      : @495 [@dyn 228] (gas: 1)\n 13039: jump @576 if a0 == 0\n      : @496 (gas: 35)\n 13043: a2 = u64 [s1 + 0x1f8]\n 13047: t1 = a2 <u a1\n 13050: t0 = a2\n 13052: a3 = u64 [s1 + 0x210]\n 13056: a4 = u64 [s1 + 0x1f0]\n 13060: a1 = a4 ^ a3\n 13063: a2 = a4 <u a3\n 13066: a0 = a4\n 13068: a5 = a3\n 13070: a2 = t1 if a1 == 0\n 13073: a3 = u64 [s1 + 0x208]\n 13077: a4 = u64 [s1 + 0x1e0]\n 13081: a1 = a4 - a3\n 13084: t2 = a4 <u a3\n 13087: a4 = u64 [s1 + 0x200]\n 13091: a3 = u64 [s1 + 0x1d8]\n 13095: a4 = a3 - a4\n 13098: a4 = a4 - t2\n 13101: a3 = a1 <u a2\n 13104: a4 = a4 - a3\n 13107: a1 = a1 - a2\n 13110: a2 = a0 - a5\n 13113: a2 = a2 - t1\n 13116: a0 = u64 [s1 + 0x218]\n 13120: a3 = t0 - a0\n 13123: a0 = u64 [s1 + 0x218]\n 13127: i32 a0 = a0 + 0x80\n 13131: a5 = s1 + 0x1198\n 13135: u64 [a5 + 0x3a8] = a3\n 13139: a3 = a5 + 0x300\n 13143: u64 [a3 + 0xb0] = a2\n 13147: u64 [a3 + 0xb8] = a1\n 13151: a1 = s1 + 0x1540\n 13155: u64 [a3 + 0xc0] = a4\n 13159: ra = 458, jump @24\n      : @497 [@dyn 229] (gas: 3)\n 13165: t0 = 0x1cc\n 13169: a1 = s1 + 0x1198\n 13173: fallthrough\n      : @498 [@dyn 230] (gas: 22)\n 13174: a0 = u64 [s1 + 0x1d8]\n 13178: a2 = a1 + 0x300\n 13182: u64 [a2 + 0x60] = a0\n 13185: a0 = u64 [s1 + 0x1e0]\n 13189: u64 [a2 + 0x58] = a0\n 13192: a0 = u64 [s1 + 0x1f0]\n 13196: u64 [a2 + 0x50] = a0\n 13199: a0 = u64 [s1 + 0x1f8]\n 13203: u64 [a2 + 0x48] = a0\n 13206: a0 = u64 [s1 + 0x160]\n 13210: u64 [a2 + 0x80] = a0\n 13214: a0 = u64 [s1 + 0x168]\n 13218: u64 [a2 + 0x78] = a0\n 13221: a0 = u64 [s1 + 0x170]\n 13225: u64 [a2 + 0x70] = a0\n 13228: a4 = a1\n 13230: a0 = s1 + 0x1520\n 13234: a1 = s1 + 0x1500\n 13238: a2 = s1 + 0x14e0\n 13242: a3 = u64 [s1 + 0x178]\n 13246: u64 [a4 + 0x368] = a3\n 13250: ra = 462, jump @1527\n      : @499 [@dyn 231] (gas: 4)\n 13257: a1 = u64 [s1 + 0x218]\n 13261: a3 = 0x100000000\n 13271: a0 = 0xffffff60\n 13281: t0 = 464, jump @1744\n      : @500 [@dyn 232] (gas: 1)\n 13288: jump @576 if a0 == 0\n      : @501 (gas: 40)\n 13292: a0 = s1 + 0x1198\n 13296: t1 = u64 [a0 + 0x388]\n 13300: a5 = u64 [a0 + 0x390]\n 13304: t2 = u64 [a0 + 0x3a0]\n 13308: u64 [s1 + 0x1e0] = t2\n 13312: ra = u64 [a0 + 0x398]\n 13316: t0 = t1 <u a1\n 13319: u64 [s1 + 0x1d0] = t1\n 13323: a4 = u64 [s1 + 0x210]\n 13327: a1 = a5 ^ a4\n 13330: a2 = a5 <u a4\n 13333: a0 = a5\n 13335: u64 [s1 + 0x1d8] = a5\n 13339: a5 = a4\n 13341: a2 = t0 if a1 == 0\n 13344: u64 [s1 + 0x1f8] = a3\n 13348: a3 = u64 [s1 + 0x208]\n 13352: u64 [s1 + 0x1f0] = ra\n 13356: a1 = ra - a3\n 13359: a3 = ra <u a3\n 13362: a4 = u64 [s1 + 0x200]\n 13366: a4 = t2 - a4\n 13369: a4 = a4 - a3\n 13372: a3 = a1 <u a2\n 13375: a4 = a4 - a3\n 13378: a1 = a1 - a2\n 13381: a2 = a0 - a5\n 13384: a2 = a2 - t0\n 13387: a0 = u64 [s1 + 0x218]\n 13391: a3 = t1 - a0\n 13394: a0 = u64 [s1 + 0x218]\n 13398: i32 a0 = a0 + 0xa0\n 13402: a5 = s1 + 0x1198\n 13406: u64 [a5 + 0x328] = a3\n 13410: a3 = a5 + 0x300\n 13414: u64 [a3 + 0x30] = a2\n 13417: u64 [a3 + 0x38] = a1\n 13420: a1 = s1 + 0x14c0\n 13424: u64 [a3 + 0x40] = a4\n 13427: ra = 466, jump @24\n      : @502 [@dyn 233] (gas: 3)\n 13433: t0 = 0x1d4\n 13437: a1 = s1 + 0x1198\n 13441: fallthrough\n      : @503 [@dyn 234] (gas: 22)\n 13442: a0 = u64 [s1 + 0x1e0]\n 13446: a2 = a1 + 0x200\n 13450: u64 [a2 + 0xe0] = a0\n 13454: a0 = u64 [s1 + 0x1f0]\n 13458: u64 [a2 + 0xd8] = a0\n 13462: a0 = u64 [s1 + 0x1d8]\n 13466: u64 [a2 + 0xd0] = a0\n 13470: a0 = u64 [s1 + 0x1d0]\n 13474: u64 [a2 + 0xc8] = a0\n 13478: a0 = u64 [s1 + 0x140]\n 13482: u64 [a1 + 0x300] = a0\n 13486: a0 = u64 [s1 + 0x148]\n 13490: u64 [a2 + 0xf8] = a0\n 13494: a0 = u64 [s1 + 0x150]\n 13498: u64 [a2 + 0xf0] = a0\n 13502: a4 = a1\n 13504: a0 = s1 + 0x14a0\n 13508: a1 = s1 + 0x1480\n 13512: a2 = s1 + 0x1460\n 13516: a3 = u64 [s1 + 0x158]\n 13520: u64 [a4 + 0x2e8] = a3\n 13524: ra = 470, jump @1527\n      : @504 [@dyn 235] (gas: 9)\n 13531: a2 = u64 [s1 + 0x1e8]\n 13535: a1 = u64 [s1 + 0x218]\n 13539: a0 = u64 [s1 + 0x1f8]\n 13543: a0 = a0 + 0xffffffffffffff40\n 13547: a0 = a1 <u a0\n 13550: a3 = u64 [s1 + 0x210]\n 13554: a0 = 0 if a3 != 0\n 13556: a0 = 0 if a2 != 0\n 13558: jump @576 if a0 == 0\n      : @505 (gas: 38)\n 13562: a0 = s1 + 0x1198\n 13566: t1 = u64 [a0 + 0x308]\n 13570: t0 = u64 [a0 + 0x310]\n 13574: a5 = u64 [a0 + 0x320]\n 13578: u64 [s1 + 0x1f0] = a5\n 13582: ra = u64 [a0 + 0x318]\n 13586: t2 = t1 <u a1\n 13589: u64 [s1 + 0x1d8] = t1\n 13593: a3 = u64 [s1 + 0x210]\n 13597: a1 = t0 ^ a3\n 13600: a2 = t0 <u a3\n 13603: u64 [s1 + 0x1e0] = t0\n 13607: a0 = a3\n 13609: a2 = t2 if a1 == 0\n 13612: a3 = u64 [s1 + 0x208]\n 13616: u64 [s1 + 0x1f8] = ra\n 13620: a1 = ra - a3\n 13623: a3 = ra <u a3\n 13626: a4 = u64 [s1 + 0x200]\n 13630: a4 = a5 - a4\n 13633: a4 = a4 - a3\n 13636: a3 = a1 <u a2\n 13639: a4 = a4 - a3\n 13642: a1 = a1 - a2\n 13645: a2 = t0 - a0\n 13648: a2 = a2 - t2\n 13651: a0 = u64 [s1 + 0x218]\n 13655: a3 = t1 - a0\n 13658: a0 = u64 [s1 + 0x218]\n 13662: i32 a0 = a0 + 0xc0\n 13666: a5 = s1 + 0x1198\n 13670: u64 [a5 + 0x2a8] = a3\n 13674: a3 = a5 + 0x200\n 13678: u64 [a3 + 0xb0] = a2\n 13682: u64 [a3 + 0xb8] = a1\n 13686: a1 = s1 + 0x1440\n 13690: u64 [a3 + 0xc0] = a4\n 13694: ra = 472, jump @24\n      : @506 [@dyn 236] (gas: 3)\n 13700: t0 = 0x1da\n 13704: a1 = s1 + 0x1198\n 13708: fallthrough\n      : @507 [@dyn 237] (gas: 22)\n 13709: a0 = u64 [s1 + 0x1f0]\n 13713: a2 = a1 + 0x200\n 13717: u64 [a2 + 0x60] = a0\n 13720: a0 = u64 [s1 + 0x1f8]\n 13724: u64 [a2 + 0x58] = a0\n 13727: a0 = u64 [s1 + 0x1e0]\n 13731: u64 [a2 + 0x50] = a0\n 13734: a0 = u64 [s1 + 0x1d8]\n 13738: u64 [a2 + 0x48] = a0\n 13741: a0 = u64 [s1 + 0x130]\n 13745: u64 [a2 + 0x80] = a0\n 13749: a0 = u64 [s1 + 0x138]\n 13753: u64 [a2 + 0x78] = a0\n 13756: a0 = u64 [s1 + 0x120]\n 13760: u64 [a2 + 0x70] = a0\n 13763: a4 = a1\n 13765: a0 = s1 + 0x1420\n 13769: a1 = s1 + 0x1400\n 13773: a2 = s1 + 0x13e0\n 13777: a3 = u64 [s1 + 0x128]\n 13781: u64 [a4 + 0x268] = a3\n 13785: ra = 476, jump @1527\n      : @508 [@dyn 238] (gas: 3)\n 13792: a1 = u64 [s1 + 0x218]\n 13796: a0 = 0xffffff20\n 13806: t0 = 478, jump @1744\n      : @509 [@dyn 239] (gas: 1)\n 13813: jump @576 if a0 == 0\n      : @510 (gas: 18)\n 13817: a2 = s1 + 0x1198\n 13821: a3 = a2 + 0x200\n 13825: a0 = u64 [a3 + 0xa0]\n 13829: u64 [s1 + 0x1f8] = a0\n 13833: a0 = u64 [a3 + 0x98]\n 13837: u64 [s1 + 0x1f0] = a0\n 13841: a0 = u64 [a3 + 0x90]\n 13845: u64 [s1 + 0x1e8] = a0\n 13849: a0 = u64 [a3 + 0x88]\n 13853: u64 [s1 + 0x1e0] = a0\n 13857: i32 a0 = a1 + 0xe0\n 13861: u64 [a2 + 576] = 0\n 13865: u64 [a2 + 568] = 0\n 13869: a1 = u64 [s1 + 0x118]\n 13873: u64 [a3 + 0x28] = a1\n 13876: a1 = s1 + 0x13c0\n 13880: u64 [a2 + 560] = 0\n 13884: ra = 480, jump @24\n      : @511 [@dyn 240] (gas: 23)\n 13890: a0 = u64 [s1 + 0x218]\n 13894: t1 = u64 [s1 + 0x1e0]\n 13898: t0 = t1 <u a0\n 13901: a5 = u64 [s1 + 0x210]\n 13905: a0 = u64 [s1 + 0x1e8]\n 13909: a1 = a0 ^ a5\n 13912: a2 = a0 <u a5\n 13915: t2 = a0\n 13917: a2 = t0 if a1 == 0\n 13920: a0 = u64 [s1 + 0x208]\n 13924: a3 = u64 [s1 + 0x1f0]\n 13928: a1 = a3 - a0\n 13931: a3 = a3 <u a0\n 13934: a0 = u64 [s1 + 0x200]\n 13938: a4 = u64 [s1 + 0x1f8]\n 13942: a4 = a4 - a0\n 13945: a4 = a4 - a3\n 13948: a3 = a1 <u a2\n 13951: a3 = a4 - a3\n 13954: a0 = u64 [s1 + 0x218]\n 13958: a4 = a1 - a2\n 13961: a2 = t2 - a5\n 13964: fallthrough\n      : @512 (gas: 10)\n 13965: a2 = a2 - t0\n 13968: a1 = t1 - a0\n 13971: a2 = a2 | a3\n 13974: a3 = a1 | a4\n 13977: a3 = a3 | a2\n 13980: a2 = a2 | a4\n 13983: a3 = a3 >> 0x20\n 13986: a2 = a2 << 0x20\n 13989: a2 = a2 | a3\n 13992: jump @576 if a2 != 0\n      : @513 (gas: 2)\n 13996: u64 [s1 + 0x218] = a1\n 14000: ra = 482, jump @36\n      : @514 [@dyn 241] (gas: 5)\n 14006: i32 a1 = a0 + 0\n 14008: a2 = i32 [s1 + 0x218]\n 14012: a0 = 0\n 14014: ecalli 16 // 'seal_return'\n 14016: jump @446\n      : @515 (gas: 11)\n 14019: u64 [a2 + 544] = 0\n 14023: u64 [a2 + 536] = 0\n 14027: u64 [a2 + 528] = 0\n 14031: u64 [a2 + 520] = 0\n 14035: a0 = s1 + 0x5000\n 14039: i32 a0 = a0 + 0xfffffffffffffba0\n 14043: ra = 0x1e4\n 14047: ecalli 19 // 'value_transferred'\n 14049: a0 = 0x5000\n 14053: t0 = 0x1e6\n 14057: jump @1806\n      : @516 [@dyn 242] (gas: 2)\n 14061: a0 = 0x5000\n 14065: t0 = 486, jump @1806\n      : @517 [@dyn 243] (gas: 1)\n 14072: t0 = 488, jump @1811\n      : @518 [@dyn 244] (gas: 1)\n 14079: jump @520 if a0 == 0\n      : @519 (gas: 1)\n 14082: jump @1380\n      : @520 (gas: 1)\n 14085: t0 = 490, jump @1782\n      : @521 [@dyn 245] (gas: 1)\n 14092: jump @523 if a1 <u a0\n      : @522 (gas: 1)\n 14095: jump @1381\n      : @523 (gas: 24)\n 14098: a0 = s1 + 0x5000\n 14102: i32 a0 = a0 + 0xfffffffffffffbc0\n 14106: a1 = 0x4\n 14109: ecalli 4 // 'call_data_load'\n 14111: a0 = s1 + 0x4998\n 14115: a5 = a0 + 0x200\n 14119: a4 = u64 [a5 + 0x40]\n 14122: a3 = u64 [a5 + 0x38]\n 14125: a1 = u64 [a5 + 0x30]\n 14128: a2 = u64 [a5 + 0x28]\n 14131: a0 = s1 + 0x3998\n 14135: a5 = s1 + 0x100\n 14139: u64 [a5 + 0xa0] = a4\n 14143: u64 [a0 + 0x140] = a4\n 14147: u64 [a5 + 0xa8] = a3\n 14151: a4 = a0 + 0x100\n 14155: u64 [a4 + 0x38] = a3\n 14158: u64 [a5 + 0xb0] = a1\n 14162: u64 [a4 + 0x30] = a1\n 14165: a1 = s1 + 0x3ac0\n 14169: u64 [a5 + 0xb8] = a2\n 14173: u64 [a4 + 0x28] = a2\n 14176: a0 = 0\n 14178: ra = 492, jump @24\n      : @524 [@dyn 246] (gas: 9)\n 14184: a1 = s1 + 0x3998\n 14188: u64 [a1 + 288] = 0\n 14192: u64 [a1 + 280] = 0\n 14196: u64 [a1 + 264] = 0x2\n 14201: a2 = a1\n 14203: a0 = 0x20\n 14206: a1 = s1 + 0x3aa0\n 14210: u64 [a2 + 272] = 0\n 14214: ra = 494, jump @24\n      : @525 [@dyn 247] (gas: 3)\n 14220: a1 = 0x20228\n 14225: a0 = i32 [0x20228]\n 14230: jump @527 if a0 >u 63\n      : @526 (gas: 3)\n 14234: u32 [0x20228] = 0x40\n 14240: t0 = 0x1f0\n 14244: jump @1756\n      : @527 (gas: 1)\n 14248: t0 = 496, jump @1756\n      : @528 [@dyn 248] (gas: 10)\n 14255: a0 = 0x20230\n 14260: i32 a0 = a0 + 0\n 14262: i32 a2 = a2 + 0\n 14264: u64 [s1 + 0x1e8] = a1\n 14268: a1 = 0x40\n 14271: u64 [s1 + 0x1f0] = a0\n 14275: ra = 0x1f2\n 14279: ecalli 11 // 'hash_keccak_256'\n 14281: t0 = 0x1f4\n 14285: jump @1734\n      : @529 [@dyn 249] (gas: 1)\n 14289: t0 = 500, jump @1734\n      : @530 [@dyn 250] (gas: 8)\n 14296: a5 = a4 + 0x200\n 14300: u64 [a5 + 0x60] = a3\n 14303: u64 [a5 + 0x58] = a2\n 14306: u64 [a5 + 0x50] = a1\n 14309: u64 [a5 + 0x48] = a0\n 14312: a0 = s1 + 0x3a80\n 14316: a1 = s1 + 0x4be0\n 14320: ra = 502, jump @26\n      : @531 [@dyn 251] (gas: 3)\n 14326: t0 = 0x1f8\n 14330: a4 = s1 + 0x3998\n 14334: fallthrough\n      : @532 [@dyn 252] (gas: 15)\n 14335: a3 = u64 [a4 + 0x100]\n 14339: a2 = u64 [a4 + 0xf8]\n 14343: a1 = u64 [a4 + 0xf0]\n 14347: a0 = u64 [a4 + 0xe8]\n 14351: u64 [s1 + 0x180] = a3\n 14355: u64 [a4 + 0xe0] = a3\n 14359: u64 [s1 + 0x188] = a2\n 14363: u64 [a4 + 0xd8] = a2\n 14367: u64 [s1 + 0x190] = a1\n 14371: u64 [a4 + 0xd0] = a1\n 14375: a1 = s1 + 0x3a60\n 14379: u64 [s1 + 0x198] = a0\n 14383: u64 [a4 + 0xc8] = a0\n 14387: a0 = 0\n 14389: ra = 506, jump @24\n      : @533 [@dyn 253] (gas: 2)\n 14395: a0 = 0x4000\n 14399: t0 = 508, jump @1786\n      : @534 [@dyn 254] (gas: 3)\n 14406: a1 = s1 + 0x3a40\n 14410: u64 [a2 + 0xb0] = a3\n 14414: ra = 510, jump @24\n      : @535 [@dyn 255] (gas: 2)\n 14420: a1 = u64 [s1 + 0x1e8]\n 14424: t0 = 512, jump @1809\n      : @536 [@dyn 256] (gas: 2)\n 14431: a0 = i32 [a1]\n 14433: jump @538 if a0 >u 63\n      : @537 (gas: 3)\n 14437: u32 [a1 + 0] = 0x40\n 14440: t0 = 0x202\n 14444: jump @1808\n      : @538 (gas: 1)\n 14448: t0 = 514, jump @1808\n      : @539 [@dyn 257] (gas: 5)\n 14455: a0 = u64 [s1 + 0x1f0]\n 14459: ra = 0x204\n 14463: ecalli 11 // 'hash_keccak_256'\n 14465: t0 = 0x206\n 14469: jump @1772\n      : @540 [@dyn 258] (gas: 1)\n 14473: t0 = 518, jump @1772\n      : @541 [@dyn 259] (gas: 11)\n 14480: u64 [a3 + 0x8] = a2\n 14483: a1 = u64 [a3 + 0x18]\n 14486: u64 [a1 + 0x18] = a2\n 14489: u64 [a3 + 0x10] = a0\n 14492: u64 [a1 + 0x10] = a0\n 14495: u64 [a3] = a4\n 14497: u64 [a1 + 0x8] = a4\n 14500: u64 [s1 + 0x1f8] = a5\n 14504: u64 [a1] = a5\n 14506: a0 = s1 + 0x3a20\n 14510: ra = 520, jump @26\n      : @542 [@dyn 260] (gas: 3)\n 14516: a2 = s1 + 0x3998\n 14520: a0 = u8 [a2 + 0x88]\n 14524: jump @544 if a0 <=u 3\n      : @543 (gas: 1)\n 14528: jump @1382\n      : @544 (gas: 10)\n 14531: a0 = a0 + 0xffffffffffffffff\n 14534: a0 = a0 <u 0x1\n 14537: u64 [a2 + 128] = 0\n 14541: u64 [a2 + 120] = 0\n 14544: u64 [a2 + 0x68] = a0\n 14547: a0 = s1 + 0x3a00\n 14551: u64 [a2 + 112] = 0\n 14554: ra = 0x20a\n 14558: t0 = 0x68c\n 14562: jump @1780\n      : @545 [@dyn 261] (gas: 3)\n 14566: a0 = s1 + 0x39e0\n 14570: a1 = u64 [s1 + 0x218]\n 14574: ra = 524, jump @26\n      : @546 [@dyn 262] (gas: 16)\n 14580: a3 = s1 + 0x3998\n 14584: a0 = u64 [a3 + 0x48]\n 14587: a1 = u64 [a3 + 0x50]\n 14590: a2 = u64 [a3 + 0x60]\n 14593: a3 = u64 [a3 + 0x58]\n 14596: a0 = a0 & 0xffffffffffffff00\n 14600: a0 = a0 | 0x2\n 14603: a4 = s1 + 0x4998\n 14607: a5 = a4 + 0x200\n 14611: u64 [a5 + 0x80] = a2\n 14615: u64 [a5 + 0x78] = a3\n 14618: u64 [a5 + 0x70] = a1\n 14621: u64 [a5 + 0x68] = a0\n 14624: a1 = s1 + 0x4c00\n 14628: a0 = u64 [s1 + 0x218]\n 14632: ra = 526, jump @28\n      : @547 [@dyn 263] (gas: 3)\n 14638: a1 = u64 [s1 + 0x1f8]\n 14642: a0 = a1 + 0x2\n 14645: t0 = 528, jump @1766\n      : @548 [@dyn 264] (gas: 9)\n 14652: a4 = s1 + 0x4998\n 14656: a5 = a4 + 0x200\n 14660: u64 [a5 + 0xa0] = a1\n 14664: u64 [a5 + 0x98] = a3\n 14668: u64 [a5 + 0x90] = a2\n 14672: u64 [a5 + 0x88] = a0\n 14676: a0 = s1 + 0x39c0\n 14680: a1 = s1 + 0x4c20\n 14684: ra = 530, jump @26\n      : @549 [@dyn 265] (gas: 8)\n 14690: a5 = s1 + 0x3998\n 14694: a0 = u32 [a5 + 0x38]\n 14697: u64 [s1 + 0x1e8] = a0\n 14701: a1 = u64 [s1 + 0x1f8]\n 14705: a0 = a1 + 0x3\n 14708: a1 = a0 <u a1\n 14711: a3 = u64 [s1 + 0x200]\n 14715: t0 = 532, jump @1765\n      : @550 [@dyn 266] (gas: 18)\n 14722: a1 = u64 [a5 + 0x30]\n 14725: u64 [s1 + 0x1f8] = a1\n 14729: a1 = u64 [s1 + 0x210]\n 14733: a3 = a3 + a1\n 14736: a1 = a3 <u a1\n 14739: a4 = u64 [s1 + 0x208]\n 14743: a1 = a1 + a4\n 14746: a4 = u64 [a5 + 0x28]\n 14749: u64 [s1 + 0x1e0] = a4\n 14753: a4 = s1 + 0x4998\n 14757: a5 = a4 + 0x200\n 14761: u64 [a5 + 0xc0] = a1\n 14765: u64 [a5 + 0xb8] = a3\n 14769: u64 [a5 + 0xb0] = a2\n 14773: u64 [a5 + 0xa8] = a0\n 14777: a0 = s1 + 0x39a0\n 14781: a1 = s1 + 0x4c40\n 14785: ra = 534, jump @26\n      : @551 [@dyn 267] (gas: 13)\n 14791: a1 = s1 + 0x3998\n 14795: a0 = u64 [a1 + 0x20]\n 14798: a2 = s1 + 0x100\n 14802: u64 [a2 + 0xd8] = a0\n 14806: a0 = u64 [a1 + 0x18]\n 14809: u64 [a2 + 0xd0] = a0\n 14813: a0 = u64 [a1 + 0x10]\n 14816: u64 [a2 + 0xc8] = a0\n 14820: a0 = u64 [a1 + 0x8]\n 14823: u64 [a2 + 0xc0] = a0\n 14827: a0 = s1 + 0x3980\n 14831: a1 = 0x40\n 14834: ra = 536, jump @22\n      : @552 [@dyn 268] (gas: 21)\n 14840: a0 = s1 + 0x3998\n 14844: t0 = u64 [a0 + 0xffffffffffffffe8]\n 14847: t1 = u64 [a0]\n 14849: t2 = u64 [a0 + 0xfffffffffffffff0]\n 14852: a5 = u64 [a0 + 0xfffffffffffffff8]\n 14855: a0 = t0 + 0x20\n 14858: a1 = a0 <u t0\n 14861: a2 = t2 + a1\n 14864: a3 = a2 <u t2\n 14867: a3 = a1 if a1 == 0\n 14870: a3 = a3 + a5\n 14873: a1 = a3 <u a5\n 14876: a1 = a1 + t1\n 14879: a4 = a0 | a3\n 14882: a1 = a1 | a2\n 14885: a4 = a4 | a1\n 14888: a4 = a4 >> 0x20\n 14891: a1 = a1 | a3\n 14894: a1 = a1 << 0x20\n 14897: a1 = a1 | a4\n 14900: jump @576 if a1 != 0\n      : @553 (gas: 12)\n 14904: a2 = s1 + 0x3198\n 14908: u64 [a2 + 2008] = 0\n 14912: u64 [a2 + 2000] = 0\n 14916: a1 = 0xa9059cbb00000000\n 14926: u64 [a2 + 0x7e0] = a1\n 14930: a1 = s1 + 0x3960\n 14934: u64 [a2 + 1992] = 0\n 14938: u64 [s1 + 0x218] = t0\n 14942: u64 [s1 + 0x210] = t2\n 14946: u64 [s1 + 0x208] = t1\n 14950: u64 [s1 + 0x200] = a5\n 14954: ra = 538, jump @24\n      : @554 [@dyn 269] (gas: 13)\n 14960: a5 = s1 + 0x200\n 14964: a4 = u64 [a5]\n 14966: a3 = u64 [a5 + 0x10]\n 14969: a1 = u64 [a5 + 0x18]\n 14972: a0 = a1 + 0x24\n 14975: a1 = a0 <u a1\n 14978: a2 = a3 + a1\n 14981: a3 = a2 <u a3\n 14984: a3 = a1 if a1 == 0\n 14987: a3 = a3 + a4\n 14990: a1 = a3 <u a4\n 14993: a4 = u64 [a5 + 0x8]\n 14996: t0 = 540, jump @1732\n      : @555 [@dyn 270] (gas: 1)\n 15003: jump @576 if a1 != 0\n      : @556 (gas: 12)\n 15007: a2 = s1 + 0x3198\n 15011: u64 [a2 + 1984] = 0\n 15015: a4 = s1 + 0x100\n 15019: a1 = u64 [a4 + 0xe0]\n 15023: a5 = a2 + 0x700\n 15027: u64 [a5 + 0xa8] = a1\n 15031: a1 = u64 [a4 + 0xf8]\n 15035: u64 [a5 + 0xb0] = a1\n 15039: a1 = s1 + 0x3940\n 15043: a3 = u64 [a4 + 0xe8]\n 15047: u64 [a5 + 0xb8] = a3\n 15051: ra = 542, jump @24\n      : @557 [@dyn 271] (gas: 13)\n 15057: a5 = s1 + 0x200\n 15061: a4 = u64 [a5]\n 15063: a3 = u64 [a5 + 0x10]\n 15066: a1 = u64 [a5 + 0x18]\n 15069: a0 = a1 + 0x44\n 15072: a1 = a0 <u a1\n 15075: a2 = a3 + a1\n 15078: a3 = a2 <u a3\n 15081: a3 = a1 if a1 == 0\n 15084: a3 = a3 + a4\n 15087: a1 = a3 <u a4\n 15090: a4 = u64 [a5 + 0x8]\n 15093: t0 = 544, jump @1732\n      : @558 [@dyn 272] (gas: 1)\n 15100: jump @576 if a1 != 0\n      : @559 (gas: 13)\n 15104: a2 = s1 + 0x3198\n 15108: a4 = s1 + 0x100\n 15112: a1 = u64 [a4 + 0xc0]\n 15116: a5 = a2 + 0x700\n 15120: u64 [a5 + 0x88] = a1\n 15124: a1 = u64 [a4 + 0xc8]\n 15128: u64 [a5 + 0x90] = a1\n 15132: a1 = u64 [a4 + 0xd0]\n 15136: u64 [a5 + 0x98] = a1\n 15140: a1 = s1 + 0x3920\n 15144: a3 = u64 [a4 + 0xd8]\n 15148: u64 [a5 + 0xa0] = a3\n 15152: ra = 546, jump @24\n      : @560 [@dyn 273] (gas: 13)\n 15158: a0 = s1 + 0x200\n 15162: a5 = u64 [a0]\n 15164: a4 = u64 [a0 + 0x8]\n 15167: a3 = u64 [a0 + 0x10]\n 15170: a2 = u64 [a0 + 0x18]\n 15173: a0 = a2 | a5\n 15176: a1 = a3 | a4\n 15179: a0 = a0 | a1\n 15182: a0 = a0 >> 0x20\n 15185: a1 = a1 | a5\n 15188: a1 = a1 << 0x20\n 15191: a0 = a0 | a1\n 15194: jump @576 if a0 != 0\n      : @561 (gas: 9)\n 15198: a0 = s1 + 0x3198\n 15202: u64 [a0 + 1920] = 0\n 15206: u64 [a0 + 1912] = 0\n 15210: u64 [a0 + 1904] = 0\n 15214: t0 = 0x44\n 15217: a1 = s1 + 0x3900\n 15221: u64 [a0 + 0x768] = t0\n 15225: a0 = a2\n 15227: ra = 548, jump @24\n      : @562 [@dyn 274] (gas: 18)\n 15233: a1 = s1 + 0x3198\n 15237: u64 [a1 + 1856] = 0\n 15241: u64 [a1 + 1848] = 0\n 15245: u64 [a1 + 1840] = 0\n 15249: a2 = a1 + 0x700\n 15253: u64 [a2 + 40] = 0x64\n 15257: a0 = u64 [s1 + 0x208]\n 15261: u64 [a2 + 0x60] = a0\n 15264: a0 = u64 [s1 + 0x200]\n 15268: u64 [a2 + 0x58] = a0\n 15271: a0 = u64 [s1 + 0x210]\n 15275: u64 [a2 + 0x50] = a0\n 15278: a3 = a1\n 15280: a0 = s1 + 0x38e0\n 15284: a1 = s1 + 0x38c0\n 15288: a2 = u64 [s1 + 0x218]\n 15292: u64 [a3 + 0x748] = a2\n 15296: ra = 550, jump @1494\n      : @563 [@dyn 275] (gas: 1)\n 15302: ra = 552, jump @15\n      : @564 [@dyn 276] (gas: 21)\n 15308: a2 = u64 [0x30250]\n 15313: a1 = u64 [0x30258]\n 15318: a3 = u64 [0x30260]\n 15323: a0 = u64 [0x30268]\n 15328: a4 = s1 + 0x3198\n 15332: a5 = u64 [s1 + 0x208]\n 15336: u64 [a4 + 0x700] = a5\n 15340: a5 = u64 [s1 + 0x200]\n 15344: u64 [a4 + 0x6f8] = a5\n 15348: a5 = u64 [s1 + 0x210]\n 15352: u64 [a4 + 0x6f0] = a5\n 15356: a5 = u64 [s1 + 0x218]\n 15360: u64 [a4 + 0x6e8] = a5\n 15364: a5 = a4 + 0x700\n 15368: u64 [a5 + 0x20] = a0\n 15371: u64 [a5 + 0x18] = a3\n 15374: u64 [a5 + 0x10] = a1\n 15377: a0 = s1 + 0x38a0\n 15381: a1 = s1 + 0x3880\n 15385: u64 [a5 + 0x8] = a2\n 15388: ra = 554, jump @1690\n      : @565 [@dyn 277] (gas: 34)\n 15395: a5 = s1 + 0x100\n 15399: a0 = u64 [a5 + 0x80]\n 15403: a4 = s1 + 0x3198\n 15407: u64 [a4 + 0x6a0] = a0\n 15411: a0 = u64 [a5 + 0x88]\n 15415: u64 [a4 + 0x698] = a0\n 15419: a0 = u64 [a5 + 0x90]\n 15423: u64 [a4 + 0x690] = a0\n 15427: a0 = u64 [a5 + 0x98]\n 15431: u64 [a4 + 0x688] = a0\n 15435: a0 = u64 [a5 + 0xa0]\n 15439: u64 [a4 + 0x6c0] = a0\n 15443: a0 = u64 [a5 + 0xa8]\n 15447: u64 [a4 + 0x6b8] = a0\n 15451: a0 = u64 [a5 + 0xb0]\n 15455: u64 [a4 + 0x6b0] = a0\n 15459: a0 = u64 [0x20040]\n 15464: a1 = u64 [0x20048]\n 15469: a2 = u64 [0x20050]\n 15474: a3 = u64 [a5 + 0xb8]\n 15478: a5 = a4 + 0x600\n 15482: u64 [a5 + 0xa8] = a3\n 15486: u64 [a5 + 0xe0] = a0\n 15490: u64 [a5 + 0xd8] = a1\n 15494: u64 [a5 + 0xd0] = a2\n 15498: a1 = a4\n 15500: a0 = u64 [0x20058]\n 15505: a2 = s1 + 0x3860\n 15509: a3 = s1 + 0x3840\n 15513: a4 = s1 + 0x3820\n 15517: u64 [a1 + 0x6c8] = a0\n 15521: a0 = 0\n 15523: a1 = 0\n 15525: ra = 556, jump @31\n      : @566 [@dyn 278] (gas: 1)\n 15531: jump @1375\n      : @567 (gas: 8)\n 15534: u64 [a2 + 832] = 0\n 15538: u64 [a2 + 824] = 0\n 15542: u64 [a2 + 816] = 0\n 15546: u64 [a2 + 808] = 0\n 15550: a0 = s1 + 0x5000\n 15554: i32 a0 = a0 + 0xfffffffffffffcc0\n 15558: ecalli 19 // 'value_transferred'\n 15560: fallthrough\n      : @568 (gas: 10)\n 15561: a3 = s1 + 0x4998\n 15565: a4 = a3 + 0x300\n 15569: a0 = u64 [a4 + 0x38]\n 15572: a1 = u64 [a4 + 0x40]\n 15575: a2 = u64 [a4 + 0x30]\n 15578: a3 = u64 [a4 + 0x28]\n 15581: a1 = a1 | a2\n 15584: a0 = a0 | a3\n 15587: a0 = a0 | a1\n 15590: jump @570 if a0 == 0\n      : @569 (gas: 1)\n 15593: jump @1389\n      : @570 (gas: 3)\n 15596: a0 = u64 [s1 + 0x218]\n 15600: a0 = i32 [a0]\n 15602: jump @572 if a0 >u 3\n      : @571 (gas: 1)\n 15606: jump @1390\n      : @572 (gas: 3)\n 15609: a0 = s1 + 0x3ba0\n 15613: a1 = 0x40\n 15616: ra = 558, jump @22\n      : @573 [@dyn 279] (gas: 11)\n 15622: a0 = s1 + 0x3998\n 15626: a2 = a0 + 0x200\n 15630: a1 = u64 [a2 + 0x20]\n 15633: u64 [s1 + 0x218] = a1\n 15637: a1 = u64 [a2 + 0x18]\n 15640: u64 [s1 + 0x210] = a1\n 15644: a1 = u64 [a2 + 0x10]\n 15647: u64 [s1 + 0x200] = a1\n 15651: a0 = u64 [a2 + 0x8]\n 15654: u64 [s1 + 0x208] = a0\n 15658: ra = 560, jump @15\n      : @574 [@dyn 280] (gas: 14)\n 15664: a4 = s1 + 0x200\n 15668: a0 = u64 [a4 + 0x18]\n 15671: a1 = u64 [a4]\n 15673: a0 = a0 | a1\n 15676: a1 = u64 [a4 + 0x8]\n 15679: a3 = a1\n 15681: a2 = u64 [a4 + 0x10]\n 15684: a1 = a1 | a2\n 15687: a1 = a1 | a0\n 15690: a1 = a1 >> 0x20\n 15693: a0 = a0 | a2\n 15696: a0 = a0 << 0x20\n 15699: a0 = a0 | a1\n 15702: jump @576 if a0 != 0\n      : @575 (gas: 1)\n 15705: jump @1391\n      : @576 (gas: 1)\n 15708: trap\n      : @577 (gas: 21)\n 15709: a5 = s1 + 0x100\n 15713: a1 = u64 [a5 + 0x78]\n 15716: a0 = a1 + 0x6\n 15719: a1 = a0 <u a1\n 15722: a3 = u64 [a5 + 0x80]\n 15726: a2 = a3 + a1\n 15729: a3 = a2 <u a3\n 15732: a3 = a1 if a1 == 0\n 15735: a1 = u64 [a5 + 0x90]\n 15739: a3 = a3 + a1\n 15742: a1 = a3 <u a1\n 15745: a4 = u64 [a5 + 0x88]\n 15749: a1 = a1 + a4\n 15752: a4 = t0\n 15754: u64 [a4 + 0xc8] = a0\n 15758: u64 [a4 + 0xd0] = a2\n 15762: u64 [a4 + 0xd8] = a3\n 15766: u64 [a4 + 0xe0] = a1\n 15770: a0 = s1 + 0x36c0\n 15774: a1 = s1 + 0x4a60\n 15778: ra = 562, jump @26\n      : @578 [@dyn 281] (gas: 14)\n 15784: a0 = s1 + 0x3198\n 15788: a2 = a0 + 0x500\n 15792: a1 = u64 [a2 + 0x28]\n 15795: u64 [s1 + 0x218] = a1\n 15799: a1 = u64 [a2 + 0x30]\n 15802: u64 [s1 + 0x210] = a1\n 15806: a1 = u64 [a2 + 0x38]\n 15809: u64 [s1 + 0x208] = a1\n 15813: a0 = u64 [a2 + 0x40]\n 15816: u64 [s1 + 0x200] = a0\n 15820: a0 = s1 + 0x5000\n 15824: i32 a0 = a0 + 0xfffffffffffffa80\n 15828: ecalli 12 // 'now'\n 15830: fallthrough\n      : @579 (gas: 21)\n 15831: a3 = s1 + 0x4998\n 15835: a0 = u64 [a3 + 0x100]\n 15839: t0 = u64 [a3 + 0xe8]\n 15843: a2 = u64 [a3 + 0xf8]\n 15847: a3 = u64 [a3 + 0xf0]\n 15851: a1 = u64 [s1 + 0x200]\n 15855: a4 = a0 ^ a1\n 15858: a1 = a1 <u a0\n 15861: a0 = u64 [s1 + 0x208]\n 15865: a5 = a0 <u a2\n 15868: a5 = a1 if a4 != 0\n 15871: a1 = u64 [s1 + 0x210]\n 15875: t1 = a3 ^ a1\n 15878: a3 = a1 <u a3\n 15881: a1 = u64 [s1 + 0x218]\n 15885: a1 = a1 <u t0\n 15888: a1 = a3 if t1 != 0\n 15891: a0 = a0 ^ a2\n 15894: a0 = a0 | a4\n 15897: a1 = a5 if a0 != 0\n 15900: jump @625 if a1 == 0\n      : @580 (gas: 3)\n 15904: a0 = s1 + 0x2dc0\n 15908: a1 = 0x40\n 15911: ra = 564, jump @22\n      : @581 [@dyn 282] (gas: 14)\n 15917: a2 = s1 + 0x2998\n 15921: t0 = u64 [a2 + 0x440]\n 15925: a1 = a2 + 0x400\n 15929: a5 = u64 [a1 + 0x38]\n 15932: a4 = u64 [a1 + 0x30]\n 15935: a0 = u64 [a1 + 0x28]\n 15938: a3 = a4 | t0\n 15941: a1 = a0 | a5\n 15944: a1 = a1 | a3\n 15947: a1 = a1 >> 0x20\n 15950: a3 = a3 | a5\n 15953: a3 = a3 << 0x20\n 15956: a1 = a1 | a3\n 15959: jump @576 if a1 != 0\n      : @582 (gas: 11)\n 15963: u64 [a2 + 1048] = 0\n 15967: u64 [a2 + 1040] = 0\n 15971: u64 [a2 + 1032] = 0\n 15975: a3 = 0x8c379a000000000\n 15985: a1 = s1 + 0x2da0\n 15989: u64 [a2 + 0x420] = a3\n 15993: u64 [s1 + 0x218] = a0\n 15997: u64 [s1 + 0x210] = a4\n 16001: u64 [s1 + 0x200] = t0\n 16005: u64 [s1 + 0x208] = a5\n 16009: ra = 566, jump @24\n      : @583 [@dyn 283] (gas: 1)\n 16015: t0 = 568, jump @1726\n      : @584 [@dyn 284] (gas: 1)\n 16022: jump @576 if a0 == 0\n      : @585 (gas: 1)\n 16026: t0 = 570, jump @1800\n      : @586 [@dyn 285] (gas: 8)\n 16033: u64 [a2 + 1024] = 0\n 16037: u64 [a2 + 1016] = 0\n 16041: u64 [a2 + 1000] = 0x20\n 16046: a1 = s1 + 0x2d80\n 16050: u64 [a2 + 1008] = 0\n 16054: u64 [s1 + 0x208] = a3\n 16058: u64 [s1 + 0x200] = a4\n 16062: ra = 572, jump @24\n      : @587 [@dyn 286] (gas: 1)\n 16068: t0 = 574, jump @1729\n      : @588 [@dyn 287] (gas: 1)\n 16075: jump @576 if a0 == 0\n      : @589 (gas: 8)\n 16079: i32 a0 = a1 + 0x24\n 16082: a3 = s1 + 0x2998\n 16086: u64 [a3 + 992] = 0\n 16090: u64 [a3 + 984] = 0\n 16094: u64 [a3 + 968] = 0xe\n 16099: a1 = s1 + 0x2d60\n 16103: u64 [a3 + 976] = 0\n 16107: ra = 576, jump @24\n      : @590 [@dyn 288] (gas: 1)\n 16113: t0 = 578, jump @1727\n      : @591 [@dyn 289] (gas: 1)\n 16120: jump @576 if a0 == 0\n      : @592 (gas: 11)\n 16124: i32 a0 = a3 + 0x44\n 16127: a1 = u64 [0x200b0]\n 16132: a2 = u64 [0x200b8]\n 16137: a4 = s1 + 0x2998\n 16141: u64 [a4 + 0x3c0] = a1\n 16145: u64 [a4 + 944] = 0\n 16149: u64 [a4 + 0x3b8] = a2\n 16153: a1 = s1 + 0x2d40\n 16157: u64 [a4 + 936] = 0\n 16161: ra = 0x50c\n 16165: jump @24\n      : @593 (gas: 3)\n 16168: a0 = a3 | a5\n 16171: a0 = a0 | a1\n 16174: jump @664 if a0 != 0\n      : @594 (gas: 6)\n 16178: u64 [s1 + 0xd8] = a2\n 16182: u64 [s1 + 512] = 0\n 16186: u64 [s1 + 504] = 0\n 16190: u64 [s1 + 520] = 0\n 16194: u64 [s1 + 528] = 0\n 16198: jump @666\n      : @595 (gas: 9)\n 16201: a0 = s1 + 0x100\n 16205: a4 = u64 [a0 + 0xd8]\n 16209: a4 = a4 << 0x20\n 16212: t2 = a4 >> 0x20\n 16215: a4 = u64 [a0 + 0x68]\n 16218: a5 = u64 [a0 + 0x60]\n 16221: a4 = a4 | a5\n 16224: a4 = a4 | t2\n 16227: jump @597 if a4 == 0\n      : @596 (gas: 1)\n 16230: jump @700\n      : @597 (gas: 3)\n 16233: a0 = s1 + 0x1f40\n 16237: a1 = 0x40\n 16240: ra = 580, jump @22\n      : @598 [@dyn 290] (gas: 14)\n 16246: a2 = s1 + 0x1998\n 16250: t0 = u64 [a2 + 0x5c0]\n 16254: a1 = a2 + 0x500\n 16258: a5 = u64 [a1 + 0xb8]\n 16262: a4 = u64 [a1 + 0xb0]\n 16266: a0 = u64 [a1 + 0xa8]\n 16270: a3 = a4 | t0\n 16273: a1 = a0 | a5\n 16276: a1 = a1 | a3\n 16279: a1 = a1 >> 0x20\n 16282: a3 = a3 | a5\n 16285: a3 = a3 << 0x20\n 16288: a1 = a1 | a3\n 16291: jump @576 if a1 != 0\n      : @599 (gas: 11)\n 16295: u64 [a2 + 1432] = 0\n 16299: u64 [a2 + 1424] = 0\n 16303: u64 [a2 + 1416] = 0\n 16307: a3 = 0x8c379a000000000\n 16317: a1 = s1 + 0x1f20\n 16321: u64 [a2 + 0x5a0] = a3\n 16325: u64 [s1 + 0x218] = a0\n 16329: u64 [s1 + 0x210] = a4\n 16333: u64 [s1 + 0x200] = t0\n 16337: u64 [s1 + 0x208] = a5\n 16341: ra = 582, jump @24\n      : @600 [@dyn 291] (gas: 1)\n 16347: t0 = 584, jump @1726\n      : @601 [@dyn 292] (gas: 1)\n 16354: jump @576 if a0 == 0\n      : @602 (gas: 1)\n 16358: t0 = 586, jump @1781\n      : @603 [@dyn 293] (gas: 8)\n 16365: u64 [a2 + 1408] = 0\n 16369: u64 [a2 + 1400] = 0\n 16373: u64 [a2 + 1384] = 0x20\n 16378: a1 = s1 + 0x1f00\n 16382: u64 [a2 + 1392] = 0\n 16386: u64 [s1 + 0x208] = a3\n 16390: u64 [s1 + 0x200] = a4\n 16394: ra = 588, jump @24\n      : @604 [@dyn 294] (gas: 1)\n 16400: t0 = 590, jump @1729\n      : @605 [@dyn 295] (gas: 1)\n 16407: jump @576 if a0 == 0\n      : @606 (gas: 8)\n 16411: i32 a0 = a1 + 0x24\n 16414: a3 = s1 + 0x1998\n 16418: u64 [a3 + 1376] = 0\n 16422: u64 [a3 + 1368] = 0\n 16426: u64 [a3 + 1352] = 0x17\n 16431: a1 = s1 + 0x1ee0\n 16435: u64 [a3 + 1360] = 0\n 16439: ra = 592, jump @24\n      : @607 [@dyn 296] (gas: 1)\n 16445: t0 = 594, jump @1727\n      : @608 [@dyn 297] (gas: 1)\n 16452: jump @576 if a0 == 0\n      : @609 (gas: 13)\n 16456: i32 a0 = a3 + 0x44\n 16459: a1 = u64 [0x200f0]\n 16464: a2 = u64 [0x20158]\n 16469: a3 = u64 [0x20100]\n 16474: a4 = s1 + 0x1998\n 16478: a5 = a4 + 0x500\n 16482: u64 [a5 + 0x40] = a1\n 16485: u64 [a5 + 0x38] = a2\n 16488: u64 [a5 + 0x30] = a3\n 16491: a1 = s1 + 0x1ec0\n 16495: u64 [a4 + 1320] = 0\n 16499: ra = 0x50c\n 16503: jump @24\n      : @610 (gas: 7)\n 16506: t2 = u64 [s1 + 0x208]\n 16510: t0 = u64 [s1 + 0x188]\n 16514: a3 = u64 [s1 + 0x1a0]\n 16518: a3 = a3 ^ t0\n 16521: a3 = a3 | a5\n 16524: a3 = a3 | a4\n 16527: jump @624 if a3 == 0\n      : @611 (gas: 20)\n 16531: a3 = ra <u t2\n 16534: a2 = a2 + a3\n 16537: a4 = u64 [s1 + 0x210]\n 16541: a0 = a2 ^ a4\n 16544: a5 = a2 <u a4\n 16547: a5 = a3 if a0 == 0\n 16550: a5 = a5 + a1\n 16553: a3 = a5 <u a1\n 16556: a0 = u64 [s1 + 0x218]\n 16560: a1 = a1 <u a0\n 16563: a0 = t1 + a1\n 16566: a0 = a0 + a3\n 16569: a1 = ra | a5\n 16572: a0 = a0 | a2\n 16575: a1 = a1 | a0\n 16578: a1 = a1 >> 0x20\n 16581: a0 = a0 | a5\n 16584: a0 = a0 << 0x20\n 16587: a0 = a0 | a1\n 16590: jump @576 if a0 != 0\n      : @612 (gas: 2)\n 16594: a0 = t0 << 0x3b\n 16597: t0 = 596, jump @1745\n      : @613 [@dyn 298] (gas: 1)\n 16604: ra = 598, jump @1817\n      : @614 [@dyn 299] (gas: 1)\n 16611: t0 = 600, jump @1758\n      : @615 [@dyn 300] (gas: 1)\n 16618: ra = 602, jump @1812\n      : @616 [@dyn 301] (gas: 1)\n 16625: t0 = 604, jump @1733\n      : @617 [@dyn 302] (gas: 1)\n 16632: ra = 606, jump @1812\n      : @618 [@dyn 303] (gas: 1)\n 16639: t0 = 608, jump @1725\n      : @619 [@dyn 304] (gas: 5)\n 16646: i32 a0 = a0 + 0xfffffffffffffda0\n 16650: ra = 0x262\n 16654: ecalli 4 // 'call_data_load'\n 16656: a4 = s1 + 0x3998\n 16660: jump @621\n      : @620 [@dyn 305] (gas: 2)\n 16662: a4 = s1 + 0x3998\n 16666: fallthrough\n      : @621 (gas: 5)\n 16667: a0 = u64 [a4 + 0x408]\n 16671: a1 = u64 [a4 + 0x410]\n 16675: a2 = u64 [a4 + 0x418]\n 16679: a3 = u64 [a4 + 0x420]\n 16683: t0 = 612, jump @1731\n      : @622 [@dyn 306] (gas: 8)\n 16690: a5 = a4 + 0x400\n 16694: u64 [a5 + 0x40] = a3\n 16697: u64 [a5 + 0x38] = a2\n 16700: u64 [a5 + 0x30] = a1\n 16703: u64 [a5 + 0x28] = a0\n 16706: a1 = s1 + 0x3dc0\n 16710: a0 = u64 [s1 + 0x1f8]\n 16714: ra = 614, jump @28\n      : @623 [@dyn 307] (gas: 2)\n 16720: a0 = u64 [s1 + 0x1d0]\n 16724: fallthrough\n      : @624 (gas: 20)\n 16725: a1 = u64 [s1 + 0xc8]\n 16729: a5 = u64 [s1 + 0xc0]\n 16733: a5 = a5 | a1\n 16736: a1 = u64 [s1 + 0xd0]\n 16740: a2 = u64 [s1 + 0xe8]\n 16744: a1 = a1 | a2\n 16747: a2 = u64 [s1 + 0xb8]\n 16751: a3 = u64 [s1 + 0xf0]\n 16755: a2 = a2 | a3\n 16758: a3 = u64 [s1 + 0xd8]\n 16762: a3 = a3 + 0x1\n 16765: a4 = s1 + 0x3998\n 16769: u64 [a4 + 0x448] = a3\n 16773: a3 = a4 + 0x400\n 16777: u64 [a3 + 0x50] = a2\n 16780: u64 [a3 + 0x58] = a1\n 16783: u64 [a3 + 0x60] = a5\n 16786: a1 = s1 + 0x3de0\n 16790: ra = 0x2a8\n 16794: jump @28\n      : @625 (gas: 27)\n 16797: a0 = sp + 0xffffffffffffffe0\n 16800: a5 = a0 & 0xffffffffffffffe0\n 16803: sp = a5\n 16805: a0 = u64 [s1 + 0x178]\n 16809: a2 = a0 + 0x4\n 16812: a0 = a2 <u a0\n 16815: a1 = u64 [s1 + 0x180]\n 16819: a3 = a1 + a0\n 16822: a1 = a3 <u a1\n 16825: a1 = a0 if a0 == 0\n 16828: a0 = u64 [s1 + 0x190]\n 16832: a4 = a0 + a1\n 16835: a0 = a4 <u a0\n 16838: a1 = u64 [s1 + 0x188]\n 16842: a0 = a0 + a1\n 16845: u64 [s1 + 0x108] = a3\n 16849: u64 [s1 + 0x218] = a5\n 16853: u64 [a5 + 0x8] = a3\n 16856: u64 [s1 + 0x110] = a2\n 16860: u64 [a5] = a2\n 16862: u64 [s1 + 0x100] = a4\n 16866: u64 [a5 + 0x10] = a4\n 16869: u64 [s1 + 0xf8] = a0\n 16873: u64 [a5 + 0x18] = a0\n 16876: a0 = s1 + 0x36a0\n 16880: a1 = 0x40\n 16883: ra = 616, jump @22\n      : @626 [@dyn 308] (gas: 25)\n 16889: a3 = s1 + 0x3198\n 16893: a4 = a3 + 0x500\n 16897: a0 = u64 [a4 + 0x8]\n 16900: a2 = u64 [a4 + 0x20]\n 16903: a1 = u64 [a4 + 0x10]\n 16906: a3 = u64 [a4 + 0x18]\n 16909: a4 = a0 + 0x20\n 16912: u64 [s1 + 0x1d8] = a4\n 16916: u64 [s1 + 0x130] = a0\n 16920: a0 = a4 <u a0\n 16923: a4 = a1 + a0\n 16926: u64 [s1 + 0x1c8] = a4\n 16930: u64 [s1 + 0x128] = a1\n 16934: a1 = a4 <u a1\n 16937: a1 = a0 if a0 == 0\n 16940: a1 = a1 + a3\n 16943: u64 [s1 + 0x1d0] = a1\n 16947: u64 [s1 + 0x118] = a3\n 16951: a0 = a1 <u a3\n 16954: u64 [s1 + 0x120] = a2\n 16958: a0 = a0 + a2\n 16961: u64 [s1 + 0x1c0] = a0\n 16965: a0 = s1 + 0x3680\n 16969: a1 = u64 [s1 + 0x218]\n 16973: ra = 618, jump @26\n      : @627 [@dyn 309] (gas: 18)\n 16979: a1 = s1 + 0x3198\n 16983: a0 = u64 [a1 + 0x500]\n 16987: a5 = a1 + 0x400\n 16991: a2 = u64 [a5 + 0xf8]\n 16995: a3 = u64 [a5 + 0xf0]\n 16999: a4 = u64 [a5 + 0xe8]\n 17003: u64 [s1 + 0x218] = a4\n 17007: u64 [s1 + 0x210] = a0\n 17011: u64 [a5 + 0xc0] = a0\n 17015: u64 [s1 + 0x208] = a2\n 17019: u64 [a5 + 0xb8] = a2\n 17023: u64 [s1 + 0x200] = a3\n 17027: u64 [a5 + 0xb0] = a3\n 17031: a2 = a1\n 17033: a0 = s1 + 0x3660\n 17037: a1 = s1 + 0x3640\n 17041: u64 [a2 + 0x4a8] = a4\n 17045: ra = 620, jump @1485\n      : @628 [@dyn 310] (gas: 20)\n 17051: a5 = u64 [s1 + 0x218]\n 17055: a1 = u64 [s1 + 0x1d0]\n 17059: t0 = s1 + 0x3198\n 17063: a2 = t0 + 0x400\n 17067: a0 = u64 [a2 + 0xe0]\n 17071: u64 [s1 + 0x1b8] = a0\n 17075: a0 = u64 [a2 + 0xd8]\n 17079: u64 [s1 + 0x1b0] = a0\n 17083: a0 = u64 [a2 + 0xd0]\n 17087: u64 [s1 + 0x1a8] = a0\n 17091: a0 = u64 [a2 + 0xc8]\n 17095: u64 [s1 + 0x1a0] = a0\n 17099: a0 = a5 & 0x1\n 17102: a4 = u64 [s1 + 0x1d8]\n 17106: a4 = a4 | a1\n 17109: a2 = u64 [s1 + 0x1c8]\n 17113: a3 = u64 [s1 + 0x1c0]\n 17117: a3 = a3 | a2\n 17120: a2 = t0\n 17122: jump @630 if a0 == 0\n      : @629 (gas: 1)\n 17125: jump @779\n      : @630 (gas: 6)\n 17128: a0 = a4 | a3\n 17131: a0 = a0 >> 0x20\n 17134: a1 = a1 | a3\n 17137: a1 = a1 << 0x20\n 17140: a0 = a0 | a1\n 17143: jump @576 if a0 != 0\n      : @631 (gas: 15)\n 17147: u64 [s1 + 0xe8] = a4\n 17151: u64 [s1 + 0xf0] = a3\n 17155: a0 = a5 & 0xffffffffffffff00\n 17159: a3 = s1 + 0x200\n 17163: a1 = u64 [a3]\n 17165: a4 = a2 + 0x400\n 17169: u64 [a4 + 0x30] = a1\n 17172: u64 [a4 + 0x28] = a0\n 17175: a0 = u64 [a3 + 0x8]\n 17178: u64 [a4 + 0x38] = a0\n 17181: a1 = s1 + 0x35c0\n 17185: a0 = u64 [a3 + 0x10]\n 17188: u64 [a4 + 0x40] = a0\n 17191: a0 = u64 [s1 + 0x1d8]\n 17195: ra = 622, jump @24\n      : @632 [@dyn 311] (gas: 12)\n 17201: ra = u64 [s1 + 0x130]\n 17205: a5 = u64 [s1 + 0x118]\n 17209: a0 = ra | a5\n 17212: t2 = u64 [s1 + 0x128]\n 17216: t1 = u64 [s1 + 0x120]\n 17220: a1 = t2 | t1\n 17223: a0 = a0 | a1\n 17226: a0 = a0 >> 0x20\n 17229: a1 = a1 | a5\n 17232: a1 = a1 << 0x20\n 17235: a0 = a0 | a1\n 17238: jump @576 if a0 != 0\n      : @633 (gas: 25)\n 17242: a2 = u64 [s1 + 0x1a0]\n 17246: a0 = a2 + 0x20\n 17249: u64 [s1 + 0x210] = a0\n 17253: a0 = a0 <u a2\n 17256: a3 = u64 [s1 + 0x1a8]\n 17260: a1 = a3 + a0\n 17263: u64 [s1 + 0x208] = a1\n 17267: a1 = a1 <u a3\n 17270: a1 = a0 if a0 == 0\n 17273: a4 = u64 [s1 + 0x1b0]\n 17277: a1 = a1 + a4\n 17280: u64 [s1 + 0x200] = a1\n 17284: a0 = a1 <u a4\n 17287: t0 = u64 [s1 + 0x1b8]\n 17291: a0 = a0 + t0\n 17294: u64 [s1 + 0x218] = a0\n 17298: a0 = s1 + 0x3198\n 17302: a1 = a0 + 0x400\n 17306: u64 [a1 + 0x8] = a2\n 17309: u64 [a1 + 0x10] = a3\n 17312: u64 [a1 + 0x18] = a4\n 17315: a1 = s1 + 0x35a0\n 17319: u64 [a0 + 0x420] = t0\n 17323: a0 = ra\n 17325: ra = 624, jump @24\n      : @634 [@dyn 312] (gas: 23)\n 17331: a0 = s1 + 0x3198\n 17335: a4 = s1 + 0x200\n 17339: a1 = u64 [a4]\n 17341: a2 = a0 + 0x300\n 17345: u64 [a2 + 0xd8] = a1\n 17349: a1 = u64 [a4 + 0x8]\n 17352: u64 [a2 + 0xd0] = a1\n 17356: a1 = u64 [a4 + 0x10]\n 17359: u64 [a2 + 0xc8] = a1\n 17363: a1 = u64 [s1 + 0x120]\n 17367: u64 [a0 + 0x400] = a1\n 17371: a1 = u64 [s1 + 0x118]\n 17375: u64 [a2 + 0xf8] = a1\n 17379: a1 = u64 [s1 + 0x128]\n 17383: u64 [a2 + 0xf0] = a1\n 17387: a1 = u64 [s1 + 0x130]\n 17391: u64 [a2 + 0xe8] = a1\n 17395: a3 = a0\n 17397: a0 = s1 + 0x3580\n 17401: a1 = s1 + 0x3560\n 17405: a2 = u64 [a4 + 0x18]\n 17408: u64 [a3 + 0x3e0] = a2\n 17412: ra = 626, jump @1494\n      : @635 [@dyn 313] (gas: 3)\n 17418: a0 = s1 + 0x3540\n 17422: a1 = u64 [s1 + 0x130]\n 17426: ra = 628, jump @22\n      : @636 [@dyn 314] (gas: 9)\n 17432: a2 = u64 [s1 + 0xf0]\n 17436: a0 = u64 [s1 + 0xe8]\n 17440: a0 = a0 | a2\n 17443: a0 = a0 >> 0x20\n 17446: a1 = u64 [s1 + 0x1d0]\n 17450: a1 = a1 | a2\n 17453: a1 = a1 << 0x20\n 17456: a0 = a0 | a1\n 17459: jump @576 if a0 != 0\n      : @637 (gas: 14)\n 17463: a2 = s1 + 0x3198\n 17467: a3 = a2 + 0x300\n 17471: a0 = u64 [a3 + 0xc0]\n 17475: a4 = u64 [a3 + 0xb8]\n 17479: a1 = u64 [a3 + 0xa8]\n 17483: a2 = u64 [a3 + 0xb0]\n 17487: a3 = a1 | a4\n 17490: a0 = a0 | a2\n 17493: a3 = a3 | a0\n 17496: a3 = a3 >> 0x20\n 17499: a0 = a0 | a4\n 17502: a0 = a0 << 0x20\n 17505: a0 = a0 | a3\n 17508: jump @576 if a0 != 0\n      : @638 (gas: 3)\n 17512: a0 = u64 [s1 + 0x1d8]\n 17516: u64 [s1 + 0x218] = a1\n 17520: ra = 630, jump @36\n      : @639 [@dyn 315] (gas: 1)\n 17526: t0 = 632, jump @1794\n      : @640 [@dyn 316] (gas: 3)\n 17533: ra = 0x27a\n 17537: ecalli 11 // 'hash_keccak_256'\n 17539: fallthrough\n      : @641 [@dyn 317] (gas: 3)\n 17540: a5 = s1 + 0x200\n 17544: a3 = u64 [a5 + 0x10]\n 17547: t0 = 636, jump @1759\n      : @642 [@dyn 318] (gas: 12)\n 17554: u64 [a5 + 0x10] = a0\n 17557: a3 = s1 + 0x3198\n 17561: u64 [a3 + 0x3a0] = a0\n 17565: u64 [s1 + 0x1f8] = a2\n 17569: u64 [a3 + 0x398] = a2\n 17573: u64 [a5] = a1\n 17575: u64 [a3 + 0x390] = a1\n 17579: a1 = s1 + 0x3520\n 17583: u64 [a5 + 0x8] = a4\n 17586: u64 [a3 + 0x388] = a4\n 17590: a0 = 0\n 17592: ra = 638, jump @24\n      : @643 [@dyn 319] (gas: 3)\n 17598: t0 = 0x280\n 17602: a1 = s1 + 0x3198\n 17606: fallthrough\n      : @644 [@dyn 320] (gas: 8)\n 17607: u64 [a1 + 896] = 0\n 17611: u64 [a1 + 888] = 0\n 17615: u64 [a1 + 872] = 0x3\n 17620: a2 = a1\n 17622: a0 = 0x20\n 17625: a1 = s1 + 0x3500\n 17629: u64 [a2 + 880] = 0\n 17633: ra = 642, jump @24\n      : @645 [@dyn 321] (gas: 4)\n 17639: a2 = u64 [s1 + 0x158]\n 17643: a0 = i32 [a2]\n 17645: a1 = 0x3f\n 17648: jump @647 if a1 <u a0\n      : @646 (gas: 3)\n 17651: u32 [a2 + 0] = 0x40\n 17654: t0 = 0x284\n 17658: jump @1809\n      : @647 (gas: 1)\n 17662: t0 = 644, jump @1809\n      : @648 [@dyn 322] (gas: 8)\n 17669: i32 a2 = a0 + 0\n 17671: a1 = 0x40\n 17674: a0 = u64 [s1 + 0x160]\n 17678: ra = 0x286\n 17682: ecalli 11 // 'hash_keccak_256'\n 17684: a3 = u64 [s1 + 0x218]\n 17688: t0 = 0x288\n 17692: jump @1746\n      : @649 [@dyn 323] (gas: 2)\n 17696: a3 = u64 [s1 + 0x218]\n 17700: t0 = 648, jump @1746\n      : @650 [@dyn 324] (gas: 9)\n 17707: a1 = s1 + 0x4998\n 17711: a3 = a1 + 0x100\n 17715: u64 [a3 + 0x8] = a4\n 17718: u64 [a3 + 0x10] = a5\n 17721: u64 [a3 + 0x18] = a2\n 17724: u64 [a3 + 0x20] = a0\n 17727: a0 = s1 + 0x34e0\n 17731: a1 = s1 + 0x4aa0\n 17735: ra = 650, jump @26\n      : @651 [@dyn 325] (gas: 10)\n 17741: a4 = s1 + 0x3198\n 17745: a5 = a4 + 0x300\n 17749: a0 = u64 [a5 + 0x58]\n 17752: a1 = u64 [a5 + 0x60]\n 17755: a2 = u64 [a5 + 0x50]\n 17758: a3 = u64 [a5 + 0x48]\n 17761: a1 = a1 | a2\n 17764: a0 = a0 | a3\n 17767: a0 = a0 | a1\n 17770: jump @653 if a0 == 0\n      : @652 (gas: 1)\n 17773: jump @966\n      : @653 (gas: 3)\n 17776: a0 = s1 + 0x2e60\n 17780: a1 = 0x40\n 17783: ra = 652, jump @22\n      : @654 [@dyn 326] (gas: 15)\n 17789: a2 = s1 + 0x2998\n 17793: a0 = a2 + 0x400\n 17797: a4 = u64 [a0 + 0xe0]\n 17801: a5 = u64 [a0 + 0xd8]\n 17805: a3 = u64 [a0 + 0xd0]\n 17809: a1 = u64 [a0 + 0xc8]\n 17813: a0 = a3 | a4\n 17816: u64 [s1 + 0x218] = a1\n 17820: a1 = a1 | a5\n 17823: a1 = a1 | a0\n 17826: a1 = a1 >> 0x20\n 17829: a0 = a0 | a5\n 17832: a0 = a0 << 0x20\n 17835: a0 = a0 | a1\n 17838: jump @576 if a0 != 0\n      : @655 (gas: 11)\n 17842: u64 [a2 + 1208] = 0\n 17846: u64 [a2 + 1200] = 0\n 17850: u64 [a2 + 1192] = 0\n 17854: a0 = 0x8c379a000000000\n 17864: a1 = s1 + 0x2e40\n 17868: u64 [a2 + 0x4c0] = a0\n 17872: a0 = u64 [s1 + 0x218]\n 17876: u64 [s1 + 0x210] = a3\n 17880: u64 [s1 + 0x208] = a4\n 17884: u64 [s1 + 0x200] = a5\n 17888: ra = 654, jump @24\n      : @656 [@dyn 327] (gas: 13)\n 17894: a5 = s1 + 0x200\n 17898: a2 = u64 [a5 + 0x10]\n 17901: a0 = u64 [a5 + 0x8]\n 17904: a1 = u64 [a5]\n 17906: a1 = a1 | a0\n 17909: a3 = 0x100000000\n 17919: a0 = 0xfffffffc\n 17929: a4 = u64 [a5 + 0x18]\n 17932: a0 = a4 <u a0\n 17935: a0 = 0 if a2 != 0\n 17937: u64 [a5 + 0x8] = a1\n 17940: a0 = 0 if a1 != 0\n 17942: jump @576 if a0 == 0\n      : @657 (gas: 11)\n 17946: a0 = u64 [s1 + 0x218]\n 17950: i32 a0 = a0 + 0x4\n 17953: a1 = s1 + 0x2998\n 17957: u64 [s1 + 0x200] = a3\n 17961: a3 = a1\n 17963: u64 [a1 + 1184] = 0\n 17967: u64 [a1 + 1176] = 0\n 17971: u64 [a3 + 1160] = 0x20\n 17976: a1 = s1 + 0x2e20\n 17980: u64 [a3 + 1168] = 0\n 17984: ra = 656, jump @24\n      : @658 [@dyn 328] (gas: 6)\n 17990: a2 = s1 + 0x200\n 17994: a0 = u64 [a2]\n 17996: a0 = a0 + 0xffffffffffffffdc\n 17999: a1 = u64 [a2 + 0x18]\n 18002: a0 = a1 <u a0\n 18005: t0 = 658, jump @1741\n      : @659 [@dyn 329] (gas: 1)\n 18012: jump @576 if a0 == 0\n      : @660 (gas: 9)\n 18016: a0 = u64 [s1 + 0x218]\n 18020: i32 a0 = a0 + 0x24\n 18023: a2 = s1 + 0x2998\n 18027: u64 [a2 + 1152] = 0\n 18031: u64 [a2 + 1144] = 0\n 18035: u64 [a2 + 1128] = 0x18\n 18040: a1 = s1 + 0x2e00\n 18044: u64 [a2 + 1136] = 0\n 18048: ra = 660, jump @24\n      : @661 [@dyn 330] (gas: 5)\n 18054: a0 = 0xffffffbc\n 18064: a2 = s1 + 0x200\n 18068: a1 = u64 [a2 + 0x18]\n 18071: a0 = a1 <u a0\n 18074: t0 = 662, jump @1741\n      : @662 [@dyn 331] (gas: 1)\n 18081: jump @576 if a0 == 0\n      : @663 (gas: 14)\n 18085: a0 = u64 [s1 + 0x218]\n 18089: i32 a0 = a0 + 0x44\n 18092: a1 = u64 [0x20098]\n 18097: a2 = u64 [0x200a0]\n 18102: a3 = u64 [0x200a8]\n 18107: a4 = s1 + 0x2998\n 18111: a5 = a4 + 0x400\n 18115: u64 [a5 + 0x60] = a1\n 18118: u64 [a5 + 0x58] = a2\n 18121: u64 [a5 + 0x50] = a3\n 18124: a1 = s1 + 0x2de0\n 18128: u64 [a4 + 1096] = 0\n 18132: ra = 0x50c\n 18136: jump @24\n      : @664 (gas: 14)\n 18139: u64 [s1 + 0xd0] = ra\n 18143: a3 = s1 + 0x100\n 18147: a4 = u64 [a3 + 0xc0]\n 18151: a5 = u64 [a3 + 0xb8]\n 18155: ra = a4 | a5\n 18158: a1 = u64 [a3 + 0xb0]\n 18162: a0 = u64 [a3 + 0xa8]\n 18166: a1 = a1 | a0\n 18169: a0 = ra | a1\n 18172: a0 = a0 >> 0x20\n 18175: a1 = a1 | a5\n 18178: a1 = a1 << 0x20\n 18181: a0 = a0 | a1\n 18184: jump @576 if a0 != 0\n      : @665 (gas: 25)\n 18188: u64 [s1 + 0xd8] = a2\n 18192: i32 a1 = a4 + 0\n 18194: a0 = s1 + 0x4000\n 18198: i32 a0 = a0 + 0xfffffffffffffe00\n 18202: u64 [s1 + 0xc8] = t0\n 18206: u64 [s1 + 0xc0] = t1\n 18210: u64 [s1 + 0xb8] = t2\n 18214: ecalli 4 // 'call_data_load'\n 18216: t2 = u64 [s1 + 0xb8]\n 18220: t1 = u64 [s1 + 0xc0]\n 18224: t0 = u64 [s1 + 0xc8]\n 18228: a3 = u64 [s1 + 0x188]\n 18232: a0 = s1 + 0x3998\n 18236: a2 = a0 + 0x400\n 18240: a1 = u64 [a2 + 0x80]\n 18244: a4 = s1 + 0x200\n 18248: u64 [a4 + 0x10] = a1\n 18251: a1 = u64 [a2 + 0x78]\n 18254: u64 [a4 + 0x8] = a1\n 18257: a1 = u64 [a2 + 0x70]\n 18260: u64 [s1 + 0x1f8] = a1\n 18264: a0 = u64 [a2 + 0x68]\n 18267: u64 [a4] = a0\n 18269: ra = u64 [s1 + 0xd0]\n 18273: fallthrough\n      : @666 (gas: 9)\n 18274: a0 = u64 [s1 + 0xe8]\n 18278: a0 = a0 | ra\n 18281: u64 [s1 + 0x1f0] = a0\n 18285: a0 = t1 | t0\n 18288: u64 [s1 + 0x1e8] = a0\n 18292: a0 = u64 [s1 + 0xf0]\n 18296: a0 = a0 | t2\n 18299: u64 [s1 + 0x1e0] = a0\n 18303: t0 = 664, jump @1743\n      : @667 [@dyn 332] (gas: 1)\n 18310: ra = 666, jump @1817\n      : @668 [@dyn 333] (gas: 1)\n 18317: t0 = 668, jump @1771\n      : @669 [@dyn 334] (gas: 1)\n 18324: ra = 670, jump @1812\n      : @670 [@dyn 335] (gas: 2)\n 18331: u64 [s1 + 0x1c8] = a0\n 18335: t0 = 672, jump @1749\n      : @671 [@dyn 336] (gas: 1)\n 18342: ra = 674, jump @1812\n      : @672 [@dyn 337] (gas: 7)\n 18349: a4 = u64 [s1 + 0x218]\n 18353: a2 = a4 <u 0x80\n 18357: a3 = u64 [s1 + 0x1b8]\n 18361: a0 = a3 if a2 != 0\n 18364: a5 = u64 [s1 + 0x1c0]\n 18368: a3 = u64 [s1 + 0x1d8]\n 18372: t0 = 676, jump @1751\n      : @673 [@dyn 338] (gas: 12)\n 18379: a4 = u64 [s1 + 0x1c8]\n 18383: a4 = 0 if a2 == 0\n 18385: a1 = u64 [s1 + 0x1f8]\n 18389: a1 = a1 & ~a3\n 18392: a2 = u64 [s1 + 0x200]\n 18396: a0 = a2 & ~a0\n 18399: a2 = u64 [s1 + 0x208]\n 18403: a2 = a2 & ~a4\n 18406: a3 = u64 [s1 + 0x210]\n 18410: a3 = a3 & ~a5\n 18413: a4 = u64 [s1 + 0xd8]\n 18417: t0 = 678, jump @1755\n      : @674 [@dyn 339] (gas: 8)\n 18424: u64 [a4 + 0x498] = a2\n 18428: a2 = a4 + 0x400\n 18432: u64 [a2 + 0xa0] = a3\n 18436: u64 [a2 + 0x90] = a1\n 18440: u64 [a2 + 0x88] = a0\n 18444: a1 = s1 + 0x3e20\n 18448: a0 = u64 [a5 + 0xd0]\n 18452: ra = 680, jump @28\n      : @675 [@dyn 340] (gas: 64)\n 18458: a0 = sp + 0xffffffffffffffe0\n 18461: a5 = a0 & 0xffffffffffffffe0\n 18464: sp = a5\n 18466: a0 = u64 [s1 + 0x168]\n 18470: a2 = a0 + 0x1\n 18473: a0 = a2 <u 0x1\n 18476: a1 = u64 [s1 + 0x170]\n 18480: a3 = a1 + a0\n 18483: a0 = a2 | a3\n 18486: a0 = a0 <u 0x1\n 18489: a1 = u64 [s1 + 0x180]\n 18493: a4 = a1 + a0\n 18496: a0 = a4 <u a1\n 18499: a1 = u64 [s1 + 0x178]\n 18503: a0 = a0 + a1\n 18506: u64 [s1 + 0x1f0] = a4\n 18510: u64 [a5 + 0x10] = a4\n 18513: u64 [s1 + 0x1f8] = a3\n 18517: u64 [a5 + 0x8] = a3\n 18520: u64 [s1 + 0x208] = a2\n 18524: u64 [a5] = a2\n 18526: u64 [s1 + 0x200] = a0\n 18530: u64 [s1 + 0x1c8] = a5\n 18534: u64 [a5 + 0x18] = a0\n 18537: a0 = u64 [s1 + 0x158]\n 18541: a2 = a0 + 0x24\n 18544: a0 = a2 <u a0\n 18547: a1 = u64 [s1 + 0x160]\n 18551: a3 = a1 + a0\n 18554: a1 = a3 <u a1\n 18557: a1 = a0 if a0 == 0\n 18560: a0 = u64 [s1 + 0x128]\n 18564: a1 = a1 + a0\n 18567: a0 = a1 <u a0\n 18570: a4 = u64 [s1 + 0x130]\n 18574: a4 = a4 + a0\n 18577: a5 = s1 + 0x7ff\n 18581: a5 = a5 + 0x199\n 18585: u64 [s1 + 0xb0] = a4\n 18589: u64 [a5 + 0x5c0] = a4\n 18593: u64 [s1 + 0xb8] = a1\n 18597: a4 = a5 + 0x500\n 18601: u64 [a4 + 0xb8] = a1\n 18605: u64 [s1 + 0xc0] = a3\n 18609: u64 [a4 + 0xb0] = a3\n 18613: u64 [s1 + 0xc8] = a2\n 18617: u64 [a4 + 0xa8] = a2\n 18621: a0 = u64 [s1 + 0x138]\n 18625: u64 [a4 + 0xe0] = a0\n 18629: a0 = u64 [s1 + 0x140]\n 18633: u64 [a4 + 0xd8] = a0\n 18637: a0 = u64 [s1 + 0x148]\n 18641: u64 [a4 + 0xd0] = a0\n 18645: a0 = s1 + 0x7ff\n 18649: a0 = a0 + 0x781\n 18653: a1 = s1 + 0x7ff\n 18657: a1 = a1 + 0x761\n 18661: a2 = s1 + 0x7ff\n 18665: a2 = a2 + 0x741\n 18669: a3 = u64 [s1 + 0x150]\n 18673: u64 [a4 + 0xc8] = a3\n 18677: ra = 0x2aa\n 18681: t0 = 0x66c\n 18685: jump @1760\n      : @676 [@dyn 341] (gas: 7)\n 18689: a1 = s1 + 0x7ff\n 18693: a1 = a1 + 0x199\n 18697: a0 = a1 + 0x600\n 18701: a4 = u64 [a0 + 0x20]\n 18704: a2 = u64 [a0 + 0x18]\n 18707: a3 = u64 [a0 + 0x10]\n 18710: t0 = 684, jump @1738\n      : @677 [@dyn 342] (gas: 1)\n 18717: jump @679 if a0 == 0\n      : @678 (gas: 1)\n 18720: jump @1393\n      : @679 (gas: 15)\n 18723: a0 = u64 [a1 + 0x600]\n 18727: u64 [s1 + 0x1b0] = a0\n 18731: a2 = a1 + 0x500\n 18735: a0 = u64 [a2 + 0xf8]\n 18739: u64 [s1 + 0x1b8] = a0\n 18743: a0 = u64 [a2 + 0xf0]\n 18747: u64 [s1 + 0x1a8] = a0\n 18751: a0 = u64 [a2 + 0xe8]\n 18755: u64 [s1 + 0x1c0] = a0\n 18759: a0 = u64 [a1 + 0x608]\n 18763: u64 [s1 + 0x188] = a0\n 18767: a0 = s1 + 0x7ff\n 18771: a0 = a0 + 0x721\n 18775: a1 = u64 [s1 + 0x1c8]\n 18779: ra = 686, jump @26\n      : @680 [@dyn 343] (gas: 16)\n 18785: a4 = s1 + 0x7ff\n 18789: a4 = a4 + 0x199\n 18793: a5 = a4 + 0x500\n 18797: a2 = u64 [a5 + 0x88]\n 18801: a0 = u64 [a5 + 0x90]\n 18805: a1 = u64 [a5 + 0x98]\n 18809: a3 = u64 [a5 + 0xa0]\n 18813: u64 [a5 + 0x60] = a3\n 18816: u64 [a5 + 0x58] = a1\n 18819: u64 [a5 + 0x50] = a0\n 18822: a0 = s1 + 0x7ff\n 18826: a0 = a0 + 0x701\n 18830: a1 = s1 + 0x7ff\n 18834: a1 = a1 + 0x6e1\n 18838: u64 [a5 + 0x48] = a2\n 18841: ra = 688, jump @1485\n      : @681 [@dyn 344] (gas: 34)\n 18847: a4 = s1 + 0x7ff\n 18851: a4 = a4 + 0x199\n 18855: a5 = a4 + 0x500\n 18859: a0 = u64 [a5 + 0x68]\n 18862: a1 = u64 [a5 + 0x70]\n 18865: a2 = u64 [a5 + 0x78]\n 18868: a3 = u64 [a5 + 0x80]\n 18872: u64 [a5 + 0x20] = a3\n 18875: a3 = u64 [s1 + 0x210]\n 18879: u64 [a5] = a3\n 18881: a3 = u64 [s1 + 0x1d0]\n 18885: u64 [a4 + 0x4f8] = a3\n 18889: a3 = u64 [s1 + 0x218]\n 18893: u64 [a4 + 0x4f0] = a3\n 18897: a3 = u64 [s1 + 0x188]\n 18901: u64 [a4 + 0x4e8] = a3\n 18905: u64 [a5 + 0x18] = a2\n 18908: u64 [a5 + 0x10] = a1\n 18911: u64 [a5 + 0x8] = a0\n 18914: a0 = u64 [s1 + 0x200]\n 18918: u64 [a5 + 0x40] = a0\n 18921: a0 = u64 [s1 + 0x1f0]\n 18925: u64 [a5 + 0x38] = a0\n 18928: a0 = u64 [s1 + 0x1f8]\n 18932: u64 [a5 + 0x30] = a0\n 18935: a0 = s1 + 0x7ff\n 18939: a0 = a0 + 0x6c1\n 18943: a1 = s1 + 0x7ff\n 18947: a1 = a1 + 0x6a1\n 18951: a2 = s1 + 0x7ff\n 18955: a2 = a2 + 0x681\n 18959: a3 = u64 [s1 + 0x208]\n 18963: u64 [a5 + 0x28] = a3\n 18966: ra = 690, jump @1586\n      : @682 [@dyn 345] (gas: 1)\n 18972: t0 = 692, jump @1735\n      : @683 [@dyn 346] (gas: 10)\n 18979: t0 = a5 >> 0x3f\n 18982: t1 = t1 << 0x1\n 18985: ra = a4 >> 0x3f\n 18988: a2 = a5 << 0x1\n 18991: u64 [s1 + 0xe8] = a2\n 18995: t2 = a3 >> 0x3f\n 18998: a2 = a4 << 0x1\n 19001: u64 [s1 + 0xf0] = a2\n 19005: a2 = a3 << 0x1\n 19008: jump @698 if a0 == 0\n      : @684 (gas: 21)\n 19012: u64 [s1 + 0x198] = a1\n 19016: u64 [s1 + 0xd0] = ra\n 19020: u64 [s1 + 0x98] = t2\n 19024: u64 [s1 + 0xa0] = t1\n 19028: u64 [s1 + 0xa8] = t0\n 19032: u64 [s1 + 0xd8] = a2\n 19036: a0 = u64 [s1 + 0x208]\n 19040: a2 = s1 + 0x7ff\n 19044: a2 = a2 + 0x199\n 19048: a3 = a2 + 0x400\n 19052: u64 [a3 + 0xc8] = a0\n 19056: a0 = u64 [s1 + 0x1f8]\n 19060: u64 [a3 + 0xd0] = a0\n 19064: a0 = u64 [s1 + 0x1f0]\n 19068: u64 [a3 + 0xd8] = a0\n 19072: a1 = s1 + 0x7ff\n 19076: a1 = a1 + 0x661\n 19080: a0 = u64 [s1 + 0x200]\n 19084: u64 [a3 + 0xe0] = a0\n 19088: a0 = 0\n 19090: ra = 694, jump @24\n      : @685 [@dyn 347] (gas: 1)\n 19096: t0 = 696, jump @1763\n      : @686 [@dyn 348] (gas: 1)\n 19103: jump @688 if a1 <u a0\n      : @687 (gas: 3)\n 19106: u32 [a2 + 0] = 0x20\n 19109: t0 = 0x2ba\n 19113: jump @1742\n      : @688 (gas: 1)\n 19117: t0 = 698, jump @1742\n      : @689 [@dyn 349] (gas: 4)\n 19124: ra = 0x2bc\n 19128: ecalli 11 // 'hash_keccak_256'\n 19130: t0 = 0x2be\n 19134: jump @1752\n      : @690 [@dyn 350] (gas: 1)\n 19138: t0 = 702, jump @1752\n      : @691 [@dyn 351] (gas: 17)\n 19145: t0 = reverse a0\n 19147: a4 = reverse a1\n 19149: a1 = reverse a2\n 19151: a3 = reverse a3\n 19153: a0 = u64 [s1 + 0x1f8]\n 19157: a2 = a3\n 19159: u64 [a0 + 0x18] = a3\n 19162: u64 [s1 + 0x1e8] = a1\n 19166: u64 [a0 + 0x10] = a1\n 19169: a1 = a4\n 19171: u64 [a0 + 0x8] = a4\n 19174: t2 = t0\n 19176: u64 [a0] = t0\n 19178: a0 = s1 + 0x4000\n 19182: i32 a0 = a0 + 0xfffffffffffffe40\n 19186: u64 [s1 + 0x190] = a0\n 19190: fallthrough\n      : @692 (gas: 24)\n 19191: u64 [s1 + 0x200] = a5\n 19195: u64 [s1 + 0x1f0] = a2\n 19199: t0 = a1\n 19201: a0 = u64 [s1 + 0x1a0]\n 19205: a0 = a5 <u a0\n 19208: a3 = a0 ^ 0x1\n 19211: a1 = u64 [s1 + 0x210]\n 19215: a3 = 0x1 if a1 != 0\n 19218: a4 = u64 [s1 + 0x218]\n 19222: t1 = u64 [s1 + 0x208]\n 19226: a0 = a4 | t1\n 19229: a3 = 0x1 if a0 != 0\n 19232: a0 = u64 [s1 + 0x1c0]\n 19236: ra = a5 + a0\n 19239: a2 = u64 [s1 + 0x1a8]\n 19243: a2 = a2 + a1\n 19246: a1 = u64 [s1 + 0x1b8]\n 19250: a1 = a1 + a4\n 19253: a4 = u64 [s1 + 0x1b0]\n 19257: t1 = t1 + a4\n 19260: a0 = u64 [s1 + 0x1c8]\n 19264: a5 = u64 [s1 + 0x1d0]\n 19268: a4 = u64 [s1 + 0x198]\n 19272: jump @718 if a3 != 0\n      : @693 (gas: 23)\n 19276: a0 = u64 [s1 + 0x200]\n 19280: a3 = ra <u a0\n 19283: a2 = a2 + a3\n 19286: a4 = u64 [s1 + 0x210]\n 19290: a0 = a2 ^ a4\n 19293: a5 = a2 <u a4\n 19296: a5 = a3 if a0 == 0\n 19299: a5 = a5 + a1\n 19302: a3 = a5 <u a1\n 19305: a0 = u64 [s1 + 0x218]\n 19309: a1 = a1 <u a0\n 19312: a0 = t1 + a1\n 19315: a0 = a0 + a3\n 19318: a1 = ra | a5\n 19321: a0 = a0 | a2\n 19324: a1 = a1 | a0\n 19327: a1 = a1 >> 0x20\n 19330: a0 = a0 | a5\n 19333: a0 = a0 << 0x20\n 19336: a0 = a0 | a1\n 19339: u64 [s1 + 0x1e0] = t2\n 19343: u64 [s1 + 0x1d8] = t0\n 19347: jump @695 if a0 == 0\n      : @694 (gas: 1)\n 19350: jump @576\n      : @695 (gas: 16)\n 19353: i32 a1 = ra + 0\n 19355: a0 = u64 [s1 + 0x190]\n 19359: ecalli 4 // 'call_data_load'\n 19361: a4 = s1 + 0x3998\n 19365: a5 = a4 + 0x400\n 19369: a0 = u64 [a5 + 0xc0]\n 19373: a1 = u64 [a5 + 0xb8]\n 19377: a2 = u64 [a5 + 0xb0]\n 19381: a3 = u64 [a5 + 0xa8]\n 19385: u64 [a5 + 0xe0] = a0\n 19389: u64 [a5 + 0xd8] = a1\n 19393: u64 [a5 + 0xd0] = a2\n 19397: u64 [a5 + 0xc8] = a3\n 19401: a1 = s1 + 0x3e60\n 19405: a0 = u64 [s1 + 0x1f8]\n 19409: ra = 704, jump @28\n      : @696 [@dyn 352] (gas: 1)\n 19415: t0 = 706, jump @1740\n      : @697 [@dyn 353] (gas: 31)\n 19422: t0 = a1 + a0\n 19425: a1 = t0 <u a1\n 19428: a0 = u64 [s1 + 0x1f0]\n 19432: a0 = a0 + a1\n 19435: a1 = u64 [s1 + 0x200]\n 19439: t1 = a1 + 0x20\n 19442: a2 = t1 <u a1\n 19445: a1 = u64 [s1 + 0x210]\n 19449: ra = a1 + a2\n 19452: a4 = ra <u a1\n 19455: a4 = a2 if a2 == 0\n 19458: a1 = u64 [s1 + 0x218]\n 19462: a4 = a4 + a1\n 19465: a2 = a4 <u a1\n 19468: a1 = u64 [s1 + 0x208]\n 19472: a1 = a1 + a2\n 19475: u64 [s1 + 0x208] = a1\n 19479: a2 = u64 [s1 + 0x1f8]\n 19483: u64 [a2 + 0x10] = t0\n 19486: a1 = a3\n 19488: u64 [a2 + 0x8] = a3\n 19491: t2 = a5\n 19493: u64 [a2] = a5\n 19495: a3 = a2\n 19497: a2 = a0\n 19499: u64 [a3 + 0x18] = a0\n 19502: u64 [s1 + 0x1e8] = t0\n 19506: a5 = t1\n 19508: u64 [s1 + 0x210] = ra\n 19512: u64 [s1 + 0x218] = a4\n 19516: jump @692\n      : @698 (gas: 3)\n 19519: a0 = a3 | a5\n 19522: a0 = a0 | a1\n 19525: jump @734 if a0 != 0\n      : @699 (gas: 6)\n 19529: u64 [s1 + 0xd8] = a2\n 19533: u64 [s1 + 512] = 0\n 19537: u64 [s1 + 504] = 0\n 19541: u64 [s1 + 520] = 0\n 19545: u64 [s1 + 528] = 0\n 19549: jump @737\n      : @700 (gas: 9)\n 19552: a0 = s1 + 0x100\n 19556: a4 = u64 [a0 + 0x50]\n 19559: a5 = u64 [a0 + 0x40]\n 19562: t1 = a5 | a4\n 19565: a5 = u64 [a0 + 0x58]\n 19568: a4 = u64 [a0 + 0x48]\n 19571: a5 = a5 | a4\n 19574: a4 = t1 | a5\n 19577: jump @793 if a4 != 0\n      : @701 (gas: 3)\n 19581: a0 = s1 + 0x1fe0\n 19585: a1 = 0x40\n 19588: ra = 708, jump @22\n      : @702 [@dyn 354] (gas: 14)\n 19594: a2 = s1 + 0x1998\n 19598: t0 = u64 [a2 + 0x660]\n 19602: a1 = a2 + 0x600\n 19606: a5 = u64 [a1 + 0x58]\n 19609: a4 = u64 [a1 + 0x50]\n 19612: a0 = u64 [a1 + 0x48]\n 19615: a3 = a4 | t0\n 19618: a1 = a0 | a5\n 19621: a1 = a1 | a3\n 19624: a1 = a1 >> 0x20\n 19627: a3 = a3 | a5\n 19630: a3 = a3 << 0x20\n 19633: a1 = a1 | a3\n 19636: jump @704 if a1 == 0\n      : @703 (gas: 1)\n 19639: jump @576\n      : @704 (gas: 11)\n 19642: u64 [a2 + 1592] = 0\n 19646: u64 [a2 + 1584] = 0\n 19650: u64 [a2 + 1576] = 0\n 19654: a3 = 0x8c379a000000000\n 19664: a1 = s1 + 0x1fc0\n 19668: u64 [a2 + 0x640] = a3\n 19672: u64 [s1 + 0x218] = a0\n 19676: u64 [s1 + 0x210] = a4\n 19680: u64 [s1 + 0x200] = t0\n 19684: u64 [s1 + 0x208] = a5\n 19688: ra = 710, jump @24\n      : @705 [@dyn 355] (gas: 1)\n 19694: t0 = 712, jump @1726\n      : @706 [@dyn 356] (gas: 1)\n 19701: jump @708 if a0 != 0\n      : @707 (gas: 1)\n 19704: jump @576\n      : @708 (gas: 1)\n 19707: t0 = 714, jump @1781\n      : @709 [@dyn 357] (gas: 8)\n 19714: u64 [a2 + 1568] = 0\n 19718: u64 [a2 + 1560] = 0\n 19722: u64 [a2 + 1544] = 0x20\n 19727: a1 = s1 + 0x1fa0\n 19731: u64 [a2 + 1552] = 0\n 19735: u64 [s1 + 0x208] = a3\n 19739: u64 [s1 + 0x200] = a4\n 19743: ra = 716, jump @24\n      : @710 [@dyn 358] (gas: 1)\n 19749: t0 = 718, jump @1729\n      : @711 [@dyn 359] (gas: 1)\n 19756: jump @713 if a0 != 0\n      : @712 (gas: 1)\n 19759: jump @576\n      : @713 (gas: 8)\n 19762: i32 a0 = a1 + 0x24\n 19765: a3 = s1 + 0x1998\n 19769: u64 [a3 + 1536] = 0\n 19773: u64 [a3 + 1528] = 0\n 19777: u64 [a3 + 1512] = 0x18\n 19782: a1 = s1 + 0x1f80\n 19786: u64 [a3 + 1520] = 0\n 19790: ra = 720, jump @24\n      : @714 [@dyn 360] (gas: 1)\n 19796: t0 = 722, jump @1727\n      : @715 [@dyn 361] (gas: 1)\n 19803: jump @717 if a0 != 0\n      : @716 (gas: 1)\n 19806: jump @576\n      : @717 (gas: 13)\n 19809: i32 a0 = a3 + 0x44\n 19812: a1 = u64 [0x20140]\n 19817: a2 = u64 [0x20148]\n 19822: a3 = u64 [0x20150]\n 19827: a4 = s1 + 0x1998\n 19831: a5 = a4 + 0x500\n 19835: u64 [a5 + 0xe0] = a1\n 19839: u64 [a5 + 0xd8] = a2\n 19843: u64 [a5 + 0xd0] = a3\n 19847: a1 = s1 + 0x1f60\n 19851: u64 [a4 + 1480] = 0\n 19855: ra = 0x50c\n 19859: jump @24\n      : @718 (gas: 7)\n 19862: t2 = u64 [s1 + 0x200]\n 19866: t0 = u64 [s1 + 0x188]\n 19870: a3 = u64 [s1 + 0x1a0]\n 19874: a3 = a3 ^ t0\n 19877: a3 = a3 | a5\n 19880: a3 = a3 | a4\n 19883: jump @733 if a3 == 0\n      : @719 (gas: 20)\n 19887: a3 = ra <u t2\n 19890: a2 = a2 + a3\n 19893: a4 = u64 [s1 + 0x210]\n 19897: a0 = a2 ^ a4\n 19900: a5 = a2 <u a4\n 19903: a5 = a3 if a0 == 0\n 19906: a5 = a5 + a1\n 19909: a3 = a5 <u a1\n 19912: a0 = u64 [s1 + 0x218]\n 19916: a1 = a1 <u a0\n 19919: a0 = t1 + a1\n 19922: a0 = a0 + a3\n 19925: a1 = ra | a5\n 19928: a0 = a0 | a2\n 19931: a1 = a1 | a0\n 19934: a1 = a1 >> 0x20\n 19937: a0 = a0 | a5\n 19940: a0 = a0 << 0x20\n 19943: a0 = a0 | a1\n 19946: jump @721 if a0 == 0\n      : @720 (gas: 1)\n 19949: jump @576\n      : @721 (gas: 2)\n 19952: a0 = t0 << 0x3b\n 19955: t0 = 724, jump @1745\n      : @722 [@dyn 362] (gas: 1)\n 19962: ra = 726, jump @1817\n      : @723 [@dyn 363] (gas: 1)\n 19969: t0 = 728, jump @1758\n      : @724 [@dyn 364] (gas: 1)\n 19976: ra = 730, jump @1812\n      : @725 [@dyn 365] (gas: 1)\n 19983: t0 = 732, jump @1733\n      : @726 [@dyn 366] (gas: 1)\n 19990: ra = 734, jump @1812\n      : @727 [@dyn 367] (gas: 1)\n 19997: t0 = 736, jump @1725\n      : @728 [@dyn 368] (gas: 5)\n 20004: i32 a0 = a0 + 0xfffffffffffffe80\n 20008: ra = 0x2e2\n 20012: ecalli 4 // 'call_data_load'\n 20014: a4 = s1 + 0x3998\n 20018: jump @730\n      : @729 [@dyn 369] (gas: 2)\n 20020: a4 = s1 + 0x3998\n 20024: fallthrough\n      : @730 (gas: 6)\n 20025: a3 = a4 + 0x400\n 20029: a0 = u64 [a3 + 0xe8]\n 20033: a1 = u64 [a3 + 0xf0]\n 20037: a2 = u64 [a3 + 0xf8]\n 20041: a3 = u64 [a4 + 0x500]\n 20045: t0 = 740, jump @1731\n      : @731 [@dyn 370] (gas: 8)\n 20052: a5 = a4 + 0x500\n 20056: u64 [a5 + 0x20] = a3\n 20059: u64 [a5 + 0x18] = a2\n 20062: u64 [a5 + 0x10] = a1\n 20065: u64 [a5 + 0x8] = a0\n 20068: a1 = s1 + 0x3ea0\n 20072: a0 = u64 [s1 + 0x1f8]\n 20076: ra = 742, jump @28\n      : @732 [@dyn 371] (gas: 2)\n 20082: a0 = u64 [s1 + 0x1c8]\n 20086: fallthrough\n      : @733 (gas: 20)\n 20087: a1 = u64 [s1 + 0xa8]\n 20091: a5 = u64 [s1 + 0xa0]\n 20095: a5 = a5 | a1\n 20098: a1 = u64 [s1 + 0xd0]\n 20102: a2 = u64 [s1 + 0xe8]\n 20106: a1 = a1 | a2\n 20109: a2 = u64 [s1 + 0x98]\n 20113: a3 = u64 [s1 + 0xf0]\n 20117: a2 = a2 | a3\n 20120: a3 = u64 [s1 + 0xd8]\n 20124: a3 = a3 + 0x1\n 20127: a4 = s1 + 0x3998\n 20131: u64 [a4 + 0x528] = a3\n 20135: a3 = a4 + 0x500\n 20139: u64 [a3 + 0x30] = a2\n 20142: u64 [a3 + 0x38] = a1\n 20145: u64 [a3 + 0x40] = a5\n 20148: a1 = s1 + 0x3ec0\n 20152: ra = 0x2f8\n 20156: jump @28\n      : @734 (gas: 14)\n 20159: u64 [s1 + 0xd0] = ra\n 20163: a3 = s1 + 0x100\n 20167: a4 = u64 [a3 + 0xc0]\n 20171: a5 = u64 [a3 + 0xb8]\n 20175: ra = a4 | a5\n 20178: a1 = u64 [a3 + 0xb0]\n 20182: a0 = u64 [a3 + 0xa8]\n 20186: a1 = a1 | a0\n 20189: a0 = ra | a1\n 20192: a0 = a0 >> 0x20\n 20195: a1 = a1 | a5\n 20198: a1 = a1 << 0x20\n 20201: a0 = a0 | a1\n 20204: jump @736 if a0 == 0\n      : @735 (gas: 1)\n 20207: jump @576\n      : @736 (gas: 25)\n 20210: u64 [s1 + 0xd8] = a2\n 20214: i32 a1 = a4 + 0\n 20216: a0 = s1 + 0x4000\n 20220: i32 a0 = a0 + 0xfffffffffffffee0\n 20224: u64 [s1 + 0xa8] = t0\n 20228: u64 [s1 + 0xa0] = t1\n 20232: u64 [s1 + 0x98] = t2\n 20236: ecalli 4 // 'call_data_load'\n 20238: t2 = u64 [s1 + 0x98]\n 20242: t1 = u64 [s1 + 0xa0]\n 20246: t0 = u64 [s1 + 0xa8]\n 20250: a3 = u64 [s1 + 0x188]\n 20254: a0 = s1 + 0x3998\n 20258: a2 = a0 + 0x500\n 20262: a1 = u64 [a2 + 0x60]\n 20265: a4 = s1 + 0x200\n 20269: u64 [a4 + 0x10] = a1\n 20272: a1 = u64 [a2 + 0x58]\n 20275: u64 [a4 + 0x8] = a1\n 20278: a1 = u64 [a2 + 0x50]\n 20281: u64 [s1 + 0x1f8] = a1\n 20285: a0 = u64 [a2 + 0x48]\n 20288: u64 [a4] = a0\n 20290: ra = u64 [s1 + 0xd0]\n 20294: fallthrough\n      : @737 (gas: 9)\n 20295: a0 = u64 [s1 + 0xe8]\n 20299: a0 = a0 | ra\n 20302: u64 [s1 + 0x1f0] = a0\n 20306: a0 = t1 | t0\n 20309: u64 [s1 + 0x1e8] = a0\n 20313: a0 = u64 [s1 + 0xf0]\n 20317: a0 = a0 | t2\n 20320: u64 [s1 + 0x1e0] = a0\n 20324: t0 = 744, jump @1743\n      : @738 [@dyn 372] (gas: 1)\n 20331: ra = 746, jump @1817\n      : @739 [@dyn 373] (gas: 1)\n 20338: t0 = 748, jump @1771\n      : @740 [@dyn 374] (gas: 1)\n 20345: ra = 750, jump @1812\n      : @741 [@dyn 375] (gas: 2)\n 20352: u64 [s1 + 0x1d0] = a0\n 20356: t0 = 752, jump @1749\n      : @742 [@dyn 376] (gas: 1)\n 20363: ra = 754, jump @1812\n      : @743 [@dyn 377] (gas: 1)\n 20370: t0 = 756, jump @1737\n      : @744 [@dyn 378] (gas: 2)\n 20377: a4 = u64 [s1 + 0xd8]\n 20381: t0 = 758, jump @1755\n      : @745 [@dyn 379] (gas: 8)\n 20388: u64 [a4 + 0x578] = a2\n 20392: a2 = a4 + 0x500\n 20396: u64 [a2 + 0x80] = a3\n 20400: u64 [a2 + 0x70] = a1\n 20403: u64 [a2 + 0x68] = a0\n 20406: a1 = s1 + 0x3f00\n 20410: a0 = u64 [a5 + 0xc8]\n 20414: ra = 760, jump @28\n      : @746 [@dyn 380] (gas: 12)\n 20420: a0 = sp + 0xffffffffffffffe0\n 20423: a4 = a0 & 0xffffffffffffffe0\n 20426: sp = a4\n 20428: a3 = 0x100000000\n 20438: a0 = 0xffffffbc\n 20448: a2 = u64 [s1 + 0x158]\n 20452: a0 = a2 <u a0\n 20455: a1 = u64 [s1 + 0x160]\n 20459: a0 = 0 if a1 != 0\n 20461: a1 = u64 [s1 + 0xe0]\n 20465: a0 = 0 if a1 != 0\n 20467: jump @748 if a0 != 0\n      : @747 (gas: 1)\n 20470: jump @576\n      : @748 (gas: 8)\n 20473: i32 a1 = a2 + 0x44\n 20476: a0 = s1 + 0x4000\n 20480: i32 a0 = a0 + 0xffffffffffffff20\n 20484: u64 [s1 + 0x218] = a3\n 20488: u64 [s1 + 0x210] = a4\n 20492: ra = 0x2fa\n 20496: ecalli 4 // 'call_data_load'\n 20498: fallthrough\n      : @749 [@dyn 381] (gas: 5)\n 20499: a1 = u64 [s1 + 0x168]\n 20503: a0 = a1 + 0x2\n 20506: a1 = a0 <u a1\n 20509: a3 = u64 [s1 + 0x170]\n 20513: t0 = 764, jump @1765\n      : @750 [@dyn 382] (gas: 26)\n 20520: a5 = s1 + 0x3998\n 20524: a1 = u64 [a5 + 0x5a0]\n 20528: u64 [a5 + 0x5a8] = a0\n 20532: a4 = u64 [a5 + 0x598]\n 20536: u64 [a5 + 0x5b0] = a2\n 20540: a2 = u64 [a5 + 0x590]\n 20544: a0 = u64 [s1 + 0x180]\n 20548: a3 = a3 + a0\n 20551: u64 [a5 + 0x5b8] = a3\n 20555: a0 = a3 <u a0\n 20558: a3 = u64 [s1 + 0x178]\n 20562: a0 = a0 + a3\n 20565: u64 [a5 + 0x5c0] = a0\n 20569: a0 = u64 [a5 + 0x588]\n 20573: u64 [s1 + 0xf0] = a1\n 20577: a3 = u64 [s1 + 0x210]\n 20581: u64 [a3 + 0x18] = a1\n 20584: u64 [s1 + 0xe8] = a4\n 20588: u64 [a3 + 0x10] = a4\n 20591: u64 [s1 + 0xd8] = a2\n 20595: u64 [a3 + 0x8] = a2\n 20598: u64 [s1 + 0xd0] = a0\n 20602: u64 [a3] = a0\n 20604: a1 = a3\n 20606: a0 = s1 + 0x3f40\n 20610: ra = 766, jump @28\n      : @751 [@dyn 383] (gas: 12)\n 20616: a3 = u64 [s1 + 0x158]\n 20620: a2 = u64 [s1 + 0x160]\n 20624: a0 = sp + 0xffffffffffffffe0\n 20627: a4 = a0 & 0xffffffffffffffe0\n 20630: sp = a4\n 20632: a0 = u64 [s1 + 0x218]\n 20636: a0 = a0 + 0xffffffffffffff9c\n 20639: a0 = a3 <u a0\n 20642: a0 = 0 if a2 != 0\n 20644: a1 = u64 [s1 + 0xe0]\n 20648: a0 = 0 if a1 != 0\n 20650: jump @753 if a0 != 0\n      : @752 (gas: 1)\n 20653: jump @576\n      : @753 (gas: 38)\n 20656: i32 a1 = a3 + 0x64\n 20659: a0 = s1 + 0x4000\n 20663: i32 a0 = a0 + 0xffffffffffffff60\n 20667: u64 [s1 + 0x218] = a4\n 20671: ecalli 4 // 'call_data_load'\n 20673: a1 = u64 [s1 + 0x168]\n 20677: a4 = a1 + 0x3\n 20680: a1 = a4 <u a1\n 20683: a3 = u64 [s1 + 0x170]\n 20687: a2 = a3 + a1\n 20690: a0 = a2 <u a3\n 20693: a0 = a1 if a1 == 0\n 20696: a5 = s1 + 0x3998\n 20700: a1 = u64 [a5 + 0x5e0]\n 20704: u64 [a5 + 0x5e8] = a4\n 20708: a4 = u64 [a5 + 0x5d8]\n 20712: u64 [a5 + 0x5f0] = a2\n 20716: a2 = u64 [a5 + 0x5d0]\n 20720: a3 = u64 [s1 + 0x180]\n 20724: a0 = a0 + a3\n 20727: u64 [a5 + 0x5f8] = a0\n 20731: a0 = a0 <u a3\n 20734: a3 = u64 [s1 + 0x178]\n 20738: a0 = a0 + a3\n 20741: u64 [a5 + 0x600] = a0\n 20745: a0 = u64 [a5 + 0x5c8]\n 20749: u64 [s1 + 0x88] = a1\n 20753: a3 = u64 [s1 + 0x218]\n 20757: u64 [a3 + 0x18] = a1\n 20760: u64 [s1 + 0x80] = a4\n 20764: u64 [a3 + 0x10] = a4\n 20767: u64 [s1 + 0x78] = a2\n 20770: u64 [a3 + 0x8] = a2\n 20773: u64 [s1 + 0x70] = a0\n 20776: u64 [a3] = a0\n 20778: a1 = a3\n 20780: a0 = s1 + 0x3f80\n 20784: ra = 768, jump @28\n      : @754 [@dyn 384] (gas: 6)\n 20790: a0 = sp + 0xffffffffffffffe0\n 20793: a4 = a0 & 0xffffffffffffffe0\n 20796: sp = a4\n 20798: a0 = u64 [s1 + 0x168]\n 20802: a2 = a0 + 0x4\n 20805: t0 = 770, jump @1789\n      : @755 [@dyn 385] (gas: 16)\n 20812: a1 = a1 + a0\n 20815: a0 = a1 <u a0\n 20818: a5 = u64 [s1 + 0x178]\n 20822: a0 = a0 + a5\n 20825: u64 [s1 + 0x1f8] = a0\n 20829: u64 [a4 + 0x18] = a0\n 20832: u64 [s1 + 0x1f0] = a1\n 20836: u64 [a4 + 0x10] = a1\n 20839: u64 [s1 + 0x200] = a3\n 20843: u64 [a4 + 0x8] = a3\n 20846: u64 [s1 + 0x208] = a2\n 20850: u64 [s1 + 0x1c8] = a4\n 20854: u64 [a4] = a2\n 20856: a0 = u64 [s1 + 0x158]\n 20860: a2 = a0 + 0x84\n 20864: t0 = 772, jump @1748\n      : @756 [@dyn 386] (gas: 26)\n 20871: u64 [s1 + 0x50] = a1\n 20874: u64 [a5 + 0x460] = a1\n 20878: u64 [s1 + 0x58] = a4\n 20881: u64 [a5 + 0x458] = a4\n 20885: u64 [s1 + 0x60] = a3\n 20888: a4 = a5 + 0x400\n 20892: u64 [a4 + 0x50] = a3\n 20895: u64 [s1 + 0x68] = a2\n 20898: u64 [a4 + 0x48] = a2\n 20901: a0 = u64 [s1 + 0x138]\n 20905: u64 [a4 + 0x80] = a0\n 20909: a0 = u64 [s1 + 0x140]\n 20913: u64 [a4 + 0x78] = a0\n 20916: a0 = u64 [s1 + 0x148]\n 20920: u64 [a4 + 0x70] = a0\n 20923: a0 = s1 + 0x7ff\n 20927: a0 = a0 + 0x621\n 20931: a1 = s1 + 0x7ff\n 20935: a1 = a1 + 0x601\n 20939: a2 = s1 + 0x7ff\n 20943: a2 = a2 + 0x5e1\n 20947: a3 = u64 [s1 + 0x150]\n 20951: u64 [a4 + 0x68] = a3\n 20954: ra = 0x306\n 20958: t0 = 0x66c\n 20962: jump @1760\n      : @757 [@dyn 387] (gas: 7)\n 20966: a1 = s1 + 0x7ff\n 20970: a1 = a1 + 0x199\n 20974: a0 = a1 + 0x400\n 20978: a4 = u64 [a0 + 0xc0]\n 20982: a2 = u64 [a0 + 0xb8]\n 20986: a3 = u64 [a0 + 0xb0]\n 20990: t0 = 776, jump @1738\n      : @758 [@dyn 388] (gas: 1)\n 20997: jump @760 if a0 == 0\n      : @759 (gas: 1)\n 21000: jump @1415\n      : @760 (gas: 15)\n 21003: a2 = a1 + 0x400\n 21007: a0 = u64 [a2 + 0xa0]\n 21011: u64 [s1 + 0x1b0] = a0\n 21015: a0 = u64 [a2 + 0x98]\n 21019: u64 [s1 + 0x1b8] = a0\n 21023: a0 = u64 [a2 + 0x90]\n 21027: u64 [s1 + 0x1a8] = a0\n 21031: a0 = u64 [a2 + 0x88]\n 21035: u64 [s1 + 0x1c0] = a0\n 21039: a0 = u64 [a2 + 0xa8]\n 21043: u64 [s1 + 0x188] = a0\n 21047: a0 = s1 + 0x7ff\n 21051: a0 = a0 + 0x5c1\n 21055: a1 = u64 [s1 + 0x1c8]\n 21059: ra = 778, jump @26\n      : @761 [@dyn 389] (gas: 17)\n 21065: a4 = s1 + 0x7ff\n 21069: a4 = a4 + 0x199\n 21073: a5 = a4 + 0x400\n 21077: a2 = u64 [a5 + 0x28]\n 21080: a0 = u64 [a5 + 0x30]\n 21083: a1 = u64 [a5 + 0x38]\n 21086: a3 = u64 [a5 + 0x40]\n 21089: u64 [a5] = a3\n 21091: a3 = a4 + 0x300\n 21095: u64 [a3 + 0xf8] = a1\n 21099: u64 [a3 + 0xf0] = a0\n 21103: a0 = s1 + 0x7ff\n 21107: a0 = a0 + 0x5a1\n 21111: a1 = s1 + 0x7ff\n 21115: a1 = a1 + 0x581\n 21119: u64 [a3 + 0xe8] = a2\n 21123: ra = 780, jump @1485\n      : @762 [@dyn 390] (gas: 35)\n 21129: a4 = s1 + 0x7ff\n 21133: a4 = a4 + 0x199\n 21137: a5 = a4 + 0x400\n 21141: a0 = u64 [a5 + 0x8]\n 21144: a1 = u64 [a5 + 0x10]\n 21147: a2 = u64 [a5 + 0x18]\n 21150: a3 = u64 [a5 + 0x20]\n 21153: a5 = a4 + 0x300\n 21157: u64 [a5 + 0xc0] = a3\n 21161: a3 = u64 [s1 + 0x210]\n 21165: u64 [a5 + 0xa0] = a3\n 21169: a3 = u64 [s1 + 0x1d0]\n 21173: u64 [a5 + 0x98] = a3\n 21177: a3 = u64 [s1 + 0x218]\n 21181: u64 [a5 + 0x90] = a3\n 21185: a3 = u64 [s1 + 0x188]\n 21189: u64 [a5 + 0x88] = a3\n 21193: u64 [a5 + 0xb8] = a2\n 21197: u64 [a5 + 0xb0] = a1\n 21201: u64 [a5 + 0xa8] = a0\n 21205: a0 = u64 [s1 + 0x1f8]\n 21209: u64 [a5 + 0xe0] = a0\n 21213: a0 = u64 [s1 + 0x1f0]\n 21217: u64 [a5 + 0xd8] = a0\n 21221: a0 = u64 [s1 + 0x200]\n 21225: u64 [a5 + 0xd0] = a0\n 21229: a0 = s1 + 0x7ff\n 21233: a0 = a0 + 0x561\n 21237: a1 = s1 + 0x7ff\n 21241: a1 = a1 + 0x541\n 21245: a2 = s1 + 0x7ff\n 21249: a2 = a2 + 0x521\n 21253: a3 = u64 [s1 + 0x208]\n 21257: u64 [a5 + 0xc8] = a3\n 21261: ra = 782, jump @1586\n      : @763 [@dyn 391] (gas: 1)\n 21267: t0 = 784, jump @1735\n      : @764 [@dyn 392] (gas: 10)\n 21273: t0 = a5 >> 0x3f\n 21276: t1 = t1 << 0x1\n 21279: ra = a4 >> 0x3f\n 21282: a2 = a5 << 0x1\n 21285: u64 [s1 + 0xa0] = a2\n 21289: t2 = a3 >> 0x3f\n 21292: a2 = a4 << 0x1\n 21295: u64 [s1 + 0xa8] = a2\n 21299: a2 = a3 << 0x1\n 21302: jump @866 if a0 == 0\n      : @765 (gas: 21)\n 21306: u64 [s1 + 0x198] = a1\n 21310: u64 [s1 + 0x90] = ra\n 21314: u64 [s1 + 0x38] = t2\n 21317: u64 [s1 + 0x40] = t1\n 21320: u64 [s1 + 0x48] = t0\n 21323: u64 [s1 + 0x98] = a2\n 21327: a0 = u64 [s1 + 0x208]\n 21331: a2 = s1 + 0x7ff\n 21335: a2 = a2 + 0x199\n 21339: a3 = a2 + 0x300\n 21343: u64 [a3 + 0x68] = a0\n 21346: a0 = u64 [s1 + 0x200]\n 21350: u64 [a3 + 0x70] = a0\n 21353: a0 = u64 [s1 + 0x1f0]\n 21357: u64 [a3 + 0x78] = a0\n 21360: a1 = s1 + 0x7ff\n 21364: a1 = a1 + 0x501\n 21368: a0 = u64 [s1 + 0x1f8]\n 21372: u64 [a3 + 0x80] = a0\n 21376: a0 = 0\n 21378: ra = 786, jump @24\n      : @766 [@dyn 393] (gas: 1)\n 21384: t0 = 788, jump @1763\n      : @767 [@dyn 394] (gas: 1)\n 21391: jump @769 if a1 <u a0\n      : @768 (gas: 3)\n 21394: u32 [a2 + 0] = 0x20\n 21397: t0 = 0x316\n 21401: jump @1742\n      : @769 (gas: 1)\n 21404: t0 = 790, jump @1742\n      : @770 [@dyn 395] (gas: 4)\n 21410: ra = 0x318\n 21414: ecalli 11 // 'hash_keccak_256'\n 21416: t0 = 0x31a\n 21420: jump @1752\n      : @771 [@dyn 396] (gas: 1)\n 21424: t0 = 794, jump @1752\n      : @772 [@dyn 397] (gas: 17)\n 21431: t0 = reverse a0\n 21433: a4 = reverse a1\n 21435: a1 = reverse a2\n 21437: a3 = reverse a3\n 21439: a0 = u64 [s1 + 0x1f8]\n 21443: a2 = a3\n 21445: u64 [a0 + 0x18] = a3\n 21448: u64 [s1 + 0x1e8] = a1\n 21452: u64 [a0 + 0x10] = a1\n 21455: a1 = a4\n 21457: u64 [a0 + 0x8] = a4\n 21460: t2 = t0\n 21462: u64 [a0] = t0\n 21464: a0 = s1 + 0x4000\n 21468: i32 a0 = a0 + 0xffffffffffffffa0\n 21471: u64 [s1 + 0x190] = a0\n 21475: fallthrough\n      : @773 (gas: 24)\n 21476: u64 [s1 + 0x200] = a5\n 21480: u64 [s1 + 0x1f0] = a2\n 21484: t0 = a1\n 21486: a0 = u64 [s1 + 0x1a0]\n 21490: a0 = a5 <u a0\n 21493: a3 = a0 ^ 0x1\n 21496: a1 = u64 [s1 + 0x210]\n 21500: a3 = 0x1 if a1 != 0\n 21503: a4 = u64 [s1 + 0x218]\n 21507: t1 = u64 [s1 + 0x208]\n 21511: a0 = a4 | t1\n 21514: a3 = 0x1 if a0 != 0\n 21517: a0 = u64 [s1 + 0x1c0]\n 21521: ra = a5 + a0\n 21524: a2 = u64 [s1 + 0x1a8]\n 21528: a2 = a2 + a1\n 21531: a1 = u64 [s1 + 0x1b8]\n 21535: a1 = a1 + a4\n 21538: a4 = u64 [s1 + 0x1b0]\n 21542: t1 = t1 + a4\n 21545: a0 = u64 [s1 + 0x1c8]\n 21549: a5 = u64 [s1 + 0x1d0]\n 21553: a4 = u64 [s1 + 0x198]\n 21557: jump @868 if a3 != 0\n      : @774 (gas: 23)\n 21561: a0 = u64 [s1 + 0x200]\n 21565: a3 = ra <u a0\n 21568: a2 = a2 + a3\n 21571: a4 = u64 [s1 + 0x210]\n 21575: a0 = a2 ^ a4\n 21578: a5 = a2 <u a4\n 21581: a5 = a3 if a0 == 0\n 21584: a5 = a5 + a1\n 21587: a3 = a5 <u a1\n 21590: a0 = u64 [s1 + 0x218]\n 21594: a1 = a1 <u a0\n 21597: a0 = t1 + a1\n 21600: a0 = a0 + a3\n 21603: a1 = ra | a5\n 21606: a0 = a0 | a2\n 21609: a1 = a1 | a0\n 21612: a1 = a1 >> 0x20\n 21615: a0 = a0 | a5\n 21618: a0 = a0 << 0x20\n 21621: a0 = a0 | a1\n 21624: u64 [s1 + 0x1e0] = t2\n 21628: u64 [s1 + 0x1d8] = t0\n 21632: jump @776 if a0 == 0\n      : @775 (gas: 1)\n 21635: jump @576\n      : @776 (gas: 16)\n 21638: i32 a1 = ra + 0\n 21640: a0 = u64 [s1 + 0x190]\n 21644: ecalli 4 // 'call_data_load'\n 21646: a4 = s1 + 0x3998\n 21650: a5 = a4 + 0x600\n 21654: a0 = u64 [a5 + 0x20]\n 21657: a1 = u64 [a5 + 0x18]\n 21660: a2 = u64 [a5 + 0x10]\n 21663: a3 = u64 [a5 + 0x8]\n 21666: u64 [a5 + 0x40] = a0\n 21669: u64 [a5 + 0x38] = a1\n 21672: u64 [a5 + 0x30] = a2\n 21675: u64 [a5 + 0x28] = a3\n 21678: a1 = s1 + 0x3fc0\n 21682: a0 = u64 [s1 + 0x1f8]\n 21686: ra = 796, jump @28\n      : @777 [@dyn 398] (gas: 1)\n 21692: t0 = 798, jump @1740\n      : @778 [@dyn 399] (gas: 31)\n 21698: t0 = a1 + a0\n 21701: a1 = t0 <u a1\n 21704: a0 = u64 [s1 + 0x1f0]\n 21708: a0 = a0 + a1\n 21711: a1 = u64 [s1 + 0x200]\n 21715: t1 = a1 + 0x20\n 21718: a2 = t1 <u a1\n 21721: a1 = u64 [s1 + 0x210]\n 21725: ra = a1 + a2\n 21728: a4 = ra <u a1\n 21731: a4 = a2 if a2 == 0\n 21734: a1 = u64 [s1 + 0x218]\n 21738: a4 = a4 + a1\n 21741: a2 = a4 <u a1\n 21744: a1 = u64 [s1 + 0x208]\n 21748: a1 = a1 + a2\n 21751: u64 [s1 + 0x208] = a1\n 21755: a2 = u64 [s1 + 0x1f8]\n 21759: u64 [a2 + 0x10] = t0\n 21762: a1 = a3\n 21764: u64 [a2 + 0x8] = a3\n 21767: t2 = a5\n 21769: u64 [a2] = a5\n 21771: a3 = a2\n 21773: a2 = a0\n 21775: u64 [a3 + 0x18] = a0\n 21778: u64 [s1 + 0x1e8] = t0\n 21782: a5 = t1\n 21784: u64 [s1 + 0x210] = ra\n 21788: u64 [s1 + 0x218] = a4\n 21792: jump @773\n      : @779 (gas: 14)\n 21795: u64 [s1 + 0xe8] = a4\n 21799: u64 [s1 + 0xf0] = a3\n 21803: a0 = u64 [s1 + 0x110]\n 21807: a3 = a2 + 0x400\n 21811: u64 [a3 + 0x88] = a0\n 21815: a0 = u64 [s1 + 0x108]\n 21819: u64 [a3 + 0x90] = a0\n 21823: a0 = u64 [s1 + 0x100]\n 21827: u64 [a3 + 0x98] = a0\n 21831: a1 = s1 + 0x3620\n 21835: a0 = u64 [s1 + 0xf8]\n 21839: u64 [a3 + 0xa0] = a0\n 21843: a0 = 0\n 21845: ra = 800, jump @24\n      : @780 [@dyn 400] (gas: 7)\n 21851: a0 = sp + 0xffffffffffffffe0\n 21854: a0 = a0 & 0xffffffffffffffe0\n 21857: u64 [s1 + 0x198] = a0\n 21861: sp = a0\n 21863: a2 = u64 [s1 + 0x158]\n 21867: a0 = i32 [a2]\n 21869: jump @782 if a0 >u 31\n      : @781 (gas: 3)\n 21873: u32 [a2 + 0] = 0x20\n 21876: t0 = 0x322\n 21880: jump @1790\n      : @782 (gas: 1)\n 21884: t0 = 802, jump @1790\n      : @783 [@dyn 401] (gas: 24)\n 21891: ecalli 11 // 'hash_keccak_256'\n 21893: a5 = 0\n 21895: a3 = 0\n 21897: u64 [s1 + 536] = 0\n 21901: t0 = 0\n 21903: a4 = u64 [s1 + 0x210]\n 21907: a0 = u64 [a4 + 0x18]\n 21910: a1 = u64 [a4 + 0x10]\n 21913: a2 = u64 [a4 + 0x8]\n 21916: t1 = u64 [a4]\n 21918: a0 = reverse a0\n 21920: t2 = reverse a1\n 21922: a4 = reverse a2\n 21924: a2 = reverse t1\n 21926: a1 = u64 [s1 + 0x198]\n 21930: u64 [s1 + 0x1f8] = a2\n 21934: u64 [a1 + 0x18] = a2\n 21937: u64 [s1 + 0x1f0] = a4\n 21941: u64 [a1 + 0x10] = a4\n 21944: ra = t2\n 21946: u64 [a1 + 0x8] = t2\n 21949: t2 = a0\n 21951: u64 [a1] = a0\n 21953: fallthrough\n      : @784 (gas: 20)\n 21954: a0 = u64 [s1 + 0x1a0]\n 21958: u64 [s1 + 0x210] = a5\n 21962: a0 = a5 <u a0\n 21965: a5 = s1 + 0x100\n 21969: a2 = u64 [a5 + 0xa8]\n 21973: a4 = a3 ^ a2\n 21976: u64 [s1 + 0x208] = a3\n 21980: a2 = a3 <u a2\n 21983: a2 = a0 if a4 == 0\n 21986: a4 = u64 [a5 + 0xb0]\n 21990: a0 = u64 [s1 + 0x218]\n 21994: t1 = a0 <u a4\n 21997: a3 = u64 [a5 + 0xb8]\n 22001: a5 = t0 ^ a3\n 22004: a3 = t0 <u a3\n 22007: a3 = t1 if a5 == 0\n 22010: a0 = a0 ^ a4\n 22013: a0 = a0 | a5\n 22016: a3 = a2 if a0 == 0\n 22019: jump @786 if a3 != 0\n      : @785 (gas: 1)\n 22022: jump @632\n      : @786 (gas: 5)\n 22025: a0 = s1 + 0x3600\n 22029: u64 [s1 + 0x200] = t0\n 22033: u64 [s1 + 0x1e0] = t2\n 22037: u64 [s1 + 0x1e8] = ra\n 22041: ra = 804, jump @26\n      : @787 [@dyn 402] (gas: 7)\n 22047: a1 = u64 [s1 + 0x1d8]\n 22051: t1 = u64 [s1 + 0x210]\n 22055: a0 = a1 + t1\n 22058: a1 = a0 <u a1\n 22061: a4 = u64 [s1 + 0x1c8]\n 22065: a2 = u64 [s1 + 0x208]\n 22069: t0 = 806, jump @1770\n      : @788 [@dyn 403] (gas: 9)\n 22076: a3 = u64 [s1 + 0x1d0]\n 22080: a1 = u64 [s1 + 0x218]\n 22084: a1 = a1 + a3\n 22087: t0 = a1 <u a3\n 22090: a5 = u64 [s1 + 0x1c0]\n 22094: a3 = u64 [s1 + 0x200]\n 22098: a5 = a5 + a3\n 22101: a3 = a5 + t0\n 22104: t0 = 808, jump @1757\n      : @789 [@dyn 404] (gas: 1)\n 22110: jump @791 if a1 == 0\n      : @790 (gas: 1)\n 22113: jump @576\n      : @791 (gas: 12)\n 22116: a5 = s1 + 0x3198\n 22120: a2 = u64 [a5 + 0x480]\n 22124: a1 = u64 [a5 + 0x478]\n 22128: a3 = u64 [a5 + 0x470]\n 22132: a4 = u64 [a5 + 0x468]\n 22136: u64 [a5 + 0x448] = a4\n 22140: a4 = a5 + 0x400\n 22144: u64 [a4 + 0x50] = a3\n 22147: u64 [a4 + 0x58] = a1\n 22150: a1 = s1 + 0x35e0\n 22154: u64 [a4 + 0x60] = a2\n 22157: ra = 810, jump @24\n      : @792 [@dyn 405] (gas: 35)\n 22163: t0 = u64 [s1 + 0x200]\n 22167: t2 = u64 [s1 + 0x1e0]\n 22171: t2 = t2 + 0x1\n 22174: a0 = t2 <u 0x1\n 22177: ra = u64 [s1 + 0x1e8]\n 22181: ra = ra + a0\n 22184: a0 = t2 | ra\n 22187: a0 = a0 <u 0x1\n 22190: a1 = u64 [s1 + 0x1f0]\n 22194: a0 = a0 + a1\n 22197: a1 = a0 <u a1\n 22200: a5 = u64 [s1 + 0x1f8]\n 22204: a5 = a5 + a1\n 22207: u64 [s1 + 0x1f8] = a5\n 22211: a2 = u64 [s1 + 0x210]\n 22215: a1 = a2 + 0x20\n 22218: a2 = a1 <u a2\n 22221: a4 = u64 [s1 + 0x208]\n 22225: a3 = a4 + a2\n 22228: a4 = a3 <u a4\n 22231: a4 = a2 if a2 == 0\n 22234: a2 = u64 [s1 + 0x218]\n 22238: a4 = a4 + a2\n 22241: a2 = a4 <u a2\n 22244: t0 = t0 + a2\n 22247: a2 = u64 [s1 + 0x198]\n 22251: u64 [a2 + 0x8] = ra\n 22254: u64 [a2] = t2\n 22256: u64 [a2 + 0x10] = a0\n 22259: u64 [a2 + 0x18] = a5\n 22262: u64 [s1 + 0x1f0] = a0\n 22266: a5 = a1\n 22268: u64 [s1 + 0x218] = a4\n 22272: a1 = a2\n 22274: jump @784\n      : @793 (gas: 17)\n 22277: a0 = s1 + 0x100\n 22281: a4 = u64 [a0 + 0xe8]\n 22285: a3 = a4 <u a3\n 22288: a5 = u64 [a0 + 0xf0]\n 22292: a4 = a5 ^ a2\n 22295: a2 = a5 <u a2\n 22298: a2 = a3 if a4 == 0\n 22301: a5 = u64 [s1 + 0x200]\n 22305: t1 = a5 <u ra\n 22308: a4 = u64 [a0 + 0xf8]\n 22312: a3 = a4 ^ a1\n 22315: a1 = a4 <u a1\n 22318: a1 = t1 if a3 == 0\n 22321: a0 = a5 ^ ra\n 22324: a0 = a0 | a3\n 22327: a1 = a2 if a0 == 0\n 22330: jump @850 if a1 == 0\n      : @794 (gas: 30)\n 22334: u64 [s1 + 0x100] = t2\n 22338: a0 = u64 [s1 + 0x218]\n 22342: a0 = u32 [a0]\n 22344: a1 = s1 + 0x2198\n 22348: u64 [a1 + 1664] = 0\n 22352: u64 [a1 + 1656] = 0\n 22356: u64 [a1 + 1648] = 0\n 22360: a2 = a1 + 0x600\n 22364: u64 [a2 + 0x68] = a0\n 22367: a0 = u64 [s1 + 0x138]\n 22371: u64 [a2 + 0x98] = a0\n 22375: u64 [a1 + 0x690] = t0\n 22379: a0 = u64 [s1 + 0x188]\n 22383: u64 [a2 + 0x88] = a0\n 22387: a0 = u64 [s1 + 0x118]\n 22391: u64 [a2 + 0xb8] = a0\n 22395: a0 = u64 [s1 + 0x120]\n 22399: u64 [a2 + 0xb0] = a0\n 22403: a0 = u64 [s1 + 0x128]\n 22407: u64 [a2 + 0xa8] = a0\n 22411: a0 = u64 [s1 + 0x130]\n 22415: u64 [a2 + 0xa0] = a0\n 22419: a5 = a1\n 22421: a0 = s1 + 0x2860\n 22425: a1 = s1 + 0x2840\n 22429: a2 = s1 + 0x2820\n 22433: a3 = s1 + 0x2800\n 22437: a4 = u64 [s1 + 0x110]\n 22441: u64 [a5 + 0x6c0] = a4\n 22445: ra = 812, jump @1548\n      : @795 [@dyn 406] (gas: 3)\n 22451: t0 = 0x32e\n 22455: a1 = s1 + 0x2198\n 22459: fallthrough\n      : @796 [@dyn 407] (gas: 12)\n 22460: a2 = a1 + 0x600\n 22464: a0 = u64 [a2 + 0xe0]\n 22468: u64 [s1 + 0x108] = a0\n 22472: a0 = u64 [a2 + 0xd8]\n 22476: u64 [s1 + 0x190] = a0\n 22480: a0 = u64 [a2 + 0xd0]\n 22484: u64 [s1 + 0x1b8] = a0\n 22488: a0 = u64 [a2 + 0xc8]\n 22492: u64 [s1 + 0x1c0] = a0\n 22496: a0 = s1 + 0x27e0\n 22500: a1 = 0x40\n 22503: ra = 816, jump @22\n      : @797 [@dyn 408] (gas: 27)\n 22509: a3 = s1 + 0x2198\n 22513: a4 = a3 + 0x600\n 22517: a0 = u64 [a4 + 0x48]\n 22520: a2 = u64 [a4 + 0x60]\n 22523: a1 = u64 [a4 + 0x50]\n 22526: a3 = u64 [a4 + 0x58]\n 22529: a4 = a0 + 0x20\n 22532: u64 [s1 + 0x1f0] = a4\n 22536: a5 = s1 + 0x200\n 22540: u64 [a5 + 0x18] = a0\n 22543: a0 = a4 <u a0\n 22546: a4 = a1 + a0\n 22549: u64 [s1 + 0x1e8] = a4\n 22553: u64 [a5 + 0x8] = a1\n 22556: a1 = a4 <u a1\n 22559: a1 = a0 if a0 == 0\n 22562: a1 = a1 + a3\n 22565: u64 [s1 + 0x1c8] = a1\n 22569: u64 [s1 + 0x1f8] = a3\n 22573: a0 = a1 <u a3\n 22576: u64 [a5] = a2\n 22578: a0 = a0 + a2\n 22581: u64 [s1 + 0x1e0] = a0\n 22585: a0 = s1 + 0x4000\n 22589: i32 a0 = a0 + 0x6a0\n 22593: ecalli 1 // 'block_number'\n 22595: fallthrough\n      : @798 (gas: 13)\n 22596: a4 = s1 + 0x100\n 22600: a5 = u64 [a4 + 0xf0]\n 22604: a2 = u64 [a4 + 0xc8]\n 22608: a0 = a5 | a2\n 22611: a1 = u64 [a4 + 0xe8]\n 22615: a3 = u64 [a4 + 0xe0]\n 22619: a1 = a1 | a3\n 22622: a0 = a0 | a1\n 22625: a0 = a0 >> 0x20\n 22628: a1 = a1 | a2\n 22631: a1 = a1 << 0x20\n 22634: a0 = a0 | a1\n 22637: jump @800 if a0 == 0\n      : @799 (gas: 1)\n 22640: jump @576\n      : @800 (gas: 15)\n 22643: a3 = s1 + 0x4198\n 22647: a4 = a3 + 0x500\n 22651: a0 = u64 [a4 + 0x8]\n 22654: a1 = u64 [a4 + 0x10]\n 22657: a2 = u64 [a4 + 0x18]\n 22660: a3 = u64 [a4 + 0x20]\n 22663: a4 = s1 + 0x2198\n 22667: u64 [a4 + 0x640] = a3\n 22671: a3 = a4 + 0x600\n 22675: u64 [a3 + 0x38] = a2\n 22678: u64 [a3 + 0x30] = a1\n 22681: a1 = s1 + 0x27c0\n 22685: u64 [a3 + 0x28] = a0\n 22688: a0 = a5\n 22690: ra = 818, jump @24\n      : @801 [@dyn 409] (gas: 4)\n 22696: a5 = s1 + 0x200\n 22700: a1 = u64 [a5 + 0x18]\n 22703: a0 = a1 + 0x40\n 22706: t0 = 820, jump @1728\n      : @802 [@dyn 410] (gas: 1)\n 22712: jump @804 if a1 == 0\n      : @803 (gas: 1)\n 22715: jump @576\n      : @804 (gas: 7)\n 22718: a2 = s1 + 0x2198\n 22722: u64 [a2 + 1568] = 0\n 22726: u64 [a2 + 1560] = 0\n 22730: u64 [a2 + 1544] = 0x80\n 22736: a1 = s1 + 0x27a0\n 22740: u64 [a2 + 1552] = 0\n 22744: ra = 822, jump @24\n      : @805 [@dyn 411] (gas: 3)\n 22750: a1 = u64 [s1 + 0x218]\n 22754: a0 = a1 + 0xa0\n 22758: t0 = 824, jump @1767\n      : @806 [@dyn 412] (gas: 19)\n 22764: a1 = s1 + 0x2198\n 22768: a5 = a1 + 0x500\n 22772: u64 [a5 + 0xb0] = a2\n 22776: u64 [a5 + 0xa8] = a0\n 22780: a0 = u64 [s1 + 0x108]\n 22784: u64 [a5 + 0xe0] = a0\n 22788: a0 = u64 [s1 + 0x190]\n 22792: u64 [a5 + 0xd8] = a0\n 22796: a0 = u64 [s1 + 0x1b8]\n 22800: u64 [a5 + 0xd0] = a0\n 22804: a0 = u64 [s1 + 0x1c0]\n 22808: u64 [a5 + 0xc8] = a0\n 22812: u64 [a5 + 0xb8] = a3\n 22816: a3 = a1\n 22818: a0 = s1 + 0x2780\n 22822: a1 = s1 + 0x2760\n 22826: a2 = s1 + 0x2740\n 22830: u64 [a3 + 0x5c0] = a4\n 22834: ra = 826, jump @1527\n      : @807 [@dyn 413] (gas: 4)\n 22840: a5 = s1 + 0x200\n 22844: a1 = u64 [a5 + 0x18]\n 22847: a0 = a1 + 0x60\n 22850: t0 = 828, jump @1728\n      : @808 [@dyn 414] (gas: 1)\n 22856: jump @810 if a1 == 0\n      : @809 (gas: 1)\n 22859: jump @576\n      : @810 (gas: 19)\n 22862: a3 = s1 + 0x2198\n 22866: a1 = u64 [a3 + 0x600]\n 22870: u64 [s1 + 0x1c8] = a1\n 22874: a4 = a3 + 0x500\n 22878: a1 = u64 [a4 + 0xf8]\n 22882: u64 [s1 + 0x1c0] = a1\n 22886: a1 = u64 [a4 + 0xf0]\n 22890: u64 [s1 + 0x1e0] = a1\n 22894: a1 = u64 [a4 + 0xe8]\n 22898: u64 [s1 + 0x1e8] = a1\n 22902: u64 [a3 + 1440] = 0\n 22906: a1 = u64 [s1 + 0x160]\n 22910: u64 [a4 + 0x88] = a1\n 22914: a1 = u64 [s1 + 0x168]\n 22918: u64 [a4 + 0x90] = a1\n 22922: a1 = s1 + 0x2720\n 22926: a2 = u64 [s1 + 0x100]\n 22930: u64 [a4 + 0x98] = a2\n 22934: ra = 830, jump @24\n      : @811 [@dyn 415] (gas: 4)\n 22940: a5 = s1 + 0x200\n 22944: a1 = u64 [a5 + 0x18]\n 22947: a0 = a1 + 0x80\n 22951: t0 = 832, jump @1728\n      : @812 [@dyn 416] (gas: 1)\n 22957: jump @814 if a1 == 0\n      : @813 (gas: 1)\n 22960: jump @576\n      : @814 (gas: 12)\n 22963: a1 = u64 [s1 + 0x140]\n 22967: a3 = s1 + 0x2198\n 22971: a4 = a3 + 0x500\n 22975: u64 [a4 + 0x68] = a1\n 22978: a1 = u64 [s1 + 0x148]\n 22982: u64 [a4 + 0x70] = a1\n 22985: a1 = u64 [s1 + 0x150]\n 22989: u64 [a4 + 0x78] = a1\n 22992: a1 = s1 + 0x2700\n 22996: a2 = u64 [s1 + 0x158]\n 23000: u64 [a4 + 0x80] = a2\n 23004: ra = 834, jump @24\n      : @815 [@dyn 417] (gas: 13)\n 23010: a4 = s1 + 0x200\n 23014: a0 = u64 [a4 + 0x18]\n 23017: a3 = u64 [s1 + 0x1f8]\n 23021: a0 = a0 | a3\n 23024: a1 = u64 [a4 + 0x8]\n 23027: a2 = u64 [a4]\n 23029: a1 = a1 | a2\n 23032: a0 = a0 | a1\n 23035: a0 = a0 >> 0x20\n 23038: a1 = a1 | a3\n 23041: a1 = a1 << 0x20\n 23044: a0 = a0 | a1\n 23047: jump @817 if a0 == 0\n      : @816 (gas: 1)\n 23050: jump @576\n      : @817 (gas: 51)\n 23053: a1 = u64 [s1 + 0x218]\n 23057: ra = u64 [s1 + 0x1e8]\n 23061: t0 = ra <u a1\n 23064: t2 = a1\n 23066: a5 = u64 [s1 + 0x208]\n 23070: a4 = u64 [s1 + 0x1e0]\n 23074: a1 = a4 ^ a5\n 23077: a2 = a4 <u a5\n 23080: a3 = a5\n 23082: a2 = t0 if a1 == 0\n 23085: a5 = u64 [s1 + 0x1f8]\n 23089: t1 = u64 [s1 + 0x1c0]\n 23093: a1 = t1 - a5\n 23096: a0 = a1 <u a2\n 23099: u64 [s1 + 0x1b8] = a0\n 23103: t1 = t1 <u a5\n 23106: a5 = u64 [s1 + 0x1c8]\n 23110: a0 = u64 [s1 + 0x200]\n 23114: a5 = a5 - a0\n 23117: a5 = a5 - t1\n 23120: a0 = u64 [s1 + 0x1b8]\n 23124: a5 = a5 - a0\n 23127: u64 [s1 + 0x1c8] = a5\n 23131: t1 = a1 - a2\n 23134: a1 = a4 - a3\n 23137: a3 = a1 - t0\n 23140: u64 [s1 + 0x1e0] = a3\n 23144: a1 = ra - t2\n 23147: u64 [s1 + 0x1e8] = a1\n 23151: a0 = a1 + 0xffffffffffffffe0\n 23154: a1 = a0 <u a1\n 23157: a2 = a3 + a1\n 23160: a2 = a2 + 0xffffffffffffffff\n 23163: t0 = a2 ^ a3\n 23166: a4 = a2 <u a3\n 23169: a4 = a1 if t0 == 0\n 23172: u64 [s1 + 0x1c0] = t1\n 23176: a1 = t1 <u 0x1\n 23179: a1 = a5 - a1\n 23182: a5 = t1 + 0xffffffffffffffff\n 23185: a4 = a4 + a5\n 23188: a3 = a4 <u a5\n 23191: a3 = a3 + a1\n 23194: a5 = s1 + 0x2198\n 23198: u64 [a5 + 0x548] = a0\n 23202: u64 [a5 + 0x550] = a2\n 23206: u64 [a5 + 0x558] = a4\n 23210: a1 = s1 + 0x26e0\n 23214: u64 [a5 + 0x560] = a3\n 23218: a0 = t2\n 23220: ra = 836, jump @24\n      : @818 [@dyn 418] (gas: 23)\n 23226: a1 = s1 + 0x2198\n 23230: a2 = s1 + 0x100\n 23234: a0 = u64 [a2 + 0xc8]\n 23238: a3 = a1 + 0x500\n 23242: u64 [a3 + 0x20] = a0\n 23245: a0 = u64 [a2 + 0xc0]\n 23249: u64 [a3 + 0x18] = a0\n 23252: a0 = u64 [a2 + 0xe0]\n 23256: u64 [a3 + 0x10] = a0\n 23259: a0 = u64 [a2 + 0xe8]\n 23263: u64 [a3 + 0x8] = a0\n 23266: a0 = u64 [s1 + 0x200]\n 23270: u64 [a3 + 0x40] = a0\n 23273: a0 = u64 [a2 + 0xf8]\n 23277: u64 [a3 + 0x38] = a0\n 23280: a0 = u64 [s1 + 0x208]\n 23284: u64 [a3 + 0x30] = a0\n 23287: a3 = a1\n 23289: a0 = s1 + 0x26c0\n 23293: a1 = s1 + 0x26a0\n 23297: a2 = u64 [s1 + 0x218]\n 23301: u64 [a3 + 0x528] = a2\n 23305: ra = 838, jump @1494\n      : @819 [@dyn 419] (gas: 3)\n 23311: a0 = s1 + 0x2680\n 23315: a1 = u64 [s1 + 0x218]\n 23319: ra = 840, jump @22\n      : @820 [@dyn 420] (gas: 3)\n 23325: t0 = 0x34a\n 23329: a1 = s1 + 0x2198\n 23333: fallthrough\n      : @821 [@dyn 421] (gas: 13)\n 23334: a0 = u64 [a1 + 0x500]\n 23338: a4 = a1 + 0x400\n 23342: a3 = u64 [a4 + 0xf8]\n 23346: a2 = u64 [a4 + 0xf0]\n 23350: a1 = u64 [a4 + 0xe8]\n 23354: a0 = a0 | a2\n 23357: a2 = a1 | a3\n 23360: a2 = a2 | a0\n 23363: a2 = a2 >> 0x20\n 23366: a0 = a0 | a3\n 23369: a0 = a0 << 0x20\n 23372: a0 = a0 | a2\n 23375: jump @823 if a0 == 0\n      : @822 (gas: 1)\n 23378: jump @576\n      : @823 (gas: 5)\n 23381: a0 = 0xffffffff\n 23391: u64 [s1 + 0x208] = a0\n 23395: a0 = u64 [s1 + 0x1f0]\n 23399: u64 [s1 + 0x218] = a1\n 23403: ra = 844, jump @36\n      : @824 [@dyn 422] (gas: 12)\n 23409: a1 = sp + 0xffffffffffffffe0\n 23412: a2 = a1 & 0xffffffffffffffe0\n 23415: u64 [s1 + 0x200] = a2\n 23419: sp = a2\n 23421: i32 a0 = a0 + 0\n 23423: a1 = i32 [s1 + 0x218]\n 23427: i32 a2 = a2 + 0\n 23429: ra = 0x34e\n 23433: ecalli 11 // 'hash_keccak_256'\n 23435: a3 = u64 [s1 + 0x200]\n 23439: t0 = 0x350\n 23443: jump @1759\n      : @825 [@dyn 423] (gas: 2)\n 23446: a3 = u64 [s1 + 0x200]\n 23450: t0 = 848, jump @1759\n      : @826 [@dyn 424] (gas: 13)\n 23456: u64 [s1 + 0xe0] = a0\n 23460: a3 = s1 + 0x2198\n 23464: a5 = a3 + 0x400\n 23468: u64 [a5 + 0xe0] = a0\n 23472: u64 [s1 + 0xc8] = a2\n 23476: u64 [a5 + 0xd8] = a2\n 23480: u64 [s1 + 0xd0] = a1\n 23484: u64 [a5 + 0xd0] = a1\n 23488: a1 = s1 + 0x2660\n 23492: u64 [s1 + 0xd8] = a4\n 23496: u64 [a5 + 0xc8] = a4\n 23500: a0 = 0\n 23502: ra = 850, jump @24\n      : @827 [@dyn 425] (gas: 3)\n 23508: t0 = 0x354\n 23512: a1 = s1 + 0x2198\n 23516: fallthrough\n      : @828 [@dyn 426] (gas: 8)\n 23517: u64 [a1 + 1216] = 0\n 23521: u64 [a1 + 1208] = 0\n 23525: u64 [a1 + 1192] = 0x1\n 23530: a2 = a1\n 23532: a0 = 0x20\n 23535: a1 = s1 + 0x2640\n 23539: u64 [a2 + 1200] = 0\n 23543: ra = 854, jump @24\n      : @829 [@dyn 427] (gas: 4)\n 23549: a0 = 0x20228\n 23554: u64 [s1 + 0x218] = a0\n 23558: a0 = i32 [0x20228]\n 23563: jump @831 if a0 >u 63\n      : @830 (gas: 3)\n 23567: a1 = u64 [s1 + 0x218]\n 23571: u32 [a1 + 0] = 0x40\n 23574: fallthrough\n      : @831 (gas: 14)\n 23575: a0 = sp + 0xffffffffffffffe0\n 23578: a2 = a0 & 0xffffffffffffffe0\n 23581: u64 [s1 + 0x200] = a2\n 23585: sp = a2\n 23587: a0 = 0x20230\n 23592: i32 a0 = a0 + 0\n 23594: i32 a2 = a2 + 0\n 23596: a1 = 0x40\n 23599: u64 [s1 + 0x1f8] = a0\n 23603: ra = 0x358\n 23607: ecalli 11 // 'hash_keccak_256'\n 23609: a3 = u64 [s1 + 0x200]\n 23613: t0 = 0x35a\n 23617: jump @1746\n      : @832 [@dyn 428] (gas: 2)\n 23620: a3 = u64 [s1 + 0x200]\n 23624: t0 = 858, jump @1746\n      : @833 [@dyn 429] (gas: 9)\n 23630: a1 = s1 + 0x4198\n 23634: a3 = a1 + 0x500\n 23638: u64 [a3 + 0x28] = a4\n 23641: u64 [a3 + 0x30] = a5\n 23644: u64 [a3 + 0x38] = a2\n 23647: u64 [a3 + 0x40] = a0\n 23650: a0 = s1 + 0x2620\n 23654: a1 = s1 + 0x46c0\n 23658: ra = 860, jump @26\n      : @834 [@dyn 430] (gas: 12)\n 23664: a2 = s1 + 0x2198\n 23668: a3 = a2 + 0x400\n 23672: a0 = u64 [a3 + 0x90]\n 23676: a1 = u64 [a3 + 0x98]\n 23680: a2 = u64 [a3 + 0x88]\n 23684: a0 = a0 & 0xffffffffffffffff\n 23687: a4 = u64 [s1 + 0x208]\n 23691: a1 = a1 & a4\n 23694: a2 = a2 & 0xffffffffffffffff\n 23697: a1 = a1 | a2\n 23700: a0 = a0 | a1\n 23703: jump @836 if a0 == 0\n      : @835 (gas: 1)\n 23706: jump @1162\n      : @836 (gas: 13)\n 23709: a0 = u64 [s1 + 0xd8]\n 23713: a2 = s1 + 0x2198\n 23717: a3 = a2 + 0x300\n 23721: u64 [a3 + 0xc8] = a0\n 23725: a0 = u64 [s1 + 0xd0]\n 23729: u64 [a3 + 0xd0] = a0\n 23733: a0 = u64 [s1 + 0xc8]\n 23737: u64 [a3 + 0xd8] = a0\n 23741: a1 = s1 + 0x2560\n 23745: a0 = u64 [s1 + 0xe0]\n 23749: u64 [a3 + 0xe0] = a0\n 23753: a0 = 0\n 23755: ra = 862, jump @24\n      : @837 [@dyn 431] (gas: 3)\n 23761: t0 = 0x360\n 23765: a1 = s1 + 0x2198\n 23769: fallthrough\n      : @838 [@dyn 432] (gas: 8)\n 23770: u64 [a1 + 960] = 0\n 23774: u64 [a1 + 952] = 0\n 23778: u64 [a1 + 936] = 0x1\n 23783: a2 = a1\n 23785: a0 = 0x20\n 23788: a1 = s1 + 0x2540\n 23792: u64 [a2 + 944] = 0\n 23796: ra = 866, jump @24\n      : @839 [@dyn 433] (gas: 1)\n 23802: t0 = 868, jump @1799\n      : @840 [@dyn 434] (gas: 1)\n 23808: jump @842 if a1 <u a0\n      : @841 (gas: 3)\n 23811: a1 = u64 [s1 + 0x218]\n 23815: u32 [a1 + 0] = 0x40\n 23818: fallthrough\n      : @842 (gas: 28)\n 23819: a0 = sp + 0xffffffffffffffe0\n 23822: a0 = a0 & 0xffffffffffffffe0\n 23825: u64 [s1 + 0x200] = a0\n 23829: sp = a0\n 23831: i32 a2 = a0 + 0\n 23833: a1 = 0x40\n 23836: a0 = u64 [s1 + 0x1f8]\n 23840: ecalli 11 // 'hash_keccak_256'\n 23842: a3 = u64 [s1 + 0x200]\n 23846: a0 = u64 [a3 + 0x18]\n 23849: a1 = u64 [a3 + 0x10]\n 23852: a2 = u64 [a3 + 0x8]\n 23855: a3 = u64 [a3]\n 23857: a5 = reverse a0\n 23859: u64 [s1 + 0xe8] = a5\n 23863: a4 = reverse a1\n 23865: u64 [s1 + 0xf0] = a4\n 23869: a2 = reverse a2\n 23871: u64 [s1 + 0x108] = a2\n 23875: a0 = reverse a3\n 23877: u64 [s1 + 0xf8] = a0\n 23881: a1 = u64 [s1 + 0x208]\n 23885: u64 [a1 + 0x18] = a0\n 23888: u64 [a1 + 0x10] = a2\n 23891: u64 [a1 + 0x8] = a4\n 23894: u64 [a1] = a5\n 23896: a0 = s1 + 0x2520\n 23900: ra = 870, jump @26\n      : @843 [@dyn 435] (gas: 16)\n 23906: a3 = s1 + 0x2198\n 23910: a4 = a3 + 0x300\n 23914: a0 = u64 [a4 + 0x88]\n 23918: a1 = u64 [a4 + 0xa0]\n 23922: a2 = u64 [a4 + 0x98]\n 23926: a3 = u64 [a4 + 0x90]\n 23930: a0 = a0 & 0xffffffffffffff00\n 23934: a4 = s1 + 0x4198\n 23938: a5 = a4 + 0x500\n 23942: u64 [a5 + 0x60] = a1\n 23945: u64 [a5 + 0x58] = a2\n 23948: u64 [a5 + 0x50] = a3\n 23951: u64 [a5 + 0x48] = a0\n 23954: a1 = s1 + 0x46e0\n 23958: a0 = u64 [s1 + 0x208]\n 23962: ra = 872, jump @28\n      : @844 [@dyn 436] (gas: 26)\n 23968: a0 = sp + 0xffffffffffffffe0\n 23971: a1 = a0 & 0xffffffffffffffe0\n 23974: sp = a1\n 23976: a2 = u64 [s1 + 0xe8]\n 23980: a2 = a2 + 0x1\n 23983: a0 = a2 <u 0x1\n 23986: a3 = u64 [s1 + 0xf0]\n 23990: a3 = a3 + a0\n 23993: u64 [s1 + 0x208] = a3\n 23997: a0 = a2 | a3\n 24000: u64 [s1 + 0x1f0] = a2\n 24004: a0 = a0 <u 0x1\n 24007: a5 = u64 [s1 + 0x108]\n 24011: a4 = a5 + a0\n 24014: u64 [s1 + 0x1e8] = a4\n 24018: a0 = a4 <u a5\n 24021: a5 = u64 [s1 + 0xf8]\n 24025: a0 = a0 + a5\n 24028: u64 [s1 + 0x1e0] = a0\n 24032: u64 [a1 + 0x18] = a0\n 24035: u64 [a1 + 0x10] = a4\n 24038: u64 [a1 + 0x8] = a3\n 24041: u64 [a1] = a2\n 24043: a0 = s1 + 0x2500\n 24047: u64 [s1 + 0x200] = a1\n 24051: ra = 874, jump @26\n      : @845 [@dyn 437] (gas: 13)\n 24057: a4 = s1 + 0x2198\n 24061: a5 = a4 + 0x300\n 24065: a2 = u64 [a5 + 0x68]\n 24068: a0 = u64 [a5 + 0x70]\n 24071: a1 = u64 [a5 + 0x78]\n 24074: a3 = u64 [a5 + 0x80]\n 24078: u64 [a5 + 0x40] = a3\n 24081: u64 [a5 + 0x38] = a1\n 24084: u64 [a5 + 0x30] = a0\n 24087: a0 = s1 + 0x24e0\n 24091: a1 = s1 + 0x24c0\n 24095: u64 [a5 + 0x28] = a2\n 24098: ra = 876, jump @1485\n      : @846 [@dyn 438] (gas: 30)\n 24104: a4 = s1 + 0x2198\n 24108: a5 = a4 + 0x300\n 24112: a0 = u64 [a5 + 0x48]\n 24115: a1 = u64 [a5 + 0x50]\n 24118: a2 = u64 [a5 + 0x58]\n 24121: a3 = u64 [a5 + 0x60]\n 24124: u64 [a5] = a3\n 24126: u64 [a4 + 0x2f8] = a2\n 24130: u64 [a4 + 0x2f0] = a1\n 24134: u64 [a4 + 0x2e8] = a0\n 24138: a0 = u64 [s1 + 0x1e0]\n 24142: u64 [a5 + 0x20] = a0\n 24145: a0 = u64 [s1 + 0x130]\n 24149: u64 [a4 + 0x2e0] = a0\n 24153: a0 = u64 [s1 + 0x138]\n 24157: u64 [a4 + 0x2d8] = a0\n 24161: a0 = u64 [s1 + 0x180]\n 24165: u64 [a4 + 0x2d0] = a0\n 24169: a0 = u64 [s1 + 0x1e8]\n 24173: u64 [a5 + 0x18] = a0\n 24176: a0 = u64 [s1 + 0x208]\n 24180: u64 [a5 + 0x10] = a0\n 24183: a0 = u64 [s1 + 0x1f0]\n 24187: u64 [a5 + 0x8] = a0\n 24190: a0 = s1 + 0x24a0\n 24194: a1 = s1 + 0x2480\n 24198: a2 = s1 + 0x2460\n 24202: a3 = u64 [s1 + 0x188]\n 24206: u64 [a4 + 0x2c8] = a3\n 24210: ra = 878, jump @1586\n      : @847 [@dyn 439] (gas: 9)\n 24216: a3 = s1 + 0x100\n 24220: a0 = u64 [a3 + 0x38]\n 24223: a1 = u64 [a3 + 0x88]\n 24227: a0 = a0 | a1\n 24230: a1 = u64 [a3 + 0x30]\n 24233: a2 = u64 [a3 + 0x80]\n 24237: a1 = a1 | a2\n 24240: a0 = a0 | a1\n 24243: jump @849 if a0 == 0\n      : @848 (gas: 1)\n 24246: jump @1179\n      : @849 (gas: 5)\n 24249: u64 [s1 + 480] = 0\n 24253: u64 [s1 + 456] = 0\n 24257: u64 [s1 + 488] = 0\n 24261: u64 [s1 + 496] = 0\n 24265: jump @1180\n      : @850 (gas: 3)\n 24268: a0 = s1 + 0x2900\n 24272: a1 = 0x40\n 24275: ra = 880, jump @22\n      : @851 [@dyn 440] (gas: 14)\n 24281: a2 = s1 + 0x2198\n 24285: t0 = u64 [a2 + 0x780]\n 24289: a1 = a2 + 0x700\n 24293: a5 = u64 [a1 + 0x78]\n 24296: a4 = u64 [a1 + 0x70]\n 24299: a0 = u64 [a1 + 0x68]\n 24302: a3 = a4 | t0\n 24305: a1 = a0 | a5\n 24308: a1 = a1 | a3\n 24311: a1 = a1 >> 0x20\n 24314: a3 = a3 | a5\n 24317: a3 = a3 << 0x20\n 24320: a1 = a1 | a3\n 24323: jump @853 if a1 == 0\n      : @852 (gas: 1)\n 24326: jump @576\n      : @853 (gas: 11)\n 24329: u64 [a2 + 1880] = 0\n 24333: u64 [a2 + 1872] = 0\n 24337: u64 [a2 + 1864] = 0\n 24341: a3 = 0x8c379a000000000\n 24351: a1 = s1 + 0x28e0\n 24355: u64 [a2 + 0x760] = a3\n 24359: u64 [s1 + 0x218] = a0\n 24363: u64 [s1 + 0x210] = a4\n 24367: u64 [s1 + 0x200] = t0\n 24371: u64 [s1 + 0x208] = a5\n 24375: ra = 882, jump @24\n      : @854 [@dyn 441] (gas: 1)\n 24381: t0 = 884, jump @1726\n      : @855 [@dyn 442] (gas: 1)\n 24387: jump @857 if a0 != 0\n      : @856 (gas: 1)\n 24390: jump @576\n      : @857 (gas: 10)\n 24393: i32 a0 = a1 + 0x4\n 24396: a2 = s1 + 0x2198\n 24400: u64 [a2 + 1856] = 0\n 24404: u64 [a2 + 1848] = 0\n 24408: u64 [a2 + 1832] = 0x20\n 24413: a1 = s1 + 0x28c0\n 24417: u64 [a2 + 1840] = 0\n 24421: u64 [s1 + 0x208] = a3\n 24425: u64 [s1 + 0x200] = a4\n 24429: ra = 886, jump @24\n      : @858 [@dyn 443] (gas: 1)\n 24435: t0 = 888, jump @1729\n      : @859 [@dyn 444] (gas: 1)\n 24441: jump @861 if a0 != 0\n      : @860 (gas: 1)\n 24444: jump @576\n      : @861 (gas: 8)\n 24447: i32 a0 = a1 + 0x24\n 24450: a3 = s1 + 0x2198\n 24454: u64 [a3 + 1824] = 0\n 24458: u64 [a3 + 1816] = 0\n 24462: u64 [a3 + 1800] = 0x12\n 24467: a1 = s1 + 0x28a0\n 24471: u64 [a3 + 1808] = 0\n 24475: ra = 890, jump @24\n      : @862 [@dyn 445] (gas: 1)\n 24481: t0 = 892, jump @1727\n      : @863 [@dyn 446] (gas: 1)\n 24487: jump @865 if a0 != 0\n      : @864 (gas: 1)\n 24490: jump @576\n      : @865 (gas: 12)\n 24493: i32 a0 = a3 + 0x44\n 24496: a1 = u64 [0x200f0]\n 24501: a2 = u64 [0x20108]\n 24506: a4 = s1 + 0x2198\n 24510: u64 [a4 + 0x700] = a1\n 24514: u64 [a4 + 0x6f8] = a2\n 24518: a1 = 0x7073000000000000\n 24528: u64 [a4 + 0x6f0] = a1\n 24532: a1 = s1 + 0x2880\n 24536: u64 [a4 + 1768] = 0\n 24540: ra = 0x50c\n 24544: jump @24\n      : @866 (gas: 3)\n 24547: a0 = a3 | a5\n 24550: a0 = a0 | a1\n 24553: jump @884 if a0 != 0\n      : @867 (gas: 6)\n 24557: u64 [s1 + 0x98] = a2\n 24561: u64 [s1 + 448] = 0\n 24565: u64 [s1 + 440] = 0\n 24569: u64 [s1 + 464] = 0\n 24573: u64 [s1 + 472] = 0\n 24577: jump @887\n      : @868 (gas: 7)\n 24580: t2 = u64 [s1 + 0x200]\n 24584: t0 = u64 [s1 + 0x188]\n 24588: a3 = u64 [s1 + 0x1a0]\n 24592: a3 = a3 ^ t0\n 24595: a3 = a3 | a5\n 24598: a3 = a3 | a4\n 24601: jump @883 if a3 == 0\n      : @869 (gas: 20)\n 24605: a3 = ra <u t2\n 24608: a2 = a2 + a3\n 24611: a4 = u64 [s1 + 0x210]\n 24615: a0 = a2 ^ a4\n 24618: a5 = a2 <u a4\n 24621: a5 = a3 if a0 == 0\n 24624: a5 = a5 + a1\n 24627: a3 = a5 <u a1\n 24630: a0 = u64 [s1 + 0x218]\n 24634: a1 = a1 <u a0\n 24637: a0 = t1 + a1\n 24640: a0 = a0 + a3\n 24643: a1 = ra | a5\n 24646: a0 = a0 | a2\n 24649: a1 = a1 | a0\n 24652: a1 = a1 >> 0x20\n 24655: a0 = a0 | a5\n 24658: a0 = a0 << 0x20\n 24661: a0 = a0 | a1\n 24664: jump @871 if a0 == 0\n      : @870 (gas: 1)\n 24667: jump @576\n      : @871 (gas: 2)\n 24670: a0 = t0 << 0x3b\n 24673: t0 = 894, jump @1745\n      : @872 [@dyn 447] (gas: 1)\n 24679: ra = 896, jump @1817\n      : @873 [@dyn 448] (gas: 1)\n 24685: t0 = 898, jump @1758\n      : @874 [@dyn 449] (gas: 1)\n 24691: ra = 900, jump @1812\n      : @875 [@dyn 450] (gas: 1)\n 24697: t0 = 902, jump @1733\n      : @876 [@dyn 451] (gas: 1)\n 24703: ra = 904, jump @1812\n      : @877 [@dyn 452] (gas: 1)\n 24709: t0 = 906, jump @1725\n      : @878 [@dyn 453] (gas: 5)\n 24715: i32 a0 = a0 + 0xffffffffffffffe0\n 24718: ra = 0x38c\n 24722: ecalli 4 // 'call_data_load'\n 24724: a4 = s1 + 0x3998\n 24728: jump @880\n      : @879 [@dyn 454] (gas: 2)\n 24730: a4 = s1 + 0x3998\n 24734: fallthrough\n      : @880 (gas: 5)\n 24735: a0 = u64 [a4 + 0x648]\n 24739: a1 = u64 [a4 + 0x650]\n 24743: a2 = u64 [a4 + 0x658]\n 24747: a3 = u64 [a4 + 0x660]\n 24751: t0 = 910, jump @1731\n      : @881 [@dyn 455] (gas: 8)\n 24757: a5 = a4 + 0x600\n 24761: u64 [a5 + 0x80] = a3\n 24765: u64 [a5 + 0x78] = a2\n 24768: u64 [a5 + 0x70] = a1\n 24771: u64 [a5 + 0x68] = a0\n 24774: a1 = s1 + 0x4000\n 24778: a0 = u64 [s1 + 0x1f8]\n 24782: ra = 912, jump @28\n      : @882 [@dyn 456] (gas: 2)\n 24788: a0 = u64 [s1 + 0x1c8]\n 24792: fallthrough\n      : @883 (gas: 20)\n 24793: a1 = u64 [s1 + 0x48]\n 24796: a5 = u64 [s1 + 0x40]\n 24799: a5 = a5 | a1\n 24802: a1 = u64 [s1 + 0x90]\n 24806: a2 = u64 [s1 + 0xa0]\n 24810: a1 = a1 | a2\n 24813: a2 = u64 [s1 + 0x38]\n 24816: a3 = u64 [s1 + 0xa8]\n 24820: a2 = a2 | a3\n 24823: a3 = u64 [s1 + 0x98]\n 24827: a3 = a3 + 0x1\n 24830: a4 = s1 + 0x3998\n 24834: u64 [a4 + 0x688] = a3\n 24838: a3 = a4 + 0x600\n 24842: u64 [a3 + 0x90] = a2\n 24846: u64 [a3 + 0x98] = a1\n 24850: u64 [a3 + 0xa0] = a5\n 24854: a1 = s1 + 0x4020\n 24858: ra = 0x39c\n 24862: jump @28\n      : @884 (gas: 14)\n 24865: u64 [s1 + 0x90] = ra\n 24869: a3 = s1 + 0x100\n 24873: a4 = u64 [a3 + 0xc0]\n 24877: a5 = u64 [a3 + 0xb8]\n 24881: ra = a4 | a5\n 24884: a1 = u64 [a3 + 0xb0]\n 24888: a0 = u64 [a3 + 0xa8]\n 24892: a1 = a1 | a0\n 24895: a0 = ra | a1\n 24898: a0 = a0 >> 0x20\n 24901: a1 = a1 | a5\n 24904: a1 = a1 << 0x20\n 24907: a0 = a0 | a1\n 24910: jump @886 if a0 == 0\n      : @885 (gas: 1)\n 24913: jump @576\n      : @886 (gas: 25)\n 24916: u64 [s1 + 0x98] = a2\n 24920: i32 a1 = a4 + 0\n 24922: a0 = s1 + 0x4000\n 24926: i32 a0 = a0 + 0x40\n 24929: u64 [s1 + 0x48] = t0\n 24932: u64 [s1 + 0x40] = t1\n 24935: u64 [s1 + 0x38] = t2\n 24938: ecalli 4 // 'call_data_load'\n 24940: t2 = u64 [s1 + 0x38]\n 24943: t1 = u64 [s1 + 0x40]\n 24946: t0 = u64 [s1 + 0x48]\n 24949: a2 = s1 + 0x100\n 24953: a3 = u64 [a2 + 0x88]\n 24957: a0 = s1 + 0x3998\n 24961: a4 = a0 + 0x600\n 24965: a1 = u64 [a4 + 0xc0]\n 24969: u64 [a2 + 0xd8] = a1\n 24973: a1 = u64 [a4 + 0xb8]\n 24977: u64 [a2 + 0xd0] = a1\n 24981: a1 = u64 [a4 + 0xb0]\n 24985: u64 [a2 + 0xb8] = a1\n 24989: a0 = u64 [a4 + 0xa8]\n 24993: u64 [a2 + 0xc0] = a0\n 24997: ra = u64 [s1 + 0x90]\n 25001: fallthrough\n      : @887 (gas: 9)\n 25002: a0 = u64 [s1 + 0xa0]\n 25006: a0 = a0 | ra\n 25009: u64 [s1 + 0x210] = a0\n 25013: a0 = t1 | t0\n 25016: u64 [s1 + 0x208] = a0\n 25020: a0 = u64 [s1 + 0xa8]\n 25024: a0 = a0 | t2\n 25027: u64 [s1 + 0x200] = a0\n 25031: t0 = 914, jump @1743\n      : @888 [@dyn 457] (gas: 1)\n 25037: ra = 916, jump @1817\n      : @889 [@dyn 458] (gas: 7)\n 25043: u64 [s1 + 0x1e0] = a0\n 25047: u64 [s1 + 0x1f8] = a1\n 25051: a0 = u64 [s1 + 0x188]\n 25055: i32 a2 = a0 << 0x3\n 25058: a0 = 0xffffffffffffffff\n 25061: a1 = 0xffffffffffffffff\n 25064: ra = 918, jump @1812\n      : @890 [@dyn 459] (gas: 10)\n 25070: u64 [s1 + 0x1f0] = a0\n 25074: u64 [s1 + 0x1e8] = a1\n 25078: a1 = u64 [s1 + 0x1e0]\n 25082: a0 = a0 | a1\n 25085: u64 [s1 + 0x1e0] = a0\n 25089: a0 = u64 [s1 + 0x218]\n 25093: i32 a2 = a0 + 0xffffffffffffff80\n 25096: a0 = 0xffffffffffffffff\n 25099: a1 = 0xffffffffffffffff\n 25102: ra = 920, jump @1812\n      : @891 [@dyn 460] (gas: 7)\n 25108: a4 = u64 [s1 + 0x218]\n 25112: a2 = a4 <u 0x80\n 25116: a3 = u64 [s1 + 0x1e0]\n 25120: a0 = a3 if a2 != 0\n 25123: a5 = u64 [s1 + 0x1e8]\n 25127: a3 = u64 [s1 + 0x1f8]\n 25131: t0 = 922, jump @1751\n      : @892 [@dyn 461] (gas: 28)\n 25137: a4 = u64 [s1 + 0x1f0]\n 25141: a4 = 0 if a2 == 0\n 25143: a1 = u64 [s1 + 0x1b8]\n 25147: a1 = a1 & ~a3\n 25150: a2 = u64 [s1 + 0x1c0]\n 25154: a0 = a2 & ~a0\n 25157: a2 = u64 [s1 + 0x1d0]\n 25161: a2 = a2 & ~a4\n 25164: a3 = u64 [s1 + 0x1d8]\n 25168: a3 = a3 & ~a5\n 25171: a4 = u64 [s1 + 0x98]\n 25175: a0 = a0 | a4\n 25178: a5 = s1 + 0x200\n 25182: a4 = u64 [a5]\n 25184: a1 = a1 | a4\n 25187: a4 = u64 [a5 + 0x8]\n 25190: a3 = a3 | a4\n 25193: a4 = u64 [a5 + 0x10]\n 25196: a2 = a2 | a4\n 25199: a4 = s1 + 0x3998\n 25203: a5 = a4 + 0x600\n 25207: u64 [a5 + 0xd8] = a2\n 25211: u64 [a5 + 0xe0] = a3\n 25215: u64 [a5 + 0xd0] = a1\n 25219: u64 [a5 + 0xc8] = a0\n 25223: a1 = s1 + 0x4060\n 25227: a0 = u64 [s1 + 0x1c8]\n 25231: ra = 924, jump @28\n      : @893 [@dyn 462] (gas: 6)\n 25237: a0 = sp + 0xffffffffffffffe0\n 25240: a5 = a0 & 0xffffffffffffffe0\n 25243: sp = a5\n 25245: a0 = u64 [s1 + 0x168]\n 25249: a2 = a0 + 0x5\n 25252: t0 = 926, jump @1789\n      : @894 [@dyn 463] (gas: 16)\n 25258: a4 = a0 + a1\n 25261: a0 = a4 <u a0\n 25264: a1 = u64 [s1 + 0x178]\n 25268: a0 = a0 + a1\n 25271: u64 [s1 + 0x1f0] = a4\n 25275: u64 [a5 + 0x10] = a4\n 25278: u64 [s1 + 0x200] = a3\n 25282: u64 [a5 + 0x8] = a3\n 25285: u64 [s1 + 0x208] = a2\n 25289: u64 [a5] = a2\n 25291: u64 [s1 + 0x1f8] = a0\n 25295: u64 [s1 + 0x1c8] = a5\n 25299: u64 [a5 + 0x18] = a0\n 25302: a0 = u64 [s1 + 0x158]\n 25306: a2 = a0 + 0xa4\n 25310: t0 = 928, jump @1748\n      : @895 [@dyn 464] (gas: 27)\n 25316: u64 [s1 + 0x30] = a1\n 25319: u64 [a5 + 0x300] = a1\n 25323: u64 [s1 + 0x38] = a4\n 25326: a0 = a5 + 0x200\n 25330: u64 [a0 + 0xf8] = a4\n 25334: u64 [s1 + 0x40] = a3\n 25337: u64 [a0 + 0xf0] = a3\n 25341: u64 [s1 + 0x48] = a2\n 25344: u64 [a0 + 0xe8] = a2\n 25348: a0 = u64 [s1 + 0x138]\n 25352: a4 = a5 + 0x300\n 25356: u64 [a4 + 0x20] = a0\n 25359: a0 = u64 [s1 + 0x140]\n 25363: u64 [a4 + 0x18] = a0\n 25366: a0 = u64 [s1 + 0x148]\n 25370: u64 [a4 + 0x10] = a0\n 25373: a0 = s1 + 0x7ff\n 25377: a0 = a0 + 0x4c1\n 25381: a1 = s1 + 0x7ff\n 25385: a1 = a1 + 0x4a1\n 25389: a2 = s1 + 0x7ff\n 25393: a2 = a2 + 0x481\n 25397: a3 = u64 [s1 + 0x150]\n 25401: u64 [a4 + 0x8] = a3\n 25404: ra = 0x3a2\n 25408: t0 = 0x66c\n 25412: jump @1760\n      : @896 [@dyn 465] (gas: 7)\n 25415: a1 = s1 + 0x7ff\n 25419: a1 = a1 + 0x199\n 25423: a0 = a1 + 0x300\n 25427: a4 = u64 [a0 + 0x60]\n 25430: a2 = u64 [a0 + 0x58]\n 25433: a3 = u64 [a0 + 0x50]\n 25436: t0 = 932, jump @1738\n      : @897 [@dyn 466] (gas: 1)\n 25442: jump @899 if a0 == 0\n      : @898 (gas: 1)\n 25445: jump @1428\n      : @899 (gas: 15)\n 25448: a2 = a1 + 0x300\n 25452: a0 = u64 [a2 + 0x40]\n 25455: u64 [s1 + 0x1b0] = a0\n 25459: a0 = u64 [a2 + 0x38]\n 25462: u64 [s1 + 0x1b8] = a0\n 25466: a0 = u64 [a2 + 0x30]\n 25469: u64 [s1 + 0x1a8] = a0\n 25473: a0 = u64 [a2 + 0x28]\n 25476: u64 [s1 + 0x1c0] = a0\n 25480: a0 = u64 [a2 + 0x48]\n 25483: u64 [s1 + 0x188] = a0\n 25487: a0 = s1 + 0x7ff\n 25491: a0 = a0 + 0x461\n 25495: a1 = u64 [s1 + 0x1c8]\n 25499: ra = 934, jump @26\n      : @900 [@dyn 467] (gas: 16)\n 25505: a4 = s1 + 0x7ff\n 25509: a4 = a4 + 0x199\n 25513: a5 = a4 + 0x200\n 25517: a2 = u64 [a5 + 0xc8]\n 25521: a0 = u64 [a5 + 0xd0]\n 25525: a1 = u64 [a5 + 0xd8]\n 25529: a3 = u64 [a5 + 0xe0]\n 25533: u64 [a5 + 0xa0] = a3\n 25537: u64 [a5 + 0x98] = a1\n 25541: u64 [a5 + 0x90] = a0\n 25545: a0 = s1 + 0x7ff\n 25549: a0 = a0 + 0x441\n 25553: a1 = s1 + 0x7ff\n 25557: a1 = a1 + 0x421\n 25561: u64 [a5 + 0x88] = a2\n 25565: ra = 936, jump @1485\n      : @901 [@dyn 468] (gas: 34)\n 25571: a4 = s1 + 0x7ff\n 25575: a4 = a4 + 0x199\n 25579: a5 = a4 + 0x200\n 25583: a0 = u64 [a5 + 0xa8]\n 25587: a1 = u64 [a5 + 0xb0]\n 25591: a2 = u64 [a5 + 0xb8]\n 25595: a3 = u64 [a5 + 0xc0]\n 25599: u64 [a5 + 0x60] = a3\n 25602: a3 = u64 [s1 + 0x210]\n 25606: u64 [a5 + 0x40] = a3\n 25609: a3 = u64 [s1 + 0x1d0]\n 25613: u64 [a5 + 0x38] = a3\n 25616: a3 = u64 [s1 + 0x218]\n 25620: u64 [a5 + 0x30] = a3\n 25623: a3 = u64 [s1 + 0x188]\n 25627: u64 [a5 + 0x28] = a3\n 25630: u64 [a5 + 0x58] = a2\n 25633: u64 [a5 + 0x50] = a1\n 25636: u64 [a5 + 0x48] = a0\n 25639: a0 = u64 [s1 + 0x1f8]\n 25643: u64 [a5 + 0x80] = a0\n 25647: a0 = u64 [s1 + 0x1f0]\n 25651: u64 [a5 + 0x78] = a0\n 25654: a0 = u64 [s1 + 0x200]\n 25658: u64 [a5 + 0x70] = a0\n 25661: a0 = s1 + 0x7ff\n 25665: a0 = a0 + 0x401\n 25669: a1 = s1 + 0x7ff\n 25673: a1 = a1 + 0x3e1\n 25677: a2 = s1 + 0x7ff\n 25681: a2 = a2 + 0x3c1\n 25685: a3 = u64 [s1 + 0x208]\n 25689: u64 [a5 + 0x68] = a3\n 25692: ra = 938, jump @1586\n      : @902 [@dyn 469] (gas: 1)\n 25698: t0 = 940, jump @1735\n      : @903 [@dyn 470] (gas: 10)\n 25704: t0 = a5 >> 0x3f\n 25707: t1 = t1 << 0x1\n 25710: ra = a4 >> 0x3f\n 25713: a2 = a5 << 0x1\n 25716: u64 [s1 + 0xa0] = a2\n 25720: t2 = a3 >> 0x3f\n 25723: a2 = a4 << 0x1\n 25726: u64 [s1 + 0xa8] = a2\n 25730: a2 = a3 << 0x1\n 25733: jump @918 if a0 == 0\n      : @904 (gas: 21)\n 25737: u64 [s1 + 0x198] = a1\n 25741: u64 [s1 + 0x90] = ra\n 25745: u64 [s1 + 0x18] = t2\n 25748: u64 [s1 + 0x20] = t1\n 25751: u64 [s1 + 0x28] = t0\n 25754: u64 [s1 + 0x98] = a2\n 25758: a0 = u64 [s1 + 0x208]\n 25762: a2 = s1 + 0x7ff\n 25766: a2 = a2 + 0x199\n 25770: a3 = a2 + 0x200\n 25774: u64 [a3 + 0x8] = a0\n 25777: a0 = u64 [s1 + 0x200]\n 25781: u64 [a3 + 0x10] = a0\n 25784: a0 = u64 [s1 + 0x1f0]\n 25788: u64 [a3 + 0x18] = a0\n 25791: a1 = s1 + 0x7ff\n 25795: a1 = a1 + 0x3a1\n 25799: a0 = u64 [s1 + 0x1f8]\n 25803: u64 [a3 + 0x20] = a0\n 25806: a0 = 0\n 25808: ra = 942, jump @24\n      : @905 [@dyn 471] (gas: 1)\n 25814: t0 = 944, jump @1763\n      : @906 [@dyn 472] (gas: 1)\n 25820: jump @908 if a1 <u a0\n      : @907 (gas: 3)\n 25823: u32 [a2 + 0] = 0x20\n 25826: t0 = 0x3b2\n 25830: jump @1742\n      : @908 (gas: 1)\n 25833: t0 = 946, jump @1742\n      : @909 [@dyn 473] (gas: 4)\n 25839: ra = 0x3b4\n 25843: ecalli 11 // 'hash_keccak_256'\n 25845: t0 = 0x3b6\n 25849: jump @1752\n      : @910 [@dyn 474] (gas: 1)\n 25852: t0 = 950, jump @1752\n      : @911 [@dyn 475] (gas: 17)\n 25858: t0 = reverse a0\n 25860: a4 = reverse a1\n 25862: a1 = reverse a2\n 25864: a3 = reverse a3\n 25866: a0 = u64 [s1 + 0x1f8]\n 25870: a2 = a3\n 25872: u64 [a0 + 0x18] = a3\n 25875: u64 [s1 + 0x1e8] = a1\n 25879: u64 [a0 + 0x10] = a1\n 25882: a1 = a4\n 25884: u64 [a0 + 0x8] = a4\n 25887: t2 = t0\n 25889: u64 [a0] = t0\n 25891: a0 = s1 + 0x4000\n 25895: i32 a0 = a0 + 0x80\n 25899: u64 [s1 + 0x190] = a0\n 25903: fallthrough\n      : @912 (gas: 24)\n 25904: u64 [s1 + 0x200] = a5\n 25908: u64 [s1 + 0x1f0] = a2\n 25912: t0 = a1\n 25914: a0 = u64 [s1 + 0x1a0]\n 25918: a0 = a5 <u a0\n 25921: a3 = a0 ^ 0x1\n 25924: a1 = u64 [s1 + 0x210]\n 25928: a3 = 0x1 if a1 != 0\n 25931: a4 = u64 [s1 + 0x218]\n 25935: t1 = u64 [s1 + 0x208]\n 25939: a0 = a4 | t1\n 25942: a3 = 0x1 if a0 != 0\n 25945: a0 = u64 [s1 + 0x1c0]\n 25949: ra = a5 + a0\n 25952: a2 = u64 [s1 + 0x1a8]\n 25956: a2 = a2 + a1\n 25959: a1 = u64 [s1 + 0x1b8]\n 25963: a1 = a1 + a4\n 25966: a4 = u64 [s1 + 0x1b0]\n 25970: t1 = t1 + a4\n 25973: a0 = u64 [s1 + 0x1c8]\n 25977: a5 = u64 [s1 + 0x1d0]\n 25981: a4 = u64 [s1 + 0x198]\n 25985: jump @920 if a3 != 0\n      : @913 (gas: 23)\n 25989: a0 = u64 [s1 + 0x200]\n 25993: a3 = ra <u a0\n 25996: a2 = a2 + a3\n 25999: a4 = u64 [s1 + 0x210]\n 26003: a0 = a2 ^ a4\n 26006: a5 = a2 <u a4\n 26009: a5 = a3 if a0 == 0\n 26012: a5 = a5 + a1\n 26015: a3 = a5 <u a1\n 26018: a0 = u64 [s1 + 0x218]\n 26022: a1 = a1 <u a0\n 26025: a0 = t1 + a1\n 26028: a0 = a0 + a3\n 26031: a1 = ra | a5\n 26034: a0 = a0 | a2\n 26037: a1 = a1 | a0\n 26040: a1 = a1 >> 0x20\n 26043: a0 = a0 | a5\n 26046: a0 = a0 << 0x20\n 26049: a0 = a0 | a1\n 26052: u64 [s1 + 0x1e0] = t2\n 26056: u64 [s1 + 0x1d8] = t0\n 26060: jump @915 if a0 == 0\n      : @914 (gas: 1)\n 26063: jump @576\n      : @915 (gas: 16)\n 26066: i32 a1 = ra + 0\n 26068: a0 = u64 [s1 + 0x190]\n 26072: ecalli 4 // 'call_data_load'\n 26074: a4 = s1 + 0x3998\n 26078: a5 = a4 + 0x700\n 26082: a0 = u64 [a5]\n 26084: a1 = u64 [a4 + 0x6f8]\n 26088: a2 = u64 [a4 + 0x6f0]\n 26092: a3 = u64 [a4 + 0x6e8]\n 26096: u64 [a5 + 0x20] = a0\n 26099: u64 [a5 + 0x18] = a1\n 26102: u64 [a5 + 0x10] = a2\n 26105: u64 [a5 + 0x8] = a3\n 26108: a1 = s1 + 0x40a0\n 26112: a0 = u64 [s1 + 0x1f8]\n 26116: ra = 952, jump @28\n      : @916 [@dyn 476] (gas: 1)\n 26122: t0 = 954, jump @1740\n      : @917 [@dyn 477] (gas: 31)\n 26128: t0 = a1 + a0\n 26131: a1 = t0 <u a1\n 26134: a0 = u64 [s1 + 0x1f0]\n 26138: a0 = a0 + a1\n 26141: a1 = u64 [s1 + 0x200]\n 26145: t1 = a1 + 0x20\n 26148: a2 = t1 <u a1\n 26151: a1 = u64 [s1 + 0x210]\n 26155: ra = a1 + a2\n 26158: a4 = ra <u a1\n 26161: a4 = a2 if a2 == 0\n 26164: a1 = u64 [s1 + 0x218]\n 26168: a4 = a4 + a1\n 26171: a2 = a4 <u a1\n 26174: a1 = u64 [s1 + 0x208]\n 26178: a1 = a1 + a2\n 26181: u64 [s1 + 0x208] = a1\n 26185: a2 = u64 [s1 + 0x1f8]\n 26189: u64 [a2 + 0x10] = t0\n 26192: a1 = a3\n 26194: u64 [a2 + 0x8] = a3\n 26197: t2 = a5\n 26199: u64 [a2] = a5\n 26201: a3 = a2\n 26203: a2 = a0\n 26205: u64 [a3 + 0x18] = a0\n 26208: u64 [s1 + 0x1e8] = t0\n 26212: a5 = t1\n 26214: u64 [s1 + 0x210] = ra\n 26218: u64 [s1 + 0x218] = a4\n 26222: jump @912\n      : @918 (gas: 3)\n 26225: a0 = a3 | a5\n 26228: a0 = a0 | a1\n 26231: jump @936 if a0 != 0\n      : @919 (gas: 6)\n 26235: u64 [s1 + 0x98] = a2\n 26239: u64 [s1 + 512] = 0\n 26243: u64 [s1 + 504] = 0\n 26247: u64 [s1 + 520] = 0\n 26251: u64 [s1 + 528] = 0\n 26255: jump @939\n      : @920 (gas: 7)\n 26258: t2 = u64 [s1 + 0x200]\n 26262: t0 = u64 [s1 + 0x188]\n 26266: a3 = u64 [s1 + 0x1a0]\n 26270: a3 = a3 ^ t0\n 26273: a3 = a3 | a5\n 26276: a3 = a3 | a4\n 26279: jump @935 if a3 == 0\n      : @921 (gas: 20)\n 26283: a3 = ra <u t2\n 26286: a2 = a2 + a3\n 26289: a4 = u64 [s1 + 0x210]\n 26293: a0 = a2 ^ a4\n 26296: a5 = a2 <u a4\n 26299: a5 = a3 if a0 == 0\n 26302: a5 = a5 + a1\n 26305: a3 = a5 <u a1\n 26308: a0 = u64 [s1 + 0x218]\n 26312: a1 = a1 <u a0\n 26315: a0 = t1 + a1\n 26318: a0 = a0 + a3\n 26321: a1 = ra | a5\n 26324: a0 = a0 | a2\n 26327: a1 = a1 | a0\n 26330: a1 = a1 >> 0x20\n 26333: a0 = a0 | a5\n 26336: a0 = a0 << 0x20\n 26339: a0 = a0 | a1\n 26342: jump @923 if a0 == 0\n      : @922 (gas: 1)\n 26345: jump @576\n      : @923 (gas: 2)\n 26348: a0 = t0 << 0x3b\n 26351: t0 = 956, jump @1745\n      : @924 [@dyn 478] (gas: 1)\n 26357: ra = 958, jump @1817\n      : @925 [@dyn 479] (gas: 1)\n 26363: t0 = 960, jump @1758\n      : @926 [@dyn 480] (gas: 1)\n 26369: ra = 962, jump @1812\n      : @927 [@dyn 481] (gas: 1)\n 26375: t0 = 964, jump @1733\n      : @928 [@dyn 482] (gas: 1)\n 26381: ra = 966, jump @1812\n      : @929 [@dyn 483] (gas: 1)\n 26387: t0 = 968, jump @1725\n      : @930 [@dyn 484] (gas: 5)\n 26393: i32 a0 = a0 + 0xc0\n 26397: ra = 0x3ca\n 26401: ecalli 4 // 'call_data_load'\n 26403: a4 = s1 + 0x3998\n 26407: jump @932\n      : @931 [@dyn 485] (gas: 2)\n 26409: a4 = s1 + 0x3998\n 26413: fallthrough\n      : @932 (gas: 5)\n 26414: a0 = u64 [a4 + 0x728]\n 26418: a1 = u64 [a4 + 0x730]\n 26422: a2 = u64 [a4 + 0x738]\n 26426: a3 = u64 [a4 + 0x740]\n 26430: t0 = 972, jump @1731\n      : @933 [@dyn 486] (gas: 8)\n 26436: a5 = a4 + 0x700\n 26440: u64 [a5 + 0x60] = a3\n 26443: u64 [a5 + 0x58] = a2\n 26446: u64 [a5 + 0x50] = a1\n 26449: u64 [a5 + 0x48] = a0\n 26452: a1 = s1 + 0x40e0\n 26456: a0 = u64 [s1 + 0x1f8]\n 26460: ra = 974, jump @28\n      : @934 [@dyn 487] (gas: 2)\n 26466: a0 = u64 [s1 + 0x1c8]\n 26470: fallthrough\n      : @935 (gas: 20)\n 26471: a1 = u64 [s1 + 0x28]\n 26474: a5 = u64 [s1 + 0x20]\n 26477: a5 = a5 | a1\n 26480: a1 = u64 [s1 + 0x90]\n 26484: a2 = u64 [s1 + 0xa0]\n 26488: a1 = a1 | a2\n 26491: a2 = u64 [s1 + 0x18]\n 26494: a3 = u64 [s1 + 0xa8]\n 26498: a2 = a2 | a3\n 26501: a3 = u64 [s1 + 0x98]\n 26505: a3 = a3 + 0x1\n 26508: a4 = s1 + 0x3998\n 26512: u64 [a4 + 0x768] = a3\n 26516: a3 = a4 + 0x700\n 26520: u64 [a3 + 0x70] = a2\n 26523: u64 [a3 + 0x78] = a1\n 26526: u64 [a3 + 0x80] = a5\n 26530: a1 = s1 + 0x4100\n 26534: ra = 0x3e0\n 26538: jump @28\n      : @936 (gas: 14)\n 26541: u64 [s1 + 0x90] = ra\n 26545: a3 = s1 + 0x100\n 26549: a4 = u64 [a3 + 0xc0]\n 26553: a5 = u64 [a3 + 0xb8]\n 26557: ra = a4 | a5\n 26560: a1 = u64 [a3 + 0xb0]\n 26564: a0 = u64 [a3 + 0xa8]\n 26568: a1 = a1 | a0\n 26571: a0 = ra | a1\n 26574: a0 = a0 >> 0x20\n 26577: a1 = a1 | a5\n 26580: a1 = a1 << 0x20\n 26583: a0 = a0 | a1\n 26586: jump @938 if a0 == 0\n      : @937 (gas: 1)\n 26589: jump @576\n      : @938 (gas: 25)\n 26592: u64 [s1 + 0x98] = a2\n 26596: i32 a1 = a4 + 0\n 26598: a0 = s1 + 0x4000\n 26602: i32 a0 = a0 + 0x120\n 26606: u64 [s1 + 0x28] = t0\n 26609: u64 [s1 + 0x20] = t1\n 26612: u64 [s1 + 0x18] = t2\n 26615: ecalli 4 // 'call_data_load'\n 26617: t2 = u64 [s1 + 0x18]\n 26620: t1 = u64 [s1 + 0x20]\n 26623: t0 = u64 [s1 + 0x28]\n 26626: a3 = u64 [s1 + 0x188]\n 26630: a0 = s1 + 0x3998\n 26634: a2 = a0 + 0x700\n 26638: a1 = u64 [a2 + 0xa0]\n 26642: a4 = s1 + 0x200\n 26646: u64 [a4 + 0x10] = a1\n 26649: a1 = u64 [a2 + 0x98]\n 26653: u64 [a4 + 0x8] = a1\n 26656: a1 = u64 [a2 + 0x90]\n 26660: u64 [s1 + 0x1f8] = a1\n 26664: a0 = u64 [a2 + 0x88]\n 26668: u64 [a4] = a0\n 26670: ra = u64 [s1 + 0x90]\n 26674: fallthrough\n      : @939 (gas: 9)\n 26675: a0 = u64 [s1 + 0xa0]\n 26679: a0 = a0 | ra\n 26682: u64 [s1 + 0x1f0] = a0\n 26686: a0 = t1 | t0\n 26689: u64 [s1 + 0x1e8] = a0\n 26693: a0 = u64 [s1 + 0xa8]\n 26697: a0 = a0 | t2\n 26700: u64 [s1 + 0x1e0] = a0\n 26704: t0 = 976, jump @1743\n      : @940 [@dyn 488] (gas: 1)\n 26710: ra = 978, jump @1817\n      : @941 [@dyn 489] (gas: 1)\n 26716: t0 = 980, jump @1771\n      : @942 [@dyn 490] (gas: 1)\n 26722: ra = 982, jump @1812\n      : @943 [@dyn 491] (gas: 2)\n 26728: u64 [s1 + 0x1d0] = a0\n 26732: t0 = 984, jump @1749\n      : @944 [@dyn 492] (gas: 1)\n 26738: ra = 986, jump @1812\n      : @945 [@dyn 493] (gas: 1)\n 26744: t0 = 988, jump @1737\n      : @946 [@dyn 494] (gas: 2)\n 26750: a4 = u64 [s1 + 0x98]\n 26754: t0 = 990, jump @1755\n      : @947 [@dyn 495] (gas: 8)\n 26760: u64 [a4 + 0x7b8] = a2\n 26764: a2 = a4 + 0x700\n 26768: u64 [a2 + 0xc0] = a3\n 26772: u64 [a2 + 0xb0] = a1\n 26776: u64 [a2 + 0xa8] = a0\n 26780: a1 = s1 + 0x4140\n 26784: a0 = u64 [a5 + 0xc8]\n 26788: ra = 992, jump @28\n      : @948 [@dyn 496] (gas: 67)\n 26794: a0 = sp + 0xffffffffffffffe0\n 26797: a4 = a0 & 0xffffffffffffffe0\n 26800: sp = a4\n 26802: a0 = u64 [s1 + 0x168]\n 26806: a1 = a0 + 0x6\n 26809: u64 [s1 + 0x218] = a1\n 26813: a0 = a1 <u a0\n 26816: a1 = u64 [s1 + 0x170]\n 26820: t2 = a1 + a0\n 26823: a1 = t2 <u a1\n 26826: a1 = a0 if a0 == 0\n 26829: a0 = u64 [s1 + 0x158]\n 26833: t1 = a0 + 0xc4\n 26837: a0 = t1 <u a0\n 26840: a2 = u64 [s1 + 0x160]\n 26844: t0 = a2 + a0\n 26847: a2 = t0 <u a2\n 26850: a2 = a0 if a0 == 0\n 26853: a5 = u64 [s1 + 0x180]\n 26857: a3 = a5 + a1\n 26860: a0 = u64 [s1 + 0x128]\n 26864: a2 = a2 + a0\n 26867: a0 = a2 <u a0\n 26870: a1 = u64 [s1 + 0x130]\n 26874: ra = a1 + a0\n 26877: a0 = a3 <u a5\n 26880: a1 = u64 [s1 + 0x178]\n 26884: a0 = a0 + a1\n 26887: a5 = s1 + 0x200\n 26891: u64 [a5 + 0x8] = a3\n 26894: u64 [a4 + 0x10] = a3\n 26897: u64 [s1 + 0x210] = t2\n 26901: u64 [a4 + 0x8] = t2\n 26904: a1 = u64 [a5 + 0x18]\n 26907: u64 [a4] = a1\n 26909: u64 [a5] = a0\n 26911: u64 [s1 + 0x1d0] = a4\n 26915: u64 [a4 + 0x18] = a0\n 26918: a1 = s1 + 0x7ff\n 26922: a1 = a1 + 0x199\n 26926: u64 [s1 + 0x98] = ra\n 26930: u64 [a1 + 0x1a0] = ra\n 26934: u64 [s1 + 0xa0] = a2\n 26938: a3 = a1 + 0x100\n 26942: u64 [a3 + 0x98] = a2\n 26946: u64 [s1 + 0xa8] = t0\n 26950: u64 [a1 + 0x190] = t0\n 26954: u64 [s1 + 0x128] = t1\n 26958: u64 [a1 + 0x188] = t1\n 26962: a0 = u64 [s1 + 0x138]\n 26966: u64 [a3 + 0xc0] = a0\n 26970: a0 = u64 [s1 + 0x140]\n 26974: u64 [a3 + 0xb8] = a0\n 26978: a0 = u64 [s1 + 0x148]\n 26982: u64 [a3 + 0xb0] = a0\n 26986: a4 = a1\n 26988: a0 = s1 + 0x7ff\n 26992: a0 = a0 + 0x361\n 26996: a1 = s1 + 0x7ff\n 27000: a1 = a1 + 0x341\n 27004: a2 = s1 + 0x7ff\n 27008: a2 = a2 + 0x321\n 27012: a3 = u64 [s1 + 0x150]\n 27016: u64 [a4 + 0x1a8] = a3\n 27020: ra = 0x3e2\n 27024: t0 = 0x66c\n 27028: jump @1760\n      : @949 [@dyn 497] (gas: 19)\n 27031: a1 = s1 + 0x7ff\n 27035: a1 = a1 + 0x199\n 27039: a3 = u64 [a1 + 0x200]\n 27043: a2 = u64 [a1 + 0x1f8]\n 27047: a4 = u64 [a1 + 0x1f0]\n 27051: a0 = a3 >u 0\n 27053: a5 = a2 >u 0\n 27055: a5 = a0 if a3 != 0\n 27058: u64 [s1 + 0x190] = a4\n 27062: a0 = a4 >u 0\n 27064: a4 = s1 + 0x100\n 27068: u64 [a4 + 0x30] = a2\n 27071: u64 [a4 + 0x88] = a3\n 27075: a2 = a2 | a3\n 27078: u64 [a4 + 0xe8] = a0\n 27082: u64 [a4 + 0xf8] = a5\n 27086: u64 [a4 + 0xf0] = a2\n 27090: a0 = a5 if a2 != 0\n 27093: jump @951 if a0 == 0\n      : @950 (gas: 1)\n 27096: jump @1431\n      : @951 (gas: 15)\n 27099: a2 = a1 + 0x100\n 27103: a0 = u64 [a2 + 0xe0]\n 27107: u64 [s1 + 0x1b8] = a0\n 27111: a0 = u64 [a2 + 0xd8]\n 27115: u64 [s1 + 0x1c0] = a0\n 27119: a0 = u64 [a2 + 0xd0]\n 27123: u64 [s1 + 0x1b0] = a0\n 27127: a0 = u64 [a2 + 0xc8]\n 27131: u64 [s1 + 0x1c8] = a0\n 27135: a0 = u64 [a2 + 0xe8]\n 27139: u64 [s1 + 0x198] = a0\n 27143: a0 = s1 + 0x7ff\n 27147: a0 = a0 + 0x301\n 27151: a1 = u64 [s1 + 0x1d0]\n 27155: ra = 996, jump @26\n      : @952 [@dyn 498] (gas: 16)\n 27161: a4 = s1 + 0x7ff\n 27165: a4 = a4 + 0x199\n 27169: a5 = a4 + 0x100\n 27173: a2 = u64 [a5 + 0x68]\n 27176: a0 = u64 [a5 + 0x70]\n 27179: a1 = u64 [a5 + 0x78]\n 27182: a3 = u64 [a5 + 0x80]\n 27186: u64 [a5 + 0x40] = a3\n 27189: u64 [a5 + 0x38] = a1\n 27192: u64 [a5 + 0x30] = a0\n 27195: a0 = s1 + 0x7ff\n 27199: a0 = a0 + 0x2e1\n 27203: a1 = s1 + 0x7ff\n 27207: a1 = a1 + 0x2c1\n 27211: u64 [a5 + 0x28] = a2\n 27214: ra = 998, jump @1485\n      : @953 [@dyn 499] (gas: 35)\n 27220: a4 = s1 + 0x7ff\n 27224: a4 = a4 + 0x199\n 27228: a5 = a4 + 0x100\n 27232: a0 = u64 [a5 + 0x48]\n 27235: a1 = u64 [a5 + 0x50]\n 27238: a2 = u64 [a5 + 0x58]\n 27241: a3 = u64 [a5 + 0x60]\n 27244: u64 [a5] = a3\n 27246: a3 = u64 [s1 + 0x188]\n 27250: u64 [a4 + 0xe0] = a3\n 27254: a3 = u64 [s1 + 0x130]\n 27258: u64 [a4 + 0xd8] = a3\n 27262: a3 = u64 [s1 + 0x190]\n 27266: u64 [a4 + 0xd0] = a3\n 27270: a3 = u64 [s1 + 0x198]\n 27274: u64 [a4 + 0xc8] = a3\n 27278: u64 [a4 + 0xf8] = a2\n 27282: u64 [a4 + 0xf0] = a1\n 27286: u64 [a4 + 0xe8] = a0\n 27290: a4 = s1 + 0x200\n 27294: a0 = u64 [a4]\n 27296: u64 [a5 + 0x20] = a0\n 27299: a0 = u64 [a4 + 0x8]\n 27302: u64 [a5 + 0x18] = a0\n 27305: a0 = u64 [a4 + 0x10]\n 27308: u64 [a5 + 0x10] = a0\n 27311: a0 = s1 + 0x7ff\n 27315: a0 = a0 + 0x2a1\n 27319: a1 = s1 + 0x7ff\n 27323: a1 = a1 + 0x281\n 27327: a2 = s1 + 0x7ff\n 27331: a2 = a2 + 0x261\n 27335: a3 = u64 [a4 + 0x18]\n 27338: u64 [a5 + 0x8] = a3\n 27341: ra = 1000, jump @1586\n      : @954 [@dyn 500] (gas: 12)\n 27347: a3 = u64 [s1 + 0x198]\n 27351: a0 = a3 <u 0x20\n 27354: a0 = a0 ^ 0x1\n 27357: a1 = u64 [s1 + 0x1e8]\n 27361: a4 = u64 [s1 + 0x190]\n 27365: a0 = a1 if a4 != 0\n 27368: a1 = u64 [s1 + 0x1f8]\n 27372: a2 = u64 [s1 + 0x1f0]\n 27376: a0 = a1 if a2 != 0\n 27379: a5 = u64 [s1 + 0x188]\n 27383: a1 = a4 | a5\n 27386: jump @964 if a0 == 0\n      : @955 (gas: 15)\n 27390: u64 [s1 + 0x90] = a1\n 27394: a0 = u64 [s1 + 0x218]\n 27398: a2 = s1 + 0x7ff\n 27402: a2 = a2 + 0x199\n 27406: u64 [a2 + 0xa8] = a0\n 27410: a0 = u64 [s1 + 0x210]\n 27414: u64 [a2 + 0xb0] = a0\n 27418: a0 = u64 [s1 + 0x208]\n 27422: u64 [a2 + 0xb8] = a0\n 27426: a1 = s1 + 0x7ff\n 27430: a1 = a1 + 0x241\n 27434: a0 = u64 [s1 + 0x200]\n 27438: u64 [a2 + 0xc0] = a0\n 27442: a0 = 0\n 27444: ra = 1002, jump @24\n      : @956 [@dyn 501] (gas: 7)\n 27450: a0 = sp + 0xffffffffffffffe0\n 27453: a0 = a0 & 0xffffffffffffffe0\n 27456: u64 [s1 + 0x200] = a0\n 27460: sp = a0\n 27462: a2 = u64 [s1 + 0xf8]\n 27466: a0 = i32 [a2]\n 27468: jump @958 if a0 >u 31\n      : @957 (gas: 2)\n 27472: u32 [a2 + 0] = 0x20\n 27475: fallthrough\n      : @958 (gas: 38)\n 27476: a0 = u64 [s1 + 0x198]\n 27480: a0 = a0 & 0xffffffffffffffe0\n 27483: u64 [s1 + 0x1a8] = a0\n 27487: a0 = sp + 0xffffffffffffffe0\n 27490: a0 = a0 & 0xffffffffffffffe0\n 27493: u64 [s1 + 0x1f8] = a0\n 27497: sp = a0\n 27499: i32 a2 = a0 + 0\n 27501: a1 = 0x20\n 27504: a0 = u64 [s1 + 0x100]\n 27508: ecalli 11 // 'hash_keccak_256'\n 27510: a5 = 0\n 27512: u64 [s1 + 528] = 0\n 27516: u64 [s1 + 536] = 0\n 27520: u64 [s1 + 520] = 0\n 27524: a3 = u64 [s1 + 0x1f8]\n 27528: a0 = u64 [a3 + 0x18]\n 27531: a1 = u64 [a3 + 0x10]\n 27534: a2 = u64 [a3 + 0x8]\n 27537: t0 = u64 [a3]\n 27539: a4 = reverse a0\n 27541: a1 = reverse a1\n 27543: a3 = reverse a2\n 27545: a2 = reverse t0\n 27547: a0 = u64 [s1 + 0x200]\n 27551: t0 = a2\n 27553: u64 [a0 + 0x18] = a2\n 27556: a2 = s1 + 0x100\n 27560: u64 [a2 + 0xe8] = a3\n 27564: u64 [a0 + 0x10] = a3\n 27567: t2 = a1\n 27569: u64 [a0 + 0x8] = a1\n 27572: u64 [a2 + 0xf0] = a4\n 27576: u64 [a0] = a4\n 27578: a0 = s1 + 0x4000\n 27582: i32 a0 = a0 + 0x160\n 27586: u64 [a2 + 0xa0] = a0\n 27590: fallthrough\n      : @959 (gas: 20)\n 27591: a0 = u64 [s1 + 0x1a8]\n 27595: a0 = a5 <u a0\n 27598: a3 = a0 ^ 0x1\n 27601: a1 = u64 [s1 + 0x210]\n 27605: a3 = 0x1 if a1 != 0\n 27608: a4 = u64 [s1 + 0x218]\n 27612: ra = u64 [s1 + 0x208]\n 27616: a0 = a4 | ra\n 27619: a3 = 0x1 if a0 != 0\n 27622: a0 = u64 [s1 + 0x1c8]\n 27626: t1 = a5 + a0\n 27629: a2 = u64 [s1 + 0x1b0]\n 27633: a2 = a2 + a1\n 27636: a1 = u64 [s1 + 0x1c0]\n 27640: a1 = a1 + a4\n 27643: a4 = u64 [s1 + 0x1b8]\n 27647: a4 = a4 + ra\n 27650: a0 = u64 [s1 + 0x1d0]\n 27654: u64 [s1 + 0x1f8] = a5\n 27658: jump @1051 if a3 != 0\n      : @960 (gas: 22)\n 27662: a3 = t1 <u a5\n 27665: a2 = a2 + a3\n 27668: a0 = u64 [s1 + 0x210]\n 27672: ra = a2 ^ a0\n 27675: a5 = a2 <u a0\n 27678: a5 = a3 if ra == 0\n 27681: a5 = a5 + a1\n 27684: a3 = a5 <u a1\n 27687: a0 = u64 [s1 + 0x218]\n 27691: a1 = a1 <u a0\n 27694: a0 = a4 + a1\n 27697: a0 = a0 + a3\n 27700: a1 = t1 | a5\n 27703: a0 = a0 | a2\n 27706: a1 = a1 | a0\n 27709: a1 = a1 >> 0x20\n 27712: a0 = a0 | a5\n 27715: a0 = a0 << 0x20\n 27718: a0 = a0 | a1\n 27721: u64 [s1 + 0x1e0] = t2\n 27725: u64 [s1 + 0x1d8] = t0\n 27729: jump @962 if a0 == 0\n      : @961 (gas: 1)\n 27732: jump @576\n      : @962 (gas: 18)\n 27735: i32 a1 = t1 + 0\n 27737: a0 = u64 [s1 + 0x1a0]\n 27741: ecalli 4 // 'call_data_load'\n 27743: a3 = s1 + 0x3998\n 27747: a4 = a3 + 0x700\n 27751: a0 = u64 [a4 + 0xe0]\n 27755: a1 = u64 [a4 + 0xd8]\n 27759: a2 = u64 [a4 + 0xd0]\n 27763: a3 = u64 [a4 + 0xc8]\n 27767: a4 = s1 + 0x4198\n 27771: u64 [a4] = a0\n 27773: a0 = a4 + 0xffffffffffffff00\n 27777: u64 [a0 + 0xf8] = a1\n 27781: u64 [a0 + 0xf0] = a2\n 27785: u64 [a0 + 0xe8] = a3\n 27789: a1 = s1 + 0x4180\n 27793: a0 = u64 [s1 + 0x200]\n 27797: ra = 1004, jump @28\n      : @963 [@dyn 502] (gas: 39)\n 27803: a5 = u64 [s1 + 0x1f0]\n 27807: a5 = a5 + 0x1\n 27810: a0 = a5 <u 0x1\n 27813: t0 = u64 [s1 + 0x1e0]\n 27817: t0 = t0 + a0\n 27820: a0 = a5 | t0\n 27823: a0 = a0 <u 0x1\n 27826: a1 = u64 [s1 + 0x1e8]\n 27830: a0 = a0 + a1\n 27833: a1 = a0 <u a1\n 27836: a3 = u64 [s1 + 0x1d8]\n 27840: a3 = a3 + a1\n 27843: a1 = u64 [s1 + 0x1f8]\n 27847: ra = a1 + 0x20\n 27850: a2 = ra <u a1\n 27853: a1 = u64 [s1 + 0x210]\n 27857: t1 = a1 + a2\n 27860: a4 = t1 <u a1\n 27863: a4 = a2 if a2 == 0\n 27866: a1 = u64 [s1 + 0x218]\n 27870: a4 = a4 + a1\n 27873: a2 = a4 <u a1\n 27876: a1 = u64 [s1 + 0x208]\n 27880: a1 = a1 + a2\n 27883: a2 = s1 + 0x200\n 27887: u64 [a2 + 0x8] = a1\n 27890: a1 = u64 [a2]\n 27892: u64 [a1 + 0x10] = a0\n 27895: t2 = t0\n 27897: u64 [a1 + 0x8] = t0\n 27900: u64 [s1 + 0x1f0] = a5\n 27904: u64 [a1] = a5\n 27906: t0 = a3\n 27908: u64 [a1 + 0x18] = a3\n 27911: u64 [s1 + 0x1e8] = a0\n 27915: a5 = ra\n 27917: u64 [s1 + 0x210] = t1\n 27921: u64 [a2 + 0x18] = a4\n 27924: jump @959\n      : @964 (gas: 4)\n 27927: t1 = u64 [s1 + 0x130]\n 27931: a0 = a3 | t1\n 27934: a0 = a0 | a1\n 27937: jump @1064 if a0 != 0\n      : @965 (gas: 7)\n 27941: a2 = a4\n 27943: a4 = t1\n 27945: u64 [s1 + 512] = 0\n 27949: u64 [s1 + 504] = 0\n 27953: u64 [s1 + 520] = 0\n 27957: u64 [s1 + 528] = 0\n 27961: jump @1068\n      : @966 (gas: 12)\n 27964: a0 = u64 [s1 + 0x208]\n 27968: a2 = a4 + 0x300\n 27972: u64 [a2 + 0x28] = a0\n 27975: a0 = u64 [s1 + 0x200]\n 27979: u64 [a2 + 0x30] = a0\n 27982: a0 = u64 [s1 + 0x1f8]\n 27986: u64 [a2 + 0x38] = a0\n 27989: a1 = s1 + 0x34c0\n 27993: a0 = u64 [s1 + 0x210]\n 27997: u64 [a2 + 0x40] = a0\n 28000: a0 = 0\n 28002: ra = 1006, jump @24\n      : @967 [@dyn 503] (gas: 3)\n 28008: t0 = 0x3f0\n 28012: a1 = s1 + 0x3198\n 28016: fallthrough\n      : @968 [@dyn 504] (gas: 8)\n 28017: u64 [a1 + 800] = 0\n 28021: u64 [a1 + 792] = 0\n 28025: u64 [a1 + 776] = 0x3\n 28030: a2 = a1\n 28032: a0 = 0x20\n 28035: a1 = s1 + 0x34a0\n 28039: u64 [a2 + 784] = 0\n 28043: ra = 1010, jump @24\n      : @969 [@dyn 505] (gas: 1)\n 28049: t0 = 1012, jump @1809\n      : @970 [@dyn 506] (gas: 3)\n 28055: a2 = u64 [s1 + 0x158]\n 28059: a0 = i32 [a2]\n 28061: jump @972 if a0 >u 63\n      : @971 (gas: 3)\n 28065: u32 [a2 + 0] = 0x40\n 28068: t0 = 0x3f6\n 28072: jump @1808\n      : @972 (gas: 1)\n 28075: t0 = 1014, jump @1808\n      : @973 [@dyn 507] (gas: 31)\n 28081: a0 = u64 [s1 + 0x160]\n 28085: ecalli 11 // 'hash_keccak_256'\n 28087: a3 = u64 [s1 + 0x210]\n 28091: a0 = u64 [a3]\n 28093: a1 = u64 [a3 + 0x8]\n 28096: a2 = u64 [a3 + 0x10]\n 28099: a3 = u64 [a3 + 0x18]\n 28102: a0 = reverse a0\n 28104: a1 = reverse a1\n 28106: a2 = reverse a2\n 28108: a3 = reverse a3\n 28110: a4 = a3 + 0x6\n 28113: a3 = a4 <u a3\n 28116: a5 = a2 + a3\n 28119: a2 = a5 <u a2\n 28122: a2 = a3 if a3 == 0\n 28125: a2 = a2 + a1\n 28128: a1 = a2 <u a1\n 28131: a0 = a0 + a1\n 28134: u64 [s1 + 0x210] = a4\n 28138: a1 = u64 [s1 + 0x218]\n 28142: u64 [a1] = a4\n 28144: u64 [s1 + 0x200] = a5\n 28148: u64 [a1 + 0x8] = a5\n 28151: u64 [s1 + 0x1f8] = a2\n 28155: u64 [a1 + 0x10] = a2\n 28158: u64 [s1 + 0x208] = a0\n 28162: u64 [a1 + 0x18] = a0\n 28165: a0 = s1 + 0x3480\n 28169: a1 = 0x40\n 28172: ra = 1016, jump @22\n      : @974 [@dyn 508] (gas: 13)\n 28178: a1 = s1 + 0x3198\n 28182: a0 = u64 [a1 + 0x300]\n 28186: u64 [s1 + 0x120] = a0\n 28190: a2 = a1 + 0x200\n 28194: a0 = u64 [a2 + 0xf8]\n 28198: u64 [s1 + 0x118] = a0\n 28202: a0 = u64 [a2 + 0xf0]\n 28206: u64 [s1 + 0x128] = a0\n 28210: a0 = u64 [a2 + 0xe8]\n 28214: u64 [s1 + 0x130] = a0\n 28218: a0 = s1 + 0x3460\n 28222: a1 = u64 [s1 + 0x218]\n 28226: ra = 1018, jump @26\n      : @975 [@dyn 509] (gas: 17)\n 28232: a4 = s1 + 0x3198\n 28236: a5 = a4 + 0x200\n 28240: a0 = u64 [a5 + 0xe0]\n 28244: a1 = u64 [a5 + 0xd8]\n 28248: a2 = u64 [a5 + 0xd0]\n 28252: a3 = u64 [a5 + 0xc8]\n 28256: u64 [s1 + 0x1f0] = a0\n 28260: u64 [a5 + 0xa0] = a0\n 28264: u64 [s1 + 0x1e8] = a1\n 28268: u64 [a5 + 0x98] = a1\n 28272: u64 [s1 + 0x1e0] = a2\n 28276: u64 [a5 + 0x90] = a2\n 28280: a0 = s1 + 0x3440\n 28284: a1 = s1 + 0x3420\n 28288: u64 [s1 + 0x218] = a3\n 28292: u64 [a5 + 0x88] = a3\n 28296: ra = 1020, jump @1485\n      : @976 [@dyn 510] (gas: 14)\n 28302: a2 = s1 + 0x100\n 28306: a0 = u64 [a2 + 0x20]\n 28309: a1 = u64 [a2 + 0x28]\n 28312: a0 = a0 | a1\n 28315: a1 = u64 [a2 + 0x30]\n 28318: t0 = a1\n 28320: a3 = u64 [a2 + 0x18]\n 28323: a1 = a1 | a3\n 28326: a1 = a1 | a0\n 28329: a1 = a1 >> 0x20\n 28332: a0 = a0 | a3\n 28335: a0 = a0 << 0x20\n 28338: a0 = a0 | a1\n 28341: jump @978 if a0 == 0\n      : @977 (gas: 1)\n 28344: jump @576\n      : @978 (gas: 17)\n 28347: a5 = s1 + 0x3198\n 28351: a2 = a5 + 0x200\n 28355: a0 = u64 [a2 + 0xc0]\n 28359: a3 = u64 [a2 + 0xb8]\n 28363: a1 = u64 [a2 + 0xb0]\n 28367: a4 = u64 [a2 + 0xa8]\n 28371: u64 [s1 + 0x1c0] = a4\n 28375: u64 [a2 + 0x68] = a4\n 28378: u64 [s1 + 0x1d0] = a1\n 28382: u64 [a2 + 0x70] = a1\n 28385: u64 [s1 + 0x1c8] = a3\n 28389: u64 [a2 + 0x78] = a3\n 28392: a1 = s1 + 0x3400\n 28396: u64 [s1 + 0x1d8] = a0\n 28400: u64 [a2 + 0x80] = a0\n 28404: a0 = t0\n 28406: ra = 1022, jump @24\n      : @979 [@dyn 511] (gas: 11)\n 28412: a4 = u64 [s1 + 0x130]\n 28416: a0 = a4 + 0x20\n 28419: a5 = u64 [s1 + 0x218]\n 28423: a3 = a5 & 0x1\n 28426: a1 = u64 [s1 + 0x120]\n 28430: a2 = u64 [s1 + 0x118]\n 28434: t0 = a2 | a1\n 28437: a1 = a4\n 28439: u64 [s1 + 0x1b8] = a0\n 28443: u64 [s1 + 0xf0] = t0\n 28447: jump @981 if a3 == 0\n      : @980 (gas: 1)\n 28450: jump @1148\n      : @981 (gas: 6)\n 28453: a2 = 0xffffffe0\n 28463: a2 = a1 <u a2\n 28466: a1 = u64 [s1 + 0x128]\n 28470: a2 = 0 if a1 != 0\n 28472: a2 = 0 if t0 != 0\n 28474: jump @983 if a2 != 0\n      : @982 (gas: 1)\n 28477: jump @576\n      : @983 (gas: 12)\n 28480: a3 = a5 & 0xffffffffffffff00\n 28484: a2 = s1 + 0x3198\n 28488: a1 = u64 [s1 + 0x1e0]\n 28492: a4 = a2 + 0x100\n 28496: u64 [a4 + 0xf0] = a1\n 28500: u64 [a4 + 0xe8] = a3\n 28504: a1 = u64 [s1 + 0x1e8]\n 28508: u64 [a4 + 0xf8] = a1\n 28512: a1 = s1 + 0x3380\n 28516: a3 = u64 [s1 + 0x1f0]\n 28520: u64 [a2 + 0x200] = a3\n 28524: ra = 1024, jump @24\n      : @984 [@dyn 512] (gas: 15)\n 28530: t2 = 0\n 28532: t1 = 0\n 28534: t0 = 0\n 28536: a3 = s1 + 0x100\n 28540: a0 = u64 [a3 + 0xc8]\n 28544: a1 = u64 [a3 + 0xc0]\n 28548: a0 = a0 | a1\n 28551: a1 = u64 [a3 + 0xd8]\n 28555: a2 = u64 [a3 + 0xd0]\n 28559: a1 = a1 | a2\n 28562: a0 = a0 | a1\n 28565: a0 = a0 >u 0\n 28567: a0 = a0 << 0x5\n 28570: u64 [s1 + 0x218] = a0\n 28574: fallthrough\n      : @985 (gas: 26)\n 28575: a1 = u64 [s1 + 0x218]\n 28579: a0 = a1 + 0x20\n 28582: a1 = a0 <u a1\n 28585: a2 = t2 + a1\n 28588: a3 = a2 <u t2\n 28591: a3 = a1 if a1 == 0\n 28594: a3 = a3 + t1\n 28597: a1 = a3 <u t1\n 28600: a4 = t0 + a1\n 28603: a5 = s1 + 0x3198\n 28607: a1 = u64 [s1 + 0x130]\n 28611: u64 [a5 + 0x1c8] = a1\n 28615: u64 [a5 + 0x1a8] = a0\n 28619: a0 = u64 [s1 + 0x128]\n 28623: u64 [a5 + 0x1d0] = a0\n 28627: a0 = u64 [s1 + 0x118]\n 28631: u64 [a5 + 0x1d8] = a0\n 28635: u64 [a5 + 0x1b0] = a2\n 28639: a0 = u64 [s1 + 0x120]\n 28643: a2 = a5 + 0x100\n 28647: u64 [a2 + 0xe0] = a0\n 28651: u64 [a2 + 0xb8] = a3\n 28655: a0 = s1 + 0x3360\n 28659: a1 = s1 + 0x3340\n 28663: u64 [a2 + 0xc0] = a4\n 28667: ra = 1026, jump @1494\n      : @986 [@dyn 513] (gas: 3)\n 28673: a0 = s1 + 0x3320\n 28677: a1 = u64 [s1 + 0x130]\n 28681: ra = 1028, jump @22\n      : @987 [@dyn 514] (gas: 8)\n 28687: a0 = 0xffffffe0\n 28697: a1 = u64 [s1 + 0x130]\n 28701: a0 = a1 <u a0\n 28704: a1 = u64 [s1 + 0x128]\n 28708: a0 = 0 if a1 != 0\n 28710: a1 = u64 [s1 + 0xf0]\n 28714: a0 = 0 if a1 != 0\n 28716: jump @989 if a0 != 0\n      : @988 (gas: 1)\n 28719: jump @576\n      : @989 (gas: 15)\n 28722: a2 = s1 + 0x3198\n 28726: a4 = a2 + 0x100\n 28730: a0 = u64 [a4 + 0xa0]\n 28734: a1 = u64 [a4 + 0x98]\n 28738: a3 = u64 [a4 + 0x88]\n 28742: a2 = u64 [a4 + 0x90]\n 28746: a4 = a3\n 28748: a3 = a3 | a1\n 28751: a0 = a0 | a2\n 28754: a3 = a3 | a0\n 28757: a3 = a3 >> 0x20\n 28760: a0 = a0 | a1\n 28763: a0 = a0 << 0x20\n 28766: a0 = a0 | a3\n 28769: jump @991 if a0 == 0\n      : @990 (gas: 1)\n 28772: jump @576\n      : @991 (gas: 4)\n 28775: a0 = u64 [s1 + 0x1b8]\n 28779: a1 = a4\n 28781: u64 [s1 + 0x218] = a4\n 28785: ra = 1030, jump @36\n      : @992 [@dyn 515] (gas: 1)\n 28791: t0 = 1032, jump @1794\n      : @993 [@dyn 516] (gas: 14)\n 28797: ecalli 11 // 'hash_keccak_256'\n 28799: a1 = u64 [s1 + 0x210]\n 28803: a0 = u64 [a1 + 0x18]\n 28806: a2 = s1 + 0x100\n 28810: u64 [a2 + 0xe8] = a0\n 28814: a0 = u64 [a1 + 0x10]\n 28817: u64 [a2 + 0xf8] = a0\n 28821: a0 = u64 [a1 + 0x8]\n 28824: u64 [a2 + 0xe0] = a0\n 28828: a0 = u64 [a1]\n 28830: u64 [a2 + 0xf0] = a0\n 28834: a0 = s1 + 0x3300\n 28838: a1 = 0x40\n 28841: ra = 1034, jump @22\n      : @994 [@dyn 517] (gas: 21)\n 28847: a2 = s1 + 0x3198\n 28851: a0 = u64 [a2 + 0x180]\n 28855: u64 [s1 + 0x208] = a0\n 28859: a1 = u64 [a2 + 0x178]\n 28863: u64 [s1 + 0x200] = a1\n 28867: a4 = u64 [a2 + 0x170]\n 28871: u64 [s1 + 0x210] = a4\n 28875: a3 = u64 [a2 + 0x168]\n 28879: u64 [s1 + 0x218] = a3\n 28883: u64 [a2 + 320] = 0\n 28887: u64 [a2 + 312] = 0\n 28891: u64 [a2 + 304] = 0\n 28895: u64 [a2 + 296] = 0x40\n 28900: a5 = a2 + 0x100\n 28904: u64 [a5 + 0x60] = a0\n 28907: u64 [a5 + 0x58] = a1\n 28910: u64 [a5 + 0x50] = a4\n 28913: a0 = s1 + 0x32e0\n 28917: a1 = s1 + 0x32c0\n 28921: u64 [a5 + 0x48] = a3\n 28924: ra = 1036, jump @1494\n      : @995 [@dyn 518] (gas: 13)\n 28930: a3 = s1 + 0x200\n 28934: a0 = u64 [a3 + 0x8]\n 28937: a1 = u64 [a3 + 0x10]\n 28940: a0 = a0 | a1\n 28943: a2 = u64 [a3]\n 28945: a1 = u64 [a3 + 0x18]\n 28948: a1 = a1 | a2\n 28951: a1 = a1 | a0\n 28954: a1 = a1 >> 0x20\n 28957: a0 = a0 | a2\n 28960: a0 = a0 << 0x20\n 28963: a0 = a0 | a1\n 28966: jump @997 if a0 == 0\n      : @996 (gas: 1)\n 28969: jump @576\n      : @997 (gas: 8)\n 28972: a2 = s1 + 0x3198\n 28976: u64 [a2 + 288] = 0\n 28980: u64 [a2 + 280] = 0\n 28984: u64 [a2 + 272] = 0\n 28988: a1 = s1 + 0x32a0\n 28992: u64 [a2 + 264] = 0x9\n 28997: a0 = u64 [s1 + 0x218]\n 29001: ra = 1038, jump @24\n      : @998 [@dyn 519] (gas: 11)\n 29007: a3 = s1 + 0x200\n 29011: a0 = u64 [a3 + 0x8]\n 29014: a1 = u64 [a3]\n 29016: a0 = a0 | a1\n 29019: a1 = 0xffffffe0\n 29029: a2 = u64 [a3 + 0x18]\n 29032: a1 = a2 <u a1\n 29035: a2 = u64 [a3 + 0x10]\n 29038: a1 = 0 if a2 != 0\n 29040: a1 = 0 if a0 != 0\n 29042: jump @1000 if a1 != 0\n      : @999 (gas: 1)\n 29045: jump @576\n      : @1000 (gas: 12)\n 29048: a0 = u64 [s1 + 0x218]\n 29052: i32 a0 = a0 + 0x20\n 29055: u64 [s1 + 0x218] = a0\n 29059: a3 = u64 [0x20060]\n 29064: a2 = s1 + 0x3198\n 29068: u64 [a2 + 240] = 0\n 29072: u64 [a2 + 232] = 0\n 29076: u64 [a2 + 0x100] = a3\n 29080: a3 = 0x4400000000000000\n 29090: a1 = s1 + 0x3280\n 29094: u64 [a2 + 0xf8] = a3\n 29098: ra = 1040, jump @24\n      : @1001 [@dyn 520] (gas: 3)\n 29104: a1 = 0x9\n 29107: a0 = u64 [s1 + 0x218]\n 29111: ra = 1042, jump @36\n      : @1002 [@dyn 521] (gas: 9)\n 29117: a1 = sp + 0xffffffffffffffe0\n 29120: a1 = a1 & 0xffffffffffffffe0\n 29123: u64 [s1 + 0x218] = a1\n 29127: sp = a1\n 29129: i32 a0 = a0 + 0\n 29131: i32 a2 = a1 + 0\n 29133: a1 = 0x9\n 29136: ecalli 11 // 'hash_keccak_256'\n 29138: fallthrough\n      : @1003 (gas: 18)\n 29139: a3 = u64 [s1 + 0x218]\n 29143: a0 = u64 [a3 + 0x18]\n 29146: a1 = u64 [a3 + 0x8]\n 29149: a2 = u64 [a3]\n 29151: a3 = u64 [a3 + 0x10]\n 29154: a5 = s1 + 0x100\n 29158: a4 = u64 [a5 + 0xe8]\n 29162: a0 = a0 ^ a4\n 29165: a4 = u64 [a5 + 0xe0]\n 29169: a1 = a1 ^ a4\n 29172: a0 = a0 | a1\n 29175: a1 = u64 [a5 + 0xf8]\n 29179: a1 = a1 ^ a3\n 29182: a3 = u64 [a5 + 0xf0]\n 29186: a2 = a2 ^ a3\n 29189: a1 = a1 | a2\n 29192: a0 = a0 | a1\n 29195: jump @1005 if a0 == 0\n      : @1004 (gas: 1)\n 29198: jump @1208\n      : @1005 (gas: 3)\n 29201: a0 = s1 + 0x31c0\n 29205: a1 = u64 [s1 + 0x170]\n 29209: ra = 1044, jump @26\n      : @1006 [@dyn 522] (gas: 16)\n 29215: a3 = s1 + 0x3198\n 29219: a0 = u64 [a3 + 0x28]\n 29222: a1 = u64 [a3 + 0x30]\n 29225: a2 = u64 [a3 + 0x40]\n 29228: a3 = u64 [a3 + 0x38]\n 29231: a0 = a0 & 0xffffffffffffff00\n 29235: a0 = a0 | 0x1\n 29238: a4 = s1 + 0x4998\n 29242: a5 = a4 + 0x100\n 29246: u64 [a5 + 0x40] = a2\n 29249: u64 [a5 + 0x38] = a3\n 29252: u64 [a5 + 0x30] = a1\n 29255: u64 [a5 + 0x28] = a0\n 29258: a1 = s1 + 0x4ac0\n 29262: a0 = u64 [s1 + 0x170]\n 29266: ra = 1046, jump @28\n      : @1007 [@dyn 523] (gas: 13)\n 29272: a0 = u64 [s1 + 0xf8]\n 29276: a3 = s1 + 0x3198\n 29280: u64 [a3] = a0\n 29282: a0 = u64 [s1 + 0x100]\n 29286: a4 = a3 + 0xffffffffffffff00\n 29290: u64 [a4 + 0xf8] = a0\n 29294: a0 = u64 [s1 + 0x108]\n 29298: u64 [a4 + 0xf0] = a0\n 29302: a0 = s1 + 0x31a0\n 29306: a1 = s1 + 0x3180\n 29310: a2 = u64 [s1 + 0x110]\n 29314: u64 [a4 + 0xe8] = a2\n 29318: ra = 1048, jump @1504\n      : @1008 [@dyn 524] (gas: 3)\n 29324: t0 = 0x41a\n 29328: a1 = s1 + 0x3198\n 29332: fallthrough\n      : @1009 [@dyn 525] (gas: 11)\n 29333: a0 = u64 [a1 + 0x20]\n 29336: u64 [s1 + 0x1c0] = a0\n 29340: a0 = u64 [a1 + 0x18]\n 29343: u64 [s1 + 0x1c8] = a0\n 29347: a0 = u64 [a1 + 0x10]\n 29350: u64 [s1 + 0x1d0] = a0\n 29354: a0 = u64 [a1 + 0x8]\n 29357: u64 [s1 + 0x1d8] = a0\n 29361: a0 = s1 + 0x3160\n 29365: a1 = 0x40\n 29368: ra = 1052, jump @22\n      : @1010 [@dyn 526] (gas: 26)\n 29374: a0 = s1 + 0x2998\n 29378: a5 = a0 + 0x700\n 29382: a1 = u64 [a5 + 0xc8]\n 29386: a3 = u64 [a5 + 0xe0]\n 29390: a2 = u64 [a5 + 0xd0]\n 29394: a4 = u64 [a5 + 0xd8]\n 29398: a0 = a1 + 0x20\n 29401: u64 [s1 + 0x218] = a0\n 29405: u64 [s1 + 0x210] = a1\n 29409: a0 = a0 <u a1\n 29412: a1 = a2 + a0\n 29415: u64 [s1 + 0x1f0] = a1\n 29419: u64 [s1 + 0x208] = a2\n 29423: a1 = a1 <u a2\n 29426: a1 = a0 if a0 == 0\n 29429: a1 = a1 + a4\n 29432: u64 [s1 + 0x1e0] = a1\n 29436: u64 [s1 + 0x1f8] = a4\n 29440: a0 = a1 <u a4\n 29443: u64 [s1 + 0x200] = a3\n 29447: a0 = a0 + a3\n 29450: u64 [s1 + 0x1e8] = a0\n 29454: a0 = s1 + 0x5000\n 29458: i32 a0 = a0 + 0xfffffffffffffae0\n 29462: ecalli 12 // 'now'\n 29464: fallthrough\n      : @1011 (gas: 13)\n 29465: a0 = u64 [s1 + 0x218]\n 29469: a4 = s1 + 0x100\n 29473: a2 = u64 [a4 + 0xe0]\n 29477: a0 = a0 | a2\n 29480: a1 = u64 [a4 + 0xf0]\n 29484: a3 = u64 [a4 + 0xe8]\n 29488: a1 = a1 | a3\n 29491: a0 = a0 | a1\n 29494: a0 = a0 >> 0x20\n 29497: a1 = a1 | a2\n 29500: a1 = a1 << 0x20\n 29503: a0 = a0 | a1\n 29506: jump @1013 if a0 == 0\n      : @1012 (gas: 1)\n 29509: jump @576\n      : @1013 (gas: 15)\n 29512: a3 = s1 + 0x4998\n 29516: a4 = a3 + 0x100\n 29520: a0 = u64 [a4 + 0x48]\n 29523: a1 = u64 [a4 + 0x50]\n 29526: a2 = u64 [a4 + 0x58]\n 29529: a3 = u64 [a4 + 0x60]\n 29532: a4 = s1 + 0x2998\n 29536: a5 = a4 + 0x700\n 29540: u64 [a5 + 0xc0] = a3\n 29544: u64 [a5 + 0xb8] = a2\n 29548: u64 [a5 + 0xb0] = a1\n 29552: a1 = s1 + 0x3140\n 29556: u64 [a5 + 0xa8] = a0\n 29560: a0 = u64 [s1 + 0x218]\n 29564: ra = 1054, jump @24\n      : @1014 [@dyn 527] (gas: 4)\n 29570: a5 = s1 + 0x200\n 29574: a1 = u64 [a5 + 0x10]\n 29577: a0 = a1 + 0x40\n 29580: t0 = 1056, jump @1728\n      : @1015 [@dyn 528] (gas: 1)\n 29586: jump @1017 if a1 == 0\n      : @1016 (gas: 1)\n 29589: jump @576\n      : @1017 (gas: 7)\n 29592: a2 = s1 + 0x2998\n 29596: u64 [a2 + 1952] = 0\n 29600: u64 [a2 + 1944] = 0\n 29604: u64 [a2 + 1928] = 0x40\n 29609: a1 = s1 + 0x3120\n 29613: u64 [a2 + 1936] = 0\n 29617: ra = 1058, jump @24\n      : @1018 [@dyn 529] (gas: 3)\n 29623: a1 = u64 [s1 + 0x210]\n 29627: a0 = a1 + 0x60\n 29630: t0 = 1060, jump @1767\n      : @1019 [@dyn 530] (gas: 19)\n 29636: a1 = s1 + 0x2998\n 29640: a5 = a1 + 0x700\n 29644: u64 [a5 + 0x30] = a2\n 29647: u64 [a5 + 0x28] = a0\n 29650: a0 = u64 [s1 + 0x1c0]\n 29654: u64 [a5 + 0x60] = a0\n 29657: a0 = u64 [s1 + 0x1c8]\n 29661: u64 [a5 + 0x58] = a0\n 29664: a0 = u64 [s1 + 0x1d0]\n 29668: u64 [a5 + 0x50] = a0\n 29671: a0 = u64 [s1 + 0x1d8]\n 29675: u64 [a5 + 0x48] = a0\n 29678: u64 [a5 + 0x38] = a3\n 29681: a3 = a1\n 29683: a0 = s1 + 0x3100\n 29687: a1 = s1 + 0x30e0\n 29691: a2 = s1 + 0x30c0\n 29695: u64 [a3 + 0x740] = a4\n 29699: ra = 1062, jump @1527\n      : @1020 [@dyn 531] (gas: 13)\n 29705: a4 = s1 + 0x200\n 29709: a0 = u64 [a4 + 0x10]\n 29712: a2 = u64 [s1 + 0x1f8]\n 29716: a0 = a0 | a2\n 29719: a1 = u64 [a4 + 0x8]\n 29722: a3 = u64 [a4]\n 29724: a1 = a1 | a3\n 29727: a0 = a0 | a1\n 29730: a0 = a0 >> 0x20\n 29733: a1 = a1 | a2\n 29736: a1 = a1 << 0x20\n 29739: a0 = a0 | a1\n 29742: jump @1022 if a0 == 0\n      : @1021 (gas: 1)\n 29745: jump @576\n      : @1022 (gas: 53)\n 29748: a0 = s1 + 0x2998\n 29752: a2 = a0 + 0x700\n 29756: a1 = u64 [a2 + 0x68]\n 29759: u64 [s1 + 0x1e8] = a1\n 29763: a5 = u64 [a2 + 0x70]\n 29766: t2 = u64 [a0 + 0x780]\n 29770: a4 = u64 [a2 + 0x78]\n 29773: a0 = u64 [s1 + 0x210]\n 29777: t1 = a1 <u a0\n 29780: ra = a0\n 29782: t0 = u64 [s1 + 0x208]\n 29786: a1 = a5 ^ t0\n 29789: a2 = a5 <u t0\n 29792: a2 = t1 if a1 == 0\n 29795: a0 = u64 [s1 + 0x1f8]\n 29799: a3 = a4 - a0\n 29802: a1 = a3 <u a2\n 29805: a4 = a4 <u a0\n 29808: a0 = u64 [s1 + 0x200]\n 29812: a0 = t2 - a0\n 29815: a0 = a0 - a4\n 29818: t2 = a0 - a1\n 29821: u64 [s1 + 0x1d8] = t2\n 29825: a3 = a3 - a2\n 29828: u64 [s1 + 0x1f0] = a3\n 29832: a0 = a5 - t0\n 29835: a4 = a0 - t1\n 29838: u64 [s1 + 0x1e0] = a4\n 29842: a0 = u64 [s1 + 0x1e8]\n 29846: a1 = a0 - ra\n 29849: u64 [s1 + 0x1e8] = a1\n 29853: a0 = a1 + 0xffffffffffffffe0\n 29856: a1 = a0 <u a1\n 29859: a2 = a4 + a1\n 29862: a2 = a2 + 0xffffffffffffffff\n 29865: a3 = a2 ^ a4\n 29868: a4 = a2 <u a4\n 29871: a4 = a1 if a3 == 0\n 29874: a3 = u64 [s1 + 0x1f0]\n 29878: a1 = a3 <u 0x1\n 29881: a1 = t2 - a1\n 29884: a3 = a3 + 0xffffffffffffffff\n 29887: a4 = a4 + a3\n 29890: a3 = a4 <u a3\n 29893: a3 = a3 + a1\n 29896: a5 = s1 + 0x2998\n 29900: u64 [a5 + 0x708] = a0\n 29904: u64 [a5 + 0x710] = a2\n 29908: u64 [a5 + 0x718] = a4\n 29912: a1 = s1 + 0x30a0\n 29916: u64 [a5 + 0x720] = a3\n 29920: a0 = ra\n 29922: ra = 1064, jump @24\n      : @1023 [@dyn 532] (gas: 23)\n 29928: a0 = s1 + 0x2998\n 29932: a2 = s1 + 0x100\n 29936: a1 = u64 [a2 + 0xd8]\n 29940: a3 = a0 + 0x600\n 29944: u64 [a3 + 0xe0] = a1\n 29948: a1 = u64 [a2 + 0xf0]\n 29952: u64 [a3 + 0xd8] = a1\n 29956: a1 = u64 [a2 + 0xe0]\n 29960: u64 [a3 + 0xd0] = a1\n 29964: a1 = u64 [a2 + 0xe8]\n 29968: u64 [a3 + 0xc8] = a1\n 29972: a1 = u64 [s1 + 0x200]\n 29976: u64 [a0 + 0x700] = a1\n 29980: a1 = u64 [a2 + 0xf8]\n 29984: u64 [a3 + 0xf8] = a1\n 29988: a1 = u64 [s1 + 0x208]\n 29992: u64 [a3 + 0xf0] = a1\n 29996: a3 = a0\n 29998: a0 = s1 + 0x3080\n 30002: a1 = s1 + 0x3060\n 30006: a2 = u64 [s1 + 0x210]\n 30010: u64 [a3 + 0x6e8] = a2\n 30014: ra = 1066, jump @1494\n      : @1024 [@dyn 533] (gas: 3)\n 30020: a0 = s1 + 0x3040\n 30024: a1 = u64 [s1 + 0x210]\n 30028: ra = 1068, jump @22\n      : @1025 [@dyn 534] (gas: 7)\n 30034: a3 = s1 + 0x2998\n 30038: a5 = a3 + 0x600\n 30042: a0 = u64 [a5 + 0xc0]\n 30046: a1 = u64 [a5 + 0xb8]\n 30050: a2 = u64 [a5 + 0xb0]\n 30054: a4 = u64 [a5 + 0xa8]\n 30058: t0 = 1070, jump @1773\n      : @1026 [@dyn 535] (gas: 1)\n 30064: jump @1028 if a0 == 0\n      : @1027 (gas: 1)\n 30067: jump @576\n      : @1028 (gas: 5)\n 30070: a3 = a4\n 30072: a0 = u64 [s1 + 0x218]\n 30076: a1 = a4\n 30078: u64 [s1 + 0x210] = a3\n 30082: ra = 1072, jump @36\n      : @1029 [@dyn 536] (gas: 30)\n 30088: a1 = sp + 0xffffffffffffffe0\n 30091: a2 = a1 & 0xffffffffffffffe0\n 30094: u64 [s1 + 0x218] = a2\n 30098: sp = a2\n 30100: i32 a0 = a0 + 0\n 30102: a1 = i32 [s1 + 0x210]\n 30106: i32 a2 = a2 + 0\n 30108: ecalli 11 // 'hash_keccak_256'\n 30110: a3 = u64 [s1 + 0x218]\n 30114: a0 = u64 [a3 + 0x18]\n 30117: a1 = u64 [a3 + 0x10]\n 30120: a2 = u64 [a3 + 0x8]\n 30123: a3 = u64 [a3]\n 30125: a4 = reverse a0\n 30127: a1 = reverse a1\n 30129: a2 = reverse a2\n 30131: a3 = reverse a3\n 30133: a0 = s1 + 0x2998\n 30137: u64 [s1 + 0x128] = a3\n 30141: a5 = a0 + 0x600\n 30145: u64 [a5 + 0xa0] = a3\n 30149: u64 [s1 + 0x130] = a2\n 30153: u64 [a5 + 0x98] = a2\n 30157: u64 [s1 + 0x170] = a1\n 30161: u64 [a5 + 0x90] = a1\n 30165: a1 = s1 + 0x3020\n 30169: u64 [s1 + 0x198] = a4\n 30173: u64 [a5 + 0x88] = a4\n 30177: a0 = 0\n 30179: ra = 1074, jump @24\n      : @1030 [@dyn 537] (gas: 8)\n 30185: a2 = s1 + 0x2998\n 30189: u64 [a2 + 1664] = 0\n 30193: u64 [a2 + 1656] = 0\n 30197: u64 [a2 + 1640] = 0x2\n 30202: a0 = 0x20\n 30205: a1 = s1 + 0x3000\n 30209: u64 [a2 + 1648] = 0\n 30213: ra = 1076, jump @24\n      : @1031 [@dyn 538] (gas: 3)\n 30219: a1 = 0x40\n 30222: a0 = 0\n 30224: ra = 1078, jump @36\n      : @1032 [@dyn 539] (gas: 11)\n 30230: a1 = sp + 0xffffffffffffffe0\n 30233: a1 = a1 & 0xffffffffffffffe0\n 30236: u64 [s1 + 0x218] = a1\n 30240: sp = a1\n 30242: i32 a0 = a0 + 0\n 30244: i32 a2 = a1 + 0\n 30246: a1 = 0x40\n 30249: ra = 0x438\n 30253: ecalli 11 // 'hash_keccak_256'\n 30255: t0 = 0x43a\n 30259: jump @1734\n      : @1033 [@dyn 540] (gas: 1)\n 30262: t0 = 1082, jump @1734\n      : @1034 [@dyn 541] (gas: 8)\n 30268: a5 = a4 + 0x100\n 30272: u64 [a5 + 0x80] = a3\n 30276: u64 [a5 + 0x78] = a2\n 30279: u64 [a5 + 0x70] = a1\n 30282: u64 [a5 + 0x68] = a0\n 30285: a0 = s1 + 0x4b00\n 30289: a1 = u64 [s1 + 0x168]\n 30293: ra = 1084, jump @28\n      : @1035 [@dyn 542] (gas: 5)\n 30299: a1 = u64 [s1 + 0x178]\n 30303: a0 = a1 + 0x3\n 30306: a1 = a0 <u a1\n 30309: a3 = u64 [s1 + 0x180]\n 30313: t0 = 1086, jump @1765\n      : @1036 [@dyn 543] (gas: 14)\n 30319: a1 = u64 [s1 + 0x190]\n 30323: a3 = a3 + a1\n 30326: a1 = a3 <u a1\n 30329: a4 = u64 [s1 + 0x188]\n 30333: a1 = a1 + a4\n 30336: a4 = s1 + 0x4998\n 30340: a5 = a4 + 0x100\n 30344: u64 [a5 + 0xa0] = a1\n 30348: u64 [a5 + 0x98] = a3\n 30352: u64 [a5 + 0x90] = a2\n 30356: u64 [a5 + 0x88] = a0\n 30360: a0 = s1 + 0x2fe0\n 30364: a1 = s1 + 0x4b20\n 30368: ra = 1088, jump @26\n      : @1037 [@dyn 544] (gas: 26)\n 30374: a1 = s1 + 0x2998\n 30378: t0 = u64 [a1 + 0x660]\n 30382: a3 = u64 [a1 + 0x658]\n 30386: a0 = u64 [a1 + 0x650]\n 30390: t1 = u64 [a1 + 0x648]\n 30394: a2 = 0x38d7ea4c68000\n 30404: a1 = t1 mulhu a2\n 30407: a4 = a0 * a2\n 30410: a1 = a1 + a4\n 30413: u64 [s1 + 0x218] = a1\n 30417: a1 = a1 <u a4\n 30420: a4 = a0 mulhu a2\n 30423: a1 = a1 + a4\n 30426: a4 = a3 * a2\n 30429: a4 = a4 + a1\n 30432: u64 [s1 + 0x1c8] = a4\n 30436: a4 = a4 <u a1\n 30439: a5 = t0 * a2\n 30442: a1 = a3 mulhu a2\n 30445: a5 = a5 + a1\n 30448: a0 = a0 | t0\n 30451: a3 = t1 | a3\n 30454: a0 = a0 | a3\n 30457: a3 = a5 + a4\n 30460: u64 [s1 + 0x208] = a3\n 30464: jump @1040 if a0 == 0\n      : @1038 (gas: 8)\n 30467: a0 = u64 [s1 + 0x208]\n 30471: a4 = 0 if a0 != 0\n 30473: a0 = a5 <u a1\n 30476: a1 = t0 mulhu a2\n 30479: a1 = a1 >u 0\n 30481: a0 = a0 | a1\n 30484: a0 = a0 | a4\n 30487: jump @1040 if a0 == 0\n      : @1039 (gas: 1)\n 30490: jump @1434\n      : @1040 (gas: 56)\n 30493: ra = t1 * a2\n 30496: t0 = u64 [s1 + 0x1c8]\n 30500: a0 = ra | t0\n 30503: t2 = u64 [s1 + 0x218]\n 30507: t1 = u64 [s1 + 0x208]\n 30511: a1 = t2 | t1\n 30514: a0 = a0 | a1\n 30517: a0 = a0 <u 0x1\n 30520: u64 [s1 + 0x210] = a0\n 30524: a0 = clz t0\n 30526: a0 = a0 + 0x40\n 30529: a4 = clz t1\n 30531: a4 = a0 if t1 == 0\n 30534: a0 = clz ra\n 30536: a0 = a0 + 0x40\n 30539: a1 = clz t2\n 30541: a1 = a0 if t2 == 0\n 30544: a0 = a1 + 0x80\n 30548: a2 = t0 | t1\n 30551: a4 = a0 if a2 == 0\n 30554: a3 = a0 <u a1\n 30557: a3 = 0 if a2 != 0\n 30559: a5 = a3 >u 0\n 30561: a0 = a4 <u 0xc5\n 30565: a2 = a0 ^ 0x1\n 30568: a5 = a2 if a3 == 0\n 30571: a0 = a5 <u 0x1\n 30574: a0 = a0 + 0xffffffffffffffff\n 30577: a1 = -a5\n 30579: a3 = -a3\n 30581: a2 = a3 - a2\n 30584: a3 = 0xc4 - a4\n 30588: u64 [s1 + 0x1e0] = a1\n 30592: a1 = a1 >u 0\n 30594: a4 = a0 >u 0\n 30596: u64 [s1 + 0x1d8] = a0\n 30600: a4 = a1 if a0 == 0\n 30603: a0 = a2 >u 0\n 30605: u64 [s1 + 0x1e8] = a3\n 30609: a1 = a3 <u 0x100\n 30613: a1 = a1 ^ 0x1\n 30616: u64 [s1 + 0x1d0] = a2\n 30620: a1 = a0 if a2 != 0\n 30623: a1 = a4 if a5 != 0\n 30626: a0 = u64 [s1 + 0x210]\n 30630: a1 = a1 | a0\n 30633: t1 = 0 if a1 != 0\n 30635: u64 [s1 + 0x1f0] = t1\n 30639: t0 = 0 if a1 != 0\n 30641: u64 [s1 + 0x1f8] = t0\n 30645: t2 = 0 if a1 != 0\n 30647: u64 [s1 + 0x200] = t2\n 30651: u64 [s1 + 0x1b8] = ra\n 30655: ra = 0 if a1 != 0\n 30657: u64 [s1 + 0x210] = ra\n 30661: jump @1042 if a1 == 0\n      : @1041 (gas: 1)\n 30664: jump @1288\n      : @1042 (gas: 10)\n 30667: a2 = s1 + 0x100\n 30671: a1 = u64 [a2 + 0xe8]\n 30675: a1 = a1 ^ 0xff\n 30679: a3 = u64 [a2 + 0xe0]\n 30683: a1 = a1 | a3\n 30686: a3 = u64 [a2 + 0xd8]\n 30690: a0 = u64 [a2 + 0xd0]\n 30694: a3 = a3 | a0\n 30697: a1 = a1 | a3\n 30700: jump @1044 if a1 != 0\n      : @1043 (gas: 1)\n 30703: jump @1288\n      : @1044 (gas: 22)\n 30706: a2 = u64 [s1 + 0x1e8]\n 30710: a3 = a2 + 0x1\n 30713: u64 [s1 + 0x210] = a3\n 30717: a1 = a3 <u 0x1\n 30720: a0 = u64 [s1 + 0x1d0]\n 30724: a1 = a1 + a0\n 30727: u64 [s1 + 0x200] = a1\n 30731: a1 = a1 | a3\n 30734: a1 = a1 <u 0x1\n 30737: a0 = u64 [s1 + 0x1e0]\n 30741: a1 = a1 + a0\n 30744: u64 [s1 + 0x1f0] = a1\n 30748: a1 = a1 <u a0\n 30751: a0 = u64 [s1 + 0x1d8]\n 30755: a0 = a0 + a1\n 30758: u64 [s1 + 0x1f8] = a0\n 30762: a1 = 0xff - a2\n 30766: u64 [s1 + 0x1d0] = a1\n 30770: a2 = 0x80 - a1\n 30774: a0 = u64 [s1 + 0x1b8]\n 30778: a1 = u64 [s1 + 0x218]\n 30782: ra = 1090, jump @1812\n      : @1045 [@dyn 545] (gas: 6)\n 30788: u64 [s1 + 0x1e0] = a0\n 30792: u64 [s1 + 0x1d8] = a1\n 30796: a0 = u64 [s1 + 0x1c8]\n 30800: a1 = u64 [s1 + 0x208]\n 30804: a2 = u64 [s1 + 0x1d0]\n 30808: ra = 1092, jump @1817\n      : @1046 [@dyn 546] (gas: 9)\n 30814: u64 [s1 + 0x1c0] = a0\n 30818: a0 = u64 [s1 + 0x1d8]\n 30822: a0 = a0 | a1\n 30825: u64 [s1 + 0x1d8] = a0\n 30829: a1 = u64 [s1 + 0x1e8]\n 30833: a2 = 0x7f - a1\n 30836: a0 = u64 [s1 + 0x1b8]\n 30840: a1 = u64 [s1 + 0x218]\n 30844: ra = 1094, jump @1817\n      : @1047 [@dyn 547] (gas: 18)\n 30850: a2 = u64 [s1 + 0x1d0]\n 30854: a3 = a2 <u 0x80\n 30858: u64 [s1 + 0x1e8] = a3\n 30862: a4 = u64 [s1 + 0x1d8]\n 30866: a1 = a4 if a3 != 0\n 30869: a4 = u64 [s1 + 0x208]\n 30873: a1 = a4 if a2 == 0\n 30876: u64 [s1 + 0x1d8] = a1\n 30880: a1 = u64 [s1 + 0x1e0]\n 30884: a4 = u64 [s1 + 0x1c0]\n 30888: a1 = a1 | a4\n 30891: a1 = a0 if a3 == 0\n 30894: a0 = u64 [s1 + 0x1c8]\n 30898: a1 = a0 if a2 == 0\n 30901: u64 [s1 + 0x1e0] = a1\n 30905: a0 = u64 [s1 + 0x1b8]\n 30909: a1 = u64 [s1 + 0x218]\n 30913: ra = 1096, jump @1817\n      : @1048 [@dyn 548] (gas: 14)\n 30919: a2 = u64 [s1 + 0x200]\n 30923: a5 = s1 + 0x100\n 30927: a3 = u64 [a5 + 0xf8]\n 30931: a2 = a2 | a3\n 30934: a3 = u64 [s1 + 0x210]\n 30938: a4 = u64 [a5 + 0xf0]\n 30942: a3 = a3 | a4\n 30945: a2 = a2 | a3\n 30948: a3 = u64 [a5 + 0xe8]\n 30952: a1 = 0 if a3 == 0\n 30954: u64 [a5 + 0xd0] = a1\n 30958: a0 = 0 if a3 == 0\n 30960: u64 [a5 + 0xe8] = a0\n 30964: jump @1050 if a2 == 0\n      : @1049 (gas: 1)\n 30967: jump @1281\n      : @1050 (gas: 3)\n 30970: u64 [s1 + 520] = 0\n 30974: u64 [s1 + 440] = 0\n 30978: jump @1287\n      : @1051 (gas: 9)\n 30981: t2 = t1\n 30983: t0 = u64 [s1 + 0x198]\n 30987: a3 = u64 [s1 + 0x1a8]\n 30991: a3 = a3 ^ t0\n 30994: t1 = u64 [s1 + 0x130]\n 30998: a3 = a3 | t1\n 31001: a5 = u64 [s1 + 0x90]\n 31005: a3 = a3 | a5\n 31008: jump @1063 if a3 == 0\n      : @1052 (gas: 22)\n 31012: a0 = u64 [s1 + 0x1f8]\n 31016: a3 = t2 <u a0\n 31019: a2 = a2 + a3\n 31022: a5 = u64 [s1 + 0x210]\n 31026: a0 = a2 ^ a5\n 31029: a5 = a2 <u a5\n 31032: a5 = a3 if a0 == 0\n 31035: a5 = a5 + a1\n 31038: a3 = a5 <u a1\n 31041: a0 = u64 [s1 + 0x218]\n 31045: a1 = a1 <u a0\n 31048: a0 = a4 + a1\n 31051: a0 = a0 + a3\n 31054: u64 [s1 + 0x1f8] = t2\n 31058: a1 = t2 | a5\n 31061: a0 = a0 | a2\n 31064: a1 = a1 | a0\n 31067: a1 = a1 >> 0x20\n 31070: a0 = a0 | a5\n 31073: a0 = a0 << 0x20\n 31076: a0 = a0 | a1\n 31079: jump @1054 if a0 == 0\n      : @1053 (gas: 1)\n 31082: jump @576\n      : @1054 (gas: 7)\n 31085: a0 = t0 << 0x3b\n 31088: a1 = a0 >> 0x38\n 31091: u64 [s1 + 0x210] = a1\n 31095: a2 = 0x80 - a1\n 31099: a0 = 0xffffffffffffffff\n 31102: a1 = 0xffffffffffffffff\n 31105: ra = 1098, jump @1817\n      : @1055 [@dyn 549] (gas: 1)\n 31111: t0 = 1100, jump @1758\n      : @1056 [@dyn 550] (gas: 1)\n 31117: ra = 1102, jump @1812\n      : @1057 [@dyn 551] (gas: 1)\n 31123: t0 = 1104, jump @1733\n      : @1058 [@dyn 552] (gas: 1)\n 31129: ra = 1106, jump @1812\n      : @1059 [@dyn 553] (gas: 24)\n 31135: a2 = u64 [s1 + 0x210]\n 31139: a5 = a2 <u 0x80\n 31143: a3 = u64 [s1 + 0x1e8]\n 31147: a1 = a3 if a5 != 0\n 31150: a1 = 0xffffffffffffffff if a2 == 0\n 31153: u64 [s1 + 0x1e8] = a1\n 31157: a3 = a2\n 31159: a2 = u64 [s1 + 0x208]\n 31163: a1 = u64 [s1 + 0x1f0]\n 31167: a1 = a1 | a2\n 31170: a1 = a0 if a5 == 0\n 31173: a1 = 0xffffffffffffffff if a3 == 0\n 31176: u64 [s1 + 0x210] = a1\n 31180: a0 = u64 [s1 + 0x218]\n 31184: a0 = 0 if a5 == 0\n 31186: u64 [s1 + 0x218] = a0\n 31190: a2 = 0 if a5 == 0\n 31192: u64 [s1 + 0x208] = a2\n 31196: a1 = i32 [s1 + 0x1f8]\n 31200: a0 = s1 + 0x4000\n 31204: i32 a0 = a0 + 0x1a0\n 31208: ra = 0x454\n 31212: ecalli 4 // 'call_data_load'\n 31214: fallthrough\n      : @1060 [@dyn 554] (gas: 6)\n 31215: a4 = s1 + 0x4198\n 31219: a0 = u64 [a4 + 0x8]\n 31222: a1 = u64 [a4 + 0x10]\n 31225: a2 = u64 [a4 + 0x18]\n 31228: a3 = u64 [a4 + 0x20]\n 31231: t0 = 1110, jump @1731\n      : @1061 [@dyn 555] (gas: 7)\n 31237: u64 [a4 + 0x40] = a3\n 31240: u64 [a4 + 0x38] = a2\n 31243: u64 [a4 + 0x30] = a1\n 31246: u64 [a4 + 0x28] = a0\n 31249: a1 = s1 + 0x41c0\n 31253: a0 = u64 [s1 + 0x200]\n 31257: ra = 1112, jump @28\n      : @1062 [@dyn 556] (gas: 4)\n 31263: t0 = u64 [s1 + 0x198]\n 31267: a0 = u64 [s1 + 0x1d0]\n 31271: t1 = u64 [s1 + 0x130]\n 31275: fallthrough\n      : @1063 (gas: 21)\n 31276: a2 = t1 >> 0x3f\n 31279: a1 = u64 [s1 + 0x188]\n 31283: a1 = a1 << 0x1\n 31286: a5 = a1 | a2\n 31289: a3 = u64 [s1 + 0x190]\n 31293: a1 = a3 >> 0x3f\n 31296: a2 = t1 << 0x1\n 31299: a1 = a1 | a2\n 31302: a2 = t0 >> 0x3f\n 31305: a3 = a3 << 0x1\n 31308: a2 = a2 | a3\n 31311: a3 = t0 << 0x1\n 31314: a3 = a3 + 0x1\n 31317: a4 = s1 + 0x4198\n 31321: u64 [a4 + 0x48] = a3\n 31324: u64 [a4 + 0x50] = a2\n 31327: u64 [a4 + 0x58] = a1\n 31330: u64 [a4 + 0x60] = a5\n 31333: a1 = s1 + 0x41e0\n 31337: ra = 0x466\n 31341: jump @28\n      : @1064 (gas: 13)\n 31344: t0 = u64 [s1 + 0x1c8]\n 31348: a2 = s1 + 0x100\n 31352: a4 = u64 [a2 + 0xc0]\n 31356: t2 = t0 | a4\n 31359: a1 = u64 [a2 + 0xb8]\n 31363: a0 = u64 [a2 + 0xb0]\n 31367: a1 = a1 | a0\n 31370: a0 = t2 | a1\n 31373: a0 = a0 >> 0x20\n 31376: a1 = a1 | a4\n 31379: a1 = a1 << 0x20\n 31382: a0 = a0 | a1\n 31385: jump @1066 if a0 == 0\n      : @1065 (gas: 1)\n 31388: jump @576\n      : @1066 (gas: 6)\n 31391: i32 a1 = t0 + 0\n 31393: a0 = s1 + 0x4000\n 31397: i32 a0 = a0 + 0x200\n 31401: ra = 0x45a\n 31405: ecalli 4 // 'call_data_load'\n 31407: fallthrough\n      : @1067 [@dyn 557] (gas: 14)\n 31408: a5 = u64 [s1 + 0x188]\n 31412: a4 = u64 [s1 + 0x130]\n 31416: a2 = u64 [s1 + 0x190]\n 31420: a3 = u64 [s1 + 0x198]\n 31424: a0 = s1 + 0x4198\n 31428: a1 = u64 [a0 + 0x80]\n 31432: u64 [s1 + 0x210] = a1\n 31436: a1 = u64 [a0 + 0x78]\n 31439: u64 [s1 + 0x208] = a1\n 31443: a1 = u64 [a0 + 0x70]\n 31446: u64 [s1 + 0x1f8] = a1\n 31450: a0 = u64 [a0 + 0x68]\n 31453: u64 [s1 + 0x200] = a0\n 31457: fallthrough\n      : @1068 (gas: 15)\n 31458: a0 = a2 >> 0x3f\n 31461: a1 = a4 << 0x1\n 31464: a0 = a0 | a1\n 31467: u64 [s1 + 0x1f0] = a0\n 31471: a0 = a4 >> 0x3f\n 31474: a1 = a5 << 0x1\n 31477: a0 = a0 | a1\n 31480: u64 [s1 + 0x1e8] = a0\n 31484: a0 = a3 >> 0x3f\n 31487: a1 = a2 << 0x1\n 31490: a0 = a0 | a1\n 31493: u64 [s1 + 0x1e0] = a0\n 31497: a0 = a3 << 0x1\n 31500: u64 [s1 + 0x1d8] = a0\n 31504: t0 = 1116, jump @1743\n      : @1069 [@dyn 558] (gas: 1)\n 31510: ra = 1118, jump @1817\n      : @1070 [@dyn 559] (gas: 7)\n 31516: u64 [s1 + 0x1b0] = a0\n 31520: u64 [s1 + 0x1c8] = a1\n 31524: a0 = u64 [s1 + 0x198]\n 31528: i32 a2 = a0 << 0x3\n 31531: a0 = 0xffffffffffffffff\n 31534: a1 = 0xffffffffffffffff\n 31537: ra = 1120, jump @1812\n      : @1071 [@dyn 560] (gas: 10)\n 31543: u64 [s1 + 0x1c0] = a0\n 31547: u64 [s1 + 0x1b8] = a1\n 31551: a1 = u64 [s1 + 0x1b0]\n 31555: a0 = a0 | a1\n 31558: u64 [s1 + 0x1b0] = a0\n 31562: a0 = u64 [s1 + 0x218]\n 31566: i32 a2 = a0 + 0xffffffffffffff80\n 31569: a0 = 0xffffffffffffffff\n 31572: a1 = 0xffffffffffffffff\n 31575: ra = 1122, jump @1812\n      : @1072 [@dyn 561] (gas: 7)\n 31581: a4 = u64 [s1 + 0x218]\n 31585: a2 = a4 <u 0x80\n 31589: a3 = u64 [s1 + 0x1b0]\n 31593: a0 = a3 if a2 != 0\n 31596: a5 = u64 [s1 + 0x1b8]\n 31600: a3 = u64 [s1 + 0x1c8]\n 31604: t0 = 1124, jump @1751\n      : @1073 [@dyn 562] (gas: 27)\n 31610: a4 = u64 [s1 + 0x1c0]\n 31614: a4 = 0 if a2 == 0\n 31616: a1 = u64 [s1 + 0x1f8]\n 31620: a1 = a1 & ~a3\n 31623: a2 = u64 [s1 + 0x200]\n 31627: a0 = a2 & ~a0\n 31630: a2 = u64 [s1 + 0x208]\n 31634: a2 = a2 & ~a4\n 31637: a3 = u64 [s1 + 0x210]\n 31641: a3 = a3 & ~a5\n 31644: a5 = s1 + 0x100\n 31648: a4 = u64 [a5 + 0xd8]\n 31652: a0 = a0 | a4\n 31655: a4 = u64 [a5 + 0xe0]\n 31659: a1 = a1 | a4\n 31662: a4 = u64 [a5 + 0xe8]\n 31666: a3 = a3 | a4\n 31669: a4 = u64 [a5 + 0xf0]\n 31673: a2 = a2 | a4\n 31676: a4 = s1 + 0x4198\n 31680: u64 [a4 + 0x98] = a2\n 31684: u64 [a4 + 0xa0] = a3\n 31688: u64 [a4 + 0x90] = a1\n 31692: u64 [a4 + 0x88] = a0\n 31696: a1 = s1 + 0x4220\n 31700: a0 = u64 [a5 + 0xd0]\n 31704: ra = 1126, jump @28\n      : @1074 [@dyn 563] (gas: 8)\n 31710: a0 = sp + 0xffffffffffffffe0\n 31713: a5 = a0 & 0xffffffffffffffe0\n 31716: sp = a5\n 31718: a1 = u64 [s1 + 0x168]\n 31722: a0 = a1 + 0x7\n 31725: a1 = a0 <u a1\n 31728: a3 = u64 [s1 + 0x170]\n 31732: t0 = 1128, jump @1765\n      : @1075 [@dyn 564] (gas: 17)\n 31738: a1 = u64 [s1 + 0x180]\n 31742: a3 = a3 + a1\n 31745: a1 = a3 <u a1\n 31748: a4 = u64 [s1 + 0x178]\n 31752: a1 = a1 + a4\n 31755: u64 [a5 + 0x10] = a3\n 31758: u64 [a5 + 0x8] = a2\n 31761: u64 [a5] = a0\n 31763: a0 = 0xffffff1c\n 31773: a3 = u64 [s1 + 0x158]\n 31777: a0 = a3 <u a0\n 31780: a2 = u64 [s1 + 0x160]\n 31784: a0 = 0 if a2 != 0\n 31786: a2 = u64 [s1 + 0xe0]\n 31790: a0 = 0 if a2 != 0\n 31792: u64 [a5 + 0x18] = a1\n 31795: jump @1077 if a0 != 0\n      : @1076 (gas: 1)\n 31798: jump @576\n      : @1077 (gas: 6)\n 31801: u64 [s1 + 0x218] = a5\n 31805: i32 a1 = a3 + 0xe4\n 31809: a0 = s1 + 0x4000\n 31813: i32 a0 = a0 + 0x240\n 31817: ecalli 4 // 'call_data_load'\n 31819: fallthrough\n      : @1078 (gas: 18)\n 31820: a0 = s1 + 0x4198\n 31824: a3 = u64 [a0 + 0xc0]\n 31828: a2 = u64 [a0 + 0xb8]\n 31832: a4 = u64 [a0 + 0xb0]\n 31836: a1 = u64 [a0 + 0xa8]\n 31840: a5 = s1 + 0x200\n 31844: u64 [a5] = a3\n 31846: u64 [s1 + 0x1f8] = a4\n 31850: a0 = a4 | a3\n 31853: u64 [a5 + 0x8] = a1\n 31856: a1 = a1 | a2\n 31859: a1 = a1 | a0\n 31862: a1 = a1 >> 0x10\n 31865: u64 [a5 + 0x10] = a2\n 31868: a0 = a0 | a2\n 31871: a0 = a0 << 0x30\n 31874: a0 = a0 | a1\n 31877: jump @1080 if a0 == 0\n      : @1079 (gas: 1)\n 31880: jump @1436\n      : @1080 (gas: 4)\n 31883: a0 = s1 + 0x7ff\n 31887: a0 = a0 + 0x221\n 31891: a1 = u64 [s1 + 0x218]\n 31895: ra = 1130, jump @26\n      : @1081 [@dyn 565] (gas: 23)\n 31901: a3 = s1 + 0x7ff\n 31905: a3 = a3 + 0x199\n 31909: a0 = u64 [a3 + 0x98]\n 31913: a1 = u64 [a3 + 0x88]\n 31917: a2 = u64 [a3 + 0xa0]\n 31921: a3 = u64 [a3 + 0x90]\n 31925: a1 = a1 & 0xffffffffffff0000\n 31930: a4 = u64 [s1 + 0x200]\n 31934: a2 = a2 | a4\n 31937: a4 = u64 [s1 + 0x1f8]\n 31941: a3 = a3 | a4\n 31944: a4 = u64 [s1 + 0x210]\n 31948: a0 = a0 | a4\n 31951: a4 = s1 + 0x4198\n 31955: u64 [a4 + 0xd8] = a0\n 31959: u64 [a4 + 0xd0] = a3\n 31963: u64 [a4 + 0xe0] = a2\n 31967: a0 = u64 [s1 + 0x208]\n 31971: a0 = a0 | a1\n 31974: u64 [a4 + 0xc8] = a0\n 31978: a1 = s1 + 0x4260\n 31982: a0 = u64 [s1 + 0x218]\n 31986: ra = 1132, jump @28\n      : @1082 [@dyn 566] (gas: 14)\n 31992: a0 = u64 [s1 + 0x120]\n 31996: a2 = s1 + 0x7ff\n 32000: a2 = a2 + 0x199\n 32004: u64 [a2 + 0x80] = a0\n 32008: a0 = u64 [s1 + 0x118]\n 32012: u64 [a2 + 0x78] = a0\n 32015: a0 = u64 [s1 + 0x110]\n 32019: u64 [a2 + 0x70] = a0\n 32022: a1 = s1 + 0x7ff\n 32026: a1 = a1 + 0x201\n 32030: a0 = u64 [s1 + 0x108]\n 32034: u64 [a2 + 0x68] = a0\n 32037: a0 = 0\n 32039: ra = 1134, jump @24\n      : @1083 [@dyn 567] (gas: 11)\n 32045: a1 = s1 + 0x7ff\n 32049: a1 = a1 + 0x199\n 32053: u64 [a1 + 96] = 0\n 32056: u64 [a1 + 88] = 0\n 32059: u64 [a1 + 72] = 0x4\n 32063: a2 = a1\n 32065: a0 = 0x20\n 32068: a1 = s1 + 0x7ff\n 32072: a1 = a1 + 0x1e1\n 32076: u64 [a2 + 80] = 0\n 32079: ra = 1136, jump @24\n      : @1084 [@dyn 568] (gas: 5)\n 32085: a0 = s1 + 0x4000\n 32089: i32 a0 = a0 + 0x280\n 32093: a1 = 0x44\n 32096: ecalli 4 // 'call_data_load'\n 32098: fallthrough\n      : @1085 (gas: 14)\n 32099: a0 = s1 + 0x4198\n 32103: a1 = u64 [a0 + 0x100]\n 32107: a2 = s1 + 0x200\n 32111: u64 [a2] = a1\n 32113: a1 = u64 [a0 + 0xf8]\n 32117: u64 [a2 + 0x10] = a1\n 32120: a1 = u64 [a0 + 0xf0]\n 32124: u64 [a2 + 0x18] = a1\n 32127: a1 = a0\n 32129: a2 = u64 [s1 + 0xf8]\n 32133: a0 = i32 [a2]\n 32135: a1 = u64 [a1 + 0xe8]\n 32139: u64 [s1 + 0x1f8] = a1\n 32143: jump @1087 if a0 >u 63\n      : @1086 (gas: 2)\n 32147: u32 [a2 + 0] = 0x40\n 32150: fallthrough\n      : @1087 (gas: 12)\n 32151: a0 = sp + 0xffffffffffffffe0\n 32154: a0 = a0 & 0xffffffffffffffe0\n 32157: u64 [s1 + 0x1f0] = a0\n 32161: sp = a0\n 32163: i32 a2 = a0 + 0\n 32165: a1 = 0x40\n 32168: a0 = u64 [s1 + 0x100]\n 32172: ra = 0x472\n 32176: ecalli 11 // 'hash_keccak_256'\n 32178: a3 = u64 [s1 + 0x1f0]\n 32182: t0 = 0x474\n 32186: jump @1768\n      : @1088 [@dyn 569] (gas: 2)\n 32189: a3 = u64 [s1 + 0x1f0]\n 32193: t0 = 1140, jump @1768\n      : @1089 [@dyn 570] (gas: 15)\n 32199: u64 [a5 + 0x20] = a3\n 32202: u64 [a5 + 0x18] = a2\n 32205: u64 [a5 + 0x10] = a1\n 32208: u64 [a5 + 0x8] = a0\n 32211: a0 = u64 [s1 + 0x200]\n 32215: u64 [a5 + 0x40] = a0\n 32218: a0 = u64 [s1 + 0x210]\n 32222: u64 [a5 + 0x38] = a0\n 32225: a0 = u64 [s1 + 0x218]\n 32229: u64 [a5 + 0x30] = a0\n 32232: a0 = u64 [s1 + 0x1f8]\n 32236: u64 [a5 + 0x28] = a0\n 32239: a0 = s1 + 0x42a0\n 32243: a1 = s1 + 0x42c0\n 32247: ra = 1142, jump @28\n      : @1090 [@dyn 571] (gas: 4)\n 32253: a0 = s1 + 0x7ff\n 32257: a0 = a0 + 0x1c1\n 32261: a1 = 0x40\n 32264: ra = 1144, jump @22\n      : @1091 [@dyn 572] (gas: 16)\n 32270: a4 = s1 + 0x7ff\n 32274: a4 = a4 + 0x199\n 32278: a2 = u64 [a4 + 0x40]\n 32281: a3 = u64 [a4 + 0x38]\n 32284: a0 = u64 [a4 + 0x30]\n 32287: a1 = u64 [a4 + 0x28]\n 32290: u64 [s1 + 0x210] = a0\n 32294: a0 = a0 | a2\n 32297: u64 [s1 + 0x218] = a1\n 32301: a1 = a1 | a3\n 32304: a1 = a1 | a0\n 32307: a1 = a1 >> 0x20\n 32310: a0 = a0 | a3\n 32313: a0 = a0 << 0x20\n 32316: a0 = a0 | a1\n 32319: jump @1093 if a0 == 0\n      : @1092 (gas: 1)\n 32322: jump @576\n      : @1093 (gas: 10)\n 32325: u64 [a4 + 32] = 0\n 32328: u64 [a4 + 24] = 0\n 32331: u64 [a4 + 16] = 0\n 32334: a1 = s1 + 0x7ff\n 32338: a1 = a1 + 0x1a1\n 32342: u64 [a4 + 8] = 0x20\n 32346: a0 = u64 [s1 + 0x218]\n 32350: u64 [s1 + 0x200] = a2\n 32354: u64 [s1 + 0x1f8] = a3\n 32358: ra = 1146, jump @24\n      : @1094 [@dyn 573] (gas: 29)\n 32364: a2 = u64 [s1 + 0x138]\n 32368: a0 = s1 + 0x1000\n 32372: u64 [a0 + 0xfffffffffffff938] = a2\n 32376: a1 = u64 [s1 + 0x140]\n 32380: a0 = s1 + 0x1000\n 32384: u64 [a0 + 0xfffffffffffff930] = a1\n 32388: a0 = u64 [s1 + 0x148]\n 32392: a3 = s1 + 0x1000\n 32396: u64 [a3 + 0xfffffffffffff928] = a0\n 32400: a3 = u64 [s1 + 0x150]\n 32404: a4 = s1 + 0x1000\n 32408: u64 [a4 + 0xfffffffffffff920] = a3\n 32412: a4 = s1 + 0x1000\n 32416: u64 [a4 + 0xfffffffffffff958] = a2\n 32420: a2 = s1 + 0x1000\n 32424: u64 [a2 + 0xfffffffffffff950] = a1\n 32428: a1 = s1 + 0x1000\n 32432: u64 [a1 + 0xfffffffffffff948] = a0\n 32436: a0 = s1 + 0x7ff\n 32440: a0 = a0 + 0x161\n 32444: a1 = s1 + 0x7ff\n 32448: a1 = a1 + 0x141\n 32452: a2 = s1 + 0x7ff\n 32456: a2 = a2 + 0x121\n 32460: a4 = s1 + 0x1000\n 32464: u64 [a4 + 0xfffffffffffff940] = a3\n 32468: ra = 0x47c\n 32472: t0 = 0x67a\n 32476: jump @1760\n      : @1095 [@dyn 574] (gas: 12)\n 32479: a3 = u64 [s1 + 0x1f8]\n 32483: a2 = u64 [s1 + 0x200]\n 32487: a4 = a3 | a2\n 32490: a5 = 0x100000000\n 32500: a0 = 0xffffffe0\n 32510: a1 = u64 [s1 + 0x218]\n 32514: a0 = a1 <u a0\n 32517: a1 = u64 [s1 + 0x210]\n 32521: a0 = 0 if a1 != 0\n 32523: u64 [s1 + 0x1f0] = a4\n 32527: a0 = 0 if a4 != 0\n 32529: jump @1097 if a0 != 0\n      : @1096 (gas: 1)\n 32532: jump @576\n      : @1097 (gas: 37)\n 32535: a0 = s1 + 0x7ff\n 32539: a0 = a0 + 0x199\n 32543: a1 = u64 [a0]\n 32545: u64 [s1 + 0x1e8] = a1\n 32549: a2 = a0 + 0xffffffffffffff00\n 32553: a1 = u64 [a2 + 0xf8]\n 32557: u64 [s1 + 0x1e0] = a1\n 32561: a1 = u64 [a2 + 0xf0]\n 32565: u64 [s1 + 0x1d8] = a1\n 32569: a0 = u64 [a2 + 0xe8]\n 32573: u64 [s1 + 0x1d0] = a0\n 32577: a0 = s1 + 0x1000\n 32581: a0 = u64 [a0 + 0xfffffffffffff978]\n 32585: u64 [s1 + 0x1a8] = a0\n 32589: a0 = s1 + 0x1000\n 32593: a0 = u64 [a0 + 0xfffffffffffff970]\n 32597: u64 [s1 + 0x1b0] = a0\n 32601: a0 = s1 + 0x1000\n 32605: a0 = u64 [a0 + 0xfffffffffffff968]\n 32609: u64 [s1 + 0x1b8] = a0\n 32613: a0 = s1 + 0x1000\n 32617: a0 = u64 [a0 + 0xfffffffffffff960]\n 32621: u64 [s1 + 0x1c0] = a0\n 32625: a0 = u64 [s1 + 0x218]\n 32629: i32 a0 = a0 + 0x20\n 32632: a1 = s1 + 0x1000\n 32636: u64 [a1 + 4294965528] = 0\n 32640: a1 = s1 + 0x1000\n 32644: u64 [a1 + 4294965520] = 0\n 32648: a2 = s1 + 0x1000\n 32652: u64 [a2 + 4294965504] = 0x100\n 32658: a1 = s1 + 0x7ff\n 32662: a1 = a1 + 0x101\n 32666: a2 = s1 + 0x1000\n 32670: u64 [a2 + 4294965512] = 0\n 32674: u64 [s1 + 0x1c8] = a5\n 32678: ra = 1150, jump @24\n      : @1098 [@dyn 575] (gas: 3)\n 32684: a1 = u64 [s1 + 0x218]\n 32688: a0 = a1 + 0x120\n 32692: t0 = 1152, jump @1754\n      : @1099 [@dyn 576] (gas: 46)\n 32698: a1 = u64 [s1 + 0x1f8]\n 32702: a3 = a3 + a1\n 32705: a4 = a3 <u a1\n 32708: a1 = u64 [s1 + 0x200]\n 32712: a4 = a4 + a1\n 32715: a1 = s1 + 0x1000\n 32719: u64 [a1 + 0xfffffffffffff888] = a2\n 32723: a1 = s1 + 0x1000\n 32727: u64 [a1 + 0xfffffffffffff880] = a0\n 32731: a0 = u64 [s1 + 0x1a8]\n 32735: a1 = s1 + 0x1000\n 32739: u64 [a1 + 0xfffffffffffff8d8] = a0\n 32743: a0 = u64 [s1 + 0x1b0]\n 32747: a1 = s1 + 0x1000\n 32751: u64 [a1 + 0xfffffffffffff8d0] = a0\n 32755: a0 = u64 [s1 + 0x1b8]\n 32759: a1 = s1 + 0x1000\n 32763: u64 [a1 + 0xfffffffffffff8c8] = a0\n 32767: a0 = u64 [s1 + 0x1c0]\n 32771: a1 = s1 + 0x1000\n 32775: u64 [a1 + 0xfffffffffffff8c0] = a0\n 32779: a0 = u64 [s1 + 0x1d0]\n 32783: a1 = s1 + 0x1000\n 32787: u64 [a1 + 0xfffffffffffff8a0] = a0\n 32791: a0 = u64 [s1 + 0x1d8]\n 32795: a1 = s1 + 0x1000\n 32799: u64 [a1 + 0xfffffffffffff8a8] = a0\n 32803: a0 = s1 + 0x1000\n 32807: u64 [a0 + 0xfffffffffffff890] = a3\n 32811: a0 = u64 [s1 + 0x1e0]\n 32815: a1 = s1 + 0x1000\n 32819: u64 [a1 + 0xfffffffffffff8b0] = a0\n 32823: a0 = u64 [s1 + 0x1e8]\n 32827: a1 = s1 + 0x1000\n 32831: u64 [a1 + 0xfffffffffffff8b8] = a0\n 32835: a0 = s1 + 0x7ff\n 32839: a0 = a0 + 0xe1\n 32843: a1 = s1 + 0x7ff\n 32847: a1 = a1 + 0xc1\n 32851: a2 = s1 + 0x7ff\n 32855: a2 = a2 + 0xa1\n 32859: a3 = s1 + 0x7ff\n 32863: a3 = a3 + 0x81\n 32867: a5 = s1 + 0x1000\n 32871: u64 [a5 + 0xfffffffffffff898] = a4\n 32875: ra = 1154, jump @1610\n      : @1100 [@dyn 577] (gas: 45)\n 32881: a0 = s1 + 0x1000\n 32885: a0 = u64 [a0 + 0xfffffffffffff8f8]\n 32889: u64 [s1 + 0x1d0] = a0\n 32893: a0 = s1 + 0x1000\n 32897: a0 = u64 [a0 + 0xfffffffffffff8f0]\n 32901: u64 [s1 + 0x1d8] = a0\n 32905: a0 = s1 + 0x1000\n 32909: a0 = u64 [a0 + 0xfffffffffffff8e8]\n 32913: u64 [s1 + 0x1e0] = a0\n 32917: a0 = s1 + 0x1000\n 32921: a0 = u64 [a0 + 0xfffffffffffff8e0]\n 32925: u64 [s1 + 0x1e8] = a0\n 32929: a0 = u64 [s1 + 0xb0]\n 32933: a1 = s1 + 0x1000\n 32937: u64 [a1 + 0xfffffffffffff818] = a0\n 32941: a0 = u64 [s1 + 0xb8]\n 32945: a1 = s1 + 0x1000\n 32949: u64 [a1 + 0xfffffffffffff810] = a0\n 32953: a0 = u64 [s1 + 0xc0]\n 32957: a1 = s1 + 0x1000\n 32961: u64 [a1 + 0xfffffffffffff808] = a0\n 32965: a0 = u64 [s1 + 0xc8]\n 32969: a1 = s1 + 0x1000\n 32973: u64 [a1 + 0xfffffffffffff800] = a0\n 32977: a0 = u64 [s1 + 0x138]\n 32981: a1 = s1 + 0x1000\n 32985: u64 [a1 + 0xfffffffffffff838] = a0\n 32989: a0 = u64 [s1 + 0x140]\n 32993: a1 = s1 + 0x1000\n 32997: u64 [a1 + 0xfffffffffffff830] = a0\n 33001: a0 = u64 [s1 + 0x148]\n 33005: a1 = s1 + 0x1000\n 33009: u64 [a1 + 0xfffffffffffff828] = a0\n 33013: a0 = s1 + 0x7ff\n 33017: a0 = a0 + 0x41\n 33020: a1 = s1 + 0x7ff\n 33024: a1 = a1 + 0x21\n 33027: a2 = s1 + 0x7ff\n 33031: a2 = a2 + 0x1\n 33034: a3 = u64 [s1 + 0x150]\n 33038: a4 = s1 + 0x1000\n 33042: u64 [a4 + 0xfffffffffffff820] = a3\n 33046: ra = 0x484\n 33050: t0 = 0x67a\n 33054: jump @1760\n      : @1101 [@dyn 578] (gas: 3)\n 33057: a0 = u64 [s1 + 0x1c8]\n 33061: a0 = a0 + 0xffffffffffffffc0\n 33064: t0 = 1158, jump @1730\n      : @1102 [@dyn 579] (gas: 1)\n 33070: jump @1104 if a0 != 0\n      : @1103 (gas: 1)\n 33073: jump @576\n      : @1104 (gas: 10)\n 33076: a0 = s1 + 0x1000\n 33080: a0 = u64 [a0 + 0xfffffffffffff878]\n 33084: u64 [s1 + 0x1b8] = a0\n 33088: a0 = s1 + 0x1000\n 33092: a0 = u64 [a0 + 0xfffffffffffff870]\n 33096: u64 [s1 + 0x1c0] = a0\n 33100: a0 = s1 + 0x1000\n 33104: a0 = u64 [a0 + 0xfffffffffffff868]\n 33108: u64 [s1 + 0x1c8] = a0\n 33112: t0 = 1160, jump @1792\n      : @1105 [@dyn 580] (gas: 20)\n 33118: t0 = a4 ^ a3\n 33121: a0 = a4 <u a3\n 33124: a0 = a1 if t0 == 0\n 33127: ra = u64 [s1 + 0x1f8]\n 33131: t0 = u64 [s1 + 0x1d8]\n 33135: t1 = t0 - ra\n 33138: a3 = a4 - a3\n 33141: a4 = a3 - a1\n 33144: a3 = a2 - t2\n 33147: t2 = a3 + 0xffffffffffffffe0\n 33150: a5 = t2 <u a3\n 33153: a3 = a4 + a5\n 33156: a3 = a3 + 0xffffffffffffffff\n 33159: a1 = a3 ^ a4\n 33162: a4 = a3 <u a4\n 33165: a4 = a5 if a1 == 0\n 33168: a1 = t0 <u ra\n 33171: a5 = u64 [s1 + 0x200]\n 33175: a2 = u64 [s1 + 0x1d0]\n 33179: t0 = 1162, jump @1803\n      : @1106 [@dyn 581] (gas: 30)\n 33185: a1 = s1 + 0x1000\n 33189: a1 = u64 [a1 + 0xfffffffffffff860]\n 33193: u64 [s1 + 0x1a8] = a1\n 33197: a2 = t1 - a0\n 33200: a0 = a2 <u 0x1\n 33203: a5 = a5 - a0\n 33206: a0 = s1 + 0x1000\n 33210: a0 = u64 [a0 + 0xfffffffffffff858]\n 33214: u64 [s1 + 0x1a0] = a0\n 33218: a2 = a2 + 0xffffffffffffffff\n 33221: a4 = a4 + a2\n 33224: a0 = s1 + 0x1000\n 33228: a0 = u64 [a0 + 0xfffffffffffff850]\n 33232: u64 [s1 + 0x190] = a0\n 33236: a0 = s1 + 0x1000\n 33240: a0 = u64 [a0 + 0xfffffffffffff848]\n 33244: u64 [s1 + 0x198] = a0\n 33248: a0 = s1 + 0x1000\n 33252: a0 = u64 [a0 + 0xfffffffffffff840]\n 33256: u64 [s1 + 0x1b0] = a0\n 33260: a0 = a4 <u a2\n 33263: a5 = a5 + a0\n 33266: a0 = u64 [s1 + 0x218]\n 33270: i32 a0 = a0 + 0x40\n 33273: u64 [s1 + 0x7e0] = t2\n 33277: u64 [s1 + 0x7e8] = a3\n 33281: u64 [s1 + 0x7f0] = a4\n 33285: a1 = s1 + 0x7e0\n 33289: u64 [s1 + 0x7f8] = a5\n 33293: ra = 1164, jump @24\n      : @1107 [@dyn 582] (gas: 30)\n 33300: a0 = u64 [s1 + 0x1d0]\n 33304: a5 = s1 + 0x700\n 33308: u64 [a5 + 0x78] = a0\n 33311: a0 = u64 [s1 + 0x1d8]\n 33315: u64 [a5 + 0x70] = a0\n 33318: a0 = u64 [s1 + 0x1e0]\n 33322: u64 [a5 + 0x68] = a0\n 33325: a0 = u64 [s1 + 0x1e8]\n 33329: u64 [a5 + 0x60] = a0\n 33332: a0 = u64 [s1 + 0x1b8]\n 33336: u64 [a5 + 0x98] = a0\n 33340: a0 = u64 [s1 + 0x1c0]\n 33344: u64 [a5 + 0x90] = a0\n 33348: a0 = u64 [s1 + 0x1c8]\n 33352: u64 [a5 + 0x88] = a0\n 33356: a0 = u64 [s1 + 0x1a8]\n 33360: u64 [a5 + 0x80] = a0\n 33364: a0 = u64 [s1 + 0x1a0]\n 33368: u64 [a5 + 0xb8] = a0\n 33372: a0 = u64 [s1 + 0x190]\n 33376: u64 [a5 + 0xb0] = a0\n 33380: a0 = u64 [s1 + 0x198]\n 33384: u64 [a5 + 0xa8] = a0\n 33388: a0 = s1 + 0x7c0\n 33392: a1 = s1 + 0x7a0\n 33396: a2 = s1 + 0x780\n 33400: a3 = s1 + 0x760\n 33404: a4 = u64 [s1 + 0x1b0]\n 33408: u64 [a5 + 0xa0] = a4\n 33412: ra = 1166, jump @1610\n      : @1108 [@dyn 583] (gas: 4)\n 33418: a0 = 0x100000000\n 33428: u64 [s1 + 0x1e8] = a0\n 33432: a0 = 0xffffffa0\n 33442: t0 = 1168, jump @1730\n      : @1109 [@dyn 584] (gas: 1)\n 33448: jump @1111 if a0 != 0\n      : @1110 (gas: 1)\n 33451: jump @576\n      : @1111 (gas: 21)\n 33454: a3 = s1 + 0x700\n 33458: a0 = u64 [a3 + 0xd8]\n 33462: u64 [s1 + 0x1c8] = a0\n 33466: a0 = u64 [a3 + 0xd0]\n 33470: u64 [s1 + 0x1d0] = a0\n 33474: a0 = u64 [a3 + 0xc8]\n 33478: u64 [s1 + 0x1d8] = a0\n 33482: a0 = u64 [a3 + 0xc0]\n 33486: u64 [s1 + 0x1e0] = a0\n 33490: a0 = u64 [s1 + 0x218]\n 33494: i32 a0 = a0 + 0x60\n 33497: a1 = u64 [s1 + 0xd0]\n 33501: u64 [a3 + 0x40] = a1\n 33504: a1 = u64 [s1 + 0xd8]\n 33508: u64 [a3 + 0x48] = a1\n 33511: a1 = u64 [s1 + 0xe8]\n 33515: u64 [a3 + 0x50] = a1\n 33518: a1 = s1 + 0x740\n 33522: a2 = u64 [s1 + 0xf0]\n 33526: u64 [a3 + 0x58] = a2\n 33529: ra = 1170, jump @24\n      : @1112 [@dyn 585] (gas: 3)\n 33536: a0 = u64 [s1 + 0x1e8]\n 33540: a0 = a0 + 0xffffffffffffff80\n 33543: t0 = 1172, jump @1730\n      : @1113 [@dyn 586] (gas: 1)\n 33549: jump @1115 if a0 != 0\n      : @1114 (gas: 1)\n 33552: jump @576\n      : @1115 (gas: 13)\n 33555: a0 = u64 [s1 + 0x218]\n 33559: i32 a0 = a0 + 0x80\n 33563: a1 = u64 [s1 + 0x70]\n 33566: a3 = s1 + 0x700\n 33570: u64 [a3 + 0x20] = a1\n 33573: a1 = u64 [s1 + 0x78]\n 33576: u64 [a3 + 0x28] = a1\n 33579: a1 = u64 [s1 + 0x80]\n 33583: u64 [a3 + 0x30] = a1\n 33586: a1 = s1 + 0x720\n 33590: a2 = u64 [s1 + 0x88]\n 33594: u64 [a3 + 0x38] = a2\n 33597: ra = 1174, jump @24\n      : @1116 [@dyn 587] (gas: 23)\n 33604: a0 = u64 [s1 + 0x50]\n 33607: a4 = s1 + 0x600\n 33611: u64 [a4 + 0xb8] = a0\n 33615: a0 = u64 [s1 + 0x58]\n 33618: u64 [a4 + 0xb0] = a0\n 33622: a0 = u64 [s1 + 0x60]\n 33625: u64 [a4 + 0xa8] = a0\n 33629: a0 = u64 [s1 + 0x68]\n 33632: u64 [a4 + 0xa0] = a0\n 33636: a0 = u64 [s1 + 0x138]\n 33640: u64 [a4 + 0xd8] = a0\n 33644: a0 = u64 [s1 + 0x140]\n 33648: u64 [a4 + 0xd0] = a0\n 33652: a0 = u64 [s1 + 0x148]\n 33656: u64 [a4 + 0xc8] = a0\n 33660: a0 = s1 + 0x6e0\n 33664: a1 = s1 + 0x6c0\n 33668: a2 = s1 + 0x6a0\n 33672: a3 = u64 [s1 + 0x150]\n 33676: u64 [a4 + 0xc0] = a3\n 33680: ra = 0x498\n 33684: t0 = 0x67a\n 33688: jump @1760\n      : @1117 [@dyn 588] (gas: 4)\n 33691: a0 = 0x100000000\n 33701: u64 [s1 + 0x1e8] = a0\n 33705: a0 = 0xffffff60\n 33715: t0 = 1178, jump @1730\n      : @1118 [@dyn 589] (gas: 1)\n 33721: jump @1120 if a0 != 0\n      : @1119 (gas: 1)\n 33724: jump @576\n      : @1120 (gas: 7)\n 33727: a0 = u64 [s1 + 0x718]\n 33731: u64 [s1 + 0x1b0] = a0\n 33735: a0 = u64 [s1 + 0x710]\n 33739: u64 [s1 + 0x1b8] = a0\n 33743: a0 = u64 [s1 + 0x708]\n 33747: u64 [s1 + 0x1c0] = a0\n 33751: t0 = 1180, jump @1793\n      : @1121 [@dyn 590] (gas: 20)\n 33757: t0 = a4 ^ a3\n 33760: a0 = a4 <u a3\n 33763: a0 = a1 if t0 == 0\n 33766: ra = u64 [s1 + 0x1f8]\n 33770: t0 = u64 [s1 + 0x1d0]\n 33774: t1 = t0 - ra\n 33777: a3 = a4 - a3\n 33780: a4 = a3 - a1\n 33783: a3 = a2 - t2\n 33786: t2 = a3 + 0xffffffffffffffe0\n 33789: a5 = t2 <u a3\n 33792: a3 = a4 + a5\n 33795: a3 = a3 + 0xffffffffffffffff\n 33798: a1 = a3 ^ a4\n 33801: a4 = a3 <u a4\n 33804: a4 = a5 if a1 == 0\n 33807: a1 = t0 <u ra\n 33810: a5 = u64 [s1 + 0x200]\n 33814: a2 = u64 [s1 + 0x1c8]\n 33818: t0 = 1182, jump @1803\n      : @1122 [@dyn 591] (gas: 25)\n 33824: a1 = u64 [s1 + 0x700]\n 33828: u64 [s1 + 0x1a0] = a1\n 33832: a2 = t1 - a0\n 33835: a0 = a2 <u 0x1\n 33838: a5 = a5 - a0\n 33841: a0 = u64 [s1 + 0x6f8]\n 33845: u64 [s1 + 0x198] = a0\n 33849: a2 = a2 + 0xffffffffffffffff\n 33852: a4 = a4 + a2\n 33855: a0 = u64 [s1 + 0x6f0]\n 33859: u64 [s1 + 0x188] = a0\n 33863: a0 = u64 [s1 + 0x6e8]\n 33867: u64 [s1 + 0x190] = a0\n 33871: a0 = u64 [s1 + 0x6e0]\n 33875: u64 [s1 + 0x1a8] = a0\n 33879: a0 = a4 <u a2\n 33882: a5 = a5 + a0\n 33885: a0 = u64 [s1 + 0x218]\n 33889: i32 a0 = a0 + 0xa0\n 33893: u64 [s1 + 0x680] = t2\n 33897: u64 [s1 + 0x688] = a3\n 33901: u64 [s1 + 0x690] = a4\n 33905: a1 = s1 + 0x680\n 33909: u64 [s1 + 0x698] = a5\n 33913: ra = 1184, jump @24\n      : @1123 [@dyn 592] (gas: 29)\n 33920: a0 = u64 [s1 + 0x1c8]\n 33924: u64 [s1 + 0x618] = a0\n 33928: a0 = u64 [s1 + 0x1d0]\n 33932: u64 [s1 + 0x610] = a0\n 33936: a0 = u64 [s1 + 0x1d8]\n 33940: u64 [s1 + 0x608] = a0\n 33944: a0 = u64 [s1 + 0x1e0]\n 33948: u64 [s1 + 0x600] = a0\n 33952: a0 = u64 [s1 + 0x1b0]\n 33956: u64 [s1 + 0x638] = a0\n 33960: a0 = u64 [s1 + 0x1b8]\n 33964: u64 [s1 + 0x630] = a0\n 33968: a0 = u64 [s1 + 0x1c0]\n 33972: u64 [s1 + 0x628] = a0\n 33976: a0 = u64 [s1 + 0x1a0]\n 33980: u64 [s1 + 0x620] = a0\n 33984: a0 = u64 [s1 + 0x198]\n 33988: u64 [s1 + 0x658] = a0\n 33992: a0 = u64 [s1 + 0x188]\n 33996: u64 [s1 + 0x650] = a0\n 34000: a0 = u64 [s1 + 0x190]\n 34004: u64 [s1 + 0x648] = a0\n 34008: a0 = s1 + 0x660\n 34012: a1 = s1 + 0x640\n 34016: a2 = s1 + 0x620\n 34020: a3 = s1 + 0x600\n 34024: a4 = u64 [s1 + 0x1a8]\n 34028: u64 [s1 + 0x640] = a4\n 34032: ra = 1186, jump @1610\n      : @1124 [@dyn 593] (gas: 32)\n 34038: a1 = s1 + 0x600\n 34042: a0 = u64 [a1 + 0x78]\n 34045: u64 [s1 + 0x1c8] = a0\n 34049: a0 = u64 [a1 + 0x70]\n 34052: u64 [s1 + 0x1d0] = a0\n 34056: a0 = u64 [a1 + 0x68]\n 34059: u64 [s1 + 0x1d8] = a0\n 34063: a0 = u64 [a1 + 0x60]\n 34066: u64 [s1 + 0x1e0] = a0\n 34070: a0 = u64 [s1 + 0x30]\n 34073: a4 = s1 + 0x500\n 34077: u64 [a4 + 0x98] = a0\n 34081: a0 = u64 [s1 + 0x38]\n 34084: u64 [a4 + 0x90] = a0\n 34088: a0 = u64 [s1 + 0x40]\n 34091: u64 [a4 + 0x88] = a0\n 34095: a0 = u64 [s1 + 0x48]\n 34098: u64 [a4 + 0x80] = a0\n 34102: a0 = u64 [s1 + 0x138]\n 34106: u64 [a4 + 0xb8] = a0\n 34110: a0 = u64 [s1 + 0x140]\n 34114: u64 [a4 + 0xb0] = a0\n 34118: a0 = u64 [s1 + 0x148]\n 34122: u64 [a4 + 0xa8] = a0\n 34126: a0 = s1 + 0x5c0\n 34130: a1 = s1 + 0x5a0\n 34134: a2 = s1 + 0x580\n 34138: a3 = u64 [s1 + 0x150]\n 34142: u64 [a4 + 0xa0] = a3\n 34146: ra = 0x4a4\n 34150: t0 = 0x67a\n 34154: jump @1760\n      : @1125 [@dyn 594] (gas: 3)\n 34157: a0 = u64 [s1 + 0x1e8]\n 34161: a0 = a0 + 0xffffffffffffff40\n 34165: t0 = 1190, jump @1730\n      : @1126 [@dyn 595] (gas: 1)\n 34171: jump @1128 if a0 != 0\n      : @1127 (gas: 1)\n 34174: jump @576\n      : @1128 (gas: 7)\n 34177: a0 = u64 [s1 + 0x5f8]\n 34181: u64 [s1 + 0x1b8] = a0\n 34185: a0 = u64 [s1 + 0x5f0]\n 34189: u64 [s1 + 0x1c0] = a0\n 34193: a0 = u64 [s1 + 0x5e8]\n 34197: u64 [s1 + 0x1e8] = a0\n 34201: t0 = 1192, jump @1793\n      : @1129 [@dyn 596] (gas: 20)\n 34207: t0 = a4 ^ a3\n 34210: a0 = a4 <u a3\n 34213: a0 = a1 if t0 == 0\n 34216: ra = u64 [s1 + 0x1f8]\n 34220: t0 = u64 [s1 + 0x1d0]\n 34224: t1 = t0 - ra\n 34227: a3 = a4 - a3\n 34230: a4 = a3 - a1\n 34233: a3 = a2 - t2\n 34236: t2 = a3 + 0xffffffffffffffe0\n 34239: a5 = t2 <u a3\n 34242: a3 = a4 + a5\n 34245: a3 = a3 + 0xffffffffffffffff\n 34248: a1 = a3 ^ a4\n 34251: a4 = a3 <u a4\n 34254: a4 = a5 if a1 == 0\n 34257: a1 = t0 <u ra\n 34260: a5 = u64 [s1 + 0x200]\n 34264: a2 = u64 [s1 + 0x1c8]\n 34268: t0 = 1194, jump @1803\n      : @1130 [@dyn 597] (gas: 25)\n 34274: a1 = u64 [s1 + 0x5e0]\n 34278: u64 [s1 + 0x1a8] = a1\n 34282: a2 = t1 - a0\n 34285: a0 = a2 <u 0x1\n 34288: a5 = a5 - a0\n 34291: a0 = u64 [s1 + 0x5d8]\n 34295: u64 [s1 + 0x1a0] = a0\n 34299: a2 = a2 + 0xffffffffffffffff\n 34302: a4 = a4 + a2\n 34305: a0 = u64 [s1 + 0x5d0]\n 34309: u64 [s1 + 0x190] = a0\n 34313: a0 = u64 [s1 + 0x5c8]\n 34317: u64 [s1 + 0x198] = a0\n 34321: a0 = u64 [s1 + 0x5c0]\n 34325: u64 [s1 + 0x1b0] = a0\n 34329: a0 = a4 <u a2\n 34332: a5 = a5 + a0\n 34335: a0 = u64 [s1 + 0x218]\n 34339: i32 a0 = a0 + 0xc0\n 34343: u64 [s1 + 0x560] = t2\n 34347: u64 [s1 + 0x568] = a3\n 34351: u64 [s1 + 0x570] = a4\n 34355: a1 = s1 + 0x560\n 34359: u64 [s1 + 0x578] = a5\n 34363: ra = 1196, jump @24\n      : @1131 [@dyn 598] (gas: 29)\n 34370: a0 = u64 [s1 + 0x1c8]\n 34374: u64 [s1 + 0x4f8] = a0\n 34378: a0 = u64 [s1 + 0x1d0]\n 34382: u64 [s1 + 0x4f0] = a0\n 34386: a0 = u64 [s1 + 0x1d8]\n 34390: u64 [s1 + 0x4e8] = a0\n 34394: a0 = u64 [s1 + 0x1e0]\n 34398: u64 [s1 + 0x4e0] = a0\n 34402: a0 = u64 [s1 + 0x1b8]\n 34406: u64 [s1 + 0x518] = a0\n 34410: a0 = u64 [s1 + 0x1c0]\n 34414: u64 [s1 + 0x510] = a0\n 34418: a0 = u64 [s1 + 0x1e8]\n 34422: u64 [s1 + 0x508] = a0\n 34426: a0 = u64 [s1 + 0x1a8]\n 34430: u64 [s1 + 0x500] = a0\n 34434: a0 = u64 [s1 + 0x1a0]\n 34438: u64 [s1 + 0x538] = a0\n 34442: a0 = u64 [s1 + 0x190]\n 34446: u64 [s1 + 0x530] = a0\n 34450: a0 = u64 [s1 + 0x198]\n 34454: u64 [s1 + 0x528] = a0\n 34458: a0 = s1 + 0x540\n 34462: a1 = s1 + 0x520\n 34466: a2 = s1 + 0x500\n 34470: a3 = s1 + 0x4e0\n 34474: a4 = u64 [s1 + 0x1b0]\n 34478: u64 [s1 + 0x520] = a4\n 34482: ra = 1198, jump @1610\n      : @1132 [@dyn 599] (gas: 32)\n 34488: a1 = s1 + 0x500\n 34492: a0 = u64 [a1 + 0x58]\n 34495: u64 [s1 + 0x1d0] = a0\n 34499: a0 = u64 [a1 + 0x50]\n 34502: u64 [s1 + 0x1d8] = a0\n 34506: a0 = u64 [a1 + 0x48]\n 34509: u64 [s1 + 0x1e0] = a0\n 34513: a0 = u64 [a1 + 0x40]\n 34516: u64 [s1 + 0x1e8] = a0\n 34520: a0 = u64 [s1 + 0x98]\n 34524: a4 = s1 + 0x400\n 34528: u64 [a4 + 0x78] = a0\n 34531: a0 = u64 [s1 + 0xa0]\n 34535: u64 [a4 + 0x70] = a0\n 34538: a0 = u64 [s1 + 0xa8]\n 34542: u64 [a4 + 0x68] = a0\n 34545: a0 = u64 [s1 + 0x128]\n 34549: u64 [a4 + 0x60] = a0\n 34552: a0 = u64 [s1 + 0x138]\n 34556: u64 [a4 + 0x98] = a0\n 34560: a0 = u64 [s1 + 0x140]\n 34564: u64 [a4 + 0x90] = a0\n 34568: a0 = u64 [s1 + 0x148]\n 34572: u64 [a4 + 0x88] = a0\n 34576: a0 = s1 + 0x4a0\n 34580: a1 = s1 + 0x480\n 34584: a2 = s1 + 0x460\n 34588: a3 = u64 [s1 + 0x150]\n 34592: u64 [a4 + 0x80] = a3\n 34596: ra = 0x4b0\n 34600: t0 = 0x67a\n 34604: jump @1760\n      : @1133 [@dyn 600] (gas: 4)\n 34607: a0 = 0x100000000\n 34617: u64 [s1 + 0x1c8] = a0\n 34621: a0 = 0xffffff20\n 34631: t0 = 1202, jump @1730\n      : @1134 [@dyn 601] (gas: 1)\n 34637: jump @1136 if a0 != 0\n      : @1135 (gas: 1)\n 34640: jump @576\n      : @1136 (gas: 7)\n 34643: a0 = u64 [s1 + 0x4d8]\n 34647: u64 [s1 + 0x1b0] = a0\n 34651: a0 = u64 [s1 + 0x4d0]\n 34655: u64 [s1 + 0x1b8] = a0\n 34659: a0 = u64 [s1 + 0x4c8]\n 34663: u64 [s1 + 0x1c0] = a0\n 34667: t0 = 1204, jump @1792\n      : @1137 [@dyn 602] (gas: 20)\n 34673: t0 = a4 ^ a3\n 34676: a0 = a4 <u a3\n 34679: a0 = a1 if t0 == 0\n 34682: ra = u64 [s1 + 0x1f8]\n 34686: t0 = u64 [s1 + 0x1d8]\n 34690: t1 = t0 - ra\n 34693: a3 = a4 - a3\n 34696: a4 = a3 - a1\n 34699: a3 = a2 - t2\n 34702: t2 = a3 + 0xffffffffffffffe0\n 34705: a5 = t2 <u a3\n 34708: a3 = a4 + a5\n 34711: a3 = a3 + 0xffffffffffffffff\n 34714: a1 = a3 ^ a4\n 34717: a4 = a3 <u a4\n 34720: a4 = a5 if a1 == 0\n 34723: a1 = t0 <u ra\n 34726: a5 = u64 [s1 + 0x200]\n 34730: a2 = u64 [s1 + 0x1d0]\n 34734: t0 = 1206, jump @1803\n      : @1138 [@dyn 603] (gas: 25)\n 34740: a1 = u64 [s1 + 0x4c0]\n 34744: u64 [s1 + 0x1a0] = a1\n 34748: a2 = t1 - a0\n 34751: a0 = a2 <u 0x1\n 34754: a5 = a5 - a0\n 34757: a0 = u64 [s1 + 0x4b8]\n 34761: u64 [s1 + 0x198] = a0\n 34765: a2 = a2 + 0xffffffffffffffff\n 34768: a4 = a4 + a2\n 34771: a0 = u64 [s1 + 0x4b0]\n 34775: u64 [s1 + 0x188] = a0\n 34779: a0 = u64 [s1 + 0x4a8]\n 34783: u64 [s1 + 0x190] = a0\n 34787: a0 = u64 [s1 + 0x4a0]\n 34791: u64 [s1 + 0x1a8] = a0\n 34795: a0 = a4 <u a2\n 34798: a5 = a5 + a0\n 34801: a0 = u64 [s1 + 0x218]\n 34805: i32 a0 = a0 + 0xe0\n 34809: u64 [s1 + 0x440] = t2\n 34813: u64 [s1 + 0x448] = a3\n 34817: u64 [s1 + 0x450] = a4\n 34821: a1 = s1 + 0x440\n 34825: u64 [s1 + 0x458] = a5\n 34829: ra = 1208, jump @24\n      : @1139 [@dyn 604] (gas: 31)\n 34836: a0 = u64 [s1 + 0x1d0]\n 34840: a1 = s1 + 0x300\n 34844: u64 [a1 + 0xd8] = a0\n 34848: a0 = u64 [s1 + 0x1d8]\n 34852: u64 [a1 + 0xd0] = a0\n 34856: a0 = u64 [s1 + 0x1e0]\n 34860: u64 [a1 + 0xc8] = a0\n 34864: a0 = u64 [s1 + 0x1e8]\n 34868: u64 [a1 + 0xc0] = a0\n 34872: a0 = u64 [s1 + 0x1b0]\n 34876: u64 [a1 + 0xf8] = a0\n 34880: a0 = u64 [s1 + 0x1b8]\n 34884: u64 [a1 + 0xf0] = a0\n 34888: a0 = u64 [s1 + 0x1c0]\n 34892: u64 [a1 + 0xe8] = a0\n 34896: a0 = u64 [s1 + 0x1a0]\n 34900: u64 [a1 + 0xe0] = a0\n 34904: a0 = u64 [s1 + 0x198]\n 34908: a5 = s1 + 0x400\n 34912: u64 [a5 + 0x18] = a0\n 34915: a0 = u64 [s1 + 0x188]\n 34919: u64 [a5 + 0x10] = a0\n 34922: a0 = u64 [s1 + 0x190]\n 34926: u64 [a5 + 0x8] = a0\n 34929: a0 = s1 + 0x420\n 34933: a1 = s1 + 0x400\n 34937: a2 = s1 + 0x3e0\n 34941: a3 = s1 + 0x3c0\n 34945: a4 = u64 [s1 + 0x1a8]\n 34949: u64 [a5] = a4\n 34951: ra = 1210, jump @1610\n      : @1140 [@dyn 605] (gas: 3)\n 34957: a0 = u64 [s1 + 0x1c8]\n 34961: a0 = a0 + 0xffffffffffffff00\n 34965: t0 = 1212, jump @1730\n      : @1141 [@dyn 606] (gas: 1)\n 34971: jump @1143 if a0 != 0\n      : @1142 (gas: 1)\n 34974: jump @576\n      : @1143 (gas: 18)\n 34977: a1 = s1 + 0x400\n 34981: a0 = u64 [a1 + 0x38]\n 34984: u64 [s1 + 0x1f0] = a0\n 34988: a0 = u64 [a1 + 0x30]\n 34991: u64 [s1 + 0x1e8] = a0\n 34995: a0 = u64 [a1 + 0x28]\n 34998: u64 [s1 + 0x1e0] = a0\n 35002: a0 = u64 [a1 + 0x20]\n 35005: u64 [s1 + 0x1d8] = a0\n 35009: a1 = u16 [s1 + 0x208]\n 35013: a0 = u64 [s1 + 0x218]\n 35017: i32 a0 = a0 + 0x100\n 35021: u64 [s1 + 952] = 0\n 35025: u64 [s1 + 944] = 0\n 35029: u64 [s1 + 0x3a0] = a1\n 35033: a1 = s1 + 0x3a0\n 35037: u64 [s1 + 936] = 0\n 35041: ra = 1214, jump @24\n      : @1144 [@dyn 607] (gas: 31)\n 35048: t0 = u64 [s1 + 0x1d8]\n 35052: t2 = u64 [s1 + 0x218]\n 35056: a0 = t0 <u t2\n 35059: a5 = u64 [s1 + 0x210]\n 35063: a3 = u64 [s1 + 0x1e0]\n 35067: a1 = a3 ^ a5\n 35070: a2 = a3 <u a5\n 35073: t1 = a3\n 35075: a2 = a0 if a1 == 0\n 35078: a3 = u64 [s1 + 0x1f8]\n 35082: a4 = u64 [s1 + 0x1e8]\n 35086: a1 = a4 - a3\n 35089: ra = a4 <u a3\n 35092: a4 = u64 [s1 + 0x200]\n 35096: a3 = u64 [s1 + 0x1f0]\n 35100: a4 = a3 - a4\n 35103: a4 = a4 - ra\n 35106: a3 = a1 <u a2\n 35109: a4 = a4 - a3\n 35112: a2 = a1 - a2\n 35115: a1 = t1 - a5\n 35118: a0 = a1 - a0\n 35121: a1 = t0 - t2\n 35124: a0 = a0 | a4\n 35127: a3 = a1 | a2\n 35130: a3 = a3 | a0\n 35133: a0 = a0 | a2\n 35136: a3 = a3 >> 0x20\n 35139: a0 = a0 << 0x20\n 35142: a0 = a0 | a3\n 35145: jump @1146 if a0 == 0\n      : @1145 (gas: 1)\n 35148: jump @576\n      : @1146 (gas: 21)\n 35151: a5 = s1 + 0x100\n 35155: a0 = u64 [a5 + 0x8]\n 35158: u64 [s1 + 0x360] = a0\n 35162: a0 = u64 [a5 + 0x10]\n 35165: u64 [s1 + 0x368] = a0\n 35169: a0 = u64 [0x201e0]\n 35174: a2 = u64 [0x201e8]\n 35179: a3 = u64 [0x201f0]\n 35184: a4 = u64 [0x201f8]\n 35189: u64 [s1 + 0x398] = a0\n 35193: u64 [s1 + 0x390] = a2\n 35197: u64 [s1 + 0x388] = a3\n 35201: u64 [s1 + 0x380] = a4\n 35205: a0 = u64 [a5 + 0x18]\n 35208: u64 [s1 + 0x370] = a0\n 35212: a2 = s1 + 0x380\n 35216: a3 = s1 + 0x360\n 35220: a0 = u64 [a5 + 0x20]\n 35223: u64 [s1 + 0x378] = a0\n 35227: a0 = u64 [s1 + 0x218]\n 35231: ra = 1216, jump @29\n      : @1147 [@dyn 608] (gas: 3)\n 35238: a0 = 0\n 35240: a1 = u64 [s1 + 0x100]\n 35244: jump @1411\n      : @1148 (gas: 24)\n 35247: a0 = a0 <u a1\n 35250: a1 = u64 [s1 + 0x128]\n 35254: a3 = a1 + a0\n 35257: u64 [s1 + 0x1a8] = a3\n 35261: a1 = a3 <u a1\n 35264: a1 = a0 if a0 == 0\n 35267: a1 = a1 + a2\n 35270: u64 [s1 + 0x1a0] = a1\n 35274: a0 = a1 <u a2\n 35277: a3 = s1 + 0x200\n 35281: u64 [a3 + 0x18] = a0\n 35284: a0 = u64 [a3 + 0x10]\n 35287: a2 = s1 + 0x3198\n 35291: a4 = a2 + 0x200\n 35295: u64 [a4 + 0x48] = a0\n 35298: a0 = u64 [a3]\n 35300: u64 [a4 + 0x50] = a0\n 35303: a0 = u64 [s1 + 0x1f8]\n 35307: u64 [a4 + 0x58] = a0\n 35310: a1 = s1 + 0x33e0\n 35314: a0 = u64 [a3 + 0x8]\n 35317: u64 [a4 + 0x60] = a0\n 35320: a0 = 0\n 35322: ra = 1218, jump @24\n      : @1149 [@dyn 609] (gas: 7)\n 35329: a0 = sp + 0xffffffffffffffe0\n 35332: a0 = a0 & 0xffffffffffffffe0\n 35335: u64 [s1 + 0x1b0] = a0\n 35339: sp = a0\n 35341: a2 = u64 [s1 + 0x158]\n 35345: a0 = i32 [a2]\n 35347: jump @1151 if a0 >u 31\n      : @1150 (gas: 2)\n 35351: u32 [a2 + 0] = 0x20\n 35354: fallthrough\n      : @1151 (gas: 5)\n 35355: a0 = u64 [s1 + 0x120]\n 35359: a1 = u64 [s1 + 0x218]\n 35363: a0 = a0 + a1\n 35366: u64 [s1 + 0x198] = a0\n 35370: t0 = 1220, jump @1790\n      : @1152 [@dyn 610] (gas: 24)\n 35376: ecalli 11 // 'hash_keccak_256'\n 35378: u64 [s1 + 536] = 0\n 35382: t2 = 0\n 35384: t1 = 0\n 35386: t0 = 0\n 35388: a3 = u64 [s1 + 0x210]\n 35392: a0 = u64 [a3 + 0x18]\n 35395: a1 = u64 [a3 + 0x10]\n 35398: a2 = u64 [a3 + 0x8]\n 35401: a3 = u64 [a3]\n 35403: a0 = reverse a0\n 35405: a4 = reverse a1\n 35407: a5 = reverse a2\n 35409: a2 = reverse a3\n 35411: a1 = u64 [s1 + 0x1b0]\n 35415: a3 = a2\n 35417: u64 [a1 + 0x18] = a2\n 35420: u64 [s1 + 0x1e0] = a5\n 35424: u64 [a1 + 0x10] = a5\n 35427: u64 [s1 + 0x1f0] = a4\n 35431: u64 [a1 + 0x8] = a4\n 35434: a2 = a0\n 35436: u64 [a1] = a0\n 35438: fallthrough\n      : @1153 (gas: 20)\n 35439: a5 = s1 + 0x100\n 35443: u64 [a5 + 0xe8] = a3\n 35447: u64 [a5 + 0xf8] = a2\n 35451: a0 = u64 [a5 + 0xc0]\n 35455: a2 = u64 [s1 + 0x218]\n 35459: a0 = a2 <u a0\n 35462: a2 = u64 [a5 + 0xd0]\n 35466: a3 = t2 ^ a2\n 35469: a2 = t2 <u a2\n 35472: a2 = a0 if a3 == 0\n 35475: a4 = u64 [a5 + 0xc8]\n 35479: a0 = t1 <u a4\n 35482: a3 = u64 [a5 + 0xd8]\n 35486: a5 = t0 ^ a3\n 35489: a3 = t0 <u a3\n 35492: a3 = a0 if a5 == 0\n 35495: a0 = t1 ^ a4\n 35498: a0 = a0 | a5\n 35501: a3 = a2 if a0 == 0\n 35504: jump @1155 if a3 != 0\n      : @1154 (gas: 1)\n 35507: jump @985\n      : @1155 (gas: 5)\n 35510: a0 = s1 + 0x33c0\n 35514: u64 [s1 + 0x210] = t0\n 35518: u64 [s1 + 0x208] = t1\n 35522: u64 [s1 + 0x200] = t2\n 35526: ra = 1222, jump @26\n      : @1156 [@dyn 611] (gas: 7)\n 35533: a1 = u64 [s1 + 0x1b8]\n 35537: a0 = u64 [s1 + 0x218]\n 35541: a0 = a0 + a1\n 35544: a1 = a0 <u a1\n 35547: a4 = u64 [s1 + 0x1a8]\n 35551: a2 = u64 [s1 + 0x200]\n 35555: t0 = 1224, jump @1770\n      : @1157 [@dyn 612] (gas: 9)\n 35561: a3 = u64 [s1 + 0x1a0]\n 35565: a1 = u64 [s1 + 0x208]\n 35569: a1 = a1 + a3\n 35572: t0 = a1 <u a3\n 35575: a5 = u64 [s1 + 0x198]\n 35579: a3 = u64 [s1 + 0x210]\n 35583: a5 = a5 + a3\n 35586: a3 = a5 + t0\n 35589: t0 = 1226, jump @1757\n      : @1158 [@dyn 613] (gas: 1)\n 35595: jump @1160 if a1 == 0\n      : @1159 (gas: 1)\n 35598: jump @576\n      : @1160 (gas: 12)\n 35601: a5 = s1 + 0x3198\n 35605: a2 = u64 [a5 + 0x240]\n 35609: a1 = u64 [a5 + 0x238]\n 35613: a3 = u64 [a5 + 0x230]\n 35617: a4 = u64 [a5 + 0x228]\n 35621: u64 [a5 + 0x208] = a4\n 35625: a4 = a5 + 0x200\n 35629: u64 [a4 + 0x10] = a3\n 35632: u64 [a4 + 0x18] = a1\n 35635: a1 = s1 + 0x33a0\n 35639: u64 [a4 + 0x20] = a2\n 35642: ra = 1228, jump @24\n      : @1161 [@dyn 614] (gas: 36)\n 35649: a5 = u64 [s1 + 0x1f8]\n 35653: a5 = a5 + 0x1\n 35656: a0 = a5 <u 0x1\n 35659: a3 = u64 [s1 + 0x1f0]\n 35663: a3 = a3 + a0\n 35666: a0 = a5 | a3\n 35669: a0 = a0 <u 0x1\n 35672: a1 = u64 [s1 + 0x1e0]\n 35676: t1 = a1 + a0\n 35679: a1 = t1 <u a1\n 35682: a0 = u64 [s1 + 0x1e8]\n 35686: a0 = a0 + a1\n 35689: a1 = u64 [s1 + 0x218]\n 35693: ra = a1 + 0x20\n 35696: a2 = ra <u a1\n 35699: a1 = u64 [s1 + 0x200]\n 35703: t2 = a1 + a2\n 35706: a4 = t2 <u a1\n 35709: a4 = a2 if a2 == 0\n 35712: a1 = u64 [s1 + 0x208]\n 35716: a4 = a4 + a1\n 35719: a2 = a4 <u a1\n 35722: t0 = u64 [s1 + 0x210]\n 35726: t0 = t0 + a2\n 35729: u64 [s1 + 0x1f0] = a3\n 35733: a1 = u64 [s1 + 0x1b0]\n 35737: u64 [a1 + 0x8] = a3\n 35740: a2 = a5\n 35742: u64 [a1] = a5\n 35744: u64 [a1 + 0x10] = t1\n 35747: a3 = a0\n 35749: u64 [a1 + 0x18] = a0\n 35752: u64 [s1 + 0x1e0] = t1\n 35756: u64 [s1 + 0x218] = ra\n 35760: t1 = a4\n 35762: jump @1153\n      : @1162 (gas: 3)\n 35765: a0 = s1 + 0x2600\n 35769: a1 = 0x40\n 35772: ra = 1230, jump @22\n      : @1163 [@dyn 615] (gas: 3)\n 35779: t0 = 0x4d0\n 35783: a1 = s1 + 0x2198\n 35787: fallthrough\n      : @1164 [@dyn 616] (gas: 18)\n 35788: a4 = a1 + 0x400\n 35792: a2 = u64 [a4 + 0x80]\n 35796: a3 = u64 [a4 + 0x78]\n 35799: a0 = u64 [a4 + 0x70]\n 35802: a1 = u64 [a4 + 0x68]\n 35805: a4 = s1 + 0x200\n 35809: u64 [a4 + 0x10] = a0\n 35812: u64 [a4 + 0x8] = a2\n 35815: a0 = a0 | a2\n 35818: u64 [a4 + 0x18] = a1\n 35821: a1 = a1 | a3\n 35824: a1 = a1 | a0\n 35827: a1 = a1 >> 0x20\n 35830: u64 [a4] = a3\n 35832: a0 = a0 | a3\n 35835: a0 = a0 << 0x20\n 35838: a0 = a0 | a1\n 35841: jump @1166 if a0 == 0\n      : @1165 (gas: 1)\n 35844: jump @576\n      : @1166 (gas: 9)\n 35847: a2 = s1 + 0x2198\n 35851: u64 [a2 + 1112] = 0\n 35855: u64 [a2 + 1104] = 0\n 35859: u64 [a2 + 1096] = 0\n 35863: a0 = 0x8c379a000000000\n 35873: a1 = s1 + 0x25e0\n 35877: u64 [a2 + 0x460] = a0\n 35881: a0 = u64 [s1 + 0x218]\n 35885: ra = 1234, jump @24\n      : @1167 [@dyn 617] (gas: 1)\n 35892: t0 = 1236, jump @1764\n      : @1168 [@dyn 618] (gas: 1)\n 35898: jump @1170 if a0 != 0\n      : @1169 (gas: 1)\n 35901: jump @576\n      : @1170 (gas: 9)\n 35904: a0 = u64 [s1 + 0x218]\n 35908: i32 a0 = a0 + 0x4\n 35911: a2 = s1 + 0x2198\n 35915: u64 [a2 + 1088] = 0\n 35919: u64 [a2 + 1080] = 0\n 35923: u64 [a2 + 1064] = 0x20\n 35928: a1 = s1 + 0x25c0\n 35932: u64 [a2 + 1072] = 0\n 35936: ra = 1238, jump @24\n      : @1171 [@dyn 619] (gas: 6)\n 35943: a2 = s1 + 0x200\n 35947: a0 = u64 [a2]\n 35949: a0 = a0 + 0xffffffffffffffdc\n 35952: a1 = u64 [a2 + 0x18]\n 35955: a0 = a1 <u a0\n 35958: t0 = 1240, jump @1741\n      : @1172 [@dyn 620] (gas: 1)\n 35964: jump @1174 if a0 != 0\n      : @1173 (gas: 1)\n 35967: jump @576\n      : @1174 (gas: 9)\n 35970: a0 = u64 [s1 + 0x218]\n 35974: i32 a0 = a0 + 0x24\n 35977: a2 = s1 + 0x2198\n 35981: u64 [a2 + 1056] = 0\n 35985: u64 [a2 + 1048] = 0\n 35989: u64 [a2 + 1032] = 0x15\n 35994: a1 = s1 + 0x25a0\n 35998: u64 [a2 + 1040] = 0\n 36002: ra = 1242, jump @24\n      : @1175 [@dyn 621] (gas: 5)\n 36009: a0 = 0xffffffbc\n 36019: a2 = s1 + 0x200\n 36023: a1 = u64 [a2 + 0x18]\n 36026: a0 = a1 <u a0\n 36029: t0 = 1244, jump @1741\n      : @1176 [@dyn 622] (gas: 1)\n 36035: jump @1178 if a0 != 0\n      : @1177 (gas: 1)\n 36038: jump @576\n      : @1178 (gas: 13)\n 36041: a0 = u64 [s1 + 0x218]\n 36045: i32 a0 = a0 + 0x44\n 36048: a1 = u64 [0x20110]\n 36053: a2 = u64 [0x20118]\n 36058: a3 = s1 + 0x2198\n 36062: u64 [a3 + 0x400] = a1\n 36066: u64 [a3 + 0x3f8] = a2\n 36070: a1 = 0x7373756564000000\n 36080: u64 [a3 + 0x3f0] = a1\n 36084: a1 = s1 + 0x2580\n 36088: u64 [a3 + 1000] = 0\n 36092: ra = 0x50c\n 36096: jump @24\n      : @1179 (gas: 16)\n 36100: a1 = i32 [s1 + 0x128]\n 36104: a0 = s1 + 0x4000\n 36108: i32 a0 = a0 + 0x700\n 36112: ecalli 4 // 'call_data_load'\n 36114: a0 = s1 + 0x4198\n 36118: a2 = a0 + 0x500\n 36122: a1 = u64 [a2 + 0x80]\n 36126: a3 = s1 + 0x100\n 36130: u64 [a3 + 0xf0] = a1\n 36134: a1 = u64 [a2 + 0x78]\n 36137: u64 [a3 + 0xe8] = a1\n 36141: a1 = u64 [a2 + 0x70]\n 36144: u64 [a3 + 0xc8] = a1\n 36148: a0 = u64 [a2 + 0x68]\n 36151: u64 [a3 + 0xe0] = a0\n 36155: fallthrough\n      : @1180 (gas: 24)\n 36156: a2 = u64 [s1 + 0x180]\n 36160: a0 = a2 >> 0x3f\n 36163: a3 = u64 [s1 + 0x138]\n 36167: a1 = a3 << 0x1\n 36170: a0 = a0 | a1\n 36173: u64 [s1 + 0x1c0] = a0\n 36177: a0 = a3 >> 0x3f\n 36180: a1 = u64 [s1 + 0x130]\n 36184: a1 = a1 << 0x1\n 36187: a0 = a0 | a1\n 36190: u64 [s1 + 0x1b8] = a0\n 36194: a3 = u64 [s1 + 0x188]\n 36198: a0 = a3 >> 0x3f\n 36201: a1 = a2 << 0x1\n 36204: a0 = a0 | a1\n 36207: u64 [s1 + 0x190] = a0\n 36211: a0 = a3 << 0x1\n 36214: u64 [s1 + 0xc0] = a0\n 36218: a1 = a3 << 0x3\n 36221: u64 [s1 + 0x208] = a1\n 36225: i32 a2 = 0x80 - a1\n 36229: a0 = 0xffffffffffffffff\n 36232: a1 = 0xffffffffffffffff\n 36235: ra = 1246, jump @1817\n      : @1181 [@dyn 623] (gas: 7)\n 36241: u64 [s1 + 0xa0] = a0\n 36245: u64 [s1 + 0xb8] = a1\n 36249: a0 = u64 [s1 + 0x188]\n 36253: i32 a2 = a0 << 0x3\n 36256: a0 = 0xffffffffffffffff\n 36259: a1 = 0xffffffffffffffff\n 36262: ra = 1248, jump @1812\n      : @1182 [@dyn 624] (gas: 10)\n 36268: u64 [s1 + 0xb0] = a0\n 36272: u64 [s1 + 0xa8] = a1\n 36276: a1 = u64 [s1 + 0xa0]\n 36280: a0 = a0 | a1\n 36283: u64 [s1 + 0xa0] = a0\n 36287: a0 = u64 [s1 + 0x208]\n 36291: i32 a2 = a0 + 0xffffffffffffff80\n 36294: a0 = 0xffffffffffffffff\n 36297: a1 = 0xffffffffffffffff\n 36300: ra = 1250, jump @1812\n      : @1183 [@dyn 625] (gas: 7)\n 36306: a4 = u64 [s1 + 0x208]\n 36310: a2 = a4 <u 0x80\n 36314: a3 = u64 [s1 + 0xa0]\n 36318: a0 = a3 if a2 != 0\n 36321: a5 = u64 [s1 + 0xa8]\n 36325: a3 = u64 [s1 + 0xb8]\n 36329: t0 = 1252, jump @1751\n      : @1184 [@dyn 626] (gas: 27)\n 36335: a4 = u64 [s1 + 0xb0]\n 36339: a4 = 0 if a2 == 0\n 36341: a1 = u64 [s1 + 0x1c8]\n 36345: a1 = a1 & ~a3\n 36348: a2 = u64 [s1 + 0x1e0]\n 36352: a0 = a2 & ~a0\n 36355: a2 = u64 [s1 + 0x1e8]\n 36359: a2 = a2 & ~a4\n 36362: a3 = u64 [s1 + 0x1f0]\n 36366: a3 = a3 & ~a5\n 36369: a4 = u64 [s1 + 0xc0]\n 36373: a0 = a0 | a4\n 36376: a4 = u64 [s1 + 0x190]\n 36380: a1 = a1 | a4\n 36383: a4 = u64 [s1 + 0x1b8]\n 36387: a3 = a3 | a4\n 36390: a4 = u64 [s1 + 0x1c0]\n 36394: a2 = a2 | a4\n 36397: a4 = s1 + 0x4198\n 36401: a5 = a4 + 0x500\n 36405: u64 [a5 + 0x98] = a2\n 36409: u64 [a5 + 0xa0] = a3\n 36413: u64 [a5 + 0x90] = a1\n 36417: u64 [a5 + 0x88] = a0\n 36421: a1 = s1 + 0x4720\n 36425: a0 = u64 [s1 + 0x200]\n 36429: ra = 1254, jump @28\n      : @1185 [@dyn 627] (gas: 23)\n 36436: a0 = sp + 0xffffffffffffffe0\n 36439: a5 = a0 & 0xffffffffffffffe0\n 36442: sp = a5\n 36444: a1 = u64 [s1 + 0xe8]\n 36448: a0 = a1 + 0x2\n 36451: a1 = a0 <u a1\n 36454: a3 = u64 [s1 + 0xf0]\n 36458: a2 = a3 + a1\n 36461: a3 = a2 <u a3\n 36464: a3 = a1 if a1 == 0\n 36467: a1 = u64 [s1 + 0x108]\n 36471: a3 = a3 + a1\n 36474: a1 = a3 <u a1\n 36477: a4 = u64 [s1 + 0xf8]\n 36481: a4 = a4 + a1\n 36484: a1 = a5\n 36486: u64 [s1 + 0x208] = a5\n 36490: u64 [a5 + 0x18] = a4\n 36493: u64 [a5 + 0x10] = a3\n 36496: u64 [a5 + 0x8] = a2\n 36499: u64 [a5] = a0\n 36501: a0 = s1 + 0x2440\n 36505: ra = 1256, jump @26\n      : @1186 [@dyn 628] (gas: 19)\n 36512: a1 = s1 + 0x2198\n 36516: a0 = u32 [a1 + 0x2bc]\n 36520: a1 = u64 [a1 + 0x2c0]\n 36524: a0 = a0 << 0x20\n 36527: a2 = u64 [s1 + 0x1d8]\n 36531: a0 = a0 | a2\n 36534: a2 = u64 [s1 + 0x1d0]\n 36538: a1 = a1 | a2\n 36541: a2 = u64 [s1 + 0x168]\n 36545: a3 = s1 + 0x4198\n 36549: a4 = a3 + 0x500\n 36553: u64 [a4 + 0xb0] = a2\n 36557: a2 = u64 [s1 + 0x160]\n 36561: u64 [a4 + 0xa8] = a2\n 36565: u64 [a4 + 0xc0] = a1\n 36569: u64 [a4 + 0xb8] = a0\n 36573: a1 = s1 + 0x4740\n 36577: a0 = u64 [s1 + 0x208]\n 36581: ra = 1258, jump @28\n      : @1187 [@dyn 629] (gas: 21)\n 36588: a1 = u64 [s1 + 0xe8]\n 36592: a0 = a1 + 0x3\n 36595: a1 = a0 <u a1\n 36598: a3 = u64 [s1 + 0xf0]\n 36602: a2 = a3 + a1\n 36605: a3 = a2 <u a3\n 36608: a3 = a1 if a1 == 0\n 36611: a1 = u64 [s1 + 0x108]\n 36615: a3 = a3 + a1\n 36618: a1 = a3 <u a1\n 36621: a4 = u64 [s1 + 0xf8]\n 36625: a1 = a1 + a4\n 36628: a4 = s1 + 0x4198\n 36632: a5 = a4 + 0x500\n 36636: u64 [a5 + 0xe0] = a1\n 36640: u64 [a5 + 0xd8] = a3\n 36644: u64 [a5 + 0xd0] = a2\n 36648: u64 [a5 + 0xc8] = a0\n 36652: a0 = s1 + 0x4760\n 36656: a1 = u64 [s1 + 0x210]\n 36660: ra = 1260, jump @28\n      : @1188 [@dyn 630] (gas: 36)\n 36667: a0 = sp + 0xffffffffffffffe0\n 36670: a4 = a0 & 0xffffffffffffffe0\n 36673: sp = a4\n 36675: a0 = u64 [s1 + 0xe8]\n 36679: t0 = a0 + 0x4\n 36682: a0 = t0 <u a0\n 36685: a1 = u64 [s1 + 0xf0]\n 36689: t1 = a1 + a0\n 36692: a1 = t1 <u a1\n 36695: a1 = a0 if a0 == 0\n 36698: t2 = u64 [s1 + 0x108]\n 36702: a5 = t2 + a1\n 36705: a0 = u64 [s1 + 0x1b0]\n 36709: a2 = u64 [s1 + 0x1a0]\n 36713: a0 = a0 | a2\n 36716: a1 = u64 [s1 + 0x1a8]\n 36720: a3 = u64 [s1 + 0x198]\n 36724: a1 = a1 | a3\n 36727: a0 = a0 | a1\n 36730: a0 = a0 >> 0x20\n 36733: a1 = a1 | a2\n 36736: a1 = a1 << 0x20\n 36739: a0 = a0 | a1\n 36742: a1 = a5 <u t2\n 36745: a2 = u64 [s1 + 0xf8]\n 36749: a1 = a1 + a2\n 36752: u64 [s1 + 0x1f0] = a1\n 36756: u64 [a4 + 0x18] = a1\n 36759: u64 [s1 + 0x200] = a5\n 36763: u64 [a4 + 0x10] = a5\n 36766: u64 [s1 + 0x208] = t1\n 36770: u64 [a4 + 0x8] = t1\n 36773: u64 [s1 + 0xb0] = a4\n 36777: u64 [s1 + 0x210] = t0\n 36781: u64 [a4] = t0\n 36783: jump @1190 if a0 == 0\n      : @1189 (gas: 1)\n 36786: jump @576\n      : @1190 (gas: 3)\n 36789: a0 = s1 + 0x2420\n 36793: a1 = u64 [s1 + 0x1b0]\n 36797: ra = 1262, jump @22\n      : @1191 [@dyn 631] (gas: 19)\n 36804: a0 = s1 + 0x2198\n 36808: a4 = a0 + 0x200\n 36812: a3 = u64 [a4 + 0xa0]\n 36816: a2 = u64 [a4 + 0x98]\n 36820: a1 = u64 [a4 + 0x90]\n 36824: a0 = a3 >u 0\n 36826: a4 = a2 >u 0\n 36828: a4 = a0 if a3 != 0\n 36831: u64 [s1 + 0xb8] = a1\n 36835: a0 = a1 >u 0\n 36837: u64 [s1 + 0xa8] = a2\n 36841: u64 [s1 + 0xa0] = a3\n 36845: a2 = a2 | a3\n 36848: a1 = s1 + 0x100\n 36852: u64 [a1 + 0xd8] = a0\n 36856: u64 [a1 + 0xe8] = a4\n 36860: u64 [a1 + 0xe0] = a2\n 36864: a0 = a4 if a2 != 0\n 36867: jump @1193 if a0 == 0\n      : @1192 (gas: 1)\n 36870: jump @1437\n      : @1193 (gas: 6)\n 36873: a0 = s1 + 0x2198\n 36877: a0 = u64 [a0 + 0x288]\n 36881: u64 [s1 + 0xc0] = a0\n 36885: a0 = s1 + 0x2400\n 36889: a1 = u64 [s1 + 0xb0]\n 36893: ra = 1264, jump @26\n      : @1194 [@dyn 632] (gas: 13)\n 36900: a4 = s1 + 0x2198\n 36904: a5 = a4 + 0x200\n 36908: a2 = u64 [a5 + 0x68]\n 36911: a0 = u64 [a5 + 0x70]\n 36914: a1 = u64 [a5 + 0x78]\n 36917: a3 = u64 [a5 + 0x80]\n 36921: u64 [a5 + 0x40] = a3\n 36924: u64 [a5 + 0x38] = a1\n 36927: u64 [a5 + 0x30] = a0\n 36930: a0 = s1 + 0x23e0\n 36934: a1 = s1 + 0x23c0\n 36938: u64 [a5 + 0x28] = a2\n 36941: ra = 1266, jump @1485\n      : @1195 [@dyn 633] (gas: 32)\n 36947: a4 = s1 + 0x2198\n 36951: a5 = a4 + 0x200\n 36955: a0 = u64 [a5 + 0x48]\n 36958: a1 = u64 [a5 + 0x50]\n 36961: a2 = u64 [a5 + 0x58]\n 36964: a3 = u64 [a5 + 0x60]\n 36967: u64 [a5] = a3\n 36969: a3 = u64 [s1 + 0xa0]\n 36973: u64 [a4 + 0x1e0] = a3\n 36977: a3 = u64 [s1 + 0xa8]\n 36981: u64 [a4 + 0x1d8] = a3\n 36985: a3 = u64 [s1 + 0xb8]\n 36989: u64 [a4 + 0x1d0] = a3\n 36993: a3 = u64 [s1 + 0xc0]\n 36997: u64 [a4 + 0x1c8] = a3\n 37001: a3 = a4 + 0x100\n 37005: u64 [a3 + 0xf8] = a2\n 37009: u64 [a3 + 0xf0] = a1\n 37013: u64 [a3 + 0xe8] = a0\n 37017: a0 = u64 [s1 + 0x1f0]\n 37021: u64 [a5 + 0x20] = a0\n 37024: a4 = s1 + 0x200\n 37028: a0 = u64 [a4]\n 37030: u64 [a5 + 0x18] = a0\n 37033: a0 = u64 [a4 + 0x8]\n 37036: u64 [a5 + 0x10] = a0\n 37039: a0 = s1 + 0x23a0\n 37043: a1 = s1 + 0x2380\n 37047: a2 = s1 + 0x2360\n 37051: a3 = u64 [a4 + 0x10]\n 37054: u64 [a5 + 0x8] = a3\n 37057: ra = 1268, jump @1586\n      : @1196 [@dyn 634] (gas: 11)\n 37063: a0 = u64 [s1 + 0xc0]\n 37067: a0 = a0 <u 0x20\n 37070: a0 = a0 ^ 0x1\n 37073: a3 = s1 + 0x100\n 37077: a1 = u64 [a3 + 0xd8]\n 37081: a2 = u64 [s1 + 0xb8]\n 37085: a0 = a1 if a2 != 0\n 37088: a1 = u64 [a3 + 0xe8]\n 37092: a2 = u64 [a3 + 0xe0]\n 37096: a0 = a1 if a2 != 0\n 37099: jump @1206 if a0 == 0\n      : @1197 (gas: 16)\n 37103: a0 = u64 [s1 + 0xc0]\n 37107: a0 = a0 & 0xffffffffffffffe0\n 37110: u64 [s1 + 0x190] = a0\n 37114: a0 = s1 + 0x2198\n 37118: a1 = u64 [s1 + 0x210]\n 37122: a3 = a0 + 0x100\n 37126: u64 [a3 + 0x88] = a1\n 37130: a1 = u64 [s1 + 0x208]\n 37134: u64 [a3 + 0x90] = a1\n 37138: a1 = u64 [s1 + 0x200]\n 37142: u64 [a3 + 0x98] = a1\n 37146: a1 = s1 + 0x2320\n 37150: a2 = u64 [s1 + 0x1f0]\n 37154: u64 [a3 + 0xa0] = a2\n 37158: a0 = 0\n 37160: ra = 1270, jump @24\n      : @1198 [@dyn 635] (gas: 7)\n 37167: a0 = sp + 0xffffffffffffffe0\n 37170: a0 = a0 & 0xffffffffffffffe0\n 37173: u64 [s1 + 0x1f0] = a0\n 37177: sp = a0\n 37179: a1 = 0x20\n 37182: a0 = 0\n 37184: ra = 1272, jump @36\n      : @1199 [@dyn 636] (gas: 34)\n 37191: a1 = sp + 0xffffffffffffffe0\n 37194: a1 = a1 & 0xffffffffffffffe0\n 37197: u64 [s1 + 0x1e8] = a1\n 37201: sp = a1\n 37203: i32 a0 = a0 + 0\n 37205: i32 a2 = a1 + 0\n 37207: a1 = 0x20\n 37210: ecalli 11 // 'hash_keccak_256'\n 37212: u64 [s1 + 536] = 0x20\n 37217: a5 = 0\n 37219: u64 [s1 + 528] = 0\n 37223: u64 [s1 + 520] = 0\n 37227: u64 [s1 + 504] = 0\n 37231: u64 [s1 + 512] = 0\n 37235: a3 = u64 [s1 + 0x1e8]\n 37239: a0 = u64 [a3 + 0x18]\n 37242: a1 = u64 [a3 + 0x10]\n 37245: a2 = u64 [a3 + 0x8]\n 37248: a3 = u64 [a3]\n 37250: t1 = reverse a0\n 37252: t2 = reverse a1\n 37254: ra = reverse a2\n 37256: a2 = 0\n 37258: a4 = u64 [s1 + 0x1f8]\n 37262: a0 = reverse a3\n 37264: a3 = 0\n 37266: t0 = a0\n 37268: a1 = u64 [s1 + 0x1f0]\n 37272: u64 [a1 + 0x18] = a0\n 37275: u64 [s1 + 0x1d0] = ra\n 37279: u64 [a1 + 0x10] = ra\n 37282: u64 [a1 + 0x8] = t2\n 37285: u64 [a1] = t1\n 37287: fallthrough\n      : @1200 (gas: 24)\n 37288: u64 [s1 + 0x1e8] = t0\n 37292: a0 = u64 [s1 + 0x190]\n 37296: u64 [s1 + 0x1f8] = a4\n 37300: a0 = a4 <u a0\n 37303: a4 = a0 ^ 0x1\n 37306: u64 [s1 + 0x1d8] = a3\n 37310: a4 = 0x1 if a3 != 0\n 37313: u64 [s1 + 0x1e0] = a2\n 37317: a0 = u64 [s1 + 0x200]\n 37321: a0 = a0 | a2\n 37324: a4 = 0x1 if a0 != 0\n 37327: a1 = u64 [s1 + 0x1b0]\n 37331: a0 = u64 [s1 + 0x218]\n 37335: a1 = a1 + a0\n 37338: a3 = u64 [s1 + 0x1a8]\n 37342: a3 = a3 + a5\n 37345: a2 = u64 [s1 + 0x1a0]\n 37349: a0 = u64 [s1 + 0x210]\n 37353: a2 = a2 + a0\n 37356: a0 = u64 [s1 + 0x198]\n 37360: ra = a5\n 37362: a5 = u64 [s1 + 0x208]\n 37366: a0 = a0 + a5\n 37369: jump @1226 if a4 != 0\n      : @1201 (gas: 23)\n 37373: a4 = u64 [s1 + 0x218]\n 37377: a4 = a1 <u a4\n 37380: a3 = a3 + a4\n 37383: t0 = a3 ^ ra\n 37386: u64 [s1 + 0x1b8] = ra\n 37390: a5 = a3 <u ra\n 37393: a5 = a4 if t0 == 0\n 37396: a5 = a5 + a2\n 37399: t0 = a5 <u a2\n 37402: a4 = u64 [s1 + 0x210]\n 37406: a2 = a2 <u a4\n 37409: a0 = a0 + a2\n 37412: a0 = a0 + t0\n 37415: a2 = a1 | a5\n 37418: a0 = a0 | a3\n 37421: a2 = a2 | a0\n 37424: a2 = a2 >> 0x20\n 37427: a0 = a0 | a5\n 37430: a0 = a0 << 0x20\n 37433: a0 = a0 | a2\n 37436: u64 [s1 + 0x1c8] = t1\n 37440: u64 [s1 + 0x1c0] = t2\n 37444: jump @1203 if a0 == 0\n      : @1202 (gas: 1)\n 37447: jump @576\n      : @1203 (gas: 2)\n 37450: a0 = s1 + 0x2040\n 37454: ra = 1274, jump @22\n      : @1204 [@dyn 637] (gas: 15)\n 37461: a3 = s1 + 0x1998\n 37465: a4 = a3 + 0x600\n 37469: a0 = u64 [a4 + 0xc0]\n 37473: a1 = u64 [a4 + 0xb8]\n 37477: a2 = u64 [a4 + 0xb0]\n 37481: a3 = u64 [a4 + 0xa8]\n 37485: a4 = s1 + 0x4198\n 37489: u64 [a4 + 0x600] = a0\n 37493: a0 = a4 + 0x500\n 37497: u64 [a0 + 0xf8] = a1\n 37501: u64 [a0 + 0xf0] = a2\n 37505: u64 [a0 + 0xe8] = a3\n 37509: a1 = s1 + 0x4780\n 37513: a0 = u64 [s1 + 0x1f0]\n 37517: ra = 1276, jump @28\n      : @1205 [@dyn 638] (gas: 53)\n 37524: t1 = u64 [s1 + 0x1c8]\n 37528: t1 = t1 + 0x1\n 37531: a0 = t1 <u 0x1\n 37534: t2 = u64 [s1 + 0x1c0]\n 37538: t2 = t2 + a0\n 37541: a0 = t1 | t2\n 37544: a0 = a0 <u 0x1\n 37547: a1 = u64 [s1 + 0x1d0]\n 37551: ra = a1 + a0\n 37554: a1 = ra <u a1\n 37557: a0 = u64 [s1 + 0x1e8]\n 37561: a0 = a0 + a1\n 37564: a1 = u64 [s1 + 0x218]\n 37568: a2 = a1 + 0x20\n 37571: u64 [s1 + 0x1e8] = a2\n 37575: a3 = a2 <u a1\n 37578: a1 = u64 [s1 + 0x1b8]\n 37582: a2 = a1 + a3\n 37585: u64 [s1 + 0x1c8] = a2\n 37589: a4 = a2 <u a1\n 37592: a4 = a3 if a3 == 0\n 37595: a1 = u64 [s1 + 0x210]\n 37599: a3 = a1 + a4\n 37602: a4 = a3 <u a1\n 37605: a1 = u64 [s1 + 0x208]\n 37609: a1 = a1 + a4\n 37612: u64 [s1 + 0x208] = a1\n 37616: a1 = u64 [s1 + 0x1f8]\n 37620: a4 = a1 + 0x20\n 37623: a5 = a4 <u a1\n 37626: a2 = u64 [s1 + 0x1d8]\n 37630: a1 = a2 + a5\n 37633: a2 = a1 <u a2\n 37636: a2 = a5 if a5 == 0\n 37639: a5 = u64 [s1 + 0x1e0]\n 37643: a2 = a2 + a5\n 37646: a5 = a2 <u a5\n 37649: t0 = u64 [s1 + 0x200]\n 37653: t0 = t0 + a5\n 37656: u64 [s1 + 0x200] = t0\n 37660: a5 = u64 [s1 + 0x1f0]\n 37664: u64 [a5 + 0x8] = t2\n 37667: u64 [a5] = t1\n 37669: u64 [a5 + 0x10] = ra\n 37672: t0 = a0\n 37674: u64 [a5 + 0x18] = a0\n 37677: u64 [s1 + 0x1d0] = ra\n 37681: a0 = u64 [s1 + 0x1e8]\n 37685: u64 [s1 + 0x218] = a0\n 37689: a5 = u64 [s1 + 0x1c8]\n 37693: u64 [s1 + 0x210] = a3\n 37697: a3 = a1\n 37699: jump @1200\n      : @1206 (gas: 8)\n 37702: a0 = u64 [s1 + 0xc0]\n 37706: a1 = u64 [s1 + 0xa8]\n 37710: a0 = a0 | a1\n 37713: a1 = u64 [s1 + 0xb8]\n 37717: a2 = u64 [s1 + 0xa0]\n 37721: a1 = a1 | a2\n 37724: a0 = a0 | a1\n 37727: jump @1237 if a0 != 0\n      : @1207 (gas: 5)\n 37731: u64 [s1 + 440] = 0\n 37735: u64 [s1 + 400] = 0\n 37739: u64 [s1 + 456] = 0\n 37743: u64 [s1 + 448] = 0\n 37747: jump @1241\n      : @1208 (gas: 3)\n 37750: a0 = s1 + 0x3260\n 37754: a1 = 0x40\n 37757: ra = 1278, jump @22\n      : @1209 [@dyn 639] (gas: 18)\n 37764: a0 = s1 + 0x3198\n 37768: a3 = u64 [a0 + 0xe0]\n 37772: a4 = u64 [a0 + 0xd8]\n 37776: a2 = u64 [a0 + 0xd0]\n 37780: a1 = u64 [a0 + 0xc8]\n 37784: a5 = s1 + 0x200\n 37788: u64 [a5 + 0x10] = a2\n 37791: u64 [a5 + 0x8] = a3\n 37794: a0 = a2 | a3\n 37797: u64 [a5 + 0x18] = a1\n 37800: a1 = a1 | a4\n 37803: a1 = a1 | a0\n 37806: a1 = a1 >> 0x20\n 37809: u64 [a5] = a4\n 37811: a0 = a0 | a4\n 37814: a0 = a0 << 0x20\n 37817: a0 = a0 | a1\n 37820: jump @1211 if a0 == 0\n      : @1210 (gas: 1)\n 37823: jump @576\n      : @1211 (gas: 9)\n 37826: a2 = s1 + 0x3198\n 37830: u64 [a2 + 184] = 0\n 37834: u64 [a2 + 176] = 0\n 37838: u64 [a2 + 168] = 0\n 37842: a0 = 0x8c379a000000000\n 37852: a1 = s1 + 0x3240\n 37856: u64 [a2 + 0xc0] = a0\n 37860: a0 = u64 [s1 + 0x218]\n 37864: ra = 1280, jump @24\n      : @1212 [@dyn 640] (gas: 1)\n 37871: t0 = 1282, jump @1764\n      : @1213 [@dyn 641] (gas: 1)\n 37877: jump @1215 if a0 != 0\n      : @1214 (gas: 1)\n 37880: jump @576\n      : @1215 (gas: 9)\n 37883: a0 = u64 [s1 + 0x218]\n 37887: i32 a0 = a0 + 0x4\n 37890: a2 = s1 + 0x3198\n 37894: u64 [a2 + 160] = 0\n 37898: u64 [a2 + 152] = 0\n 37902: u64 [a2 + 136] = 0x20\n 37907: a1 = s1 + 0x3220\n 37911: u64 [a2 + 144] = 0\n 37915: ra = 1284, jump @24\n      : @1216 [@dyn 642] (gas: 6)\n 37922: a2 = s1 + 0x200\n 37926: a0 = u64 [a2]\n 37928: a0 = a0 + 0xffffffffffffffdc\n 37931: a1 = u64 [a2 + 0x18]\n 37934: a0 = a1 <u a0\n 37937: t0 = 1286, jump @1741\n      : @1217 [@dyn 643] (gas: 1)\n 37943: jump @1219 if a0 != 0\n      : @1218 (gas: 1)\n 37946: jump @576\n      : @1219 (gas: 9)\n 37949: a0 = u64 [s1 + 0x218]\n 37953: i32 a0 = a0 + 0x24\n 37956: a2 = s1 + 0x3198\n 37960: u64 [a2 + 128] = 0\n 37964: u64 [a2 + 120] = 0\n 37967: u64 [a2 + 104] = 0x14\n 37971: a1 = s1 + 0x3200\n 37975: u64 [a2 + 112] = 0\n 37978: ra = 1288, jump @24\n      : @1220 [@dyn 644] (gas: 5)\n 37985: a0 = 0xffffffbc\n 37995: a2 = s1 + 0x200\n 37999: a1 = u64 [a2 + 0x18]\n 38002: a0 = a1 <u a0\n 38005: t0 = 1290, jump @1741\n      : @1221 [@dyn 645] (gas: 1)\n 38011: jump @1223 if a0 != 0\n      : @1222 (gas: 1)\n 38014: jump @576\n      : @1223 (gas: 12)\n 38017: a0 = u64 [s1 + 0x218]\n 38021: i32 a0 = a0 + 0x44\n 38024: a1 = u64 [0x20068]\n 38029: a2 = u64 [0x20070]\n 38034: a3 = s1 + 0x3198\n 38038: u64 [a3 + 0x60] = a1\n 38041: u64 [a3 + 0x58] = a2\n 38044: a1 = 0x6c6c656400000000\n 38054: u64 [a3 + 0x50] = a1\n 38057: a1 = s1 + 0x31e0\n 38061: u64 [a3 + 72] = 0\n 38064: ra = 1292, jump @24\n      : @1224 [@dyn 646] (gas: 3)\n 38071: a1 = 0x64\n 38074: a0 = u64 [s1 + 0x218]\n 38078: ra = 1294, jump @36\n      : @1225 [@dyn 647] (gas: 6)\n 38085: i32 a1 = a0 + 0\n 38087: a0 = 0x1\n 38090: a2 = 0x64\n 38093: ra = 0x510\n 38097: ecalli 16 // 'seal_return'\n 38099: fallthrough\n      : @1226 [@dyn 648] (gas: 12)\n 38100: t2 = u64 [s1 + 0x210]\n 38104: t1 = u64 [s1 + 0x218]\n 38108: a4 = u64 [s1 + 0xc0]\n 38112: a5 = u64 [s1 + 0x190]\n 38116: a4 = a4 ^ a5\n 38119: a5 = u64 [s1 + 0xa8]\n 38123: t0 = a4 | a5\n 38126: a5 = u64 [s1 + 0xb8]\n 38130: a4 = u64 [s1 + 0xa0]\n 38134: a5 = a5 | a4\n 38137: a4 = t0 | a5\n 38140: jump @1236 if a4 == 0\n      : @1227 (gas: 18)\n 38144: a4 = a1 <u t1\n 38147: a3 = a3 + a4\n 38150: t0 = a3 ^ ra\n 38153: a5 = a3 <u ra\n 38156: a5 = a4 if t0 == 0\n 38159: a5 = a5 + a2\n 38162: a4 = a5 <u a2\n 38165: a2 = a2 <u t2\n 38168: a0 = a0 + a2\n 38171: a0 = a0 + a4\n 38174: a2 = a1 | a5\n 38177: a0 = a0 | a3\n 38180: a2 = a2 | a0\n 38183: a2 = a2 >> 0x20\n 38186: a0 = a0 | a5\n 38189: a0 = a0 << 0x20\n 38192: a0 = a0 | a2\n 38195: jump @1229 if a0 == 0\n      : @1228 (gas: 1)\n 38198: jump @576\n      : @1229 (gas: 2)\n 38201: a0 = s1 + 0x2300\n 38205: ra = 1298, jump @22\n      : @1230 [@dyn 649] (gas: 3)\n 38212: a0 = s1 + 0x2198\n 38216: a2 = a0 + 0x100\n 38220: t0 = 1300, jump @1801\n      : @1231 [@dyn 650] (gas: 9)\n 38226: u64 [s1 + 0x1f8] = a0\n 38230: a0 = u64 [s1 + 0xc0]\n 38234: a0 = a0 << 0x3b\n 38237: a0 = a0 >> 0x38\n 38240: u64 [s1 + 0x218] = a0\n 38244: a2 = a0 + 0xffffffffffffff80\n 38247: a0 = 0xffffffffffffffff\n 38250: a1 = 0xffffffffffffffff\n 38253: ra = 1302, jump @1812\n      : @1232 [@dyn 651] (gas: 6)\n 38259: u64 [s1 + 0x1e8] = a0\n 38263: u64 [s1 + 0x1e0] = a1\n 38267: a0 = 0xffffffffffffffff\n 38270: a1 = 0xffffffffffffffff\n 38273: a2 = u64 [s1 + 0x218]\n 38277: ra = 1304, jump @1812\n      : @1233 [@dyn 652] (gas: 7)\n 38283: u64 [s1 + 0x1d8] = a0\n 38287: u64 [s1 + 0x1d0] = a1\n 38291: a1 = u64 [s1 + 0x218]\n 38295: a2 = 0x80 - a1\n 38299: a0 = 0xffffffffffffffff\n 38302: a1 = 0xffffffffffffffff\n 38305: ra = 1306, jump @1817\n      : @1234 [@dyn 653] (gas: 18)\n 38311: a3 = u64 [s1 + 0x1d0]\n 38315: a3 = a3 | a1\n 38318: a2 = u64 [s1 + 0x218]\n 38322: a4 = a2 <u 0x80\n 38326: u64 [s1 + 0x1d0] = a4\n 38330: a1 = u64 [s1 + 0x1e0]\n 38334: a3 = a1 if a4 == 0\n 38337: a3 = 0xffffffffffffffff if a2 == 0\n 38340: u64 [s1 + 0x1e0] = a3\n 38344: a3 = u64 [s1 + 0x1d8]\n 38348: a3 = a3 | a0\n 38351: a0 = u64 [s1 + 0x1e8]\n 38355: a3 = a0 if a4 == 0\n 38358: a3 = 0xffffffffffffffff if a2 == 0\n 38361: u64 [s1 + 0x1e8] = a3\n 38365: a0 = 0xffffffffffffffff\n 38368: a1 = 0xffffffffffffffff\n 38371: ra = 1308, jump @1812\n      : @1235 [@dyn 654] (gas: 23)\n 38377: a5 = s1 + 0x100\n 38381: a2 = u64 [a5 + 0xd0]\n 38385: a1 = 0 if a2 == 0\n 38387: a0 = 0 if a2 == 0\n 38389: a2 = u64 [a5 + 0xf8]\n 38393: a3 = u64 [a5 + 0xe8]\n 38397: a2 = a2 & ~a3\n 38400: a3 = u64 [s1 + 0x200]\n 38404: a4 = u64 [a5 + 0xe0]\n 38408: a3 = a3 & ~a4\n 38411: a4 = u64 [s1 + 0x208]\n 38415: a0 = a4 & ~a0\n 38418: a4 = u64 [s1 + 0x210]\n 38422: a1 = a4 & ~a1\n 38425: a4 = s1 + 0x4198\n 38429: u64 [a4 + 0x620] = a1\n 38433: a1 = a4 + 0x600\n 38437: u64 [a1 + 0x18] = a0\n 38440: u64 [a1 + 0x10] = a3\n 38443: u64 [a1 + 0x8] = a2\n 38446: a1 = s1 + 0x47a0\n 38450: a0 = u64 [a5 + 0xf0]\n 38454: ra = 1310, jump @28\n      : @1236 [@dyn 655] (gas: 23)\n 38461: a2 = u64 [s1 + 0xa8]\n 38465: a0 = a2 >> 0x3f\n 38468: a1 = u64 [s1 + 0xa0]\n 38472: a1 = a1 << 0x1\n 38475: a0 = a0 | a1\n 38478: a3 = u64 [s1 + 0xb8]\n 38482: a1 = a3 >> 0x3f\n 38485: a2 = a2 << 0x1\n 38488: a1 = a1 | a2\n 38491: a4 = u64 [s1 + 0xc0]\n 38495: a2 = a4 >> 0x3f\n 38498: a3 = a3 << 0x1\n 38501: a2 = a2 | a3\n 38504: a3 = a4 << 0x1\n 38507: a3 = a3 + 0x1\n 38510: a4 = s1 + 0x4198\n 38514: a5 = a4 + 0x600\n 38518: u64 [a5 + 0x28] = a3\n 38521: u64 [a5 + 0x30] = a2\n 38524: u64 [a5 + 0x38] = a1\n 38527: u64 [a5 + 0x40] = a0\n 38530: a0 = 0x47c0\n 38534: jump @1246\n      : @1237 (gas: 11)\n 38537: a3 = s1 + 0x100\n 38541: a0 = u64 [a3 + 0xa0]\n 38545: a1 = u64 [a3 + 0x98]\n 38549: a0 = a0 | a1\n 38552: a1 = 0xffffffe0\n 38562: a2 = u64 [a3 + 0xb0]\n 38566: a1 = a2 <u a1\n 38569: a2 = u64 [a3 + 0xa8]\n 38573: a1 = 0 if a2 != 0\n 38575: a1 = 0 if a0 != 0\n 38577: jump @1239 if a1 != 0\n      : @1238 (gas: 1)\n 38580: jump @576\n      : @1239 (gas: 4)\n 38583: a0 = u64 [s1 + 0x1b0]\n 38587: i32 a1 = a0 + 0x20\n 38590: a0 = s1 + 0x2340\n 38594: ra = 1312, jump @22\n      : @1240 [@dyn 656] (gas: 12)\n 38601: a0 = s1 + 0x2198\n 38605: a2 = a0 + 0x100\n 38609: a1 = u64 [a2 + 0xc0]\n 38613: a3 = s1 + 0x100\n 38617: u64 [a3 + 0xc0] = a1\n 38621: a1 = u64 [a2 + 0xb8]\n 38625: u64 [a3 + 0xc8] = a1\n 38629: a1 = u64 [a2 + 0xb0]\n 38633: u64 [a3 + 0x90] = a1\n 38637: a0 = u64 [a2 + 0xa8]\n 38641: u64 [a3 + 0xb8] = a0\n 38645: fallthrough\n      : @1241 (gas: 24)\n 38646: a3 = u64 [s1 + 0xa8]\n 38650: a0 = a3 >> 0x3f\n 38653: a1 = u64 [s1 + 0xa0]\n 38657: a1 = a1 << 0x1\n 38660: a0 = a0 | a1\n 38663: u64 [s1 + 0x210] = a0\n 38667: a2 = u64 [s1 + 0xb8]\n 38671: a0 = a2 >> 0x3f\n 38674: a1 = a3 << 0x1\n 38677: a0 = a0 | a1\n 38680: u64 [s1 + 0x208] = a0\n 38684: a3 = u64 [s1 + 0xc0]\n 38688: a0 = a3 >> 0x3f\n 38691: a1 = a2 << 0x1\n 38694: a0 = a0 | a1\n 38697: u64 [s1 + 0x200] = a0\n 38701: a0 = a3 << 0x1\n 38704: u64 [s1 + 0x1f8] = a0\n 38708: a0 = a3 << 0x3\n 38711: u64 [s1 + 0x218] = a0\n 38715: i32 a2 = a0 + 0xffffffffffffff80\n 38718: a0 = 0xffffffffffffffff\n 38721: a1 = 0xffffffffffffffff\n 38724: ra = 1314, jump @1812\n      : @1242 [@dyn 657] (gas: 8)\n 38730: u64 [s1 + 0x1e0] = a0\n 38734: u64 [s1 + 0x1e8] = a1\n 38738: a0 = u64 [s1 + 0xc0]\n 38742: i32 a2 = a0 << 0x3\n 38745: u64 [s1 + 0x1f0] = a2\n 38749: a0 = 0xffffffffffffffff\n 38752: a1 = 0xffffffffffffffff\n 38755: ra = 1316, jump @1812\n      : @1243 [@dyn 658] (gas: 7)\n 38761: u64 [s1 + 0x1d0] = a0\n 38765: u64 [s1 + 0x1d8] = a1\n 38769: a1 = u64 [s1 + 0x218]\n 38773: i32 a2 = 0x80 - a1\n 38777: a0 = 0xffffffffffffffff\n 38780: a1 = 0xffffffffffffffff\n 38783: ra = 1318, jump @1817\n      : @1244 [@dyn 659] (gas: 19)\n 38789: a3 = u64 [s1 + 0x1d0]\n 38793: a3 = a3 | a0\n 38796: a2 = u64 [s1 + 0x218]\n 38800: a4 = a2 <u 0x80\n 38804: u64 [s1 + 0x1d0] = a4\n 38808: a0 = u64 [s1 + 0x1e0]\n 38812: a3 = a0 if a4 == 0\n 38815: a3 = 0xffffffffffffffff if a2 == 0\n 38818: u64 [s1 + 0x1e0] = a3\n 38822: a3 = u64 [s1 + 0x1d8]\n 38826: a3 = a3 | a1\n 38829: a1 = u64 [s1 + 0x1e8]\n 38833: a3 = a1 if a4 == 0\n 38836: a3 = 0xffffffffffffffff if a2 == 0\n 38839: u64 [s1 + 0x218] = a3\n 38843: a0 = 0xffffffffffffffff\n 38846: a1 = 0xffffffffffffffff\n 38849: a2 = u64 [s1 + 0x1f0]\n 38853: ra = 1320, jump @1812\n      : @1245 [@dyn 660] (gas: 31)\n 38859: a5 = s1 + 0x100\n 38863: a2 = u64 [a5 + 0xd0]\n 38867: a0 = 0 if a2 == 0\n 38869: a1 = 0 if a2 == 0\n 38871: a2 = u64 [a5 + 0x90]\n 38875: a3 = u64 [s1 + 0x218]\n 38879: a2 = a2 & ~a3\n 38882: a3 = u64 [a5 + 0xb8]\n 38886: a4 = u64 [a5 + 0xe0]\n 38890: a3 = a3 & ~a4\n 38893: a4 = u64 [a5 + 0xc0]\n 38897: a1 = a4 & ~a1\n 38900: a4 = u64 [a5 + 0xc8]\n 38904: a0 = a4 & ~a0\n 38907: a4 = u64 [a5 + 0xf8]\n 38911: a3 = a3 | a4\n 38914: a5 = s1 + 0x200\n 38918: a4 = u64 [a5]\n 38920: a2 = a2 | a4\n 38923: a4 = u64 [a5 + 0x8]\n 38926: a0 = a0 | a4\n 38929: a4 = u64 [a5 + 0x10]\n 38932: a1 = a1 | a4\n 38935: a4 = s1 + 0x4198\n 38939: a5 = a4 + 0x600\n 38943: u64 [a5 + 0x60] = a1\n 38946: u64 [a5 + 0x58] = a0\n 38949: u64 [a5 + 0x50] = a2\n 38952: u64 [a5 + 0x48] = a3\n 38955: a0 = 0x47e0\n 38959: fallthrough\n      : @1246 (gas: 3)\n 38960: a1 = s1 + a0\n 38963: a0 = u64 [s1 + 0xb0]\n 38967: ra = 1322, jump @28\n      : @1247 [@dyn 661] (gas: 3)\n 38974: a1 = u64 [s1 + 0xe8]\n 38978: a0 = a1 + 0x5\n 38981: t0 = 1324, jump @1753\n      : @1248 [@dyn 662] (gas: 7)\n 38987: u64 [a5 + 0x68] = a0\n 38990: u64 [a5 + 0x70] = a2\n 38993: u64 [a5 + 0x78] = a3\n 38996: u64 [a5 + 0x80] = a1\n 39000: a0 = s1 + 0x4800\n 39004: a1 = u64 [s1 + 0x178]\n 39008: ra = 1326, jump @28\n      : @1249 [@dyn 663] (gas: 3)\n 39015: a1 = u64 [s1 + 0xe8]\n 39019: a0 = a1 + 0x6\n 39022: t0 = 1328, jump @1753\n      : @1250 [@dyn 664] (gas: 7)\n 39028: u64 [a5 + 0xa0] = a1\n 39032: u64 [a5 + 0x98] = a3\n 39036: u64 [a5 + 0x90] = a2\n 39040: u64 [a5 + 0x88] = a0\n 39044: a0 = s1 + 0x4820\n 39048: a1 = u64 [s1 + 0x170]\n 39052: ra = 1330, jump @28\n      : @1251 [@dyn 665] (gas: 9)\n 39059: a0 = 0x30230\n 39064: u64 [s1 + 0x210] = a0\n 39068: i32 a0 = a0 + 0\n 39070: u64 [s1 + 0x1f0] = a0\n 39074: ra = 0x534\n 39078: ecalli 0 // 'address'\n 39079: a2 = u64 [s1 + 0x210]\n 39083: t0 = 0x536\n 39087: jump @1761\n      : @1252 [@dyn 666] (gas: 2)\n 39090: a2 = u64 [s1 + 0x210]\n 39094: t0 = 1334, jump @1761\n      : @1253 [@dyn 667] (gas: 7)\n 39100: u64 [s1 + 0x208] = a0\n 39104: a1 = a1 >> 0x20\n 39107: u64 [s1 + 0x200] = a1\n 39111: a0 = u64 [s1 + 0x1f0]\n 39115: ra = 0x538\n 39119: ecalli 6 // 'caller'\n 39121: fallthrough\n      : @1254 [@dyn 668] (gas: 5)\n 39122: a2 = u64 [s1 + 0x210]\n 39126: a0 = u64 [a2 + 0x8]\n 39129: a1 = i32 [a2 + 0x10]\n 39132: a2 = u64 [a2]\n 39134: t0 = 1338, jump @1787\n      : @1255 [@dyn 669] (gas: 2)\n 39140: u64 [s1 + 0x1f8] = a1\n 39144: t0 = 1340, jump @1797\n      : @1256 [@dyn 670] (gas: 1)\n 39150: ra = 1342, jump @15\n      : @1257 [@dyn 671] (gas: 37)\n 39157: a0 = u64 [0x30250]\n 39162: a1 = u64 [0x30258]\n 39167: a2 = u64 [0x30260]\n 39172: a3 = u64 [0x30268]\n 39177: a5 = s1 + 0x2198\n 39181: a4 = u64 [s1 + 0x200]\n 39185: u64 [a5 + 0x118] = a4\n 39189: a4 = u64 [s1 + 0x208]\n 39193: u64 [a5 + 0x110] = a4\n 39197: a4 = u64 [s1 + 0x218]\n 39201: u64 [a5 + 0x108] = a4\n 39205: a4 = u64 [s1 + 0x1e0]\n 39209: u64 [a5 + 0x138] = a4\n 39213: a4 = u64 [s1 + 0x1e8]\n 39217: u64 [a5 + 0x130] = a4\n 39221: a4 = u64 [s1 + 0x1f8]\n 39225: u64 [a5 + 0x128] = a4\n 39229: a4 = u64 [s1 + 0x158]\n 39233: u64 [a5 + 0x100] = a4\n 39237: a4 = u64 [s1 + 0x150]\n 39241: u64 [a5 + 0xf8] = a4\n 39245: a4 = u64 [s1 + 0x148]\n 39249: u64 [a5 + 0xf0] = a4\n 39253: a4 = u64 [s1 + 0x140]\n 39257: u64 [a5 + 0xe8] = a4\n 39261: u64 [a5 + 288] = 0\n 39265: a4 = a5 + 0x100\n 39269: u64 [a4 + 0x60] = a3\n 39272: u64 [a4 + 0x58] = a2\n 39275: u64 [a4 + 0x50] = a1\n 39278: u64 [a4 + 0x48] = a0\n 39281: a0 = s1 + 0x22e0\n 39285: a1 = s1 + 0x22c0\n 39289: a2 = s1 + 0x22a0\n 39293: a3 = s1 + 0x2280\n 39297: u64 [a5 + 320] = 0\n 39301: ra = 1344, jump @1661\n      : @1258 [@dyn 672] (gas: 3)\n 39307: a0 = s1 + 0x2260\n 39311: a1 = 0x40\n 39314: ra = 1346, jump @22\n      : @1259 [@dyn 673] (gas: 3)\n 39321: t0 = 0x544\n 39325: a1 = s1 + 0x2198\n 39329: fallthrough\n      : @1260 [@dyn 674] (gas: 17)\n 39330: a2 = u64 [a1 + 0xe0]\n 39334: a3 = u64 [a1 + 0xd8]\n 39338: a0 = u64 [a1 + 0xd0]\n 39342: a1 = u64 [a1 + 0xc8]\n 39346: a4 = s1 + 0x200\n 39350: u64 [a4 + 0x8] = a0\n 39353: u64 [a4] = a2\n 39355: a0 = a0 | a2\n 39358: u64 [a4 + 0x18] = a1\n 39361: a1 = a1 | a3\n 39364: a1 = a1 | a0\n 39367: a1 = a1 >> 0x20\n 39370: u64 [s1 + 0x1f8] = a3\n 39374: a0 = a0 | a3\n 39377: a0 = a0 << 0x20\n 39380: a0 = a0 | a1\n 39383: jump @1262 if a0 == 0\n      : @1261 (gas: 1)\n 39386: jump @576\n      : @1262 (gas: 8)\n 39389: a2 = s1 + 0x2198\n 39393: u64 [a2 + 192] = 0\n 39397: u64 [a2 + 184] = 0\n 39401: u64 [a2 + 176] = 0\n 39405: a1 = s1 + 0x2240\n 39409: u64 [a2 + 168] = 0x60\n 39414: a0 = u64 [s1 + 0x218]\n 39418: ra = 1350, jump @24\n      : @1263 [@dyn 675] (gas: 39)\n 39425: a1 = u64 [s1 + 0x218]\n 39429: a0 = a1 + 0x60\n 39432: a1 = a0 <u a1\n 39435: a3 = u64 [s1 + 0x208]\n 39439: a2 = a3 + a1\n 39442: a3 = a2 <u a3\n 39445: a3 = a1 if a1 == 0\n 39448: a1 = u64 [s1 + 0x1f8]\n 39452: a3 = a3 + a1\n 39455: a4 = a3 <u a1\n 39458: a1 = u64 [s1 + 0x200]\n 39462: a4 = a4 + a1\n 39465: a1 = s1 + 0x2198\n 39469: u64 [a1 + 0x30] = a2\n 39472: u64 [a1 + 0x28] = a0\n 39475: a0 = u64 [s1 + 0x130]\n 39479: u64 [a1 + 0x60] = a0\n 39482: a0 = u64 [s1 + 0x138]\n 39486: u64 [a1 + 0x58] = a0\n 39489: a0 = u64 [s1 + 0x180]\n 39493: u64 [a1 + 0x50] = a0\n 39496: a0 = u64 [s1 + 0x188]\n 39500: u64 [a1 + 0x48] = a0\n 39503: a0 = u64 [s1 + 0x110]\n 39507: u64 [a1 + 0x80] = a0\n 39511: a0 = u64 [s1 + 0x118]\n 39515: u64 [a1 + 0x78] = a0\n 39518: a0 = u64 [s1 + 0x120]\n 39522: u64 [a1 + 0x70] = a0\n 39525: a0 = u64 [s1 + 0x128]\n 39529: u64 [a1 + 0x68] = a0\n 39532: u64 [a1 + 0x38] = a3\n 39535: a5 = a1\n 39537: a0 = s1 + 0x2220\n 39541: a1 = s1 + 0x2200\n 39545: a2 = s1 + 0x21e0\n 39549: a3 = s1 + 0x21c0\n 39553: u64 [a5 + 0x40] = a4\n 39556: ra = 1352, jump @1610\n      : @1264 [@dyn 676] (gas: 15)\n 39562: a3 = s1 + 0x100\n 39566: a0 = u64 [a3 + 0xf8]\n 39570: a4 = s1 + 0x200\n 39574: a2 = u64 [a4]\n 39576: a2 = a2 | a0\n 39579: a0 = 0x100000000\n 39589: u64 [a3 + 0xe0] = a0\n 39593: a0 = 0xffffffe0\n 39603: a1 = u64 [a4 + 0x18]\n 39606: a0 = a1 <u a0\n 39609: a1 = u64 [a4 + 0x8]\n 39612: a0 = 0 if a1 != 0\n 39614: u64 [a3 + 0xe8] = a2\n 39618: a0 = 0 if a2 != 0\n 39620: jump @1266 if a0 != 0\n      : @1265 (gas: 1)\n 39623: jump @576\n      : @1266 (gas: 21)\n 39626: a2 = s1 + 0x2198\n 39630: a0 = u64 [a2 + 0xa0]\n 39634: u64 [s1 + 0x1c0] = a0\n 39638: a0 = u64 [a2 + 0x98]\n 39642: u64 [s1 + 0x1c8] = a0\n 39646: a0 = u64 [a2 + 0x90]\n 39650: u64 [s1 + 0x1d0] = a0\n 39654: a0 = u64 [a2 + 0x88]\n 39658: u64 [s1 + 0x1d8] = a0\n 39662: a0 = u64 [s1 + 0x218]\n 39666: i32 a0 = a0 + 0x20\n 39669: a1 = u64 [s1 + 0x140]\n 39673: u64 [a2 + 0x8] = a1\n 39676: a1 = u64 [s1 + 0x148]\n 39680: u64 [a2 + 0x10] = a1\n 39683: a1 = u64 [s1 + 0x150]\n 39687: u64 [a2 + 0x18] = a1\n 39690: a1 = s1 + 0x21a0\n 39694: a3 = u64 [s1 + 0x158]\n 39698: u64 [a2 + 0x20] = a3\n 39701: ra = 1354, jump @24\n      : @1267 [@dyn 677] (gas: 9)\n 39708: a0 = u64 [s1 + 0x1e0]\n 39712: a0 = a0 + 0xffffffffffffffc0\n 39715: a1 = u64 [s1 + 0x218]\n 39719: a0 = a1 <u a0\n 39722: a1 = u64 [s1 + 0x208]\n 39726: a0 = 0 if a1 != 0\n 39728: a1 = u64 [s1 + 0x1e8]\n 39732: a0 = 0 if a1 != 0\n 39734: jump @1269 if a0 != 0\n      : @1268 (gas: 1)\n 39737: jump @576\n      : @1269 (gas: 33)\n 39740: a5 = u64 [s1 + 0x218]\n 39744: a0 = u64 [s1 + 0x1d8]\n 39748: t1 = a0 <u a5\n 39751: t0 = a0\n 39753: a3 = u64 [s1 + 0x208]\n 39757: a0 = u64 [s1 + 0x1d0]\n 39761: a1 = a0 ^ a3\n 39764: a2 = a0 <u a3\n 39767: ra = a3\n 39769: a2 = t1 if a1 == 0\n 39772: a3 = u64 [s1 + 0x1f8]\n 39776: a4 = u64 [s1 + 0x1c8]\n 39780: a1 = a4 - a3\n 39783: t2 = a4 <u a3\n 39786: a3 = u64 [s1 + 0x200]\n 39790: a4 = u64 [s1 + 0x1c0]\n 39794: a4 = a4 - a3\n 39797: a4 = a4 - t2\n 39800: a3 = a1 <u a2\n 39803: a4 = a4 - a3\n 39806: a1 = a1 - a2\n 39809: a2 = a0 - ra\n 39812: a2 = a2 - t1\n 39815: a3 = t0 - a5\n 39818: i32 a0 = a5 + 0x40\n 39821: a5 = s1 + 0x1998\n 39825: u64 [a5 + 0x7e8] = a3\n 39829: u64 [a5 + 0x7f0] = a2\n 39833: u64 [a5 + 0x7f8] = a1\n 39837: a1 = s1 + 0x2180\n 39841: a2 = s1 + 0x2198\n 39845: u64 [a2] = a4\n 39847: ra = 1356, jump @24\n      : @1270 [@dyn 678] (gas: 12)\n 39854: a0 = u64 [s1 + 0x1f0]\n 39858: ecalli 6 // 'caller'\n 39860: a0 = u64 [s1 + 0x210]\n 39864: a1 = u32 [a0 + 0x10]\n 39867: u64 [s1 + 0x1f0] = a1\n 39871: a1 = u64 [a0 + 0x8]\n 39874: u64 [s1 + 0x1e8] = a1\n 39878: a0 = u64 [a0]\n 39880: u64 [s1 + 0x210] = a0\n 39884: t0 = 0x54e\n 39888: a1 = s1 + 0x1998\n 39892: fallthrough\n      : @1271 [@dyn 679] (gas: 22)\n 39893: a0 = u64 [s1 + 0x1c0]\n 39897: a2 = a1 + 0x700\n 39901: u64 [a2 + 0xa0] = a0\n 39905: a0 = u64 [s1 + 0x1c8]\n 39909: u64 [a2 + 0x98] = a0\n 39913: a0 = u64 [s1 + 0x1d0]\n 39917: u64 [a2 + 0x90] = a0\n 39921: a0 = u64 [s1 + 0x1d8]\n 39925: u64 [a2 + 0x88] = a0\n 39929: a0 = u64 [s1 + 0x198]\n 39933: u64 [a2 + 0xc0] = a0\n 39937: a0 = u64 [s1 + 0x1a0]\n 39941: u64 [a2 + 0xb8] = a0\n 39945: a0 = u64 [s1 + 0x1a8]\n 39949: u64 [a2 + 0xb0] = a0\n 39953: a4 = a1\n 39955: a0 = s1 + 0x2160\n 39959: a1 = s1 + 0x2140\n 39963: a2 = s1 + 0x2120\n 39967: a3 = u64 [s1 + 0x1b0]\n 39971: u64 [a4 + 0x7a8] = a3\n 39975: ra = 1360, jump @1527\n      : @1272 [@dyn 680] (gas: 2)\n 39981: a1 = s1 + 0x1998\n 39985: fallthrough\n      : @1273 (gas: 31)\n 39986: a0 = u64 [a1 + 0x7d0]\n 39990: t0 = u64 [a1 + 0x7e0]\n 39994: t1 = u64 [a1 + 0x7c8]\n 39998: a3 = u64 [a1 + 0x7d8]\n 40002: a1 = u64 [s1 + 0x208]\n 40006: a4 = a0 ^ a1\n 40009: a5 = a0 <u a1\n 40012: t2 = a1\n 40014: ra = u64 [s1 + 0x218]\n 40018: a1 = t1 <u ra\n 40021: a5 = a1 if a4 == 0\n 40024: a2 = u64 [s1 + 0x1f8]\n 40028: a4 = a3 - a2\n 40031: a3 = a3 <u a2\n 40034: a2 = u64 [s1 + 0x200]\n 40038: a2 = t0 - a2\n 40041: a2 = a2 - a3\n 40044: a3 = a4 <u a5\n 40047: a2 = a2 - a3\n 40050: a4 = a4 - a5\n 40053: a0 = a0 - t2\n 40056: a0 = a0 - a1\n 40059: a1 = t1 - ra\n 40062: a0 = a0 | a2\n 40065: a2 = a1 | a4\n 40068: a2 = a2 | a0\n 40071: a0 = a0 | a4\n 40074: a2 = a2 >> 0x20\n 40077: a0 = a0 << 0x20\n 40080: a0 = a0 | a2\n 40083: jump @1275 if a0 == 0\n      : @1274 (gas: 1)\n 40086: jump @576\n      : @1275 (gas: 73)\n 40089: a0 = u64 [s1 + 0x1e8]\n 40093: a2 = reverse a0\n 40095: a0 = a2 << 0x20\n 40098: a3 = u64 [s1 + 0x1f0]\n 40102: a3 = reverse a3\n 40104: a3 = a3 >> 0x20\n 40107: t0 = a3 | a0\n 40110: a0 = u64 [s1 + 0x210]\n 40114: a3 = reverse a0\n 40116: a4 = a3 << 0x20\n 40119: a2 = a2 >> 0x20\n 40122: t1 = a4 | a2\n 40125: t2 = a3 >> 0x20\n 40128: a3 = s1 + 0x1998\n 40132: a0 = u64 [s1 + 0x160]\n 40136: u64 [a3 + 0x708] = a0\n 40140: a0 = u64 [s1 + 0x168]\n 40144: u64 [a3 + 0x710] = a0\n 40148: a4 = u64 [0x20120]\n 40153: a5 = u64 [0x20128]\n 40158: a0 = u64 [0x20130]\n 40163: a2 = u64 [0x20138]\n 40168: u64 [a3 + 0x780] = a4\n 40172: a4 = a3 + 0x700\n 40176: u64 [a4 + 0x78] = a5\n 40179: u64 [a4 + 0x70] = a0\n 40182: u64 [a4 + 0x68] = a2\n 40185: u64 [a3 + 1824] = 0\n 40189: u64 [a3 + 1856] = 0\n 40193: a0 = u64 [s1 + 0xd8]\n 40197: u64 [a4 + 0x48] = a0\n 40200: a0 = u64 [s1 + 0xd0]\n 40204: u64 [a4 + 0x50] = a0\n 40207: a0 = u64 [s1 + 0x100]\n 40211: u64 [a4 + 0x18] = a0\n 40214: u64 [a3 + 0x738] = t2\n 40218: a0 = u64 [s1 + 0xc8]\n 40222: u64 [a4 + 0x58] = a0\n 40225: u64 [a3 + 0x730] = t1\n 40229: u64 [a3 + 0x728] = t0\n 40233: t0 = a3\n 40235: a2 = s1 + 0x2100\n 40239: a3 = s1 + 0x20e0\n 40243: a4 = s1 + 0x20c0\n 40247: a5 = s1 + 0x20a0\n 40251: a0 = u64 [s1 + 0xe0]\n 40255: u64 [t0 + 0x760] = a0\n 40259: a0 = u64 [s1 + 0x218]\n 40263: ra = 0x552\n 40267: sp = sp + 0xfffffffffffffee0\n 40271: u64 [sp + 0x118] = ra\n 40275: u64 [sp + 0x110] = s0\n 40279: u64 [sp + 0x108] = s1\n 40283: s0 = sp + 0x120\n 40287: sp = sp & 0xffffffffffffffe0\n 40290: s1 = u64 [a5]\n 40292: u64 [sp + 0x60] = s1\n 40295: s1 = u64 [a5 + 0x8]\n 40298: u64 [sp + 0x68] = s1\n 40301: s1 = u64 [a5 + 0x10]\n 40304: u64 [sp + 0x70] = s1\n 40307: a5 = u64 [a5 + 0x18]\n 40310: u64 [sp + 0x78] = a5\n 40313: a5 = u64 [a4]\n 40315: u64 [sp + 0x38] = a5\n 40318: a5 = u64 [a4 + 0x8]\n 40321: u64 [sp + 0x40] = a5\n 40324: a5 = u64 [a4 + 0x10]\n 40327: u64 [sp + 0x48] = a5\n 40330: a4 = u64 [a4 + 0x18]\n 40333: u64 [sp + 0x50] = a4\n 40336: t0 = 0xe\n 40339: jump @1777\n      : @1276 [@dyn 681] (gas: 3)\n 40342: a0 = s1 + 0x2080\n 40346: a1 = 0x40\n 40349: ra = 1364, jump @22\n      : @1277 [@dyn 682] (gas: 7)\n 40356: a3 = s1 + 0x1998\n 40360: a0 = u64 [a3 + 0x700]\n 40364: a5 = a3 + 0x600\n 40368: a1 = u64 [a5 + 0xf8]\n 40372: a2 = u64 [a5 + 0xf0]\n 40376: a4 = u64 [a5 + 0xe8]\n 40380: t0 = 1366, jump @1773\n      : @1278 [@dyn 683] (gas: 1)\n 40386: jump @1280 if a0 == 0\n      : @1279 (gas: 1)\n 40389: jump @576\n      : @1280 (gas: 16)\n 40392: a3 = a4\n 40394: a0 = s1 + 0x1998\n 40398: a1 = u64 [s1 + 0xd8]\n 40402: a5 = a0 + 0x600\n 40406: u64 [a5 + 0xc8] = a1\n 40410: a1 = u64 [s1 + 0xd0]\n 40414: u64 [a5 + 0xd0] = a1\n 40418: a1 = u64 [s1 + 0xc8]\n 40422: u64 [a5 + 0xd8] = a1\n 40426: a1 = s1 + 0x2060\n 40430: a2 = u64 [s1 + 0xe0]\n 40434: u64 [a5 + 0xe0] = a2\n 40438: a0 = a4\n 40440: u64 [s1 + 0x218] = a3\n 40444: ra = 0x178\n 40448: jump @24\n      : @1281 (gas: 7)\n 40452: a0 = 0xde0b6b3a7640000\n 40462: u64 [s1 + 0x1b0] = a0\n 40466: a0 = u64 [s1 + 0x210]\n 40470: a2 = a0 + 0xffffffffffffff80\n 40473: a0 = u64 [s1 + 0x1c8]\n 40477: a1 = u64 [s1 + 0x208]\n 40481: ra = 1368, jump @1812\n      : @1282 [@dyn 684] (gas: 6)\n 40487: u64 [s1 + 0x1c0] = a0\n 40491: u64 [s1 + 0x1a0] = a1\n 40495: a0 = u64 [s1 + 0x1b8]\n 40499: a1 = u64 [s1 + 0x218]\n 40503: a2 = u64 [s1 + 0x210]\n 40507: ra = 1370, jump @1812\n      : @1283 [@dyn 685] (gas: 7)\n 40513: u64 [s1 + 0x190] = a0\n 40517: u64 [s1 + 0x1a8] = a1\n 40521: a1 = u64 [s1 + 0x210]\n 40525: a2 = 0x80 - a1\n 40529: a0 = u64 [s1 + 0x1c8]\n 40533: a1 = u64 [s1 + 0x208]\n 40537: ra = 1372, jump @1817\n      : @1284 [@dyn 686] (gas: 21)\n 40543: a2 = u64 [s1 + 0x1a8]\n 40547: a1 = a1 | a2\n 40550: a5 = s1 + 0x200\n 40554: a2 = u64 [a5 + 0x10]\n 40557: a4 = a2 <u 0x80\n 40561: u64 [s1 + 0x1a8] = a4\n 40565: a3 = u64 [s1 + 0x1a0]\n 40569: a1 = a3 if a4 == 0\n 40572: a3 = u64 [a5 + 0x18]\n 40575: a3 = a1 if a2 != 0\n 40578: u64 [a5 + 0x18] = a3\n 40581: a1 = u64 [s1 + 0x190]\n 40585: a0 = a0 | a1\n 40588: a1 = u64 [s1 + 0x1c0]\n 40592: a0 = a1 if a4 == 0\n 40595: a1 = u64 [s1 + 0x1b8]\n 40599: a1 = a0 if a2 != 0\n 40602: u64 [s1 + 0x1b8] = a1\n 40606: a0 = u64 [s1 + 0x1c8]\n 40610: a1 = u64 [a5 + 0x8]\n 40613: ra = 1374, jump @1812\n      : @1285 [@dyn 687] (gas: 15)\n 40619: t0 = u64 [s1 + 0x1b8]\n 40623: u64 [s1 + 520] = 0\n 40627: u64 [s1 + 448] = 0\n 40631: a3 = s1 + 0x100\n 40635: a2 = u64 [a3 + 0xa8]\n 40639: a1 = 0 if a2 == 0\n 40641: u64 [a3 + 0xc8] = a1\n 40645: a0 = 0 if a2 == 0\n 40647: a1 = u64 [a3 + 0xb0]\n 40651: a2 = a1 + 0xffffffffffffffff\n 40654: u64 [a3 + 0xa8] = a2\n 40658: a2 = a1 >u 0\n 40660: a2 = a2 + 0xffffffffffffffff\n 40663: u64 [a3 + 0xa0] = a2\n 40667: fallthrough\n      : @1286 (gas: 91)\n 40668: u64 [s1 + 440] = 0\n 40672: a2 = t0 >> 0x3f\n 40675: ra = u64 [s1 + 0x218]\n 40679: a3 = ra << 0x1\n 40682: a3 = a3 | a2\n 40685: a2 = t0 << 0x1\n 40688: a1 = u64 [s1 + 0x1d8]\n 40692: a4 = a1 >> 0x3f\n 40695: t2 = a2 | a4\n 40698: a2 = u64 [s1 + 0x1a0]\n 40702: a4 = a2 ^ a3\n 40705: t1 = a2 <u a3\n 40708: a5 = u64 [s1 + 0x1a8]\n 40712: t0 = a5 <u t2\n 40715: t0 = t1 if a4 != 0\n 40718: a5 = u64 [s1 + 0x1c8]\n 40722: a5 = a5 << 0x1\n 40725: a4 = a0 >> 0x3f\n 40728: a4 = a4 | a5\n 40731: u64 [s1 + 0x1c8] = a4\n 40735: a4 = ra >> 0x3f\n 40738: a0 = a0 << 0x1\n 40741: a4 = a4 | a0\n 40744: a0 = a1 << 0x1\n 40747: a1 = u64 [s1 + 0x1e0]\n 40751: a5 = a1 >> 0x3f\n 40754: a0 = a0 | a5\n 40757: u64 [s1 + 0x218] = a0\n 40761: a5 = a1 << 0x1\n 40764: a0 = u64 [s1 + 0x1d0]\n 40768: a1 = a0 >> 0x3f\n 40771: t1 = a5 | a1\n 40774: a5 = a0 << 0x1\n 40777: a0 = u64 [s1 + 0x1e8]\n 40781: ra = a0 >> 0x3f\n 40784: a5 = a5 | ra\n 40787: a0 = a0 << 0x1\n 40790: a1 = u64 [s1 + 0x208]\n 40794: a0 = a0 | a1\n 40797: u64 [s1 + 0x1e8] = a0\n 40801: a1 = u64 [s1 + 0x1c0]\n 40805: a0 = a1 | a5\n 40808: u64 [s1 + 0x1d0] = a0\n 40812: a0 = a1 | t1\n 40815: u64 [s1 + 0x1e0] = a0\n 40819: a0 = u64 [s1 + 0x218]\n 40823: a0 = a0 | a1\n 40826: u64 [s1 + 0x1d8] = a0\n 40830: a0 = a2 - a4\n 40833: a0 = a0 <u t0\n 40836: a1 = a2 <u a4\n 40839: t1 = u64 [s1 + 0x1c8]\n 40843: a5 = a2 - t1\n 40846: a5 = a5 - a1\n 40849: a5 = a5 - a0\n 40852: ra = a5 >>a 0x3f\n 40855: a0 = u64 [s1 + 0x1b0]\n 40859: a0 = ra & a0\n 40862: t0 = t2 - a0\n 40865: a1 = t2 <u a0\n 40868: a0 = a3 - a1\n 40871: u64 [s1 + 0x218] = a0\n 40875: a1 = 0 if a3 != 0\n 40877: a0 = a4 - a1\n 40880: a1 = a4 <u a1\n 40883: a1 = t1 - a1\n 40886: u64 [s1 + 0x1c8] = a1\n 40890: a1 = s1 + 0x200\n 40894: a3 = u64 [a1 + 0x10]\n 40897: a5 = u64 [a1]\n 40899: a2 = a3 | a5\n 40902: a2 = a2 <u 0x1\n 40905: a4 = u64 [s1 + 0x1f0]\n 40909: t2 = a4 <u a2\n 40912: a4 = a4 - a2\n 40915: a2 = a3 <u 0x1\n 40918: a5 = a5 - a2\n 40921: a2 = u64 [s1 + 0x1f8]\n 40925: a2 = a2 - t2\n 40928: a3 = a3 + 0xffffffffffffffff\n 40931: u64 [a1] = a5\n 40933: u64 [s1 + 0x1f8] = a2\n 40937: a2 = a2 | a5\n 40940: u64 [a1 + 0x10] = a3\n 40943: a3 = a3 | a4\n 40946: a2 = a2 | a3\n 40949: a3 = ra & 0x1\n 40952: u64 [a1 + 0x8] = a3\n 40955: u64 [s1 + 0x1f0] = a4\n 40959: u64 [s1 + 448] = 0\n 40963: jump @1286 if a2 != 0\n      : @1287 (gas: 26)\n 40967: a2 = u64 [s1 + 0x1e0]\n 40971: a0 = a2 >> 0x3f\n 40974: a1 = u64 [s1 + 0x1d8]\n 40978: a1 = a1 << 0x1\n 40981: a0 = a0 | a1\n 40984: a3 = u64 [s1 + 0x1d0]\n 40988: a1 = a3 >> 0x3f\n 40991: a2 = a2 << 0x1\n 40994: a1 = a1 | a2\n 40997: a4 = u64 [s1 + 0x1e8]\n 41001: a2 = a4 >> 0x3f\n 41004: a3 = a3 << 0x1\n 41007: a4 = a4 << 0x1\n 41010: a5 = u64 [s1 + 0x208]\n 41014: a4 = a4 | a5\n 41017: u64 [s1 + 0x210] = a4\n 41021: a5 = s1 + 0x100\n 41025: a4 = u64 [a5 + 0xb8]\n 41029: a2 = a2 | a4\n 41032: a2 = a2 | a3\n 41035: u64 [s1 + 0x200] = a2\n 41039: a1 = a1 | a4\n 41042: u64 [a5 + 0xf8] = a1\n 41046: a0 = a0 | a4\n 41049: u64 [a5 + 0xf0] = a0\n 41053: fallthrough\n      : @1288 (gas: 7)\n 41054: a0 = 0x30230\n 41059: u64 [s1 + 0x218] = a0\n 41063: i32 a0 = a0 + 0\n 41065: u64 [s1 + 0x1d8] = a0\n 41069: ra = 0x560\n 41073: ecalli 0 // 'address'\n 41074: fallthrough\n      : @1289 [@dyn 688] (gas: 5)\n 41075: a2 = u64 [s1 + 0x218]\n 41079: a0 = u64 [a2 + 0x8]\n 41082: a1 = i32 [a2 + 0x10]\n 41085: a2 = u64 [a2]\n 41087: t0 = 1378, jump @1787\n      : @1290 [@dyn 689] (gas: 2)\n 41093: u64 [s1 + 0x208] = a1\n 41097: t0 = 1380, jump @1797\n      : @1291 [@dyn 690] (gas: 6)\n 41103: a0 = u64 [s1 + 0x1d8]\n 41107: ra = 0x566\n 41111: ecalli 6 // 'caller'\n 41113: a2 = u64 [s1 + 0x218]\n 41117: t0 = 0x568\n 41121: jump @1761\n      : @1292 [@dyn 691] (gas: 2)\n 41124: a2 = u64 [s1 + 0x218]\n 41128: t0 = 1384, jump @1761\n      : @1293 [@dyn 692] (gas: 4)\n 41134: u64 [s1 + 0x1d8] = a0\n 41138: a1 = a1 >> 0x20\n 41141: u64 [s1 + 0x1d0] = a1\n 41145: ra = 1386, jump @15\n      : @1294 [@dyn 693] (gas: 37)\n 41152: a0 = u64 [0x30250]\n 41157: a2 = u64 [0x30258]\n 41162: a3 = u64 [0x30260]\n 41167: a1 = u64 [0x30268]\n 41172: a5 = s1 + 0x2998\n 41176: a4 = u64 [s1 + 0x1f0]\n 41180: u64 [a5 + 0x5a0] = a4\n 41184: a4 = u64 [s1 + 0x1f8]\n 41188: u64 [a5 + 0x598] = a4\n 41192: a4 = u64 [s1 + 0x200]\n 41196: u64 [a5 + 0x590] = a4\n 41200: a4 = u64 [s1 + 0x210]\n 41204: u64 [a5 + 0x588] = a4\n 41208: a4 = u64 [s1 + 0x1e0]\n 41212: u64 [a5 + 0x5b8] = a4\n 41216: a4 = u64 [s1 + 0x1e8]\n 41220: u64 [a5 + 0x5b0] = a4\n 41224: a4 = u64 [s1 + 0x208]\n 41228: u64 [a5 + 0x5a8] = a4\n 41232: a4 = u64 [s1 + 0x1d0]\n 41236: u64 [a5 + 0x5d8] = a4\n 41240: a4 = u64 [s1 + 0x1d8]\n 41244: u64 [a5 + 0x5d0] = a4\n 41248: a4 = u64 [s1 + 0x218]\n 41252: u64 [a5 + 0x5c8] = a4\n 41256: u64 [a5 + 1472] = 0\n 41260: u64 [a5 + 0x600] = a1\n 41264: a1 = a5 + 0x500\n 41268: u64 [a1 + 0xf8] = a3\n 41272: u64 [a1 + 0xf0] = a2\n 41276: u64 [a1 + 0xe8] = a0\n 41280: a0 = s1 + 0x2f80\n 41284: a1 = s1 + 0x2f60\n 41288: a2 = s1 + 0x2f40\n 41292: a3 = s1 + 0x2f20\n 41296: u64 [a5 + 1504] = 0\n 41300: ra = 1388, jump @1661\n      : @1295 [@dyn 694] (gas: 3)\n 41306: a0 = s1 + 0x2f00\n 41310: a1 = 0x40\n 41313: ra = 1390, jump @22\n      : @1296 [@dyn 695] (gas: 3)\n 41320: a0 = s1 + 0x2998\n 41324: a2 = a0 + 0x500\n 41328: t0 = 1392, jump @1801\n      : @1297 [@dyn 696] (gas: 5)\n 41334: u64 [s1 + 0x218] = a0\n 41338: a0 = s1 + 0x5000\n 41342: i32 a0 = a0 + 0xfffffffffffffb40\n 41346: ecalli 12 // 'now'\n 41348: fallthrough\n      : @1298 (gas: 14)\n 41349: a3 = s1 + 0x200\n 41353: a0 = u64 [a3 + 0x10]\n 41356: a1 = u64 [a3]\n 41358: a0 = a0 | a1\n 41361: a1 = u64 [a3 + 0x18]\n 41364: a5 = a1\n 41366: a2 = u64 [a3 + 0x8]\n 41369: a1 = a1 | a2\n 41372: a1 = a1 | a0\n 41375: a1 = a1 >> 0x20\n 41378: a0 = a0 | a2\n 41381: a0 = a0 << 0x20\n 41384: a0 = a0 | a1\n 41387: jump @1300 if a0 == 0\n      : @1299 (gas: 1)\n 41390: jump @576\n      : @1300 (gas: 15)\n 41393: a3 = s1 + 0x4998\n 41397: a4 = a3 + 0x100\n 41401: a0 = u64 [a4 + 0xa8]\n 41405: a1 = u64 [a4 + 0xb0]\n 41409: a2 = u64 [a4 + 0xb8]\n 41413: a3 = u64 [a4 + 0xc0]\n 41417: a4 = s1 + 0x2998\n 41421: u64 [a4 + 0x560] = a3\n 41425: a3 = a4 + 0x500\n 41429: u64 [a3 + 0x58] = a2\n 41432: u64 [a3 + 0x50] = a1\n 41435: a1 = s1 + 0x2ee0\n 41439: u64 [a3 + 0x48] = a0\n 41442: a0 = a5\n 41444: ra = 1394, jump @24\n      : @1301 [@dyn 697] (gas: 34)\n 41451: a0 = u64 [s1 + 0x138]\n 41455: a4 = s1 + 0x2998\n 41459: a5 = a4 + 0x500\n 41463: u64 [a5] = a0\n 41465: a0 = u64 [s1 + 0x140]\n 41469: a1 = a4 + 0x400\n 41473: u64 [a1 + 0xf8] = a0\n 41477: a0 = u64 [s1 + 0x148]\n 41481: u64 [a1 + 0xf0] = a0\n 41485: a0 = u64 [s1 + 0x150]\n 41489: u64 [a1 + 0xe8] = a0\n 41493: a0 = u64 [s1 + 0x128]\n 41497: u64 [a5 + 0x20] = a0\n 41500: a0 = u64 [s1 + 0x130]\n 41504: u64 [a5 + 0x18] = a0\n 41507: a0 = u64 [s1 + 0x170]\n 41511: u64 [a5 + 0x10] = a0\n 41514: a0 = u64 [0x20078]\n 41519: a1 = u64 [0x20080]\n 41524: a2 = u64 [0x20088]\n 41529: a3 = u64 [s1 + 0x198]\n 41533: u64 [a5 + 0x8] = a3\n 41536: u64 [a5 + 0x40] = a0\n 41539: u64 [a5 + 0x38] = a1\n 41542: u64 [a5 + 0x30] = a2\n 41545: a5 = a4\n 41547: a0 = u64 [0x20090]\n 41552: a1 = 0x20\n 41555: a2 = s1 + 0x2ec0\n 41559: a3 = s1 + 0x2ea0\n 41563: a4 = s1 + 0x2e80\n 41567: u64 [a5 + 0x528] = a0\n 41571: a0 = u64 [s1 + 0x218]\n 41575: ra = 1396, jump @31\n      : @1302 [@dyn 698] (gas: 7)\n 41582: a0 = 0\n 41584: a1 = u64 [s1 + 0x160]\n 41588: a2 = 0\n 41590: ra = 0x5c2\n 41594: ecalli 16 // 'seal_return'\n 41596: t0 = 0x5c4\n 41600: jump @1782\n      : @1303 (gas: 4)\n 41603: a1 = 0x20230\n 41608: i32 a1 = a1 + 0\n 41610: a0 = 0x1\n 41613: jump @1411\n      : @1304 (gas: 4)\n 41616: a1 = 0x20230\n 41621: i32 a1 = a1 + 0\n 41623: a0 = 0x1\n 41626: jump @1411\n      : @1305 (gas: 10)\n 41629: a0 = 0xffffffff\n 41639: u64 [s1 + 0x1f0] = a0\n 41643: a1 = s1 + 0x4198\n 41647: u64 [a1 + 1760] = 0\n 41651: u64 [a1 + 1752] = 0\n 41655: u64 [a1 + 1744] = 0\n 41659: u64 [a1 + 1736] = 0x5\n 41664: a0 = s1 + 0x2aa0\n 41668: a1 = s1 + 0x4860\n 41672: ra = 1398, jump @26\n      : @1306 [@dyn 699] (gas: 37)\n 41679: a5 = s1 + 0x2998\n 41683: a4 = a5 + 0x100\n 41687: a0 = u64 [a4 + 0x8]\n 41690: a1 = u64 [a4 + 0x10]\n 41693: a3 = u64 [a4 + 0x18]\n 41696: u64 [s1 + 0x1f8] = a3\n 41700: a2 = u64 [a4 + 0x20]\n 41703: u64 [s1 + 0x200] = a2\n 41707: a0 = a0 & 0xffffffffffffffff\n 41710: a1 = a1 & 0xffffffffffffffff\n 41713: a2 = u64 [s1 + 0x1f0]\n 41717: a2 = a2 & a3\n 41720: u64 [a5 + 192] = 0\n 41724: a3 = u64 [s1 + 0x208]\n 41728: u64 [a5 + 0xb8] = a3\n 41732: a3 = u64 [s1 + 0x210]\n 41736: u64 [a5 + 0xb0] = a3\n 41740: a3 = u64 [s1 + 0x218]\n 41744: u64 [a5 + 0xa8] = a3\n 41748: u64 [a5 + 224] = 0\n 41752: u64 [a5 + 0xd8] = a2\n 41756: u64 [a5 + 0xd0] = a1\n 41760: a1 = u64 [0x200d0]\n 41765: a2 = u64 [0x200d8]\n 41770: a3 = u64 [0x200e0]\n 41775: u64 [a5 + 0xc8] = a0\n 41779: u64 [a4] = a1\n 41781: u64 [a5 + 0xf8] = a2\n 41785: u64 [a5 + 0xf0] = a3\n 41789: a0 = u64 [0x200e8]\n 41794: a2 = s1 + 0x2a80\n 41798: a3 = s1 + 0x2a60\n 41802: a4 = s1 + 0x2a40\n 41806: u64 [a5 + 0xe8] = a0\n 41810: a0 = 0\n 41812: a1 = 0\n 41814: ra = 1400, jump @31\n      : @1307 [@dyn 700] (gas: 22)\n 41821: a0 = u64 [s1 + 0x1f8]\n 41825: a0 = a0 >> 0x20\n 41828: a0 = a0 << 0x20\n 41831: a3 = s1 + 0x200\n 41835: a1 = u64 [a3 + 0x8]\n 41838: a0 = a0 | a1\n 41841: a1 = s1 + 0x4198\n 41845: u64 [a1 + 1792] = 0\n 41849: u64 [a1 + 1784] = 0\n 41853: u64 [a1 + 1776] = 0\n 41857: u64 [a1 + 1768] = 0x5\n 41862: a2 = u64 [a3]\n 41864: a4 = a1 + 0x700\n 41868: u64 [a4 + 0x20] = a2\n 41871: u64 [a4 + 0x18] = a0\n 41874: a0 = u64 [a3 + 0x10]\n 41877: u64 [a4 + 0x10] = a0\n 41880: a0 = u64 [a3 + 0x18]\n 41883: u64 [a4 + 0x8] = a0\n 41886: a0 = s1 + 0x4880\n 41890: a1 = s1 + 0x48a0\n 41894: ra = 1402, jump @28\n      : @1308 [@dyn 701] (gas: 4)\n 41901: a1 = 0x20230\n 41906: i32 a1 = a1 + 0\n 41908: a0 = 0\n 41910: jump @1411\n      : @1309 (gas: 7)\n 41913: i32 a1 = a1 + 0\n 41915: a0 = 0\n 41917: a2 = 0\n 41919: ra = 0x5c2\n 41923: ecalli 16 // 'seal_return'\n 41925: t0 = 0x5c4\n 41929: jump @1782\n      : @1310 (gas: 4)\n 41932: a1 = 0x20230\n 41937: i32 a1 = a1 + 0\n 41939: a0 = 0x1\n 41942: jump @1411\n      : @1311 (gas: 4)\n 41945: a1 = 0x20230\n 41950: i32 a1 = a1 + 0\n 41952: a0 = 0x1\n 41955: jump @1411\n      : @1312 (gas: 4)\n 41958: a1 = 0x20230\n 41963: i32 a1 = a1 + 0\n 41965: a0 = 0x1\n 41968: jump @1411\n      : @1313 (gas: 4)\n 41971: a1 = 0x20230\n 41976: i32 a1 = a1 + 0\n 41978: a0 = 0x1\n 41981: jump @1411\n      : @1314 (gas: 5)\n 41984: a0 = s1 + 0x1998\n 41988: u64 [a0 + 280] = 0\n 41992: u64 [a0 + 272] = 0\n 41996: u64 [a0 + 264] = 0\n 42000: t0 = 1404, jump @1807\n      : @1315 [@dyn 702] (gas: 5)\n 42006: i32 a1 = a1 + 0xfffffffffffffaa0\n 42010: a1 = a1 + s1\n 42013: u64 [a2 + 0x120] = a0\n 42017: a0 = 0\n 42019: ra = 1406, jump @24\n      : @1316 [@dyn 703] (gas: 3)\n 42026: t0 = 0x580\n 42030: a1 = s1 + 0x1998\n 42034: fallthrough\n      : @1317 [@dyn 704] (gas: 8)\n 42035: u64 [a1 + 256] = 0\n 42039: u64 [a1 + 248] = 0\n 42043: u64 [a1 + 232] = 0x21\n 42048: a2 = a1\n 42050: a0 = 0x4\n 42053: a1 = s1 + 0x1a80\n 42057: u64 [a2 + 240] = 0\n 42061: ra = 1410, jump @24\n      : @1318 [@dyn 705] (gas: 3)\n 42068: a0 = u64 [s1 + 0x138]\n 42072: a0 = i32 [a0]\n 42074: jump @1320 if a0 >u 63\n      : @1319 (gas: 3)\n 42078: a1 = u64 [s1 + 0x138]\n 42082: u32 [a1 + 0] = 0x40\n 42085: fallthrough\n      : @1320 (gas: 5)\n 42086: a0 = 0x1\n 42089: a2 = 0x24\n 42092: a1 = u64 [s1 + 0x130]\n 42096: ecalli 16 // 'seal_return'\n 42098: fallthrough\n      : @1321 (gas: 4)\n 42099: a1 = 0x20230\n 42104: i32 a1 = a1 + 0\n 42106: a0 = 0x1\n 42109: jump @1411\n      : @1322 (gas: 4)\n 42112: a1 = 0x20230\n 42117: i32 a1 = a1 + 0\n 42119: a0 = 0x1\n 42122: jump @1411\n      : @1323 (gas: 10)\n 42125: a0 = s1 + 0x2998\n 42129: u64 [a0 + 760] = 0\n 42133: u64 [a0 + 752] = 0\n 42137: u64 [a0 + 744] = 0\n 42141: a2 = a0\n 42143: a0 = 0x4e487b7100000000\n 42153: a1 = s1 + 0x2c80\n 42157: u64 [a2 + 0x300] = a0\n 42161: a0 = 0\n 42163: ra = 1412, jump @24\n      : @1324 [@dyn 706] (gas: 9)\n 42170: a1 = s1 + 0x2998\n 42174: u64 [a1 + 736] = 0\n 42178: u64 [a1 + 728] = 0\n 42182: u64 [a1 + 712] = 0x21\n 42187: a2 = a1\n 42189: a0 = 0x4\n 42192: a1 = s1 + 0x2c60\n 42196: u64 [a2 + 720] = 0\n 42200: ra = 1414, jump @24\n      : @1325 [@dyn 707] (gas: 3)\n 42207: a0 = u64 [s1 + 0x158]\n 42211: a0 = i32 [a0]\n 42213: jump @1327 if a0 >u 63\n      : @1326 (gas: 3)\n 42217: a1 = u64 [s1 + 0x158]\n 42221: u32 [a1 + 0] = 0x40\n 42224: fallthrough\n      : @1327 (gas: 5)\n 42225: a0 = 0x1\n 42228: a2 = 0x24\n 42231: a1 = u64 [s1 + 0x160]\n 42235: ecalli 16 // 'seal_return'\n 42237: fallthrough\n      : @1328 (gas: 4)\n 42238: a1 = 0x20230\n 42243: i32 a1 = a1 + 0\n 42245: a0 = 0x1\n 42248: jump @1411\n      : @1329 (gas: 4)\n 42251: a1 = 0x20230\n 42256: i32 a1 = a1 + 0\n 42258: a0 = 0x1\n 42261: jump @1411\n      : @1330 (gas: 4)\n 42264: a1 = 0x20230\n 42269: i32 a1 = a1 + 0\n 42271: a0 = 0x1\n 42274: jump @1411\n      : @1331 (gas: 4)\n 42277: a1 = 0x20230\n 42282: i32 a1 = a1 + 0\n 42284: a0 = 0x1\n 42287: jump @1411\n      : @1332 (gas: 4)\n 42290: a1 = 0x20230\n 42295: i32 a1 = a1 + 0\n 42297: a0 = 0x1\n 42300: jump @1411\n      : @1333 (gas: 4)\n 42303: a1 = 0x20230\n 42308: i32 a1 = a1 + 0\n 42310: a0 = 0x1\n 42313: jump @1411\n      : @1334 (gas: 4)\n 42316: a1 = 0x20230\n 42321: i32 a1 = a1 + 0\n 42323: a0 = 0x1\n 42326: jump @1411\n      : @1335 (gas: 4)\n 42329: a1 = 0x20230\n 42334: i32 a1 = a1 + 0\n 42336: a0 = 0x1\n 42339: jump @1411\n      : @1336 (gas: 4)\n 42342: a1 = 0x20230\n 42347: i32 a1 = a1 + 0\n 42349: a0 = 0x1\n 42352: jump @1411\n      : @1337 (gas: 4)\n 42355: a1 = 0x20230\n 42360: i32 a1 = a1 + 0\n 42362: a0 = 0x1\n 42365: jump @1411\n      : @1338 (gas: 4)\n 42368: a1 = 0x20230\n 42373: i32 a1 = a1 + 0\n 42375: a0 = 0x1\n 42378: jump @1411\n      : @1339 (gas: 4)\n 42381: a1 = 0x20230\n 42386: i32 a1 = a1 + 0\n 42388: a0 = 0x1\n 42391: jump @1411\n      : @1340 (gas: 4)\n 42394: a1 = 0x20230\n 42399: i32 a1 = a1 + 0\n 42401: a0 = 0x1\n 42404: jump @1411\n      : @1341 (gas: 4)\n 42407: a1 = 0x20230\n 42412: i32 a1 = a1 + 0\n 42414: a0 = 0x1\n 42417: jump @1411\n      : @1342 (gas: 4)\n 42420: a1 = 0x20230\n 42425: i32 a1 = a1 + 0\n 42427: a0 = 0x1\n 42430: jump @1411\n      : @1343 (gas: 4)\n 42433: a1 = 0x20230\n 42438: i32 a1 = a1 + 0\n 42440: a0 = 0x1\n 42443: jump @1411\n      : @1344 (gas: 5)\n 42446: a1 = 0x20230\n 42451: i32 a1 = a1 + 0\n 42453: a0 = 0x1\n 42456: ecalli 16 // 'seal_return'\n 42458: fallthrough\n      : @1345 (gas: 9)\n 42459: a2 = s1 + 0x1198\n 42463: u64 [a2 + 88] = 0\n 42466: u64 [a2 + 80] = 0\n 42469: a0 = 0x8c379a000000000\n 42479: u64 [a2 + 0x60] = a0\n 42482: a0 = 0x80\n 42486: a1 = s1 + 0x11e0\n 42490: u64 [a2 + 72] = 0\n 42493: ra = 1416, jump @24\n      : @1346 [@dyn 708] (gas: 8)\n 42500: a2 = s1 + 0x1198\n 42504: u64 [a2 + 64] = 0\n 42507: u64 [a2 + 56] = 0\n 42510: u64 [a2 + 40] = 0x20\n 42514: a0 = 0x84\n 42518: a1 = s1 + 0x11c0\n 42522: u64 [a2 + 48] = 0\n 42525: ra = 1418, jump @24\n      : @1347 [@dyn 709] (gas: 8)\n 42532: a2 = s1 + 0x1198\n 42536: u64 [a2 + 32] = 0\n 42539: u64 [a2 + 24] = 0\n 42542: u64 [a2 + 8] = 0x23\n 42546: a0 = 0xa4\n 42550: a1 = s1 + 0x11a0\n 42554: u64 [a2 + 16] = 0\n 42557: ra = 1420, jump @24\n      : @1348 [@dyn 710] (gas: 13)\n 42564: a0 = u64 [0x201c0]\n 42569: a1 = u64 [0x201c8]\n 42574: a3 = s1 + 0x1198\n 42578: u64 [a3] = a0\n 42580: a0 = u64 [0x201d0]\n 42585: a4 = a3 + 0xffffffffffffff00\n 42589: u64 [a4 + 0xf8] = a1\n 42593: a2 = u64 [0x201d8]\n 42598: u64 [a4 + 0xf0] = a0\n 42602: a0 = 0xc4\n 42606: a1 = s1 + 0x1180\n 42610: u64 [a4 + 0xe8] = a2\n 42614: ra = 1422, jump @24\n      : @1349 [@dyn 711] (gas: 10)\n 42621: a0 = 0x696f6e0000000000\n 42631: a2 = s1 + 0x7ff\n 42635: a2 = a2 + 0x199\n 42639: u64 [a2 + 0x7e0] = a0\n 42643: u64 [a2 + 2008] = 0\n 42647: u64 [a2 + 2000] = 0\n 42651: a0 = 0xe4\n 42655: a1 = s1 + 0x1160\n 42659: u64 [a2 + 1992] = 0\n 42663: ra = 1424, jump @24\n      : @1350 [@dyn 712] (gas: 2)\n 42670: a1 = i32 [0x20228]\n 42675: jump @1352 if a1 >u 287\n      : @1351 (gas: 2)\n 42680: u32 [0x20228] = 0x120\n 42687: fallthrough\n      : @1352 (gas: 6)\n 42688: a0 = 0x20230\n 42693: i32 a1 = a0 + 0x80\n 42697: a0 = 0x1\n 42700: a2 = 0x84\n 42704: ecalli 16 // 'seal_return'\n 42706: fallthrough\n      : @1353 (gas: 6)\n 42707: u64 [s1 + 592] = 0\n 42711: u64 [s1 + 584] = 0\n 42715: u64 [s1 + 576] = 0\n 42719: t0 = 0x592\n 42723: a0 = 0x4e487b7100000000\n 42733: fallthrough\n      : @1354 [@dyn 713] (gas: 4)\n 42734: a1 = s1 + 0x240\n 42738: u64 [s1 + 0x258] = a0\n 42742: a0 = 0\n 42744: ra = 1428, jump @24\n      : @1355 [@dyn 714] (gas: 8)\n 42751: u64 [s1 + 568] = 0\n 42755: u64 [s1 + 560] = 0\n 42759: u64 [s1 + 544] = 0x41\n 42764: a0 = 0x4\n 42767: a1 = s1 + 0x220\n 42771: u64 [s1 + 552] = 0\n 42775: ra = 0x5b8\n 42779: jump @24\n      : @1356 (gas: 1)\n 42783: jump @1399 if a0 != 4076725131\n      : @1357 (gas: 12)\n 42791: a0 = s1 + 0x4998\n 42795: u64 [a0 + 864] = 0\n 42799: u64 [a0 + 856] = 0\n 42803: u64 [a0 + 848] = 0\n 42807: u64 [a0 + 840] = 0\n 42811: a0 = s1 + 0x5000\n 42815: i32 a0 = a0 + 0xfffffffffffffce0\n 42819: ra = 0x596\n 42823: ecalli 19 // 'value_transferred'\n 42825: a0 = 0x5000\n 42829: t0 = 0x598\n 42833: jump @1784\n      : @1358 [@dyn 715] (gas: 2)\n 42836: a0 = 0x5000\n 42840: t0 = 1432, jump @1784\n      : @1359 [@dyn 716] (gas: 1)\n 42846: jump @1412 if a0 == 0\n      : @1360 (gas: 4)\n 42850: a1 = 0x20230\n 42855: i32 a1 = a1 + 0\n 42857: a0 = 0x1\n 42860: jump @1411\n      : @1361 (gas: 4)\n 42863: a1 = 0x20230\n 42868: i32 a1 = a1 + 0\n 42870: a0 = 0x1\n 42873: jump @1411\n      : @1362 (gas: 4)\n 42876: a1 = 0x20230\n 42881: i32 a1 = a1 + 0\n 42883: a0 = 0x1\n 42886: jump @1411\n      : @1363 (gas: 4)\n 42889: a1 = 0x20230\n 42894: i32 a1 = a1 + 0\n 42896: a0 = 0x1\n 42899: jump @1411\n      : @1364 (gas: 4)\n 42902: a1 = 0x20230\n 42907: i32 a1 = a1 + 0\n 42909: a0 = 0x1\n 42912: jump @1411\n      : @1365 (gas: 5)\n 42915: a0 = s1 + 0x1198\n 42919: u64 [a0 + 1848] = 0\n 42923: u64 [a0 + 1840] = 0\n 42927: u64 [a0 + 1832] = 0\n 42931: t0 = 1434, jump @1807\n      : @1366 [@dyn 717] (gas: 5)\n 42937: i32 a1 = a1 + 0xfffffffffffff8c0\n 42941: a1 = a1 + s1\n 42944: u64 [a2 + 0x740] = a0\n 42948: a0 = 0\n 42950: ra = 1436, jump @24\n      : @1367 [@dyn 718] (gas: 3)\n 42957: t0 = 0x59e\n 42961: a1 = s1 + 0x1198\n 42965: fallthrough\n      : @1368 [@dyn 719] (gas: 8)\n 42966: u64 [a1 + 1824] = 0\n 42970: u64 [a1 + 1816] = 0\n 42974: u64 [a1 + 1800] = 0x21\n 42979: a2 = a1\n 42981: a0 = 0x4\n 42984: a1 = s1 + 0x18a0\n 42988: u64 [a2 + 1808] = 0\n 42992: ra = 1440, jump @24\n      : @1369 [@dyn 720] (gas: 3)\n 42999: a0 = u64 [s1 + 0x1c8]\n 43003: a0 = i32 [a0]\n 43005: jump @1388 if a0 >u 63\n      : @1370 (gas: 3)\n 43010: a1 = u64 [s1 + 0x1c8]\n 43014: u32 [a1 + 0] = 0x40\n 43017: jump @1388\n      : @1371 (gas: 3)\n 43020: a0 = s1 + 0x1920\n 43024: a1 = u64 [s1 + 0x218]\n 43028: ra = 1442, jump @26\n      : @1372 [@dyn 721] (gas: 2)\n 43035: a0 = 0x1000\n 43039: t0 = 1444, jump @1805\n      : @1373 [@dyn 722] (gas: 15)\n 43045: a0 = u64 [a4 + 0x88]\n 43049: a1 = u64 [a4 + 0x90]\n 43053: a2 = u64 [a4 + 0xa0]\n 43057: a3 = u64 [a4 + 0x98]\n 43061: a0 = a0 & 0xffffffffffffff00\n 43065: a0 = a0 | 0x3\n 43068: a4 = s1 + 0x4198\n 43072: u64 [a4 + 0x300] = a2\n 43076: a2 = a4 + 0x200\n 43080: u64 [a2 + 0xf8] = a3\n 43084: u64 [a2 + 0xf0] = a1\n 43088: u64 [a2 + 0xe8] = a0\n 43092: a1 = s1 + 0x4480\n 43096: a0 = u64 [s1 + 0x218]\n 43100: ra = 1446, jump @28\n      : @1374 [@dyn 723] (gas: 25)\n 43107: a3 = s1 + 0x100\n 43111: a0 = u64 [a3 + 0xd0]\n 43115: a2 = s1 + 0x1198\n 43119: a4 = a2 + 0x700\n 43123: u64 [a4 + 0x60] = a0\n 43126: a0 = u64 [a3 + 0xd8]\n 43130: u64 [a4 + 0x58] = a0\n 43133: a0 = u64 [a3 + 0xe0]\n 43137: u64 [a4 + 0x50] = a0\n 43140: a0 = u64 [0x20180]\n 43145: a1 = u64 [a3 + 0xe8]\n 43149: u64 [a4 + 0x48] = a1\n 43152: a1 = u64 [0x20188]\n 43157: u64 [a4 + 0x80] = a0\n 43161: a0 = u64 [0x20190]\n 43166: u64 [a4 + 0x78] = a1\n 43169: a1 = u64 [0x20198]\n 43174: u64 [a4 + 0x70] = a0\n 43177: a0 = a2\n 43179: a2 = s1 + 0x1900\n 43183: a3 = s1 + 0x18e0\n 43187: u64 [a0 + 0x768] = a1\n 43191: a0 = 0\n 43193: a1 = 0\n 43195: ra = 1448, jump @29\n      : @1375 [@dyn 724] (gas: 7)\n 43202: a0 = 0\n 43204: a1 = u64 [s1 + 0x1f0]\n 43208: a2 = 0\n 43210: ra = 0x5c2\n 43214: ecalli 16 // 'seal_return'\n 43216: t0 = 0x5c4\n 43220: jump @1782\n      : @1376 (gas: 4)\n 43223: a1 = 0x20230\n 43228: i32 a1 = a1 + 0\n 43230: a0 = 0x1\n 43233: jump @1411\n      : @1377 (gas: 4)\n 43236: a1 = 0x20230\n 43241: i32 a1 = a1 + 0\n 43243: a0 = 0x1\n 43246: jump @1411\n      : @1378 (gas: 4)\n 43249: a1 = 0x20230\n 43254: i32 a1 = a1 + 0\n 43256: a0 = 0x1\n 43259: jump @1411\n      : @1379 (gas: 4)\n 43262: a1 = 0x20230\n 43267: i32 a1 = a1 + 0\n 43269: a0 = 0x1\n 43272: jump @1411\n      : @1380 (gas: 4)\n 43275: a1 = 0x20230\n 43280: i32 a1 = a1 + 0\n 43282: a0 = 0x1\n 43285: jump @1411\n      : @1381 (gas: 4)\n 43288: a1 = 0x20230\n 43293: i32 a1 = a1 + 0\n 43295: a0 = 0x1\n 43298: jump @1411\n      : @1382 (gas: 8)\n 43301: a0 = s1 + 0x3198\n 43305: u64 [a0 + 1656] = 0\n 43309: u64 [a0 + 1648] = 0\n 43313: u64 [a0 + 1640] = 0\n 43317: a2 = a0\n 43319: t0 = 0x5aa\n 43323: a0 = 0x4e487b7100000000\n 43333: fallthrough\n      : @1383 [@dyn 725] (gas: 4)\n 43334: a1 = s1 + 0x3800\n 43338: u64 [a2 + 0x680] = a0\n 43342: a0 = 0\n 43344: ra = 1452, jump @24\n      : @1384 [@dyn 726] (gas: 3)\n 43351: t0 = 0x5ae\n 43355: a1 = s1 + 0x3198\n 43359: fallthrough\n      : @1385 [@dyn 727] (gas: 8)\n 43360: u64 [a1 + 1632] = 0\n 43364: u64 [a1 + 1624] = 0\n 43368: u64 [a1 + 1608] = 0x21\n 43373: a2 = a1\n 43375: a0 = 0x4\n 43378: a1 = s1 + 0x37e0\n 43382: u64 [a2 + 1616] = 0\n 43386: ra = 1456, jump @24\n      : @1386 [@dyn 728] (gas: 3)\n 43393: a0 = u64 [s1 + 0x1e8]\n 43397: a0 = i32 [a0]\n 43399: jump @1388 if a0 >u 63\n      : @1387 (gas: 3)\n 43403: a1 = u64 [s1 + 0x1e8]\n 43407: u32 [a1 + 0] = 0x40\n 43410: fallthrough\n      : @1388 (gas: 5)\n 43411: a0 = 0x1\n 43414: a2 = 0x24\n 43417: a1 = u64 [s1 + 0x1f0]\n 43421: ecalli 16 // 'seal_return'\n 43423: fallthrough\n      : @1389 (gas: 4)\n 43424: a1 = 0x20230\n 43429: i32 a1 = a1 + 0\n 43431: a0 = 0x1\n 43434: jump @1411\n      : @1390 (gas: 4)\n 43437: a1 = 0x20230\n 43442: i32 a1 = a1 + 0\n 43444: a0 = 0x1\n 43447: jump @1411\n      : @1391 (gas: 12)\n 43450: a2 = u64 [0x30250]\n 43455: a1 = u64 [0x30258]\n 43460: a0 = u32 [0x30260]\n 43465: a4 = s1 + 0x3998\n 43469: u64 [a4 + 512] = 0\n 43473: a5 = a4 + 0x100\n 43477: u64 [a5 + 0xf8] = a0\n 43481: u64 [a5 + 0xf0] = a1\n 43485: a1 = s1 + 0x3b80\n 43489: u64 [a5 + 0xe8] = a2\n 43493: a0 = a3\n 43495: ra = 1458, jump @24\n      : @1392 [@dyn 729] (gas: 4)\n 43502: a1 = 0x20\n 43505: a0 = u64 [s1 + 0x208]\n 43509: ra = 0x17a\n 43513: jump @36\n      : @1393 (gas: 6)\n 43517: u64 [s1 + 656] = 0\n 43521: u64 [s1 + 648] = 0\n 43525: u64 [s1 + 640] = 0\n 43529: t0 = 0x5b4\n 43533: a0 = 0x4e487b7100000000\n 43543: fallthrough\n      : @1394 [@dyn 730] (gas: 4)\n 43544: a1 = s1 + 0x280\n 43548: u64 [s1 + 0x298] = a0\n 43552: a0 = 0\n 43554: ra = 1462, jump @24\n      : @1395 [@dyn 731] (gas: 7)\n 43561: u64 [s1 + 632] = 0\n 43565: u64 [s1 + 624] = 0\n 43569: u64 [s1 + 608] = 0x41\n 43574: a0 = 0x4\n 43577: a1 = s1 + 0x260\n 43581: u64 [s1 + 616] = 0\n 43585: ra = 1464, jump @24\n      : @1396 [@dyn 732] (gas: 3)\n 43592: a0 = u64 [s1 + 0xf8]\n 43596: a0 = i32 [a0]\n 43598: jump @1398 if a0 >u 63\n      : @1397 (gas: 3)\n 43602: a1 = u64 [s1 + 0xf8]\n 43606: u32 [a1 + 0] = 0x40\n 43609: fallthrough\n      : @1398 (gas: 5)\n 43610: a0 = 0x1\n 43613: a2 = 0x24\n 43616: a1 = u64 [s1 + 0x100]\n 43620: ecalli 16 // 'seal_return'\n 43622: fallthrough\n      : @1399 (gas: 1)\n 43623: jump @1404 if a0 != 331239326\n      : @1400 (gas: 12)\n 43630: a0 = s1 + 0x4198\n 43634: u64 [a0 + 352] = 0\n 43638: u64 [a0 + 344] = 0\n 43642: u64 [a0 + 336] = 0\n 43646: u64 [a0 + 328] = 0\n 43650: a0 = s1 + 0x4000\n 43654: i32 a0 = a0 + 0x2e0\n 43658: ra = 0x5ba\n 43662: ecalli 19 // 'value_transferred'\n 43664: a0 = 0x4000\n 43668: t0 = 0x5bc\n 43672: jump @1804\n      : @1401 [@dyn 733] (gas: 2)\n 43675: a0 = 0x4000\n 43679: t0 = 1468, jump @1804\n      : @1402 [@dyn 734] (gas: 8)\n 43685: a0 = u64 [a4 + 0x58]\n 43688: a1 = u64 [a4 + 0x60]\n 43691: a2 = u64 [a4 + 0x50]\n 43694: a3 = u64 [a4 + 0x48]\n 43697: a1 = a1 | a2\n 43700: a0 = a0 | a3\n 43703: a0 = a0 | a1\n 43706: jump @1418 if a0 == 0\n      : @1403 (gas: 4)\n 43710: a1 = 0x20230\n 43715: i32 a1 = a1 + 0\n 43717: a0 = 0x1\n 43720: jump @1411\n      : @1404 (gas: 1)\n 43723: jump @1409 if a0 != 1901074598\n      : @1405 (gas: 12)\n 43730: a0 = s1 + 0x4198\n 43734: u64 [a0 + 1856] = 0\n 43738: u64 [a0 + 1848] = 0\n 43742: u64 [a0 + 1840] = 0\n 43746: u64 [a0 + 1832] = 0\n 43750: a0 = s1 + 0x5000\n 43754: i32 a0 = a0 + 0xfffffffffffff8c0\n 43758: ra = 0x5be\n 43762: ecalli 19 // 'value_transferred'\n 43764: a0 = 0x4000\n 43768: t0 = 0x5c0\n 43772: jump @1805\n      : @1406 [@dyn 735] (gas: 2)\n 43775: a0 = 0x4000\n 43779: t0 = 1472, jump @1805\n      : @1407 [@dyn 736] (gas: 8)\n 43785: a0 = u64 [a4 + 0x38]\n 43788: a1 = u64 [a4 + 0x40]\n 43791: a2 = u64 [a4 + 0x30]\n 43794: a3 = u64 [a4 + 0x28]\n 43797: a1 = a1 | a2\n 43800: a0 = a0 | a3\n 43803: a0 = a0 | a1\n 43806: jump @1444 if a0 == 0\n      : @1408 (gas: 4)\n 43810: a1 = 0x20230\n 43815: i32 a1 = a1 + 0\n 43817: a0 = 0x1\n 43820: jump @1411\n      : @1409 (gas: 4)\n 43822: a1 = 0x20230\n 43827: i32 a1 = a1 + 0\n 43829: a0 = 0x1\n 43832: jump @1411\n      : @1410 (gas: 7)\n 43834: i32 a1 = a1 + 0\n 43836: a0 = 0x1\n 43839: a2 = 0\n 43841: ra = 0x5c2\n 43845: ecalli 16 // 'seal_return'\n 43847: t0 = 0x5c4\n 43851: jump @1782\n      : @1411 (gas: 5)\n 43854: a2 = 0\n 43856: ra = 0x5c2\n 43860: ecalli 16 // 'seal_return'\n 43862: t0 = 0x5c4\n 43866: jump @1782\n      : @1412 [@dyn 737] (gas: 1)\n 43869: t0 = 1476, jump @1782\n      : @1413 [@dyn 738] (gas: 1)\n 43875: jump @1421 if a1 <u a0\n      : @1414 (gas: 2)\n 43878: a1 = 0x20230\n 43883: jump @1410\n      : @1415 (gas: 6)\n 43885: u64 [s1 + 720] = 0\n 43889: u64 [s1 + 712] = 0\n 43893: u64 [s1 + 704] = 0\n 43897: t0 = 0x5c6\n 43901: a0 = 0x4e487b7100000000\n 43911: fallthrough\n      : @1416 [@dyn 739] (gas: 4)\n 43912: a1 = s1 + 0x2c0\n 43916: u64 [s1 + 0x2d8] = a0\n 43920: a0 = 0\n 43922: ra = 1480, jump @24\n      : @1417 [@dyn 740] (gas: 8)\n 43929: u64 [s1 + 696] = 0\n 43933: u64 [s1 + 688] = 0\n 43937: u64 [s1 + 672] = 0x41\n 43942: a0 = 0x4\n 43945: a1 = s1 + 0x2a0\n 43949: u64 [s1 + 680] = 0\n 43953: ra = 0x5b8\n 43957: jump @24\n      : @1418 (gas: 1)\n 43961: t0 = 1482, jump @1782\n      : @1419 [@dyn 741] (gas: 1)\n 43967: jump @1446 if a1 <u a0\n      : @1420 (gas: 2)\n 43971: a1 = 0x20230\n 43976: jump @1410\n      : @1421 (gas: 2)\n 43979: a0 = s1 + 0x3c80\n 43983: ra = 1484, jump @1544\n      : @1422 [@dyn 742] (gas: 8)\n 43989: a0 = s1 + 0x3998\n 43993: a1 = u64 [a0 + 0x2f0]\n 43997: u64 [s1 + 0x210] = a1\n 44001: a1 = u64 [a0 + 0x2e8]\n 44005: u64 [s1 + 0x218] = a1\n 44009: a0 = u32 [a0 + 0x2f8]\n 44013: u64 [s1 + 0x208] = a0\n 44017: ra = 1486, jump @1680\n      : @1423 [@dyn 743] (gas: 7)\n 44023: a2 = s1 + 0x200\n 44027: a0 = u64 [a2 + 0x18]\n 44030: a1 = u64 [a2 + 0x8]\n 44033: a0 = a0 | a1\n 44036: a1 = u64 [a2 + 0x10]\n 44039: a0 = a0 | a1\n 44042: jump @1469 if a0 == 0\n      : @1424 (gas: 10)\n 44046: a0 = 0xffffffff\n 44056: u64 [s1 + 0x200] = a0\n 44060: a0 = s1 + 0x4998\n 44064: u64 [a0 + 896] = 0\n 44068: u64 [a0 + 888] = 0\n 44072: u64 [a0 + 880] = 0\n 44076: u64 [a0 + 872] = 0\n 44080: a0 = s1 + 0x3c60\n 44084: a1 = s1 + 0x4d00\n 44088: ra = 1488, jump @26\n      : @1425 [@dyn 744] (gas: 28)\n 44095: a1 = s1 + 0x3998\n 44099: a3 = a1 + 0x200\n 44103: a2 = u64 [a3 + 0xd8]\n 44107: u64 [s1 + 0x1e8] = a2\n 44111: a0 = u64 [a3 + 0xd0]\n 44115: u64 [s1 + 0x1f8] = a0\n 44119: a0 = u64 [a3 + 0xc8]\n 44123: u64 [s1 + 0x1f0] = a0\n 44127: a0 = u64 [a3 + 0xe0]\n 44131: a1 = a2 >> 0x20\n 44134: a1 = a1 << 0x20\n 44137: a2 = u64 [s1 + 0x208]\n 44141: a1 = a1 | a2\n 44144: a2 = s1 + 0x4998\n 44148: u64 [a2 + 928] = 0\n 44152: u64 [a2 + 920] = 0\n 44156: u64 [a2 + 912] = 0\n 44160: u64 [a2 + 904] = 0\n 44164: a3 = u64 [s1 + 0x210]\n 44168: a4 = a2 + 0x300\n 44172: u64 [a4 + 0xb0] = a3\n 44176: a3 = u64 [s1 + 0x218]\n 44180: u64 [a4 + 0xa8] = a3\n 44184: u64 [a4 + 0xc0] = a0\n 44188: u64 [a4 + 0xb8] = a1\n 44192: a0 = s1 + 0x4d20\n 44196: a1 = s1 + 0x4d40\n 44200: ra = 1490, jump @28\n      : @1426 [@dyn 745] (gas: 37)\n 44207: a4 = s1 + 0x100\n 44211: a0 = u64 [a4 + 0xf0]\n 44215: a0 = a0 & 0xffffffffffffffff\n 44218: a2 = u64 [a4 + 0xf8]\n 44222: a1 = a2 & 0xffffffffffffffff\n 44225: a5 = s1 + 0x200\n 44229: a2 = u64 [a5]\n 44231: a3 = u64 [a4 + 0xe8]\n 44235: a2 = a2 & a3\n 44238: a4 = s1 + 0x3998\n 44242: u64 [a4 + 640] = 0\n 44246: a3 = u64 [a5 + 0x8]\n 44249: u64 [a4 + 0x278] = a3\n 44253: a3 = u64 [a5 + 0x10]\n 44256: u64 [a4 + 0x270] = a3\n 44260: a3 = u64 [a5 + 0x18]\n 44263: a5 = a4 + 0x200\n 44267: u64 [a5 + 0x68] = a3\n 44270: u64 [a4 + 672] = 0\n 44274: u64 [a5 + 0x98] = a2\n 44278: u64 [a5 + 0x90] = a1\n 44282: a1 = u64 [0x20020]\n 44287: a2 = u64 [0x20028]\n 44292: a3 = u64 [0x20030]\n 44297: u64 [a5 + 0x88] = a0\n 44301: u64 [a5 + 0xc0] = a1\n 44305: u64 [a5 + 0xb8] = a2\n 44309: u64 [a5 + 0xb0] = a3\n 44313: a1 = a4\n 44315: a0 = u64 [0x20038]\n 44320: a2 = s1 + 0x3c40\n 44324: a3 = s1 + 0x3c20\n 44328: a4 = s1 + 0x3c00\n 44332: u64 [a1 + 0x2a8] = a0\n 44336: a0 = 0\n 44338: a1 = 0\n 44340: ra = 1492, jump @31\n      : @1427 [@dyn 746] (gas: 2)\n 44347: a1 = 0x20230\n 44352: jump @1309\n      : @1428 (gas: 6)\n 44355: u64 [s1 + 784] = 0\n 44359: u64 [s1 + 776] = 0\n 44363: u64 [s1 + 768] = 0\n 44367: t0 = 0x5d6\n 44371: a0 = 0x4e487b7100000000\n 44381: fallthrough\n      : @1429 [@dyn 747] (gas: 4)\n 44382: a1 = s1 + 0x300\n 44386: u64 [s1 + 0x318] = a0\n 44390: a0 = 0\n 44392: ra = 1496, jump @24\n      : @1430 [@dyn 748] (gas: 8)\n 44399: u64 [s1 + 760] = 0\n 44403: u64 [s1 + 752] = 0\n 44407: u64 [s1 + 736] = 0x41\n 44412: a0 = 0x4\n 44415: a1 = s1 + 0x2e0\n 44419: u64 [s1 + 744] = 0\n 44423: ra = 0x5b8\n 44427: jump @24\n      : @1431 (gas: 6)\n 44431: u64 [s1 + 848] = 0\n 44435: u64 [s1 + 840] = 0\n 44439: u64 [s1 + 832] = 0\n 44443: t0 = 0x5da\n 44447: a0 = 0x4e487b7100000000\n 44457: fallthrough\n      : @1432 [@dyn 749] (gas: 4)\n 44458: a1 = s1 + 0x340\n 44462: u64 [s1 + 0x358] = a0\n 44466: a0 = 0\n 44468: ra = 1500, jump @24\n      : @1433 [@dyn 750] (gas: 8)\n 44475: u64 [s1 + 824] = 0\n 44479: u64 [s1 + 816] = 0\n 44483: u64 [s1 + 800] = 0x41\n 44488: a0 = 0x4\n 44491: a1 = s1 + 0x320\n 44495: u64 [s1 + 808] = 0\n 44499: ra = 0x5b8\n 44503: jump @24\n      : @1434 (gas: 10)\n 44507: a0 = s1 + 0x2998\n 44511: u64 [a0 + 1592] = 0\n 44515: u64 [a0 + 1584] = 0\n 44519: u64 [a0 + 1576] = 0\n 44523: a2 = a0\n 44525: a0 = 0x4e487b7100000000\n 44535: a1 = s1 + 0x2fc0\n 44539: u64 [a2 + 0x640] = a0\n 44543: a0 = 0\n 44545: ra = 1502, jump @24\n      : @1435 [@dyn 751] (gas: 10)\n 44552: a1 = s1 + 0x2998\n 44556: u64 [a1 + 1568] = 0\n 44560: u64 [a1 + 1560] = 0\n 44564: u64 [a1 + 1544] = 0x11\n 44569: a2 = a1\n 44571: a0 = 0x4\n 44574: a1 = s1 + 0x2fa0\n 44578: u64 [a2 + 1552] = 0\n 44582: ra = 0x586\n 44586: jump @24\n      : @1436 (gas: 3)\n 44590: a0 = 0x1\n 44593: a1 = u64 [s1 + 0x100]\n 44597: jump @1411\n      : @1437 (gas: 5)\n 44600: a0 = s1 + 0x1998\n 44604: u64 [a0 + 1688] = 0\n 44608: u64 [a0 + 1680] = 0\n 44612: u64 [a0 + 1672] = 0\n 44616: t0 = 1504, jump @1807\n      : @1438 [@dyn 752] (gas: 5)\n 44622: i32 a1 = a1 + 0x20\n 44625: a1 = a1 + s1\n 44628: u64 [a2 + 0x6a0] = a0\n 44632: a0 = 0\n 44634: ra = 1506, jump @24\n      : @1439 [@dyn 753] (gas: 3)\n 44641: t0 = 0x5e4\n 44645: a1 = s1 + 0x1998\n 44649: fallthrough\n      : @1440 [@dyn 754] (gas: 8)\n 44650: u64 [a1 + 1664] = 0\n 44654: u64 [a1 + 1656] = 0\n 44658: u64 [a1 + 1640] = 0x41\n 44663: a2 = a1\n 44665: a0 = 0x4\n 44668: a1 = s1 + 0x2000\n 44672: u64 [a2 + 1648] = 0\n 44676: ra = 1510, jump @24\n      : @1441 [@dyn 755] (gas: 3)\n 44683: a0 = u64 [s1 + 0x218]\n 44687: a0 = i32 [a0]\n 44689: jump @1443 if a0 >u 63\n      : @1442 (gas: 3)\n 44693: a1 = u64 [s1 + 0x218]\n 44697: u32 [a1 + 0] = 0x40\n 44700: fallthrough\n      : @1443 (gas: 5)\n 44701: a0 = 0x1\n 44704: a2 = 0x24\n 44707: a1 = u64 [s1 + 0x1f8]\n 44711: ecalli 16 // 'seal_return'\n 44713: fallthrough\n      : @1444 (gas: 3)\n 44714: a0 = u64 [s1 + 0x218]\n 44718: a0 = i32 [a0]\n 44720: jump @1474 if a0 >u 3\n      : @1445 (gas: 2)\n 44725: a1 = 0x20230\n 44730: jump @1410\n      : @1446 (gas: 24)\n 44733: a0 = s1 + 0x4000\n 44737: i32 a0 = a0 + 0x300\n 44741: a1 = 0x4\n 44744: ecalli 4 // 'call_data_load'\n 44746: a0 = s1 + 0x4198\n 44750: a5 = a0 + 0x100\n 44754: a4 = u64 [a5 + 0x80]\n 44758: a3 = u64 [a5 + 0x78]\n 44761: a1 = u64 [a5 + 0x70]\n 44764: a2 = u64 [a5 + 0x68]\n 44767: a0 = s1 + 0x1198\n 44771: a5 = s1 + 0x100\n 44775: u64 [a5 + 0xe8] = a4\n 44779: u64 [a0 + 0x220] = a4\n 44783: u64 [a5 + 0xf0] = a3\n 44787: a4 = a0 + 0x200\n 44791: u64 [a4 + 0x18] = a3\n 44794: u64 [a5 + 0xf8] = a1\n 44798: u64 [a4 + 0x10] = a1\n 44801: a1 = s1 + 0x13a0\n 44805: u64 [s1 + 0x200] = a2\n 44809: u64 [a4 + 0x8] = a2\n 44812: a0 = 0\n 44814: ra = 1512, jump @24\n      : @1447 [@dyn 756] (gas: 3)\n 44821: t0 = 0x5ea\n 44825: a1 = s1 + 0x1198\n 44829: fallthrough\n      : @1448 [@dyn 757] (gas: 8)\n 44830: u64 [a1 + 512] = 0\n 44834: u64 [a1 + 504] = 0\n 44838: u64 [a1 + 488] = 0x2\n 44843: a2 = a1\n 44845: a0 = 0x20\n 44848: a1 = s1 + 0x1380\n 44852: u64 [a2 + 496] = 0\n 44856: ra = 1516, jump @24\n      : @1449 [@dyn 758] (gas: 4)\n 44863: a0 = 0x20228\n 44868: u64 [s1 + 0x218] = a0\n 44872: a0 = i32 [0x20228]\n 44877: jump @1451 if a0 >u 63\n      : @1450 (gas: 3)\n 44881: a1 = u64 [s1 + 0x218]\n 44885: u32 [a1 + 0] = 0x40\n 44888: fallthrough\n      : @1451 (gas: 14)\n 44889: a0 = sp + 0xffffffffffffffe0\n 44892: a2 = a0 & 0xffffffffffffffe0\n 44895: u64 [s1 + 0x208] = a2\n 44899: sp = a2\n 44901: a0 = 0x20230\n 44906: i32 a0 = a0 + 0\n 44908: i32 a2 = a2 + 0\n 44910: a1 = 0x40\n 44913: u64 [s1 + 0x210] = a0\n 44917: ra = 0x5ee\n 44921: ecalli 11 // 'hash_keccak_256'\n 44923: a3 = u64 [s1 + 0x208]\n 44927: t0 = 0x5f0\n 44931: jump @1768\n      : @1452 [@dyn 759] (gas: 2)\n 44934: a3 = u64 [s1 + 0x208]\n 44938: t0 = 1520, jump @1768\n      : @1453 [@dyn 760] (gas: 7)\n 44944: u64 [a5 + 0xa0] = a3\n 44948: u64 [a5 + 0x98] = a2\n 44952: u64 [a5 + 0x90] = a1\n 44956: u64 [a5 + 0x88] = a0\n 44960: a0 = s1 + 0x1360\n 44964: a1 = s1 + 0x4320\n 44968: ra = 1522, jump @26\n      : @1454 [@dyn 761] (gas: 18)\n 44975: a4 = s1 + 0x1198\n 44979: a5 = a4 + 0x100\n 44983: a3 = u64 [a5 + 0xe0]\n 44987: a2 = u64 [a5 + 0xd8]\n 44991: a1 = u64 [a5 + 0xd0]\n 44995: a0 = u64 [a5 + 0xc8]\n 44999: a4 = s1 + 0x100\n 45003: u64 [a4 + 0xc8] = a3\n 45007: u64 [a5 + 0xc0] = a3\n 45011: u64 [a4 + 0xd0] = a2\n 45015: u64 [a5 + 0xb8] = a2\n 45019: u64 [a4 + 0xd8] = a1\n 45023: u64 [a5 + 0xb0] = a1\n 45027: a1 = s1 + 0x1340\n 45031: u64 [a4 + 0xe0] = a0\n 45035: u64 [a5 + 0xa8] = a0\n 45039: a0 = 0\n 45041: ra = 1524, jump @24\n      : @1455 [@dyn 762] (gas: 3)\n 45048: t0 = 0x5f6\n 45052: a1 = s1 + 0x1198\n 45056: fallthrough\n      : @1456 [@dyn 763] (gas: 8)\n 45057: u64 [a1 + 416] = 0\n 45061: u64 [a1 + 408] = 0\n 45065: u64 [a1 + 392] = 0x1\n 45070: a2 = a1\n 45072: a0 = 0x20\n 45075: a1 = s1 + 0x1320\n 45079: u64 [a2 + 400] = 0\n 45083: ra = 1528, jump @24\n      : @1457 [@dyn 764] (gas: 1)\n 45090: t0 = 1530, jump @1799\n      : @1458 [@dyn 765] (gas: 1)\n 45096: jump @1460 if a1 <u a0\n      : @1459 (gas: 3)\n 45099: a0 = u64 [s1 + 0x218]\n 45103: u32 [a0 + 0] = 0x40\n 45106: fallthrough\n      : @1460 (gas: 24)\n 45107: a0 = sp + 0xffffffffffffffe0\n 45110: a0 = a0 & 0xffffffffffffffe0\n 45113: u64 [s1 + 0x1c0] = a0\n 45117: sp = a0\n 45119: i32 a2 = a0 + 0\n 45121: a1 = 0x40\n 45124: a0 = u64 [s1 + 0x210]\n 45128: ecalli 11 // 'hash_keccak_256'\n 45130: a3 = u64 [s1 + 0x1c0]\n 45134: a0 = u64 [a3 + 0x18]\n 45137: a1 = u64 [a3 + 0x10]\n 45140: a2 = u64 [a3 + 0x8]\n 45143: a3 = u64 [a3]\n 45145: a0 = reverse a0\n 45147: a4 = reverse a1\n 45149: a2 = reverse a2\n 45151: a3 = reverse a3\n 45153: a1 = u64 [s1 + 0x208]\n 45157: u64 [a1 + 0x18] = a3\n 45160: u64 [a1 + 0x10] = a2\n 45163: u64 [a1 + 0x8] = a4\n 45166: u64 [a1] = a0\n 45168: a0 = s1 + 0x1300\n 45172: ra = 1532, jump @26\n      : @1461 [@dyn 766] (gas: 3)\n 45179: a0 = s1 + 0x1198\n 45183: a0 = u8 [a0 + 0x168]\n 45187: jump @1479 if a0 <=u 3\n      : @1462 (gas: 8)\n 45192: a0 = s1 + 0x1198\n 45196: u64 [a0 + 184] = 0\n 45200: u64 [a0 + 176] = 0\n 45204: u64 [a0 + 168] = 0\n 45208: a2 = a0\n 45210: t0 = 0x5fe\n 45214: a0 = 0x4e487b7100000000\n 45224: fallthrough\n      : @1463 [@dyn 767] (gas: 4)\n 45225: a1 = s1 + 0x1240\n 45229: u64 [a2 + 0xc0] = a0\n 45233: a0 = 0\n 45235: ra = 1536, jump @24\n      : @1464 [@dyn 768] (gas: 3)\n 45242: t0 = 0x602\n 45246: a1 = s1 + 0x1198\n 45250: fallthrough\n      : @1465 [@dyn 769] (gas: 8)\n 45251: u64 [a1 + 160] = 0\n 45255: u64 [a1 + 152] = 0\n 45259: u64 [a1 + 136] = 0x21\n 45264: a2 = a1\n 45266: a0 = 0x4\n 45269: a1 = s1 + 0x1220\n 45273: u64 [a2 + 144] = 0\n 45277: ra = 1540, jump @24\n      : @1466 [@dyn 770] (gas: 3)\n 45284: a0 = u64 [s1 + 0x218]\n 45288: a0 = i32 [a0]\n 45290: jump @1468 if a0 >u 63\n      : @1467 (gas: 3)\n 45294: a1 = u64 [s1 + 0x218]\n 45298: u32 [a1 + 0] = 0x40\n 45301: fallthrough\n      : @1468 (gas: 5)\n 45302: a0 = 0x1\n 45305: a2 = 0x24\n 45308: a1 = u64 [s1 + 0x210]\n 45312: ecalli 16 // 'seal_return'\n 45314: fallthrough\n      : @1469 (gas: 10)\n 45315: a0 = s1 + 0x3998\n 45319: u64 [a0 + 600] = 0\n 45323: u64 [a0 + 592] = 0\n 45327: u64 [a0 + 584] = 0\n 45331: a2 = a0\n 45333: a0 = 0x1e4fbdf700000000\n 45343: a1 = s1 + 0x3be0\n 45347: u64 [a2 + 0x260] = a0\n 45351: a0 = 0\n 45353: ra = 1542, jump @24\n      : @1470 [@dyn 771] (gas: 9)\n 45360: a0 = s1 + 0x3998\n 45364: u64 [a0 + 576] = 0\n 45368: u64 [a0 + 568] = 0\n 45372: u64 [a0 + 560] = 0\n 45376: a2 = a0\n 45378: a0 = 0x4\n 45381: a1 = s1 + 0x3bc0\n 45385: u64 [a2 + 552] = 0\n 45389: ra = 1544, jump @24\n      : @1471 [@dyn 772] (gas: 2)\n 45396: a1 = i32 [0x20228]\n 45401: jump @1473 if a1 >u 63\n      : @1472 (gas: 2)\n 45405: u32 [0x20228] = 0x40\n 45411: fallthrough\n      : @1473 (gas: 7)\n 45412: a1 = 0x20230\n 45417: i32 a1 = a1 + 0\n 45419: a0 = 0x1\n 45422: a2 = 0x24\n 45425: ecalli 16 // 'seal_return'\n 45427: ra = 0x60a\n 45431: jump @1680\n      : @1474 (gas: 1)\n 45434: ra = 1546, jump @1680\n      : @1475 [@dyn 773] (gas: 8)\n 45440: a0 = s1 + 0x4198\n 45444: u64 [a0 + 1888] = 0\n 45448: u64 [a0 + 1880] = 0\n 45452: u64 [a0 + 1872] = 0\n 45456: u64 [a0 + 1864] = 0\n 45460: a0 = s1 + 0x2b40\n 45464: a1 = s1 + 0x48e0\n 45468: ra = 1548, jump @26\n      : @1476 [@dyn 774] (gas: 23)\n 45475: a1 = s1 + 0x2998\n 45479: a3 = a1 + 0x100\n 45483: a2 = u64 [a3 + 0xb8]\n 45487: u64 [s1 + 0x208] = a2\n 45491: a0 = u64 [a3 + 0xa8]\n 45495: u64 [s1 + 0x218] = a0\n 45499: a0 = u64 [a3 + 0xb0]\n 45503: u64 [s1 + 0x210] = a0\n 45507: a0 = u64 [a3 + 0xc0]\n 45511: a1 = a2 >> 0x20\n 45514: a1 = a1 << 0x20\n 45517: a2 = s1 + 0x4198\n 45521: u64 [a2 + 1920] = 0\n 45525: u64 [a2 + 1912] = 0\n 45529: u64 [a2 + 1904] = 0\n 45533: u64 [a2 + 1896] = 0\n 45537: u64 [a2 + 1936] = 0\n 45541: u64 [a2 + 1928] = 0\n 45545: u64 [a2 + 0x7a0] = a0\n 45549: u64 [a2 + 0x798] = a1\n 45553: a0 = s1 + 0x4900\n 45557: a1 = s1 + 0x4920\n 45561: ra = 1550, jump @28\n      : @1477 [@dyn 775] (gas: 31)\n 45568: a5 = s1 + 0x200\n 45572: a0 = u64 [a5 + 0x8]\n 45575: a0 = a0 << 0x20\n 45578: a0 = a0 >> 0x20\n 45581: a3 = s1 + 0x2998\n 45585: u64 [a3 + 352] = 0\n 45589: u64 [a3 + 344] = 0\n 45593: u64 [a3 + 336] = 0\n 45597: u64 [a3 + 328] = 0\n 45601: u64 [a3 + 384] = 0\n 45605: u64 [a3 + 0x178] = a0\n 45609: a0 = u64 [a5 + 0x10]\n 45612: u64 [a3 + 0x170] = a0\n 45616: a0 = u64 [0x20020]\n 45621: a1 = u64 [0x20028]\n 45626: a2 = u64 [0x20030]\n 45631: a4 = u64 [a5 + 0x18]\n 45634: a5 = a3 + 0x100\n 45638: u64 [a5 + 0x68] = a4\n 45641: u64 [a5 + 0xa0] = a0\n 45645: u64 [a5 + 0x98] = a1\n 45649: u64 [a5 + 0x90] = a2\n 45653: a1 = a3\n 45655: a0 = u64 [0x20038]\n 45660: a2 = s1 + 0x2b20\n 45664: a3 = s1 + 0x2b00\n 45668: a4 = s1 + 0x2ae0\n 45672: u64 [a1 + 0x188] = a0\n 45676: a0 = 0\n 45678: a1 = 0\n 45680: ra = 1552, jump @31\n      : @1478 [@dyn 776] (gas: 2)\n 45687: a1 = 0x20230\n 45692: jump @1309\n      : @1479 (gas: 11)\n 45695: a0 = a0 + 0xffffffffffffffff\n 45698: a0 = a0 <u 0x1\n 45701: a1 = s1 + 0x1198\n 45705: u64 [a1 + 352] = 0\n 45709: u64 [a1 + 344] = 0\n 45713: u64 [a1 + 0x148] = a0\n 45717: a0 = s1 + 0x12e0\n 45721: u64 [a1 + 336] = 0\n 45725: ra = 0x612\n 45729: t0 = 0x68c\n 45733: jump @1780\n      : @1480 [@dyn 777] (gas: 3)\n 45736: a0 = s1 + 0x12c0\n 45740: a1 = u64 [s1 + 0x208]\n 45744: ra = 1556, jump @26\n      : @1481 [@dyn 778] (gas: 2)\n 45751: a0 = 0x1000\n 45755: t0 = 1558, jump @1804\n      : @1482 [@dyn 779] (gas: 14)\n 45761: a0 = u64 [a4 + 0x28]\n 45764: a1 = u64 [a4 + 0x40]\n 45767: a2 = u64 [a4 + 0x38]\n 45770: a3 = u64 [a4 + 0x30]\n 45773: a0 = a0 & 0xffffffffffffff00\n 45777: a4 = s1 + 0x4198\n 45781: a5 = a4 + 0x100\n 45785: u64 [a5 + 0xc0] = a1\n 45789: u64 [a5 + 0xb8] = a2\n 45793: u64 [a5 + 0xb0] = a3\n 45797: u64 [a5 + 0xa8] = a0\n 45801: a1 = s1 + 0x4340\n 45805: a0 = u64 [s1 + 0x208]\n 45809: ra = 1560, jump @28\n      : @1483 [@dyn 780] (gas: 34)\n 45816: a2 = s1 + 0x100\n 45820: a0 = u64 [a2 + 0xc8]\n 45824: a4 = s1 + 0x1198\n 45828: u64 [a4 + 0xe0] = a0\n 45832: a0 = u64 [a2 + 0xd0]\n 45836: u64 [a4 + 0xd8] = a0\n 45840: a0 = u64 [a2 + 0xd8]\n 45844: u64 [a4 + 0xd0] = a0\n 45848: a0 = u64 [a2 + 0xe0]\n 45852: u64 [a4 + 0xc8] = a0\n 45856: a0 = u64 [a2 + 0xe8]\n 45860: a5 = a4 + 0x100\n 45864: u64 [a5] = a0\n 45866: a0 = u64 [a2 + 0xf0]\n 45870: u64 [a4 + 0xf8] = a0\n 45874: a0 = u64 [a2 + 0xf8]\n 45878: u64 [a4 + 0xf0] = a0\n 45882: a0 = u64 [0x201a0]\n 45887: a1 = u64 [0x201a8]\n 45892: a2 = u64 [0x201b0]\n 45897: a3 = u64 [s1 + 0x200]\n 45901: u64 [a4 + 0xe8] = a3\n 45905: u64 [a5 + 0x20] = a0\n 45908: u64 [a5 + 0x18] = a1\n 45911: u64 [a5 + 0x10] = a2\n 45914: a1 = a4\n 45916: a0 = u64 [0x201b8]\n 45921: a2 = s1 + 0x12a0\n 45925: a3 = s1 + 0x1280\n 45929: a4 = s1 + 0x1260\n 45933: u64 [a1 + 0x108] = a0\n 45937: a0 = 0\n 45939: a1 = 0\n 45941: ra = 1562, jump @31\n      : @1484 [@dyn 781] (gas: 3)\n 45948: a0 = 0\n 45950: a1 = u64 [s1 + 0x210]\n 45954: jump @1411\n      : @1485 (gas: 33)\n 45957: sp = sp + 0xffffffffffffffa0\n 45960: u64 [sp + 0x58] = ra\n 45963: u64 [sp + 0x50] = s0\n 45966: u64 [sp + 0x48] = s1\n 45969: s0 = sp + 0x60\n 45972: sp = sp & 0xfffffffffffffff0\n 45975: a2 = u64 [a1 + 0x10]\n 45978: a5 = u64 [a1 + 0x8]\n 45981: a4 = u64 [a1]\n 45983: a1 = u64 [a1 + 0x18]\n 45986: t0 = a2 << 0x3f\n 45989: a3 = a5 >> 0x1\n 45992: t0 = a3 | t0\n 45995: a3 = a1 << 0x3f\n 45998: a2 = a2 >> 0x1\n 46001: a3 = a3 | a2\n 46004: a5 = a5 << 0x3f\n 46007: a2 = a4 >> 0x1\n 46010: a5 = a5 | a2\n 46013: t1 = a1 >> 0x1\n 46016: a4 = a4 & 0x1\n 46019: a1 = -a4\n 46021: s1 = a4 <u 0x1\n 46024: a2 = a5 & 0x7f\n 46027: t2 = a1 & a3\n 46030: a3 = a1 & t0\n 46033: a2 = a5 if a4 != 0\n 46036: a4 = a1 & t1\n 46039: a1 = a2 <u 0x20\n 46042: a1 = 0 if a3 != 0\n 46044: a5 = t2 | a4\n 46047: a1 = 0 if a5 != 0\n 46049: jump @1488 if s1 != a1\n      : @1486 (gas: 5)\n 46052: u64 [a0] = a2\n 46054: u64 [a0 + 0x8] = a3\n 46057: u64 [a0 + 0x10] = t2\n 46060: u64 [a0 + 0x18] = a4\n 46063: t0 = 1564, jump @1802\n      : @1487 [@dyn 782] (gas: 1)\n 46069: ret\n      : @1488 (gas: 6)\n 46071: u64 [sp + 48] = 0\n 46074: u64 [sp + 40] = 0\n 46077: u64 [sp + 32] = 0\n 46080: t0 = 0x61e\n 46084: a0 = 0x4e487b7100000000\n 46094: fallthrough\n      : @1489 [@dyn 783] (gas: 4)\n 46095: a1 = sp + 0x20\n 46098: u64 [sp + 0x38] = a0\n 46101: a0 = 0\n 46103: ra = 1568, jump @24\n      : @1490 [@dyn 784] (gas: 7)\n 46110: u64 [sp + 24] = 0\n 46113: u64 [sp + 16] = 0\n 46116: u64 [sp + 0] = 0x22\n 46119: a0 = 0x4\n 46122: a1 = sp\n 46124: u64 [sp + 8] = 0\n 46127: ra = 1570, jump @24\n      : @1491 [@dyn 785] (gas: 2)\n 46134: a1 = i32 [0x20228]\n 46139: jump @1493 if a1 >u 63\n      : @1492 (gas: 2)\n 46143: u32 [0x20228] = 0x40\n 46149: fallthrough\n      : @1493 (gas: 7)\n 46150: a1 = 0x20230\n 46155: i32 a1 = a1 + 0\n 46157: a0 = 0x1\n 46160: a2 = 0x24\n 46163: ra = 0x624\n 46167: ecalli 16 // 'seal_return'\n 46169: fallthrough\n      : @1494 [@dyn 786] (gas: 46)\n 46170: sp = sp + 0xffffffffffffff70\n 46174: u64 [sp + 0x88] = ra\n 46178: u64 [sp + 0x80] = s0\n 46182: u64 [sp + 0x78] = s1\n 46185: s0 = sp + 0x90\n 46189: sp = sp & 0xfffffffffffffff0\n 46192: t0 = a0\n 46194: a2 = u64 [a1]\n 46196: t2 = u64 [a0 + 0x8]\n 46199: a5 = u64 [a1 + 0x8]\n 46202: t1 = u64 [a0]\n 46204: a3 = a2 + 0x1f\n 46207: ra = a3 <u a2\n 46210: a2 = a5 + ra\n 46213: a3 = a3 & 0xffffffffffffffe0\n 46216: u64 [sp + 0x8] = t1\n 46219: t1 = t1 + a3\n 46222: a4 = t1 <u a3\n 46225: a3 = a2 + t2\n 46228: a3 = a3 + a4\n 46231: s1 = a3 ^ a2\n 46234: a0 = a3 <u a2\n 46237: a0 = a4 if s1 == 0\n 46240: a4 = u64 [t0 + 0x18]\n 46243: a5 = a2 <u a5\n 46246: s1 = u64 [a1 + 0x10]\n 46249: t0 = u64 [t0 + 0x10]\n 46252: a1 = u64 [a1 + 0x18]\n 46255: a5 = ra if ra == 0\n 46258: a5 = a5 + s1\n 46261: s1 = a5 <u s1\n 46264: a2 = a5 + t0\n 46267: a0 = a0 + a2\n 46270: a5 = a2 <u a5\n 46273: a2 = a0 <u a2\n 46276: a1 = a1 + a4\n 46279: a1 = a1 + s1\n 46282: a1 = a1 + a5\n 46285: a5 = a1 + a2\n 46288: a1 = a5 >u 0\n 46290: a2 = a0 >u 0\n 46292: a2 = a1 if a5 != 0\n 46295: a1 = a0 | a5\n 46298: s1 = a3 >u 0\n 46300: s1 = a2 if a1 != 0\n 46303: jump @1498 if s1 != 0\n      : @1495 (gas: 13)\n 46306: a1 = u64 [sp + 0x8]\n 46309: a1 = t1 <u a1\n 46312: a2 = a3 ^ t2\n 46315: s1 = a3 <u t2\n 46318: s1 = a1 if a2 == 0\n 46321: a1 = a0 <u t0\n 46324: a2 = a5 ^ a4\n 46327: a4 = a5 <u a4\n 46330: a4 = a1 if a2 == 0\n 46333: a1 = a0 ^ t0\n 46336: a1 = a1 | a2\n 46339: a4 = s1 if a1 == 0\n 46342: jump @1498 if a4 != 0\n      : @1496 (gas: 7)\n 46345: u64 [sp + 0x50] = t1\n 46348: u64 [sp + 0x58] = a3\n 46351: u64 [sp + 0x60] = a0\n 46354: a0 = 0x40\n 46357: a1 = sp + 0x50\n 46360: u64 [sp + 0x68] = a5\n 46363: ra = 1574, jump @24\n      : @1497 [@dyn 787] (gas: 6)\n 46370: sp = s0 + 0xffffffffffffff70\n 46374: ra = u64 [sp + 0x88]\n 46378: s0 = u64 [sp + 0x80]\n 46382: s1 = u64 [sp + 0x78]\n 46385: sp = sp + 0x90\n 46389: ret\n      : @1498 (gas: 6)\n 46391: u64 [sp + 64] = 0\n 46394: u64 [sp + 56] = 0\n 46397: u64 [sp + 48] = 0\n 46400: t0 = 0x628\n 46404: a0 = 0x4e487b7100000000\n 46414: fallthrough\n      : @1499 [@dyn 788] (gas: 4)\n 46415: a1 = sp + 0x30\n 46418: u64 [sp + 0x48] = a0\n 46421: a0 = 0\n 46423: ra = 1578, jump @24\n      : @1500 [@dyn 789] (gas: 7)\n 46430: u64 [sp + 40] = 0\n 46433: u64 [sp + 32] = 0\n 46436: u64 [sp + 16] = 0x41\n 46440: a0 = 0x4\n 46443: a1 = sp + 0x10\n 46446: u64 [sp + 24] = 0\n 46449: ra = 1580, jump @24\n      : @1501 [@dyn 790] (gas: 2)\n 46456: a1 = i32 [0x20228]\n 46461: jump @1503 if a1 >u 63\n      : @1502 (gas: 2)\n 46465: u32 [0x20228] = 0x40\n 46471: fallthrough\n      : @1503 (gas: 7)\n 46472: a1 = 0x20230\n 46477: i32 a1 = a1 + 0\n 46479: a0 = 0x1\n 46482: a2 = 0x24\n 46485: ra = 0x62e\n 46489: ecalli 16 // 'seal_return'\n 46491: fallthrough\n      : @1504 [@dyn 791] (gas: 24)\n 46492: sp = sp + 0xfffffffffffffda0\n 46496: a2 = sp + 0x200\n 46500: u64 [a2 + 0x58] = ra\n 46503: u64 [a2 + 0x50] = s0\n 46506: u64 [a2 + 0x48] = s1\n 46509: s0 = sp + 0x260\n 46513: sp = sp & 0xffffffffffffffe0\n 46516: s1 = sp\n 46518: u64 [s1 + 0x10] = a0\n 46521: a0 = u64 [a1 + 0x18]\n 46524: a2 = u64 [a1 + 0x10]\n 46527: a3 = u64 [a1 + 0x8]\n 46530: a1 = u64 [a1]\n 46532: u64 [s1 + 0xb0] = a0\n 46536: u64 [s1 + 0x238] = a0\n 46540: u64 [s1 + 0xa8] = a2\n 46544: u64 [s1 + 0x230] = a2\n 46548: u64 [s1 + 0xa0] = a3\n 46552: u64 [s1 + 0x228] = a3\n 46556: u64 [s1 + 0x98] = a1\n 46560: u64 [s1 + 0x220] = a1\n 46564: a0 = s1 + 0x200\n 46568: a1 = 0x40\n 46571: ra = 1584, jump @22\n      : @1505 [@dyn 792] (gas: 12)\n 46578: a1 = s1 + 0x200\n 46582: a0 = u64 [a1 + 0x18]\n 46585: u64 [s1 + 0x18] = a0\n 46588: a0 = u64 [a1 + 0x10]\n 46591: u64 [s1 + 0x20] = a0\n 46594: a0 = u64 [a1 + 0x8]\n 46597: u64 [s1 + 0x28] = a0\n 46600: a0 = u64 [a1]\n 46602: u64 [s1 + 0x30] = a0\n 46605: a0 = s1 + 0x1e0\n 46609: a1 = s1 + 0x220\n 46613: ra = 1586, jump @26\n      : @1506 [@dyn 793] (gas: 16)\n 46620: a4 = s1 + 0x100\n 46624: a0 = u64 [a4 + 0xf8]\n 46628: a1 = u64 [a4 + 0xf0]\n 46632: a2 = u64 [a4 + 0xe8]\n 46636: a3 = u64 [a4 + 0xe0]\n 46640: u64 [s1 + 0x90] = a0\n 46644: u64 [a4 + 0xb8] = a0\n 46648: u64 [s1 + 0x88] = a1\n 46652: u64 [a4 + 0xb0] = a1\n 46656: u64 [s1 + 0x80] = a2\n 46660: u64 [a4 + 0xa8] = a2\n 46664: a0 = s1 + 0x1c0\n 46668: a1 = s1 + 0x1a0\n 46672: u64 [s1 + 0xb8] = a3\n 46676: u64 [a4 + 0xa0] = a3\n 46680: ra = 1588, jump @1485\n      : @1507 [@dyn 794] (gas: 12)\n 46686: a0 = u64 [s1 + 0x30]\n 46689: a1 = u64 [s1 + 0x18]\n 46692: a2 = u64 [s1 + 0x28]\n 46695: a2 = a2 | a1\n 46698: a3 = u64 [s1 + 0x20]\n 46701: a1 = a0 | a3\n 46704: a1 = a1 | a2\n 46707: a1 = a1 >> 0x20\n 46710: a2 = a2 | a3\n 46713: a2 = a2 << 0x20\n 46716: a1 = a1 | a2\n 46719: jump @1526 if a1 != 0\n      : @1508 (gas: 15)\n 46723: a5 = s1 + 0x100\n 46727: a2 = u64 [a5 + 0xd8]\n 46731: a3 = u64 [a5 + 0xd0]\n 46735: a1 = u64 [a5 + 0xc8]\n 46739: a4 = u64 [a5 + 0xc0]\n 46743: u64 [s1 + 0x60] = a4\n 46746: u64 [a5 + 0x80] = a4\n 46750: u64 [s1 + 0x70] = a1\n 46753: u64 [a5 + 0x88] = a1\n 46757: u64 [s1 + 0x68] = a3\n 46760: u64 [a5 + 0x90] = a3\n 46764: a1 = s1 + 0x180\n 46768: u64 [s1 + 0x78] = a2\n 46771: u64 [a5 + 0x98] = a2\n 46775: ra = 1590, jump @24\n      : @1509 [@dyn 795] (gas: 3)\n 46782: a3 = u64 [s1 + 0xb8]\n 46786: a0 = a3 & 0x1\n 46789: jump @1515 if a0 != 0\n      : @1510 (gas: 10)\n 46793: a0 = u64 [s1 + 0x20]\n 46796: a1 = u64 [s1 + 0x18]\n 46799: a0 = a0 | a1\n 46802: a1 = 0xffffffe0\n 46812: a4 = u64 [s1 + 0x30]\n 46815: a1 = a4 <u a1\n 46818: a2 = u64 [s1 + 0x28]\n 46821: a1 = 0 if a2 != 0\n 46823: a1 = 0 if a0 != 0\n 46825: jump @1526 if a1 == 0\n      : @1511 (gas: 12)\n 46829: a1 = a3 & 0xffffffffffffff00\n 46833: i32 a0 = a4 + 0x20\n 46836: a3 = u64 [s1 + 0x80]\n 46840: a2 = s1 + 0x100\n 46844: u64 [a2 + 0x8] = a3\n 46847: u64 [a2] = a1\n 46849: a1 = u64 [s1 + 0x88]\n 46853: u64 [a2 + 0x10] = a1\n 46856: a1 = s1 + 0x100\n 46860: a3 = u64 [s1 + 0x90]\n 46864: u64 [a2 + 0x18] = a3\n 46867: ra = 1592, jump @24\n      : @1512 [@dyn 796] (gas: 14)\n 46874: t2 = 0\n 46876: t1 = 0\n 46878: t0 = 0\n 46880: a0 = u64 [s1 + 0x68]\n 46883: a1 = u64 [s1 + 0x60]\n 46886: a0 = a0 | a1\n 46889: a1 = u64 [s1 + 0x78]\n 46892: a2 = u64 [s1 + 0x70]\n 46895: a1 = a1 | a2\n 46898: a0 = a0 | a1\n 46901: a0 = a0 >u 0\n 46903: a0 = a0 << 0x5\n 46906: u64 [s1 + 0xb8] = a0\n 46910: fallthrough\n      : @1513 (gas: 24)\n 46911: a1 = u64 [s1 + 0xb8]\n 46915: a0 = a1 + 0x20\n 46918: a1 = a0 <u a1\n 46921: a2 = t2 + a1\n 46924: a3 = a2 <u t2\n 46927: a3 = a1 if a1 == 0\n 46930: a3 = a3 + t1\n 46933: a1 = a3 <u t1\n 46936: a4 = t0 + a1\n 46939: a1 = u64 [s1 + 0x30]\n 46942: u64 [s1 + 0xe0] = a1\n 46946: u64 [s1 + 0xc0] = a0\n 46950: a0 = u64 [s1 + 0x28]\n 46953: u64 [s1 + 0xe8] = a0\n 46957: a0 = u64 [s1 + 0x20]\n 46960: u64 [s1 + 0xf0] = a0\n 46964: u64 [s1 + 0xc8] = a2\n 46968: a0 = u64 [s1 + 0x18]\n 46971: u64 [s1 + 0xf8] = a0\n 46975: u64 [s1 + 0xd0] = a3\n 46979: a0 = s1 + 0xe0\n 46983: a1 = s1 + 0xc0\n 46987: u64 [s1 + 0xd8] = a4\n 46991: ra = 1594, jump @1494\n      : @1514 [@dyn 797] (gas: 16)\n 46997: a0 = u64 [s1 + 0x10]\n 47000: a1 = u64 [s1 + 0x18]\n 47003: u64 [a0 + 0x18] = a1\n 47006: a1 = u64 [s1 + 0x20]\n 47009: u64 [a0 + 0x10] = a1\n 47012: a1 = u64 [s1 + 0x28]\n 47015: u64 [a0 + 0x8] = a1\n 47018: a1 = u64 [s1 + 0x30]\n 47021: u64 [a0] = a1\n 47023: sp = s0 + 0xfffffffffffffda0\n 47027: a0 = sp + 0x200\n 47031: ra = u64 [a0 + 0x58]\n 47034: s0 = u64 [a0 + 0x50]\n 47037: s1 = u64 [a0 + 0x48]\n 47040: sp = sp + 0x260\n 47044: ret\n      : @1515 (gas: 12)\n 47046: a0 = u64 [s1 + 0x98]\n 47050: a2 = s1 + 0x100\n 47054: u64 [a2 + 0x60] = a0\n 47057: a0 = u64 [s1 + 0xa0]\n 47061: u64 [a2 + 0x68] = a0\n 47064: a0 = u64 [s1 + 0xa8]\n 47068: u64 [a2 + 0x70] = a0\n 47071: a1 = s1 + 0x160\n 47075: a0 = u64 [s1 + 0xb0]\n 47079: u64 [a2 + 0x78] = a0\n 47082: a0 = 0\n 47084: ra = 1596, jump @24\n      : @1516 [@dyn 798] (gas: 6)\n 47091: a0 = sp + 0xffffffffffffffe0\n 47094: a0 = a0 & 0xffffffffffffffe0\n 47097: u64 [s1 + 0x58] = a0\n 47100: sp = a0\n 47102: a1 = i32 [0x20228]\n 47107: jump @1518 if a1 >u 31\n      : @1517 (gas: 2)\n 47111: u32 [0x20228] = 0x20\n 47117: fallthrough\n      : @1518 (gas: 49)\n 47118: a0 = sp + 0xffffffffffffffe0\n 47121: a2 = a0 & 0xffffffffffffffe0\n 47124: u64 [s1 + 0xb0] = a2\n 47128: sp = a2\n 47130: a0 = 0x20230\n 47135: i32 a0 = a0 + 0\n 47137: i32 a2 = a2 + 0\n 47139: a1 = 0x20\n 47142: ecalli 11 // 'hash_keccak_256'\n 47144: u64 [s1 + 184] = 0\n 47148: t2 = 0\n 47150: t1 = 0\n 47152: t0 = 0\n 47154: a5 = u64 [s1 + 0xb0]\n 47158: a0 = u64 [a5 + 0x18]\n 47161: a1 = u64 [s1 + 0x30]\n 47164: a2 = a1 + 0x20\n 47167: u64 [s1 + 0x50] = a2\n 47170: a1 = a2 <u a1\n 47173: a2 = u64 [s1 + 0x28]\n 47176: a3 = a2 + a1\n 47179: u64 [s1 + 0x48] = a3\n 47182: a4 = a3 <u a2\n 47185: a4 = a1 if a1 == 0\n 47188: a1 = u64 [a5 + 0x10]\n 47191: a2 = u64 [a5 + 0x8]\n 47194: a3 = u64 [a5]\n 47196: a0 = reverse a0\n 47198: a1 = reverse a1\n 47200: ra = reverse a2\n 47202: a2 = reverse a3\n 47204: a5 = u64 [s1 + 0x58]\n 47207: a3 = a2\n 47209: u64 [a5 + 0x18] = a2\n 47212: a2 = ra\n 47214: u64 [s1 + 0x80] = a2\n 47218: u64 [a5 + 0x10] = a2\n 47221: u64 [s1 + 0x90] = a1\n 47225: u64 [a5 + 0x8] = a1\n 47228: a2 = a0\n 47230: u64 [a5] = a0\n 47232: a0 = u64 [s1 + 0x20]\n 47235: a4 = a4 + a0\n 47238: u64 [s1 + 0x40] = a4\n 47241: a0 = a4 <u a0\n 47244: a1 = u64 [s1 + 0x18]\n 47247: a0 = a0 + a1\n 47250: u64 [s1 + 0x38] = a0\n 47253: fallthrough\n      : @1519 (gas: 19)\n 47254: u64 [s1 + 0x88] = a3\n 47258: u64 [s1 + 0x98] = a2\n 47262: a0 = u64 [s1 + 0x60]\n 47265: a1 = u64 [s1 + 0xb8]\n 47269: a0 = a1 <u a0\n 47272: a2 = u64 [s1 + 0x70]\n 47275: a1 = t2 ^ a2\n 47278: a2 = t2 <u a2\n 47281: a2 = a0 if a1 == 0\n 47284: a4 = u64 [s1 + 0x68]\n 47287: a0 = t1 <u a4\n 47290: a3 = u64 [s1 + 0x78]\n 47293: a1 = t0 ^ a3\n 47296: a3 = t0 <u a3\n 47299: a3 = a0 if a1 == 0\n 47302: a0 = t1 ^ a4\n 47305: a0 = a0 | a1\n 47308: a3 = a2 if a0 == 0\n 47311: jump @1513 if a3 == 0\n      : @1520 (gas: 6)\n 47315: a0 = s1 + 0x140\n 47319: a1 = a5\n 47321: u64 [s1 + 0xb0] = t0\n 47325: u64 [s1 + 0xa8] = t1\n 47329: u64 [s1 + 0xa0] = t2\n 47333: ra = 1598, jump @26\n      : @1521 [@dyn 799] (gas: 7)\n 47340: a1 = u64 [s1 + 0x50]\n 47343: a0 = u64 [s1 + 0xb8]\n 47347: a0 = a0 + a1\n 47350: a1 = a0 <u a1\n 47353: a4 = u64 [s1 + 0x48]\n 47356: a2 = u64 [s1 + 0xa0]\n 47360: t0 = 1600, jump @1770\n      : @1522 [@dyn 800] (gas: 9)\n 47366: a3 = u64 [s1 + 0x40]\n 47369: a1 = u64 [s1 + 0xa8]\n 47373: a1 = a1 + a3\n 47376: t0 = a1 <u a3\n 47379: a5 = u64 [s1 + 0x38]\n 47382: a3 = u64 [s1 + 0xb0]\n 47386: a5 = a5 + a3\n 47389: a3 = a5 + t0\n 47392: t0 = 1602, jump @1757\n      : @1523 [@dyn 801] (gas: 1)\n 47398: jump @1526 if a1 != 0\n      : @1524 (gas: 11)\n 47402: a5 = s1 + 0x100\n 47406: a2 = u64 [a5 + 0x58]\n 47409: a1 = u64 [a5 + 0x50]\n 47412: a3 = u64 [a5 + 0x48]\n 47415: a4 = u64 [a5 + 0x40]\n 47418: u64 [a5 + 0x20] = a4\n 47421: u64 [a5 + 0x28] = a3\n 47424: u64 [a5 + 0x30] = a1\n 47427: a1 = s1 + 0x120\n 47431: u64 [a5 + 0x38] = a2\n 47434: ra = 1604, jump @24\n      : @1525 [@dyn 802] (gas: 38)\n 47441: a3 = u64 [s1 + 0x98]\n 47445: a3 = a3 + 0x1\n 47448: a0 = a3 <u 0x1\n 47451: t2 = u64 [s1 + 0x90]\n 47455: t2 = t2 + a0\n 47458: a0 = a3 | t2\n 47461: a0 = a0 <u 0x1\n 47464: a1 = u64 [s1 + 0x80]\n 47468: t1 = a1 + a0\n 47471: a1 = t1 <u a1\n 47474: a0 = u64 [s1 + 0x88]\n 47478: a0 = a0 + a1\n 47481: a1 = u64 [s1 + 0xb8]\n 47485: ra = a1 + 0x20\n 47488: a2 = ra <u a1\n 47491: a4 = u64 [s1 + 0xa0]\n 47495: a1 = a4 + a2\n 47498: a4 = a1 <u a4\n 47501: a4 = a2 if a2 == 0\n 47504: a2 = u64 [s1 + 0xa8]\n 47508: a4 = a4 + a2\n 47511: a2 = a4 <u a2\n 47514: t0 = u64 [s1 + 0xb0]\n 47518: t0 = t0 + a2\n 47521: a2 = t2\n 47523: u64 [s1 + 0x90] = a2\n 47527: a5 = u64 [s1 + 0x58]\n 47530: u64 [a5 + 0x8] = a2\n 47533: a2 = a3\n 47535: u64 [a5] = a3\n 47537: u64 [a5 + 0x10] = t1\n 47540: a3 = a0\n 47542: u64 [a5 + 0x18] = a0\n 47545: u64 [s1 + 0x80] = t1\n 47549: u64 [s1 + 0xb8] = ra\n 47553: t2 = a1\n 47555: t1 = a4\n 47557: jump @1519\n      : @1526 (gas: 1)\n 47560: trap\n      : @1527 (gas: 21)\n 47561: sp = sp + 0xffffffffffffff10\n 47565: u64 [sp + 0xe8] = ra\n 47569: u64 [sp + 0xe0] = s0\n 47573: u64 [sp + 0xd8] = s1\n 47577: s0 = sp + 0xf0\n 47581: sp = sp & 0xfffffffffffffff0\n 47584: a5 = u64 [a1 + 0x10]\n 47587: a4 = u64 [a1 + 0x18]\n 47590: a3 = u64 [a1 + 0x8]\n 47593: a1 = u64 [a1]\n 47595: u64 [sp + 0x28] = a3\n 47598: u64 [sp + 0x18] = a4\n 47601: a4 = a4 | a3\n 47604: a3 = a1 | a5\n 47607: a3 = a3 | a4\n 47610: a3 = a3 >> 0x20\n 47613: u64 [sp + 0x20] = a5\n 47616: a4 = a4 | a5\n 47619: a4 = a4 << 0x20\n 47622: a3 = a3 | a4\n 47625: jump @1543 if a3 != 0\n      : @1528 (gas: 11)\n 47629: u64 [sp + 0x8] = a0\n 47632: a0 = u64 [a2 + 0x18]\n 47635: u64 [sp + 0x68] = a0\n 47638: s1 = u64 [a2 + 0x10]\n 47641: a0 = u64 [a2 + 0x8]\n 47644: u64 [sp + 0x60] = a0\n 47647: a0 = u64 [a2]\n 47649: u64 [sp + 0x58] = a0\n 47652: a0 = sp + 0xb0\n 47656: u64 [sp + 0x10] = a1\n 47659: ra = 1606, jump @22\n      : @1529 [@dyn 803] (gas: 12)\n 47666: a0 = u64 [sp + 0x58]\n 47669: a2 = a0 | s1\n 47672: a1 = u64 [sp + 0x68]\n 47675: a3 = u64 [sp + 0x60]\n 47678: a1 = a1 | a3\n 47681: a2 = a2 | a1\n 47684: a2 = a2 >> 0x20\n 47687: u64 [sp + 0x50] = s1\n 47690: a1 = a1 | s1\n 47693: a1 = a1 << 0x20\n 47696: a1 = a1 | a2\n 47699: jump @1543 if a1 != 0\n      : @1530 (gas: 15)\n 47703: a2 = u64 [sp + 0xc8]\n 47707: a3 = u64 [sp + 0xc0]\n 47711: a4 = u64 [sp + 0xb8]\n 47715: a1 = u64 [sp + 0xb0]\n 47719: u64 [sp + 0x30] = a1\n 47722: u64 [sp + 0x90] = a1\n 47726: u64 [sp + 0x38] = a4\n 47729: u64 [sp + 0x98] = a4\n 47733: u64 [sp + 0x40] = a3\n 47736: u64 [sp + 0xa0] = a3\n 47740: a1 = sp + 0x90\n 47744: u64 [sp + 0x48] = a2\n 47747: u64 [sp + 0xa8] = a2\n 47751: s1 = a0\n 47753: ra = 1608, jump @24\n      : @1531 [@dyn 804] (gas: 9)\n 47760: a0 = u64 [sp + 0x68]\n 47763: a1 = u64 [sp + 0x50]\n 47766: a1 = a1 | a0\n 47769: a0 = 0xffffffe0\n 47779: a2 = s1 <u a0\n 47782: a3 = u64 [sp + 0x60]\n 47785: a2 = 0 if a3 != 0\n 47787: a2 = 0 if a1 != 0\n 47789: jump @1543 if a2 == 0\n      : @1532 (gas: 9)\n 47793: a1 = u64 [sp + 0x20]\n 47796: a2 = u64 [sp + 0x18]\n 47799: a1 = a1 | a2\n 47802: a2 = u64 [sp + 0x10]\n 47805: a0 = a2 <u a0\n 47808: a3 = u64 [sp + 0x28]\n 47811: a0 = 0 if a3 != 0\n 47813: a0 = 0 if a1 != 0\n 47815: jump @1543 if a0 == 0\n      : @1533 (gas: 13)\n 47819: a5 = s1\n 47821: s1 = u64 [sp + 0x30]\n 47824: a3 = u64 [sp + 0x40]\n 47827: a0 = s1 | a3\n 47830: a1 = u64 [sp + 0x48]\n 47833: a4 = u64 [sp + 0x38]\n 47836: a1 = a1 | a4\n 47839: a0 = a0 | a1\n 47842: a0 = a0 >> 0x20\n 47845: a1 = a1 | a3\n 47848: a1 = a1 << 0x20\n 47851: a0 = a0 | a1\n 47854: jump @1543 if a0 != 0\n      : @1534 (gas: 5)\n 47858: i32 a0 = a5 + 0x20\n 47861: i32 a1 = a2 + 0x20\n 47864: u64 [sp + 0x28] = a1\n 47867: a1 = s1\n 47869: ra = 1610, jump @36\n      : @1535 [@dyn 805] (gas: 4)\n 47876: u64 [sp + 0x20] = a0\n 47879: a0 = u64 [sp + 0x28]\n 47882: a1 = s1\n 47884: ra = 1612, jump @36\n      : @1536 [@dyn 806] (gas: 4)\n 47891: a1 = a0\n 47893: a0 = u64 [sp + 0x20]\n 47896: a2 = s1\n 47898: ra = 1614, jump @0\n      : @1537 [@dyn 807] (gas: 6)\n 47905: a0 = u64 [sp + 0x58]\n 47908: a0 = a0 + s1\n 47911: a1 = a0 <u s1\n 47914: a2 = u64 [sp + 0x60]\n 47917: a4 = u64 [sp + 0x38]\n 47920: t0 = 1616, jump @1770\n      : @1538 [@dyn 808] (gas: 17)\n 47926: a1 = u64 [sp + 0x50]\n 47929: a3 = u64 [sp + 0x40]\n 47932: a1 = a1 + a3\n 47935: a3 = a1 <u a3\n 47938: a5 = u64 [sp + 0x68]\n 47941: s1 = u64 [sp + 0x48]\n 47944: a5 = a5 + s1\n 47947: a3 = a3 + a5\n 47950: a4 = a4 + a1\n 47953: a1 = a4 <u a1\n 47956: a1 = a1 + a3\n 47959: a1 = a1 | a4\n 47962: a3 = 0xffffffe0\n 47972: a3 = a0 <u a3\n 47975: a3 = 0 if a2 != 0\n 47977: a3 = 0 if a1 != 0\n 47979: jump @1543 if a3 == 0\n      : @1539 (gas: 7)\n 47982: i32 a0 = a0 + 0x20\n 47985: u64 [sp + 136] = 0\n 47989: u64 [sp + 128] = 0\n 47993: u64 [sp + 120] = 0\n 47996: a1 = sp + 0x70\n 47999: u64 [sp + 112] = 0\n 48002: ra = 1618, jump @24\n      : @1540 [@dyn 809] (gas: 9)\n 48009: s1 = u64 [sp + 0x30]\n 48012: s1 = s1 + 0x1f\n 48015: a0 = 0x1ffffffe0\n 48025: a0 = a0 & s1\n 48028: a1 = u64 [sp + 0x58]\n 48031: a0 = a0 + a1\n 48034: a1 = a0 <u a1\n 48037: a3 = u64 [sp + 0x60]\n 48040: t0 = 1620, jump @1765\n      : @1541 [@dyn 810] (gas: 5)\n 48046: a1 = u64 [sp + 0x50]\n 48049: a3 = a3 + a1\n 48052: a1 = a3 <u a1\n 48055: a4 = u64 [sp + 0x68]\n 48058: t0 = 1622, jump @1775\n      : @1542 [@dyn 811] (gas: 11)\n 48064: a1 = u64 [sp + 0x8]\n 48067: u64 [a1] = a4\n 48069: u64 [a1 + 0x8] = a5\n 48072: u64 [a1 + 0x10] = a2\n 48075: u64 [a1 + 0x18] = a0\n 48078: sp = s0 + 0xffffffffffffff10\n 48082: ra = u64 [sp + 0xe8]\n 48086: s0 = u64 [sp + 0xe0]\n 48090: s1 = u64 [sp + 0xd8]\n 48094: sp = sp + 0xf0\n 48098: ret\n      : @1543 (gas: 1)\n 48100: trap\n      : @1544 (gas: 11)\n 48101: sp = sp + 0xffffffffffffffc0\n 48104: u64 [sp + 0x38] = ra\n 48107: u64 [sp + 0x30] = s0\n 48110: u64 [sp + 0x28] = s1\n 48113: s0 = sp + 0x40\n 48116: sp = sp & 0xffffffffffffffe0\n 48119: s1 = a0\n 48121: i32 a0 = sp + 0\n 48123: a1 = 0x4\n 48126: ecalli 4 // 'call_data_load'\n 48128: fallthrough\n      : @1545 (gas: 10)\n 48129: a0 = u64 [sp + 0x10]\n 48132: a1 = u64 [sp + 0x18]\n 48135: a2 = 0x100000000\n 48145: a2 = a2 ^ a0\n 48148: a2 = a2 | a1\n 48151: a3 = a0 >> 0x20\n 48154: a3 = a3 <u 0x1\n 48157: a3 = 0 if a1 != 0\n 48159: a3 = 0 if a2 == 0\n 48161: jump @1547 if a3 == 0\n      : @1546 (gas: 12)\n 48164: a2 = u64 [sp]\n 48166: a3 = u64 [sp + 0x8]\n 48169: u64 [s1] = a2\n 48171: u64 [s1 + 0x8] = a3\n 48174: u64 [s1 + 0x10] = a0\n 48177: u64 [s1 + 0x18] = a1\n 48180: sp = s0 + 0xffffffffffffffc0\n 48183: ra = u64 [sp + 0x38]\n 48186: s0 = u64 [sp + 0x30]\n 48189: s1 = u64 [sp + 0x28]\n 48192: sp = sp + 0x40\n 48195: ret\n      : @1547 (gas: 7)\n 48197: a1 = 0x20230\n 48202: i32 a1 = a1 + 0\n 48204: a0 = 0x1\n 48207: a2 = 0\n 48209: ra = 0x658\n 48213: ecalli 16 // 'seal_return'\n 48215: fallthrough\n      : @1548 [@dyn 812] (gas: 19)\n 48216: sp = sp + 0xfffffffffffffe60\n 48220: u64 [sp + 0x198] = ra\n 48224: u64 [sp + 0x190] = s0\n 48228: u64 [sp + 0x188] = s1\n 48232: s0 = sp + 0x1a0\n 48236: sp = sp & 0xfffffffffffffff0\n 48239: s1 = u64 [a2 + 0x18]\n 48242: a4 = u64 [a2 + 0x10]\n 48245: t1 = u64 [a2 + 0x8]\n 48248: t0 = s1 >u 0\n 48250: a5 = a4 >u 0\n 48252: a5 = t0 if s1 != 0\n 48255: u64 [sp + 0x58] = s1\n 48258: u64 [sp + 0x90] = a4\n 48262: a4 = a4 | s1\n 48265: s1 = t1 >u 0\n 48267: s1 = a5 if a4 != 0\n 48270: u64 [sp] = a0\n 48272: jump @1563 if s1 != 0\n      : @1549 (gas: 35)\n 48276: a0 = u64 [a3 + 0x18]\n 48279: u64 [sp + 0x20] = a0\n 48282: a0 = u64 [a3 + 0x10]\n 48285: u64 [sp + 0x28] = a0\n 48288: a0 = u64 [a3 + 0x8]\n 48291: u64 [sp + 0x8] = a0\n 48294: a0 = u64 [a3]\n 48296: u64 [sp + 0x10] = a0\n 48299: a2 = u64 [a2]\n 48301: a0 = u64 [a1 + 0x18]\n 48304: u64 [sp + 0x30] = a0\n 48307: a0 = u64 [a1 + 0x10]\n 48310: u64 [sp + 0x38] = a0\n 48313: a0 = u64 [a1 + 0x8]\n 48316: u64 [sp + 0x60] = a0\n 48319: a0 = u64 [a1]\n 48321: u64 [sp + 0x18] = a0\n 48324: a0 = a2 + 0x1f\n 48327: u64 [sp + 0x98] = a2\n 48331: a1 = a0 <u a2\n 48334: a1 = a1 + t1\n 48337: a1 = a1 & 0x1\n 48340: a0 = a0 & 0xffffffffffffffe0\n 48343: a2 = a0 + 0x20\n 48346: u64 [sp + 0x40] = a2\n 48349: a0 = a2 <u a0\n 48352: a2 = a1 + a0\n 48355: u64 [sp + 0x48] = a2\n 48358: a1 = a2 <u a1\n 48361: a1 = a0 if a0 == 0\n 48364: u64 [sp + 0x50] = a1\n 48367: a0 = sp + 0x160\n 48371: a1 = 0x40\n 48374: u64 [sp + 0x80] = t1\n 48378: ra = 1626, jump @22\n      : @1550 [@dyn 813] (gas: 21)\n 48385: a0 = u64 [sp + 0x178]\n 48389: u64 [sp + 0x88] = a0\n 48393: s1 = u64 [sp + 0x170]\n 48397: a2 = u64 [sp + 0x168]\n 48401: u64 [sp + 0x78] = a2\n 48404: a3 = u64 [sp + 0x160]\n 48408: u64 [sp + 0x70] = a3\n 48411: u64 [sp + 312] = 0\n 48415: a1 = u64 [sp + 0x40]\n 48418: u64 [sp + 0x120] = a1\n 48422: u64 [sp + 0x158] = a0\n 48426: u64 [sp + 0x150] = s1\n 48430: u64 [sp + 0x148] = a2\n 48434: u64 [sp + 0x140] = a3\n 48438: a0 = u64 [sp + 0x48]\n 48441: u64 [sp + 0x128] = a0\n 48445: a0 = sp + 0x140\n 48449: a1 = sp + 0x120\n 48453: a2 = u64 [sp + 0x50]\n 48456: u64 [sp + 0x130] = a2\n 48460: ra = 1628, jump @1494\n      : @1551 [@dyn 814] (gas: 12)\n 48466: a0 = u64 [sp + 0x70]\n 48469: a1 = u64 [sp + 0x88]\n 48473: a2 = u64 [sp + 0x78]\n 48476: a2 = a2 | a1\n 48479: a1 = a0 | s1\n 48482: a1 = a1 | a2\n 48485: a1 = a1 >> 0x20\n 48488: u64 [sp + 0x68] = s1\n 48491: a2 = a2 | s1\n 48494: a2 = a2 << 0x20\n 48497: a1 = a1 | a2\n 48500: jump @1562 if a1 != 0\n      : @1552 (gas: 10)\n 48504: a1 = u64 [sp + 0x98]\n 48508: u64 [sp + 0x100] = a1\n 48512: a1 = u64 [sp + 0x80]\n 48516: u64 [sp + 0x108] = a1\n 48520: a1 = u64 [sp + 0x90]\n 48524: u64 [sp + 0x110] = a1\n 48528: a1 = sp + 0x100\n 48532: s1 = u64 [sp + 0x58]\n 48535: u64 [sp + 0x118] = s1\n 48539: ra = 1630, jump @24\n      : @1553 [@dyn 815] (gas: 40)\n 48546: t2 = s1\n 48548: t0 = u64 [sp + 0x18]\n 48551: a0 = u64 [sp + 0x98]\n 48555: a1 = a0 + t0\n 48558: a2 = a1 <u a0\n 48561: a0 = u64 [sp + 0x60]\n 48564: t1 = u64 [sp + 0x80]\n 48568: a0 = a0 + t1\n 48571: a3 = a0 + a2\n 48574: a4 = a3 ^ t1\n 48577: a0 = a3 <u t1\n 48580: a0 = a2 if a4 == 0\n 48583: a4 = u64 [sp + 0x8]\n 48586: a2 = a3 ^ a4\n 48589: a3 = a4 <u a3\n 48592: a4 = u64 [sp + 0x10]\n 48595: a1 = a4 <u a1\n 48598: a5 = u64 [sp + 0x38]\n 48601: s1 = u64 [sp + 0x90]\n 48605: a4 = s1 + a5\n 48608: a1 = a3 if a2 != 0\n 48611: a2 = a4 <u s1\n 48614: ra = u64 [sp + 0x30]\n 48617: a3 = t2 + ra\n 48620: a2 = a2 + a3\n 48623: a0 = a0 + a4\n 48626: a3 = a0 <u a4\n 48629: a2 = a2 + a3\n 48632: a4 = u64 [sp + 0x20]\n 48635: a3 = a2 ^ a4\n 48638: a2 = a4 <u a2\n 48641: s1 = u64 [sp + 0x28]\n 48644: a4 = s1 <u a0\n 48647: a2 = a4 if a3 == 0\n 48650: a0 = a0 ^ s1\n 48653: a0 = a0 | a3\n 48656: a1 = a2 if a0 != 0\n 48659: a3 = t1\n 48661: t1 = u64 [sp + 0x98]\n 48665: jump @1569 if a1 != 0\n      : @1554 (gas: 9)\n 48669: a0 = t0 | a5\n 48672: a1 = u64 [sp + 0x60]\n 48675: a1 = a1 | ra\n 48678: a0 = a0 | a1\n 48681: a0 = a0 >> 0x20\n 48684: a1 = a1 | a5\n 48687: a1 = a1 << 0x20\n 48690: a0 = a0 | a1\n 48693: jump @1562 if a0 != 0\n      : @1555 (gas: 12)\n 48697: a2 = u64 [sp + 0x90]\n 48701: a0 = t1 | a2\n 48704: a1 = a3 | t2\n 48707: a0 = a0 | a1\n 48710: a0 = a0 >> 0x20\n 48713: a1 = a1 | a2\n 48716: a1 = a1 << 0x20\n 48719: a0 = a0 | a1\n 48722: a2 = u64 [sp + 0x78]\n 48725: a3 = u64 [sp + 0x68]\n 48728: a4 = u64 [sp + 0x88]\n 48732: jump @1562 if a0 != 0\n      : @1556 (gas: 8)\n 48736: a0 = a3 | a4\n 48739: a1 = 0xffffffe0\n 48749: s1 = u64 [sp + 0x70]\n 48752: u64 [sp + 0x60] = a1\n 48755: a1 = s1 <u a1\n 48758: a1 = 0 if a2 != 0\n 48760: a1 = 0 if a0 != 0\n 48762: jump @1562 if a1 == 0\n      : @1557 (gas: 5)\n 48766: i32 t0 = t0 + 0\n 48768: u64 [sp + 0x50] = t0\n 48771: i32 a0 = s1 + 0x20\n 48774: a1 = t1\n 48776: ra = 1632, jump @36\n      : @1558 [@dyn 816] (gas: 5)\n 48783: i32 a0 = a0 + 0\n 48785: a1 = i32 [sp + 0x98]\n 48789: a2 = u64 [sp + 0x50]\n 48792: ecalli 3 // 'call_data_copy'\n 48794: fallthrough\n      : @1559 (gas: 27)\n 48795: a0 = u64 [sp + 0x98]\n 48799: a0 = a0 + s1\n 48802: a1 = a0 <u s1\n 48805: a2 = u64 [sp + 0x80]\n 48809: s1 = u64 [sp + 0x78]\n 48812: a2 = a2 + s1\n 48815: a2 = a2 + a1\n 48818: a3 = a2 ^ s1\n 48821: a4 = a2 <u s1\n 48824: a4 = a1 if a3 == 0\n 48827: a1 = u64 [sp + 0x90]\n 48831: a3 = u64 [sp + 0x68]\n 48834: a1 = a1 + a3\n 48837: t0 = a1 <u a3\n 48840: a5 = u64 [sp + 0x58]\n 48843: a3 = u64 [sp + 0x88]\n 48847: a5 = a5 + a3\n 48850: a3 = a5 + t0\n 48853: a4 = a4 + a1\n 48856: a1 = a4 <u a1\n 48859: a1 = a1 + a3\n 48862: a1 = a1 | a4\n 48865: a3 = u64 [sp + 0x60]\n 48868: a3 = a0 <u a3\n 48871: a3 = 0 if a2 != 0\n 48873: a3 = 0 if a1 != 0\n 48875: jump @1562 if a3 == 0\n      : @1560 (gas: 7)\n 48878: i32 a0 = a0 + 0x20\n 48881: u64 [sp + 248] = 0\n 48885: u64 [sp + 240] = 0\n 48889: u64 [sp + 232] = 0\n 48893: a1 = sp + 0xe0\n 48897: u64 [sp + 224] = 0\n 48901: ra = 1634, jump @24\n      : @1561 [@dyn 817] (gas: 14)\n 48908: a0 = u64 [sp]\n 48910: a1 = u64 [sp + 0x88]\n 48914: u64 [a0 + 0x18] = a1\n 48917: a1 = u64 [sp + 0x68]\n 48920: u64 [a0 + 0x10] = a1\n 48923: u64 [a0 + 0x8] = s1\n 48926: a1 = u64 [sp + 0x70]\n 48929: u64 [a0] = a1\n 48931: sp = s0 + 0xfffffffffffffe60\n 48935: ra = u64 [sp + 0x198]\n 48939: s0 = u64 [sp + 0x190]\n 48943: s1 = u64 [sp + 0x188]\n 48947: sp = sp + 0x1a0\n 48951: ret\n      : @1562 (gas: 1)\n 48953: trap\n      : @1563 (gas: 6)\n 48954: u64 [sp + 208] = 0\n 48958: u64 [sp + 200] = 0\n 48962: u64 [sp + 192] = 0\n 48966: t0 = 0x664\n 48970: a0 = 0x4e487b7100000000\n 48980: fallthrough\n      : @1564 [@dyn 818] (gas: 4)\n 48981: a1 = sp + 0xc0\n 48985: u64 [sp + 0xd8] = a0\n 48989: a0 = 0\n 48991: ra = 1638, jump @24\n      : @1565 [@dyn 819] (gas: 7)\n 48998: u64 [sp + 184] = 0\n 49002: u64 [sp + 176] = 0\n 49006: u64 [sp + 160] = 0x41\n 49011: a0 = 0x4\n 49014: a1 = sp + 0xa0\n 49018: u64 [sp + 168] = 0\n 49022: ra = 1640, jump @24\n      : @1566 [@dyn 820] (gas: 2)\n 49029: a1 = i32 [0x20228]\n 49034: jump @1568 if a1 >u 63\n      : @1567 (gas: 2)\n 49038: u32 [0x20228] = 0x40\n 49044: fallthrough\n      : @1568 (gas: 6)\n 49045: a1 = 0x20230\n 49050: i32 a1 = a1 + 0\n 49052: a0 = 0x1\n 49055: a2 = 0x24\n 49058: ecalli 16 // 'seal_return'\n 49060: fallthrough\n      : @1569 (gas: 8)\n 49061: a1 = 0x20230\n 49066: i32 a1 = a1 + 0\n 49068: a0 = 0x1\n 49071: a2 = 0\n 49073: ra = 0x66a\n 49077: ecalli 16 // 'seal_return'\n 49079: t0 = 0x66c\n 49083: jump @1760\n      : @1570 [@dyn 821] (gas: 1)\n 49086: t0 = 1644, jump @1760\n      : @1571 [@dyn 822] (gas: 1)\n 49092: jump @1581 if a3 != 0\n      : @1572 (gas: 1)\n 49096: t0 = 1646, jump @1798\n      : @1573 [@dyn 823] (gas: 5)\n 49102: ra = 0x670\n 49106: ecalli 4 // 'call_data_load'\n 49108: a0 = 0x20224\n 49113: t0 = 0x672\n 49117: jump @1783\n      : @1574 [@dyn 824] (gas: 2)\n 49120: a0 = 0x20224\n 49125: t0 = 1650, jump @1783\n      : @1575 [@dyn 825] (gas: 41)\n 49131: t0 = u64 [sp + 0x30]\n 49134: t2 = -t0\n 49136: u64 [sp + 0x18] = s1\n 49139: a5 = s1 + a3\n 49142: a0 = -a5\n 49144: a2 = a2 - a1\n 49147: a3 = a2 + 0xffffffffffffffe1\n 49150: a2 = a3 <u a2\n 49153: a5 = a5 ^ 0xffffffffffffffff\n 49156: a5 = a5 + a2\n 49159: a1 = a5 ^ a0\n 49162: a0 = a5 <u a0\n 49165: a0 = a2 if a1 == 0\n 49168: a1 = t2 <u a4\n 49171: a2 = t0\n 49173: t0 = u64 [sp + 0x10]\n 49176: a2 = a2 >u 0\n 49178: s1 = u64 [sp + 0x38]\n 49181: a2 = a2 + s1\n 49184: a1 = a1 + a2\n 49187: a2 = u64 [sp + 0x48]\n 49190: s1 = t2 - a4\n 49193: a4 = s1 <u 0x1\n 49196: a1 = a1 + a4\n 49199: a4 = u64 [sp + 0x40]\n 49202: s1 = s1 + 0xffffffffffffffff\n 49205: a0 = a0 + s1\n 49208: s1 = a0 <u s1\n 49211: s1 = s1 - a1\n 49214: a1 = a2 ^ a5\n 49217: a5 = a2 <u a5\n 49220: a3 = a4 <u a3\n 49223: a3 = a5 if a1 != 0\n 49226: a1 = t1 <u a0\n 49229: a5 = t0 ^ s1\n 49232: s1 = t0 <s s1\n 49235: s1 = a1 if a5 == 0\n 49238: a0 = t1 ^ a0\n 49241: a0 = a0 | a5\n 49244: a3 = s1 if a0 != 0\n 49247: jump @1582 if a3 == 0\n      : @1576 (gas: 28)\n 49251: a0 = u64 [sp + 0x28]\n 49254: a5 = a4 + a0\n 49257: a0 = a5 <u a4\n 49260: s1 = u64 [sp + 0x18]\n 49263: s1 = s1 + a2\n 49266: s1 = s1 + a0\n 49269: a1 = s1 ^ a2\n 49272: a2 = s1 <u a2\n 49275: a2 = a0 if a1 == 0\n 49278: a0 = u64 [sp + 0x30]\n 49281: a0 = a0 + t1\n 49284: a3 = a0 + a2\n 49287: a1 = a3 <u a0\n 49290: a0 = a0 <u t1\n 49293: a2 = u64 [sp + 0x38]\n 49296: t0 = t0 + a2\n 49299: a0 = a0 + t0\n 49302: a1 = a1 + a0\n 49305: a0 = a5 | a3\n 49308: u64 [sp + 0x30] = a1\n 49311: a1 = a1 | s1\n 49314: a0 = a0 | a1\n 49317: a0 = a0 >> 0x20\n 49320: u64 [sp + 0x38] = a3\n 49323: a1 = a1 | a3\n 49326: a1 = a1 << 0x20\n 49329: a0 = a0 | a1\n 49332: jump @1581 if a0 != 0\n      : @1577 (gas: 5)\n 49336: u64 [sp + 0x28] = a5\n 49339: i32 a1 = a5 + 0\n 49341: i32 a0 = sp + 0x60\n 49344: ecalli 4 // 'call_data_load'\n 49346: fallthrough\n      : @1578 (gas: 7)\n 49347: ra = u64 [sp + 0x78]\n 49350: a2 = u64 [sp + 0x70]\n 49353: a5 = u64 [sp + 0x68]\n 49356: a0 = a2 | ra\n 49359: a3 = a5 <u 0x1\n 49362: a3 = 0 if a0 != 0\n 49364: jump @1583 if a3 == 0\n      : @1579 (gas: 51)\n 49368: t1 = u64 [sp + 0x60]\n 49371: a0 = u64 [sp + 0x28]\n 49374: a1 = a0 + 0x20\n 49377: u64 [sp + 0x18] = a1\n 49380: a0 = a1 <u a0\n 49383: a1 = s1 + a0\n 49386: u64 [sp + 0x10] = a1\n 49389: a3 = a1 <u s1\n 49392: a3 = a0 if a0 == 0\n 49395: a0 = u64 [sp + 0x8]\n 49398: s1 = u32 [a0]\n 49400: a0 = u64 [sp + 0x38]\n 49403: a3 = a3 + a0\n 49406: a0 = a3 <u a0\n 49409: a1 = u64 [sp + 0x30]\n 49412: a0 = a0 + a1\n 49415: u64 [sp + 0x8] = a0\n 49418: a4 = s1 <u t1\n 49421: a1 = a5 >u 0\n 49423: a1 = a4 if a5 == 0\n 49426: t0 = -a2\n 49428: a0 = t0 <u a1\n 49431: u64 [sp + 0x28] = a0\n 49434: u64 [sp + 0x30] = a2\n 49437: t2 = a2 >u 0\n 49439: u64 [sp + 0x38] = ra\n 49442: t2 = t2 + ra\n 49445: ra = u64 [sp + 0x8]\n 49448: a0 = -t2\n 49450: a2 = u64 [sp + 0x28]\n 49453: a0 = a0 - a2\n 49456: a2 = u64 [sp + 0x10]\n 49459: a1 = t0 - a1\n 49462: u64 [sp + 0x28] = t1\n 49465: t2 = s1 - t1\n 49468: t1 = a5\n 49470: s1 = -a5\n 49472: s1 = s1 - a4\n 49475: a4 = a2 ^ s1\n 49478: s1 = s1 <u a2\n 49481: t0 = u64 [sp + 0x18]\n 49484: a5 = t2 <u t0\n 49487: a5 = s1 if a4 != 0\n 49490: a4 = a1 <u a3\n 49493: s1 = ra ^ a0\n 49496: a0 = a0 <s ra\n 49499: a0 = a4 if s1 == 0\n 49502: a1 = a1 ^ a3\n 49505: a1 = a1 | s1\n 49508: a5 = a0 if a1 != 0\n 49511: jump @1584 if a5 != 0\n      : @1580 (gas: 18)\n 49514: a0 = u64 [sp + 0x20]\n 49517: a1 = u64 [sp + 0x28]\n 49520: u64 [a0 + 0x20] = a1\n 49523: u64 [a0] = t0\n 49525: u64 [a0 + 0x28] = t1\n 49528: u64 [a0 + 0x8] = a2\n 49531: a1 = u64 [sp + 0x30]\n 49534: u64 [a0 + 0x30] = a1\n 49537: u64 [a0 + 0x10] = a3\n 49540: a1 = u64 [sp + 0x38]\n 49543: u64 [a0 + 0x38] = a1\n 49546: u64 [a0 + 0x18] = ra\n 49549: sp = s0 + 0xffffffffffffff60\n 49553: ra = u64 [sp + 0x98]\n 49557: s0 = u64 [sp + 0x90]\n 49561: s1 = u64 [sp + 0x88]\n 49565: sp = sp + 0xa0\n 49569: ret\n      : @1581 (gas: 1)\n 49571: trap\n      : @1582 (gas: 2)\n 49572: a1 = 0x20230\n 49577: jump @1585\n      : @1583 (gas: 2)\n 49579: a1 = 0x20230\n 49584: jump @1585\n      : @1584 (gas: 2)\n 49586: a1 = 0x20230\n 49591: fallthrough\n      : @1585 (gas: 6)\n 49592: i32 a1 = a1 + 0\n 49594: a0 = 0x1\n 49597: a2 = 0\n 49599: ra = 0x674\n 49603: ecalli 16 // 'seal_return'\n 49605: fallthrough\n      : @1586 [@dyn 826] (gas: 16)\n 49606: sp = sp + 0xffffffffffffff40\n 49610: u64 [sp + 0xb8] = ra\n 49614: u64 [sp + 0xb0] = s0\n 49618: u64 [sp + 0xa8] = s1\n 49622: s0 = sp + 0xc0\n 49626: sp = sp & 0xffffffffffffffe0\n 49629: s1 = sp\n 49631: t0 = u64 [a1 + 0x18]\n 49634: t1 = u64 [a1 + 0x10]\n 49637: a5 = u64 [a1]\n 49639: a4 = u64 [a1 + 0x8]\n 49642: a1 = t1 | t0\n 49645: a3 = a5 <u 0x20\n 49648: a3 = 0 if a4 != 0\n 49650: a3 = 0 if a1 != 0\n 49652: jump @1594 if a3 != 0\n      : @1587 (gas: 23)\n 49656: u64 [s1 + 0x30] = a5\n 49659: u64 [s1 + 0x38] = a4\n 49662: u64 [s1 + 0x48] = t1\n 49665: u64 [s1 + 0x20] = t0\n 49668: a1 = u64 [a2 + 0x18]\n 49671: u64 [s1 + 0x40] = a1\n 49674: a1 = u64 [a2 + 0x10]\n 49677: u64 [s1 + 0x18] = a1\n 49680: a1 = u64 [a2 + 0x8]\n 49683: u64 [s1 + 0x58] = a1\n 49686: a1 = u64 [a2]\n 49688: u64 [s1 + 0x50] = a1\n 49691: a2 = u64 [a0 + 0x18]\n 49694: a1 = u64 [a0 + 0x10]\n 49697: a3 = u64 [a0 + 0x8]\n 49700: a0 = u64 [a0]\n 49702: u64 [s1 + 0x60] = a0\n 49705: u64 [s1 + 0x68] = a3\n 49708: u64 [s1 + 0x70] = a1\n 49711: a1 = s1 + 0x60\n 49714: u64 [s1 + 0x78] = a2\n 49717: a0 = 0\n 49719: ra = 1654, jump @24\n      : @1588 [@dyn 827] (gas: 2)\n 49726: a1 = i32 [0x20228]\n 49731: jump @1590 if a1 >u 31\n      : @1589 (gas: 2)\n 49735: u32 [0x20228] = 0x20\n 49741: fallthrough\n      : @1590 (gas: 118)\n 49742: a0 = sp + 0xffffffffffffffe0\n 49745: a2 = a0 & 0xffffffffffffffe0\n 49748: u64 [s1 + 0x28] = a2\n 49751: sp = a2\n 49753: a0 = 0x20230\n 49758: i32 a0 = a0 + 0\n 49760: i32 a2 = a2 + 0\n 49762: a1 = 0x20\n 49765: ecalli 11 // 'hash_keccak_256'\n 49767: t1 = u64 [s1 + 0x50]\n 49770: a1 = t1 + 0x1f\n 49773: a0 = a1 <u t1\n 49776: a5 = u64 [s1 + 0x58]\n 49779: a3 = a5 + a0\n 49782: a2 = a3 <u a5\n 49785: a2 = a0 if a0 == 0\n 49788: t0 = u64 [s1 + 0x18]\n 49791: a2 = a2 + t0\n 49794: u64 [s1 + 0x10] = a2\n 49797: a2 = a2 << 0x3b\n 49800: a4 = a3 >> 0x5\n 49803: a2 = a2 | a4\n 49806: a3 = a3 << 0x3b\n 49809: a1 = a1 >> 0x5\n 49812: a0 = a1 | a3\n 49815: a1 = t1 <u 0x20\n 49818: a1 = 0 if a5 != 0\n 49820: a4 = u64 [s1 + 0x28]\n 49823: t1 = u64 [a4 + 0x18]\n 49826: a5 = u64 [a4 + 0x10]\n 49829: a3 = u64 [s1 + 0x40]\n 49832: a4 = t0 | a3\n 49835: a1 = 0 if a4 != 0\n 49837: ra = reverse t1\n 49839: a3 = reverse a5\n 49841: a2 = 0 if a1 != 0\n 49843: a0 = 0 if a1 != 0\n 49845: a0 = a0 + ra\n 49848: u64 [s1 + 0x58] = a0\n 49851: a0 = a0 <u ra\n 49854: a5 = a3 + a0\n 49857: a2 = a2 + a5\n 49860: u64 [s1 + 0x50] = a2\n 49863: a5 = a2 ^ a3\n 49866: a2 = a2 <u a3\n 49869: a2 = a0 if a5 == 0\n 49872: u64 [s1 + 0x8] = a2\n 49875: a0 = u64 [s1 + 0x30]\n 49878: t2 = a0 + 0x1f\n 49881: a2 = t2 <u a0\n 49884: a0 = u64 [s1 + 0x38]\n 49887: a4 = a0 + a2\n 49890: a5 = a4 <u a0\n 49893: a5 = a2 if a2 == 0\n 49896: t1 = u64 [s1 + 0x48]\n 49899: t1 = t1 + a5\n 49902: a2 = t1 << 0x3b\n 49905: a0 = a4 >> 0x5\n 49908: a0 = a0 | a2\n 49911: a4 = a4 << 0x3b\n 49914: a2 = t2 >> 0x5\n 49917: a2 = a2 | a4\n 49920: a2 = a2 + ra\n 49923: u64 [s1 + 0x38] = a2\n 49926: a2 = a2 <u ra\n 49929: a4 = a3 + a2\n 49932: a4 = a4 + a0\n 49935: a0 = a4 ^ a3\n 49938: u64 [s1 + 0x30] = a4\n 49941: a3 = a4 <u a3\n 49944: a3 = a2 if a0 == 0\n 49947: a2 = u64 [s1 + 0x10]\n 49950: a0 = a2 <u t0\n 49953: a4 = u64 [s1 + 0x40]\n 49956: a0 = a0 + a4\n 49959: a2 = a2 >> 0x5\n 49962: a4 = a0 << 0x3b\n 49965: a2 = a2 | a4\n 49968: a4 = u64 [s1 + 0x28]\n 49971: t0 = u64 [a4]\n 49973: a4 = u64 [a4 + 0x8]\n 49976: a0 = a0 >> 0x5\n 49979: a2 = 0 if a1 != 0\n 49981: a0 = 0 if a1 != 0\n 49983: a1 = reverse a4\n 49985: a4 = reverse t0\n 49987: a0 = a0 + a4\n 49990: a2 = a2 + a1\n 49993: a5 = a2 <u a1\n 49996: a0 = a0 + a5\n 49999: t2 = u64 [s1 + 0x8]\n 50002: t2 = t2 + a2\n 50005: a2 = t2 <u a2\n 50008: t0 = a0 + a2\n 50011: a0 = u64 [s1 + 0x48]\n 50014: a0 = t1 <u a0\n 50017: a2 = u64 [s1 + 0x20]\n 50020: a0 = a0 + a2\n 50023: a2 = t1 >> 0x5\n 50026: a5 = a0 << 0x3b\n 50029: a2 = a2 | a5\n 50032: ra = u64 [s1 + 0x58]\n 50035: a0 = a0 >> 0x5\n 50038: a0 = a0 + a4\n 50041: a4 = u64 [s1 + 0x50]\n 50044: a2 = a2 + a1\n 50047: a1 = a2 <u a1\n 50050: a0 = a0 + a1\n 50053: a3 = a3 + a2\n 50056: u64 [s1 + 0x28] = a3\n 50059: a1 = a3 <u a2\n 50062: a0 = a0 + a1\n 50065: u64 [s1 + 0x20] = a0\n 50068: a0 = sp + 0xffffffffffffffe0\n 50071: a5 = a0 & 0xffffffffffffffe0\n 50074: sp = a5\n 50076: u64 [s1 + 0x18] = a5\n 50079: fallthrough\n      : @1591 (gas: 20)\n 50080: a0 = u64 [s1 + 0x38]\n 50083: a0 = ra <u a0\n 50086: a2 = u64 [s1 + 0x30]\n 50089: a1 = a4 ^ a2\n 50092: a2 = a4 <u a2\n 50095: a2 = a0 if a1 == 0\n 50098: a0 = u64 [s1 + 0x28]\n 50101: t1 = t2 <u a0\n 50104: a3 = u64 [s1 + 0x20]\n 50107: a1 = t0 ^ a3\n 50110: a3 = t0 <u a3\n 50113: a3 = t1 if a1 == 0\n 50116: a0 = t2 ^ a0\n 50119: a0 = a0 | a1\n 50122: a3 = a2 if a0 == 0\n 50125: u64 [a5] = ra\n 50127: u64 [a5 + 0x8] = a4\n 50130: u64 [a5 + 0x10] = t2\n 50133: u64 [a5 + 0x18] = t0\n 50136: jump @1594 if a3 == 0\n      : @1592 (gas: 11)\n 50139: u64 [s1 + 152] = 0\n 50143: u64 [s1 + 144] = 0\n 50147: u64 [s1 + 136] = 0\n 50151: u64 [s1 + 128] = 0\n 50155: a1 = s1 + 0x80\n 50159: a0 = a5\n 50161: u64 [s1 + 0x58] = ra\n 50164: u64 [s1 + 0x50] = a4\n 50167: u64 [s1 + 0x48] = t0\n 50170: u64 [s1 + 0x40] = t2\n 50173: ra = 1656, jump @28\n      : @1593 [@dyn 828] (gas: 15)\n 50180: a5 = u64 [s1 + 0x18]\n 50183: t0 = u64 [s1 + 0x48]\n 50186: a4 = u64 [s1 + 0x50]\n 50189: ra = u64 [s1 + 0x58]\n 50192: ra = ra + 0x1\n 50195: a0 = ra <u 0x1\n 50198: a4 = a4 + a0\n 50201: a0 = ra | a4\n 50204: a0 = a0 <u 0x1\n 50207: a1 = u64 [s1 + 0x40]\n 50210: a0 = a0 + a1\n 50213: a1 = a0 <u a1\n 50216: t0 = t0 + a1\n 50219: t2 = a0\n 50221: jump @1591\n      : @1594 (gas: 6)\n 50224: sp = s0 + 0xffffffffffffff40\n 50228: ra = u64 [sp + 0xb8]\n 50232: s0 = u64 [sp + 0xb0]\n 50236: s1 = u64 [sp + 0xa8]\n 50240: sp = sp + 0xc0\n 50244: ret\n      : @1595 [@dyn 829] (gas: 1)\n 50246: jump @1605 if a3 != 0\n      : @1596 (gas: 1)\n 50250: t0 = 1660, jump @1798\n      : @1597 [@dyn 830] (gas: 5)\n 50256: ra = 0x67e\n 50260: ecalli 4 // 'call_data_load'\n 50262: a0 = 0x20224\n 50267: t0 = 0x680\n 50271: jump @1783\n      : @1598 [@dyn 831] (gas: 2)\n 50274: a0 = 0x20224\n 50279: t0 = 1664, jump @1783\n      : @1599 [@dyn 832] (gas: 41)\n 50285: t0 = u64 [sp + 0x30]\n 50288: t2 = -t0\n 50290: u64 [sp + 0x18] = s1\n 50293: a5 = s1 + a3\n 50296: a0 = -a5\n 50298: a2 = a2 - a1\n 50301: a3 = a2 + 0xffffffffffffffe1\n 50304: a2 = a3 <u a2\n 50307: a5 = a5 ^ 0xffffffffffffffff\n 50310: a5 = a5 + a2\n 50313: a1 = a5 ^ a0\n 50316: a0 = a5 <u a0\n 50319: a0 = a2 if a1 == 0\n 50322: a1 = t2 <u a4\n 50325: a2 = t0\n 50327: t0 = u64 [sp + 0x10]\n 50330: a2 = a2 >u 0\n 50332: s1 = u64 [sp + 0x38]\n 50335: a2 = a2 + s1\n 50338: a1 = a1 + a2\n 50341: a2 = u64 [sp + 0x48]\n 50344: s1 = t2 - a4\n 50347: a4 = s1 <u 0x1\n 50350: a1 = a1 + a4\n 50353: a4 = u64 [sp + 0x40]\n 50356: s1 = s1 + 0xffffffffffffffff\n 50359: a0 = a0 + s1\n 50362: s1 = a0 <u s1\n 50365: s1 = s1 - a1\n 50368: a1 = a2 ^ a5\n 50371: a5 = a2 <u a5\n 50374: a3 = a4 <u a3\n 50377: a3 = a5 if a1 != 0\n 50380: a1 = t1 <u a0\n 50383: a5 = t0 ^ s1\n 50386: s1 = t0 <s s1\n 50389: s1 = a1 if a5 == 0\n 50392: a0 = t1 ^ a0\n 50395: a0 = a0 | a5\n 50398: a3 = s1 if a0 != 0\n 50401: jump @1606 if a3 == 0\n      : @1600 (gas: 28)\n 50405: a0 = u64 [sp + 0x28]\n 50408: a5 = a4 + a0\n 50411: a0 = a5 <u a4\n 50414: s1 = u64 [sp + 0x18]\n 50417: s1 = s1 + a2\n 50420: s1 = s1 + a0\n 50423: a1 = s1 ^ a2\n 50426: a2 = s1 <u a2\n 50429: a2 = a0 if a1 == 0\n 50432: a0 = u64 [sp + 0x30]\n 50435: a0 = a0 + t1\n 50438: a3 = a0 + a2\n 50441: a1 = a3 <u a0\n 50444: a0 = a0 <u t1\n 50447: a2 = u64 [sp + 0x38]\n 50450: t0 = t0 + a2\n 50453: a0 = a0 + t0\n 50456: a1 = a1 + a0\n 50459: a0 = a5 | a3\n 50462: u64 [sp + 0x28] = a1\n 50465: a1 = a1 | s1\n 50468: a0 = a0 | a1\n 50471: a0 = a0 >> 0x20\n 50474: u64 [sp + 0x30] = a3\n 50477: a1 = a1 | a3\n 50480: a1 = a1 << 0x20\n 50483: a0 = a0 | a1\n 50486: jump @1605 if a0 != 0\n      : @1601 (gas: 5)\n 50490: u64 [sp + 0x18] = a5\n 50493: i32 a1 = a5 + 0\n 50495: i32 a0 = sp + 0x60\n 50498: ecalli 4 // 'call_data_load'\n 50500: fallthrough\n      : @1602 (gas: 8)\n 50501: a0 = u64 [sp + 0x78]\n 50504: a2 = u64 [sp + 0x70]\n 50507: ra = u64 [sp + 0x68]\n 50510: u64 [sp + 0x38] = a0\n 50513: a0 = a0 | a2\n 50516: a3 = ra <u 0x1\n 50519: a3 = 0 if a0 != 0\n 50521: jump @1607 if a3 == 0\n      : @1603 (gas: 49)\n 50525: a3 = u64 [sp + 0x60]\n 50528: a0 = u64 [sp + 0x18]\n 50531: a1 = a0 + 0x20\n 50534: u64 [sp + 0x10] = a1\n 50537: a5 = a1 <u a0\n 50540: a0 = s1 + a5\n 50543: u64 [sp + 0x18] = a0\n 50546: a0 = a0 <u s1\n 50549: a0 = a5 if a5 == 0\n 50552: a1 = u64 [sp + 0x8]\n 50555: a5 = u32 [a1]\n 50557: a1 = u64 [sp + 0x30]\n 50560: a0 = a0 + a1\n 50563: s1 = a0 <u a1\n 50566: a1 = u64 [sp + 0x28]\n 50569: a1 = a1 + s1\n 50572: u64 [sp + 0x28] = a1\n 50575: a4 = a5 <u a3\n 50578: a1 = ra >u 0\n 50580: a1 = a4 if ra == 0\n 50583: t0 = -a2\n 50585: t1 = t0 <u a1\n 50588: u64 [sp + 0x30] = a2\n 50591: t2 = a2 >u 0\n 50593: a2 = a3\n 50595: a3 = u64 [sp + 0x38]\n 50598: t2 = t2 + a3\n 50601: s1 = -t2\n 50603: t2 = u64 [sp + 0x28]\n 50606: s1 = s1 - t1\n 50609: a1 = t0 - a1\n 50612: t0 = u64 [sp + 0x10]\n 50615: a3 = -ra\n 50617: a3 = a3 - a4\n 50620: t1 = a2\n 50622: a4 = a5 - a2\n 50625: a2 = u64 [sp + 0x18]\n 50628: a4 = a4 <u t0\n 50631: a5 = a2 ^ a3\n 50634: a3 = a3 <u a2\n 50637: a3 = a4 if a5 == 0\n 50640: a4 = a1 <u a0\n 50643: a5 = t2 ^ s1\n 50646: s1 = s1 <s t2\n 50649: s1 = a4 if a5 == 0\n 50652: a1 = a1 ^ a0\n 50655: a1 = a1 | a5\n 50658: a3 = s1 if a1 != 0\n 50661: jump @1608 if a3 != 0\n      : @1604 (gas: 17)\n 50664: a1 = u64 [sp + 0x20]\n 50667: u64 [a1 + 0x20] = t1\n 50670: u64 [a1] = t0\n 50672: u64 [a1 + 0x28] = ra\n 50675: u64 [a1 + 0x8] = a2\n 50678: a2 = u64 [sp + 0x30]\n 50681: u64 [a1 + 0x30] = a2\n 50684: u64 [a1 + 0x10] = a0\n 50687: a0 = u64 [sp + 0x38]\n 50690: u64 [a1 + 0x38] = a0\n 50693: u64 [a1 + 0x18] = t2\n 50696: sp = s0 + 0xffffffffffffff60\n 50700: ra = u64 [sp + 0x98]\n 50704: s0 = u64 [sp + 0x90]\n 50708: s1 = u64 [sp + 0x88]\n 50712: sp = sp + 0xa0\n 50716: ret\n      : @1605 (gas: 1)\n 50718: trap\n      : @1606 (gas: 2)\n 50719: a1 = 0x20230\n 50724: jump @1609\n      : @1607 (gas: 2)\n 50726: a1 = 0x20230\n 50731: jump @1609\n      : @1608 (gas: 2)\n 50733: a1 = 0x20230\n 50738: fallthrough\n      : @1609 (gas: 6)\n 50739: i32 a1 = a1 + 0\n 50741: a0 = 0x1\n 50744: a2 = 0\n 50746: ra = 0x682\n 50750: ecalli 16 // 'seal_return'\n 50752: fallthrough\n      : @1610 [@dyn 833] (gas: 22)\n 50753: sp = sp + 0xffffffffffffff40\n 50757: u64 [sp + 0xb8] = ra\n 50761: u64 [sp + 0xb0] = s0\n 50765: u64 [sp + 0xa8] = s1\n 50769: s0 = sp + 0xc0\n 50773: sp = sp & 0xfffffffffffffff0\n 50776: a5 = u64 [a3 + 0x10]\n 50779: a4 = u64 [a3 + 0x18]\n 50782: s1 = u64 [a3 + 0x8]\n 50785: t0 = u64 [a3]\n 50787: u64 [sp + 0x50] = a4\n 50790: u64 [sp + 0x40] = s1\n 50793: a3 = s1 | a4\n 50796: a4 = t0 | a5\n 50799: a4 = a4 | a3\n 50802: a4 = a4 >> 0x20\n 50805: u64 [sp + 0x58] = a5\n 50808: a3 = a3 | a5\n 50811: a3 = a3 << 0x20\n 50814: a3 = a3 | a4\n 50817: u64 [sp] = a0\n 50819: jump @1621 if a3 != 0\n      : @1611 (gas: 23)\n 50823: a0 = u64 [a2 + 0x18]\n 50826: a3 = u64 [a2 + 0x10]\n 50829: a4 = u64 [a2 + 0x8]\n 50832: a2 = u64 [a2]\n 50834: a5 = u64 [a1 + 0x18]\n 50837: u64 [sp + 0x18] = a5\n 50840: s1 = u64 [a1 + 0x10]\n 50843: a5 = u64 [a1 + 0x8]\n 50846: u64 [sp + 0x10] = a5\n 50849: a1 = u64 [a1]\n 50851: u64 [sp + 0x8] = a1\n 50854: u64 [sp + 0x20] = a2\n 50857: u64 [sp + 0x80] = a2\n 50861: u64 [sp + 0x28] = a4\n 50864: u64 [sp + 0x88] = a4\n 50868: u64 [sp + 0x30] = a3\n 50871: u64 [sp + 0x90] = a3\n 50875: a1 = sp + 0x80\n 50879: u64 [sp + 0x38] = a0\n 50882: u64 [sp + 0x98] = a0\n 50886: u64 [sp + 0x48] = t0\n 50889: a0 = t0\n 50891: ra = 1668, jump @24\n      : @1612 [@dyn 834] (gas: 11)\n 50898: t1 = u64 [sp + 0x8]\n 50901: a0 = t1 | s1\n 50904: a1 = u64 [sp + 0x18]\n 50907: a2 = u64 [sp + 0x10]\n 50910: a1 = a1 | a2\n 50913: a0 = a0 | a1\n 50916: a0 = a0 >> 0x20\n 50919: a1 = a1 | s1\n 50922: a1 = a1 << 0x20\n 50925: a0 = a0 | a1\n 50928: jump @1621 if a0 != 0\n      : @1613 (gas: 15)\n 50932: a2 = u64 [sp + 0x30]\n 50935: a4 = u64 [sp + 0x20]\n 50938: a0 = a4 | a2\n 50941: a1 = u64 [sp + 0x38]\n 50944: a3 = u64 [sp + 0x28]\n 50947: a1 = a1 | a3\n 50950: a0 = a0 | a1\n 50953: a0 = a0 >> 0x20\n 50956: a1 = a1 | a2\n 50959: a1 = a1 << 0x20\n 50962: a0 = a0 | a1\n 50965: a3 = u64 [sp + 0x58]\n 50968: a2 = u64 [sp + 0x50]\n 50971: s1 = u64 [sp + 0x40]\n 50974: jump @1621 if a0 != 0\n      : @1614 (gas: 9)\n 50978: a1 = a4\n 50980: a0 = a3 | a2\n 50983: a4 = 0xffffffe0\n 50993: a3 = u64 [sp + 0x48]\n 50996: u64 [sp + 0x18] = a4\n 50999: a4 = a3 <u a4\n 51002: a4 = 0 if s1 != 0\n 51004: a4 = 0 if a0 != 0\n 51006: jump @1621 if a4 == 0\n      : @1615 (gas: 5)\n 51010: i32 t1 = t1 + 0\n 51012: u64 [sp + 0x10] = t1\n 51015: i32 a0 = a3 + 0x20\n 51018: s1 = a1\n 51020: ra = 1670, jump @36\n      : @1616 [@dyn 835] (gas: 5)\n 51027: i32 a0 = a0 + 0\n 51029: i32 a1 = s1 + 0\n 51031: a2 = u64 [sp + 0x10]\n 51034: ecalli 3 // 'call_data_copy'\n 51036: fallthrough\n      : @1617 (gas: 27)\n 51037: a1 = u64 [sp + 0x48]\n 51040: a0 = a1 + s1\n 51043: a1 = a0 <u a1\n 51046: a2 = u64 [sp + 0x28]\n 51049: s1 = u64 [sp + 0x40]\n 51052: a2 = a2 + s1\n 51055: a2 = a2 + a1\n 51058: a3 = a2 ^ s1\n 51061: a4 = a2 <u s1\n 51064: a4 = a1 if a3 == 0\n 51067: a3 = u64 [sp + 0x58]\n 51070: a1 = u64 [sp + 0x30]\n 51073: a1 = a1 + a3\n 51076: t0 = a1 <u a3\n 51079: a5 = u64 [sp + 0x38]\n 51082: a3 = u64 [sp + 0x50]\n 51085: a5 = a5 + a3\n 51088: a3 = a5 + t0\n 51091: a4 = a4 + a1\n 51094: a1 = a4 <u a1\n 51097: a1 = a1 + a3\n 51100: a1 = a1 | a4\n 51103: a3 = u64 [sp + 0x18]\n 51106: a3 = a0 <u a3\n 51109: a3 = 0 if a2 != 0\n 51111: a3 = 0 if a1 != 0\n 51113: jump @1621 if a3 == 0\n      : @1618 (gas: 7)\n 51116: i32 a0 = a0 + 0x20\n 51119: u64 [sp + 120] = 0\n 51122: u64 [sp + 112] = 0\n 51125: u64 [sp + 104] = 0\n 51128: a1 = sp + 0x60\n 51131: u64 [sp + 96] = 0\n 51134: ra = 1672, jump @24\n      : @1619 [@dyn 836] (gas: 15)\n 51141: a0 = u64 [sp + 0x20]\n 51144: a0 = a0 + 0x1f\n 51147: a1 = 0x1ffffffe0\n 51157: a0 = a0 & a1\n 51160: a1 = u64 [sp + 0x48]\n 51163: a0 = a0 + a1\n 51166: a1 = a0 <u a1\n 51169: a2 = s1 + a1\n 51172: a3 = a2 <u s1\n 51175: a3 = a1 if a1 == 0\n 51178: a1 = u64 [sp + 0x58]\n 51181: a3 = a3 + a1\n 51184: a1 = a3 <u a1\n 51187: a4 = u64 [sp + 0x50]\n 51190: t0 = 1674, jump @1775\n      : @1620 [@dyn 837] (gas: 11)\n 51196: a1 = u64 [sp]\n 51198: u64 [a1] = a4\n 51200: u64 [a1 + 0x8] = a5\n 51203: u64 [a1 + 0x10] = a2\n 51206: u64 [a1 + 0x18] = a0\n 51209: sp = s0 + 0xffffffffffffff40\n 51213: ra = u64 [sp + 0xb8]\n 51217: s0 = u64 [sp + 0xb0]\n 51221: s1 = u64 [sp + 0xa8]\n 51225: sp = sp + 0xc0\n 51229: ret\n      : @1621 (gas: 1)\n 51231: trap\n      : @1622 [@dyn 838] (gas: 1)\n 51232: jump @1624 if a0 == 0\n      : @1623 (gas: 6)\n 51235: sp = s0 + 0xffffffffffffff20\n 51239: ra = u64 [sp + 0xd8]\n 51243: s0 = u64 [sp + 0xd0]\n 51247: s1 = u64 [sp + 0xc8]\n 51251: sp = sp + 0xe0\n 51255: ret\n      : @1624 (gas: 3)\n 51257: a0 = sp + 0xa0\n 51261: a1 = 0x40\n 51264: ra = 1678, jump @22\n      : @1625 [@dyn 839] (gas: 1)\n 51271: t0 = 1680, jump @1779\n      : @1626 [@dyn 840] (gas: 1)\n 51277: jump @1637 if a0 != 0\n      : @1627 (gas: 1)\n 51280: t0 = 1682, jump @1795\n      : @1628 [@dyn 841] (gas: 1)\n 51286: ra = 1684, jump @24\n      : @1629 [@dyn 842] (gas: 1)\n 51293: t0 = 1686, jump @1776\n      : @1630 [@dyn 843] (gas: 1)\n 51299: jump @1637 if a0 == 0\n      : @1631 (gas: 8)\n 51302: a0 = u64 [sp + 0x18]\n 51305: i32 a0 = a0 + 0x4\n 51308: u64 [sp + 120] = 0\n 51311: u64 [sp + 112] = 0\n 51314: u64 [sp + 96] = 0x20\n 51318: a1 = sp + 0x60\n 51321: u64 [sp + 104] = 0\n 51324: ra = 1688, jump @24\n      : @1632 [@dyn 844] (gas: 1)\n 51331: t0 = 1690, jump @1796\n      : @1633 [@dyn 845] (gas: 1)\n 51337: jump @1637 if a0 == 0\n      : @1634 (gas: 8)\n 51340: s1 = u64 [sp + 0x18]\n 51343: i32 a0 = s1 + 0x24\n 51346: u64 [sp + 88] = 0\n 51349: u64 [sp + 80] = 0\n 51352: u64 [sp + 64] = 0x12\n 51356: a1 = sp + 0x40\n 51359: u64 [sp + 72] = 0\n 51362: ra = 1692, jump @24\n      : @1635 [@dyn 846] (gas: 1)\n 51369: t0 = 1694, jump @1788\n      : @1636 [@dyn 847] (gas: 1)\n 51375: jump @1638 if a0 != 0\n      : @1637 (gas: 1)\n 51378: trap\n      : @1638 (gas: 11)\n 51379: s1 = u64 [sp + 0x18]\n 51382: i32 a0 = s1 + 0x44\n 51385: a1 = u64 [0x20200]\n 51390: a2 = u64 [0x20208]\n 51395: u64 [sp + 0x38] = a1\n 51398: u64 [sp + 0x30] = a2\n 51401: a1 = 0x6564000000000000\n 51411: u64 [sp + 0x28] = a1\n 51414: a1 = sp + 0x20\n 51417: u64 [sp + 32] = 0\n 51420: ra = 1696, jump @24\n      : @1639 [@dyn 848] (gas: 3)\n 51427: a1 = 0x64\n 51430: a0 = s1\n 51432: ra = 1698, jump @36\n      : @1640 [@dyn 849] (gas: 7)\n 51439: i32 a1 = a0 + 0\n 51441: a0 = 0x1\n 51444: a2 = 0x64\n 51447: ra = 0x6a4\n 51451: ecalli 16 // 'seal_return'\n 51453: t0 = 0x6a6\n 51457: jump @1780\n      : @1641 [@dyn 850] (gas: 1)\n 51460: t0 = 1702, jump @1780\n      : @1642 [@dyn 851] (gas: 1)\n 51466: jump @1644 if a0 == 0\n      : @1643 (gas: 6)\n 51469: sp = s0 + 0xffffffffffffff20\n 51473: ra = u64 [sp + 0xd8]\n 51477: s0 = u64 [sp + 0xd0]\n 51481: s1 = u64 [sp + 0xc8]\n 51485: sp = sp + 0xe0\n 51489: ret\n      : @1644 (gas: 3)\n 51491: a0 = sp + 0xa0\n 51495: a1 = 0x40\n 51498: ra = 1704, jump @22\n      : @1645 [@dyn 852] (gas: 1)\n 51505: t0 = 1706, jump @1779\n      : @1646 [@dyn 853] (gas: 1)\n 51511: jump @1657 if a0 != 0\n      : @1647 (gas: 1)\n 51514: t0 = 1708, jump @1795\n      : @1648 [@dyn 854] (gas: 1)\n 51520: ra = 1710, jump @24\n      : @1649 [@dyn 855] (gas: 1)\n 51527: t0 = 1712, jump @1776\n      : @1650 [@dyn 856] (gas: 1)\n 51533: jump @1657 if a0 == 0\n      : @1651 (gas: 8)\n 51536: a0 = u64 [sp + 0x18]\n 51539: i32 a0 = a0 + 0x4\n 51542: u64 [sp + 120] = 0\n 51545: u64 [sp + 112] = 0\n 51548: u64 [sp + 96] = 0x20\n 51552: a1 = sp + 0x60\n 51555: u64 [sp + 104] = 0\n 51558: ra = 1714, jump @24\n      : @1652 [@dyn 857] (gas: 1)\n 51565: t0 = 1716, jump @1796\n      : @1653 [@dyn 858] (gas: 1)\n 51571: jump @1657 if a0 == 0\n      : @1654 (gas: 8)\n 51574: s1 = u64 [sp + 0x18]\n 51577: i32 a0 = s1 + 0x24\n 51580: u64 [sp + 88] = 0\n 51583: u64 [sp + 80] = 0\n 51586: u64 [sp + 64] = 0x11\n 51590: a1 = sp + 0x40\n 51593: u64 [sp + 72] = 0\n 51596: ra = 1718, jump @24\n      : @1655 [@dyn 859] (gas: 1)\n 51603: t0 = 1720, jump @1788\n      : @1656 [@dyn 860] (gas: 1)\n 51609: jump @1658 if a0 != 0\n      : @1657 (gas: 1)\n 51612: trap\n      : @1658 (gas: 11)\n 51613: s1 = u64 [sp + 0x18]\n 51616: i32 a0 = s1 + 0x44\n 51619: a1 = u64 [0x20210]\n 51624: a2 = u64 [0x20218]\n 51629: u64 [sp + 0x38] = a1\n 51632: u64 [sp + 0x30] = a2\n 51635: a1 = 0x6500000000000000\n 51645: u64 [sp + 0x28] = a1\n 51648: a1 = sp + 0x20\n 51651: u64 [sp + 32] = 0\n 51654: ra = 1722, jump @24\n      : @1659 [@dyn 861] (gas: 3)\n 51661: a1 = 0x64\n 51664: a0 = s1\n 51666: ra = 1724, jump @36\n      : @1660 [@dyn 862] (gas: 6)\n 51673: i32 a1 = a0 + 0\n 51675: a0 = 0x1\n 51678: a2 = 0x64\n 51681: ra = 0x6be\n 51685: ecalli 16 // 'seal_return'\n 51687: fallthrough\n      : @1661 [@dyn 863] (gas: 37)\n 51688: sp = sp + 0xfffffffffffffe10\n 51692: u64 [sp + 0x1e8] = ra\n 51696: u64 [sp + 0x1e0] = s0\n 51700: u64 [sp + 0x1d8] = s1\n 51704: s0 = sp + 0x1f0\n 51708: sp = sp & 0xfffffffffffffff0\n 51711: a4 = u64 [a3 + 0x18]\n 51714: u64 [sp + 0x40] = a4\n 51717: a4 = u64 [a3 + 0x10]\n 51720: u64 [sp + 0x38] = a4\n 51723: a4 = u64 [a3 + 0x8]\n 51726: u64 [sp + 0x30] = a4\n 51729: a3 = u64 [a3]\n 51731: u64 [sp + 0x28] = a3\n 51734: a3 = u64 [a2 + 0x10]\n 51737: u64 [sp + 0x48] = a3\n 51740: a3 = u64 [a2 + 0x8]\n 51743: u64 [sp + 0x50] = a3\n 51746: a2 = u64 [a2]\n 51748: u64 [sp + 0x58] = a2\n 51751: a2 = u64 [a1 + 0x10]\n 51754: u64 [sp + 0x60] = a2\n 51757: a2 = u64 [a1 + 0x8]\n 51760: u64 [sp + 0x70] = a2\n 51763: a1 = u64 [a1]\n 51765: u64 [sp + 0x68] = a1\n 51768: a1 = u64 [a0 + 0x18]\n 51771: u64 [sp + 0x8] = a1\n 51774: a1 = u64 [a0 + 0x10]\n 51777: u64 [sp + 0x10] = a1\n 51780: a1 = u64 [a0 + 0x8]\n 51783: u64 [sp + 0x18] = a1\n 51786: a0 = u64 [a0]\n 51788: u64 [sp + 0x20] = a0\n 51791: a0 = sp + 0x1b0\n 51795: a1 = 0x40\n 51798: ra = 1728, jump @22\n      : @1662 [@dyn 864] (gas: 16)\n 51805: a1 = u64 [sp + 0x1b0]\n 51809: a4 = u64 [sp + 0x1c8]\n 51813: a3 = u64 [sp + 0x1b8]\n 51817: a5 = u64 [sp + 0x1c0]\n 51821: a0 = a1 + 0x20\n 51824: s1 = a1\n 51826: a1 = a0 <u a1\n 51829: a2 = a3 + a1\n 51832: u64 [sp + 0x88] = a3\n 51836: a3 = a2 <u a3\n 51839: a3 = a1 if a1 == 0\n 51842: a3 = a3 + a5\n 51845: u64 [sp + 0x78] = a5\n 51848: a1 = a3 <u a5\n 51851: u64 [sp + 0x80] = a4\n 51855: t0 = 1730, jump @1732\n      : @1663 [@dyn 865] (gas: 1)\n 51861: jump @1679 if a1 != 0\n      : @1664 (gas: 7)\n 51865: u64 [sp + 416] = 0\n 51869: u64 [sp + 408] = 0\n 51873: a1 = 0x23b872dd00000000\n 51883: u64 [sp + 0x1a8] = a1\n 51887: a1 = sp + 0x190\n 51891: u64 [sp + 400] = 0\n 51895: ra = 1732, jump @24\n      : @1665 [@dyn 866] (gas: 11)\n 51902: a0 = s1 + 0x24\n 51905: a1 = a0 <u s1\n 51908: a3 = u64 [sp + 0x88]\n 51912: a2 = a3 + a1\n 51915: a3 = a2 <u a3\n 51918: a3 = a1 if a1 == 0\n 51921: a1 = u64 [sp + 0x78]\n 51924: a3 = a3 + a1\n 51927: a1 = a3 <u a1\n 51930: a4 = u64 [sp + 0x80]\n 51934: t0 = 1734, jump @1732\n      : @1666 [@dyn 867] (gas: 1)\n 51940: jump @1679 if a1 != 0\n      : @1667 (gas: 11)\n 51944: a1 = u64 [sp + 0x60]\n 51947: a1 = a1 << 0x20\n 51950: a2 = a1 >> 0x20\n 51953: u64 [sp + 392] = 0\n 51957: a1 = u64 [sp + 0x68]\n 51960: u64 [sp + 0x170] = a1\n 51964: a1 = u64 [sp + 0x70]\n 51967: u64 [sp + 0x178] = a1\n 51971: a1 = sp + 0x170\n 51975: u64 [sp + 0x180] = a2\n 51979: ra = 1736, jump @24\n      : @1668 [@dyn 868] (gas: 11)\n 51986: a0 = s1 + 0x44\n 51989: a1 = a0 <u s1\n 51992: a3 = u64 [sp + 0x88]\n 51996: a2 = a3 + a1\n 51999: a3 = a2 <u a3\n 52002: a3 = a1 if a1 == 0\n 52005: a1 = u64 [sp + 0x78]\n 52008: a3 = a3 + a1\n 52011: a1 = a3 <u a1\n 52014: a4 = u64 [sp + 0x80]\n 52018: t0 = 1738, jump @1732\n      : @1669 [@dyn 869] (gas: 1)\n 52024: jump @1679 if a1 != 0\n      : @1670 (gas: 13)\n 52028: a2 = 0xffffffff\n 52038: a3 = u64 [sp + 0x48]\n 52041: a2 = a2 & a3\n 52044: a3 = u64 [sp + 0x50]\n 52047: a3 = a3 & 0xffffffffffffffff\n 52050: a4 = u64 [sp + 0x58]\n 52053: a1 = a4 & 0xffffffffffffffff\n 52056: u64 [sp + 360] = 0\n 52060: u64 [sp + 0x150] = a1\n 52064: u64 [sp + 0x158] = a3\n 52068: a1 = sp + 0x150\n 52072: u64 [sp + 0x160] = a2\n 52076: ra = 1740, jump @24\n      : @1671 [@dyn 870] (gas: 11)\n 52083: a0 = s1 + 0x64\n 52086: a1 = a0 <u s1\n 52089: a3 = u64 [sp + 0x88]\n 52093: a2 = a3 + a1\n 52096: a3 = a2 <u a3\n 52099: a3 = a1 if a1 == 0\n 52102: a1 = u64 [sp + 0x78]\n 52105: a3 = a3 + a1\n 52108: a1 = a3 <u a1\n 52111: a4 = u64 [sp + 0x80]\n 52115: t0 = 1742, jump @1732\n      : @1672 [@dyn 871] (gas: 1)\n 52121: jump @1679 if a1 != 0\n      : @1673 (gas: 10)\n 52125: a1 = u64 [sp + 0x28]\n 52128: u64 [sp + 0x130] = a1\n 52132: a1 = u64 [sp + 0x30]\n 52135: u64 [sp + 0x138] = a1\n 52139: a1 = u64 [sp + 0x38]\n 52142: u64 [sp + 0x140] = a1\n 52146: a1 = sp + 0x130\n 52150: a2 = u64 [sp + 0x40]\n 52153: u64 [sp + 0x148] = a2\n 52157: ra = 1744, jump @24\n      : @1674 [@dyn 872] (gas: 11)\n 52164: a3 = u64 [sp + 0x78]\n 52167: a0 = s1 | a3\n 52170: a1 = u64 [sp + 0x88]\n 52174: a2 = u64 [sp + 0x80]\n 52178: a1 = a1 | a2\n 52181: a0 = a0 | a1\n 52184: a0 = a0 >> 0x20\n 52187: a1 = a1 | a3\n 52190: a1 = a1 << 0x20\n 52193: a0 = a0 | a1\n 52196: jump @1679 if a0 != 0\n      : @1675 (gas: 7)\n 52200: u64 [sp + 296] = 0\n 52204: u64 [sp + 288] = 0\n 52208: u64 [sp + 280] = 0\n 52212: a1 = sp + 0x110\n 52216: u64 [sp + 272] = 0x64\n 52221: a0 = s1\n 52223: ra = 1746, jump @24\n      : @1676 [@dyn 873] (gas: 14)\n 52230: u64 [sp + 232] = 0\n 52234: u64 [sp + 224] = 0\n 52238: u64 [sp + 216] = 0\n 52242: u64 [sp + 208] = 0x84\n 52248: a0 = u64 [sp + 0x80]\n 52252: u64 [sp + 0x108] = a0\n 52256: a0 = u64 [sp + 0x78]\n 52259: u64 [sp + 0x100] = a0\n 52263: a0 = u64 [sp + 0x88]\n 52267: u64 [sp + 0xf8] = a0\n 52271: a0 = sp + 0xf0\n 52275: a1 = sp + 0xd0\n 52279: u64 [sp + 0xf0] = s1\n 52283: ra = 1748, jump @1494\n      : @1677 [@dyn 874] (gas: 18)\n 52289: a0 = u64 [sp + 0x80]\n 52293: u64 [sp + 0xa8] = a0\n 52297: a0 = u64 [sp + 0x78]\n 52300: u64 [sp + 0xa0] = a0\n 52304: a0 = u64 [sp + 0x88]\n 52308: u64 [sp + 0x98] = a0\n 52312: u64 [sp + 0x90] = s1\n 52316: a0 = u64 [sp + 0x8]\n 52319: u64 [sp + 0xc8] = a0\n 52323: a0 = u64 [sp + 0x10]\n 52326: u64 [sp + 0xc0] = a0\n 52330: a0 = u64 [sp + 0x18]\n 52333: u64 [sp + 0xb8] = a0\n 52337: a0 = sp + 0xb0\n 52341: a1 = sp + 0x90\n 52345: a2 = u64 [sp + 0x20]\n 52348: u64 [sp + 0xb0] = a2\n 52352: ra = 1750, jump @1690\n      : @1678 [@dyn 875] (gas: 6)\n 52358: sp = s0 + 0xfffffffffffffe10\n 52362: ra = u64 [sp + 0x1e8]\n 52366: s0 = u64 [sp + 0x1e0]\n 52370: s1 = u64 [sp + 0x1d8]\n 52374: sp = sp + 0x1f0\n 52378: ret\n      : @1679 (gas: 1)\n 52380: trap\n      : @1680 (gas: 13)\n 52381: sp = sp + 0xffffffffffffff40\n 52385: u64 [sp + 0xb8] = ra\n 52389: u64 [sp + 0xb0] = s0\n 52393: u64 [sp + 0xa8] = s1\n 52397: s0 = sp + 0xc0\n 52401: sp = sp & 0xffffffffffffffe0\n 52404: u64 [sp + 152] = 0\n 52408: u64 [sp + 144] = 0\n 52412: u64 [sp + 136] = 0\n 52416: u64 [sp + 128] = 0\n 52420: a0 = sp + 0x60\n 52423: a1 = sp + 0x80\n 52427: ra = 1752, jump @26\n      : @1681 [@dyn 876] (gas: 12)\n 52434: a0 = u64 [sp + 0x68]\n 52437: u64 [sp + 0x18] = a0\n 52440: a0 = u64 [sp + 0x60]\n 52443: u64 [sp + 0x10] = a0\n 52446: a0 = u32 [sp + 0x70]\n 52449: u64 [sp + 0x8] = a0\n 52452: s1 = 0x30230\n 52457: i32 a0 = s1 + 0\n 52459: u64 [sp] = a0\n 52461: ra = 0x6da\n 52465: ecalli 6 // 'caller'\n 52467: fallthrough\n      : @1682 [@dyn 877] (gas: 4)\n 52468: a0 = u64 [s1 + 0x8]\n 52471: a1 = u64 [s1]\n 52473: a2 = i32 [s1 + 0x10]\n 52476: t0 = 1756, jump @1774\n      : @1683 [@dyn 878] (gas: 9)\n 52482: a2 = u64 [sp + 0x8]\n 52485: a1 = a1 ^ a2\n 52488: a2 = u64 [sp + 0x10]\n 52491: a0 = a0 ^ a2\n 52494: a0 = a0 | a1\n 52497: a1 = u64 [sp + 0x18]\n 52500: a1 = a1 ^ a3\n 52503: a0 = a0 | a1\n 52506: jump @1685 if a0 != 0\n      : @1684 (gas: 6)\n 52509: sp = s0 + 0xffffffffffffff40\n 52513: ra = u64 [sp + 0xb8]\n 52517: s0 = u64 [sp + 0xb0]\n 52521: s1 = u64 [sp + 0xa8]\n 52525: sp = sp + 0xc0\n 52529: ret\n      : @1685 (gas: 8)\n 52531: u64 [sp + 80] = 0\n 52534: u64 [sp + 72] = 0\n 52537: u64 [sp + 64] = 0\n 52540: a0 = 0x118cdaa700000000\n 52550: a1 = sp + 0x40\n 52553: u64 [sp + 0x58] = a0\n 52556: a0 = 0\n 52558: ra = 1758, jump @24\n      : @1686 [@dyn 879] (gas: 22)\n 52565: a0 = u64 [sp]\n 52567: ecalli 6 // 'caller'\n 52569: a0 = u64 [s1 + 0x8]\n 52572: a1 = i32 [s1 + 0x10]\n 52575: a2 = u64 [s1]\n 52577: a0 = reverse a0\n 52579: a3 = a0 << 0x20\n 52582: a1 = reverse a1\n 52584: a1 = a1 >> 0x20\n 52587: a3 = a3 | a1\n 52590: a0 = a0 >> 0x20\n 52593: a1 = reverse a2\n 52595: a2 = a1 << 0x20\n 52598: a0 = a0 | a2\n 52601: a1 = a1 >> 0x20\n 52604: u64 [sp + 56] = 0\n 52607: u64 [sp + 0x30] = a1\n 52610: u64 [sp + 0x28] = a0\n 52613: a0 = 0x4\n 52616: a1 = sp + 0x20\n 52619: u64 [sp + 0x20] = a3\n 52622: ra = 1760, jump @24\n      : @1687 [@dyn 880] (gas: 2)\n 52629: a1 = i32 [0x20228]\n 52634: jump @1689 if a1 >u 63\n      : @1688 (gas: 2)\n 52638: u32 [0x20228] = 0x40\n 52644: fallthrough\n      : @1689 (gas: 7)\n 52645: a1 = 0x20230\n 52650: i32 a1 = a1 + 0\n 52652: a0 = 0x1\n 52655: a2 = 0x24\n 52658: ra = 0x6e2\n 52662: ecalli 16 // 'seal_return'\n 52664: fallthrough\n      : @1690 [@dyn 881] (gas: 21)\n 52665: sp = sp + 0xfffffffffffffe80\n 52669: u64 [sp + 0x178] = ra\n 52673: u64 [sp + 0x170] = s0\n 52677: u64 [sp + 0x168] = s1\n 52681: s0 = sp + 0x180\n 52685: sp = sp & 0xffffffffffffffe0\n 52688: a4 = u64 [a1 + 0x10]\n 52691: a3 = u64 [a1 + 0x18]\n 52694: a2 = u64 [a1 + 0x8]\n 52697: a1 = u64 [a1]\n 52699: u64 [sp + 0x50] = a2\n 52702: u64 [sp + 0x40] = a3\n 52705: a3 = a3 | a2\n 52708: a2 = a1 | a4\n 52711: a2 = a2 | a3\n 52714: a2 = a2 >> 0x20\n 52717: u64 [sp + 0x48] = a4\n 52720: a3 = a3 | a4\n 52723: a3 = a3 << 0x20\n 52726: a2 = a2 | a3\n 52729: jump @1720 if a2 != 0\n      : @1691 (gas: 8)\n 52733: a2 = u64 [a0 + 0x10]\n 52736: u64 [sp + 0x30] = a2\n 52739: s1 = u64 [a0 + 0x8]\n 52742: a0 = u64 [a0]\n 52744: u64 [sp + 0x38] = a0\n 52747: a0 = sp + 0xe0\n 52751: u64 [sp + 0x28] = a1\n 52754: ra = 1764, jump @22\n      : @1692 [@dyn 882] (gas: 10)\n 52761: a0 = u64 [sp + 0xf8]\n 52765: u64 [sp + 0x18] = a0\n 52768: a0 = u64 [sp + 0xf0]\n 52772: u64 [sp + 0x20] = a0\n 52775: a0 = u64 [sp + 0xe8]\n 52779: u64 [sp + 0x10] = a0\n 52782: a0 = u64 [sp + 0xe0]\n 52786: u64 [sp + 0x58] = a0\n 52789: ecalli 13 // 'ref_time_left'\n 52791: fallthrough\n      : @1693 (gas: 31)\n 52792: t0 = u64 [sp + 0x28]\n 52795: u64 [sp + 0x8] = s1\n 52798: a0 = reverse s1\n 52800: a1 = a0 << 0x20\n 52803: a2 = u64 [sp + 0x30]\n 52806: a2 = reverse a2\n 52808: a2 = a2 >> 0x20\n 52811: a4 = a2 | a1\n 52814: a1 = u64 [sp + 0x38]\n 52817: a1 = reverse a1\n 52819: a2 = a1 << 0x20\n 52822: s1 = 0x30230\n 52827: a0 = a0 >> 0x20\n 52830: a2 = a2 | a0\n 52833: a3 = a1 >> 0x20\n 52836: u64 [0x30238] = a2\n 52841: u32 [0x30240] = a3\n 52846: u64 [0x30230] = a4\n 52851: u64 [sp + 280] = 0\n 52855: u64 [sp + 272] = 0\n 52859: u64 [sp + 264] = 0\n 52863: a0 = u64 [sp + 0x48]\n 52866: a1 = u64 [sp + 0x40]\n 52869: a0 = a0 | a1\n 52872: a1 = 0xffffffe0\n 52882: a1 = t0 <u a1\n 52885: a5 = u64 [sp + 0x50]\n 52888: a1 = 0 if a5 != 0\n 52890: a1 = 0 if a0 != 0\n 52892: u64 [sp + 256] = 0\n 52896: jump @1720 if a1 == 0\n      : @1694 (gas: 14)\n 52900: u64 [sp + 0x48] = a3\n 52903: u64 [sp + 0x50] = a2\n 52906: a2 = u64 [sp + 0x58]\n 52909: a3 = u64 [sp + 0x20]\n 52912: a0 = a2 | a3\n 52915: a1 = u64 [sp + 0x18]\n 52918: a5 = u64 [sp + 0x10]\n 52921: a1 = a1 | a5\n 52924: a0 = a0 | a1\n 52927: a0 = a0 >> 0x20\n 52930: a1 = a1 | a3\n 52933: a1 = a1 << 0x20\n 52936: a0 = a0 | a1\n 52939: jump @1720 if a0 != 0\n      : @1695 (gas: 4)\n 52943: a1 = a2\n 52945: u64 [sp + 0x40] = a4\n 52948: i32 a0 = t0 + 0x20\n 52951: ra = 1766, jump @36\n      : @1696 [@dyn 883] (gas: 3)\n 52958: a3 = 0x20228\n 52963: a1 = i32 [0x20228]\n 52968: jump @1698 if a1 >u 31\n      : @1697 (gas: 2)\n 52972: u32 [0x20228] = 0x20\n 52978: fallthrough\n      : @1698 (gas: 34)\n 52979: u64 [sp + 0x20] = a3\n 52982: u32 [sp + 288] = 0x20\n 52987: u64 [sp + 344] = 0xffffffffffffffff\n 52992: u64 [sp + 336] = 0xffffffffffffffff\n 52997: u64 [sp + 328] = 0xffffffffffffffff\n 53002: u64 [sp + 320] = 0xffffffffffffffff\n 53007: u64 [sp + 0x28] = s1\n 53010: a1 = s1 << 0x20\n 53013: a1 = a1 >> 0x20\n 53016: a2 = 0x800000000\n 53026: s1 = a1 | a2\n 53029: a1 = sp + 0x100\n 53033: a1 = a1 << 0x20\n 53036: a1 = a1 >> 0x20\n 53039: a2 = sp + 0x140\n 53043: a2 = a2 << 0x20\n 53046: a3 = a2 | a1\n 53049: a0 = a0 << 0x20\n 53052: a1 = 0x20230\n 53057: a0 = a0 >> 0x20\n 53060: a4 = u64 [sp + 0x58]\n 53063: a4 = a4 << 0x20\n 53066: a4 = a4 | a0\n 53069: u64 [sp + 0x58] = a1\n 53072: a0 = a1 << 0x20\n 53075: a0 = a0 >> 0x20\n 53078: a1 = sp + 0x120\n 53082: a1 = a1 << 0x20\n 53085: a5 = a1 | a0\n 53088: a1 = 0xffffffffffffffff\n 53091: a2 = 0xffffffffffffffff\n 53094: a0 = s1\n 53096: ecalli 2 // 'call'\n 53098: fallthrough\n      : @1699 (gas: 1)\n 53099: jump @1711 if a0 != 0\n      : @1700 (gas: 5)\n 53103: ecalli 15 // 'return_data_size'\n 53105: s1 = a0\n 53107: a0 = sp + 0xa0\n 53111: a1 = 0\n 53113: ra = 1768, jump @22\n      : @1701 [@dyn 884] (gas: 1)\n 53120: jump @1704 if s1 == 0\n      : @1702 (gas: 9)\n 53123: a0 = u64 [sp + 0xb8]\n 53127: a1 = u64 [sp + 0xa0]\n 53131: a2 = u64 [sp + 0xb0]\n 53135: a3 = u64 [sp + 0xa8]\n 53139: a1 = a1 ^ 0x1\n 53142: a1 = a1 | a2\n 53145: a0 = a0 | a3\n 53148: a0 = a0 | a1\n 53151: jump @1706 if a0 != 0\n      : @1703 (gas: 6)\n 53154: sp = s0 + 0xfffffffffffffe80\n 53158: ra = u64 [sp + 0x178]\n 53162: s0 = u64 [sp + 0x170]\n 53166: s1 = u64 [sp + 0x168]\n 53170: sp = sp + 0x180\n 53174: ret\n      : @1704 (gas: 10)\n 53176: a0 = u64 [sp + 0x40]\n 53179: a1 = u64 [sp + 0x28]\n 53182: u64 [a1] = a0\n 53184: a0 = u64 [sp + 0x50]\n 53187: u64 [a1 + 0x8] = a0\n 53190: a0 = u64 [sp + 0x48]\n 53193: u32 [a1 + 0x10] = a0\n 53196: i32 a0 = a1 + 0\n 53198: ecalli 7 // 'code_size'\n 53200: fallthrough\n      : @1705 (gas: 1)\n 53201: jump @1703 if a0 != 0\n      : @1706 (gas: 8)\n 53204: u64 [sp + 144] = 0\n 53208: u64 [sp + 136] = 0\n 53212: u64 [sp + 128] = 0\n 53216: a0 = 0x5274afe700000000\n 53226: a1 = sp + 0x80\n 53230: u64 [sp + 0x98] = a0\n 53234: a0 = 0\n 53236: ra = 1770, jump @24\n      : @1707 [@dyn 885] (gas: 12)\n 53243: a0 = u64 [sp + 0x30]\n 53246: a0 = a0 << 0x20\n 53249: a0 = a0 >> 0x20\n 53252: u64 [sp + 120] = 0\n 53255: u64 [sp + 0x70] = a0\n 53258: a0 = u64 [sp + 0x8]\n 53261: u64 [sp + 0x68] = a0\n 53264: a0 = 0x4\n 53267: a1 = sp + 0x60\n 53270: a2 = u64 [sp + 0x38]\n 53273: u64 [sp + 0x60] = a2\n 53276: ra = 1772, jump @24\n      : @1708 [@dyn 886] (gas: 3)\n 53283: a0 = u64 [sp + 0x20]\n 53286: a0 = i32 [a0]\n 53288: jump @1710 if a0 >u 63\n      : @1709 (gas: 3)\n 53292: a1 = u64 [sp + 0x20]\n 53295: u32 [a1 + 0] = 0x40\n 53298: fallthrough\n      : @1710 (gas: 5)\n 53299: a1 = i32 [sp + 0x58]\n 53302: a0 = 0x1\n 53305: a2 = 0x24\n 53308: ecalli 16 // 'seal_return'\n 53310: fallthrough\n      : @1711 (gas: 3)\n 53311: a0 = sp + 0xc0\n 53315: a1 = 0x40\n 53318: ra = 1774, jump @22\n      : @1712 [@dyn 887] (gas: 9)\n 53325: a0 = u64 [sp + 0xd8]\n 53329: u64 [sp + 0x58] = a0\n 53332: a0 = u64 [sp + 0xd0]\n 53336: u64 [sp + 0x50] = a0\n 53339: a0 = u64 [sp + 0xc8]\n 53343: u64 [sp + 0x48] = a0\n 53346: s1 = u64 [sp + 0xc0]\n 53350: ecalli 15 // 'return_data_size'\n 53352: fallthrough\n      : @1713 (gas: 12)\n 53353: a1 = u64 [sp + 0x58]\n 53356: a2 = u64 [sp + 0x48]\n 53359: a1 = a1 | a2\n 53362: u64 [sp + 0x58] = s1\n 53365: a3 = u64 [sp + 0x50]\n 53368: a2 = s1 | a3\n 53371: a2 = a2 | a1\n 53374: a2 = a2 >> 0x20\n 53377: a1 = a1 | a3\n 53380: a1 = a1 << 0x20\n 53383: a1 = a1 | a2\n 53386: jump @1720 if a1 != 0\n      : @1714 (gas: 3)\n 53389: s1 = a0\n 53391: a0 = a0 >> 0x20\n 53394: jump @1720 if a0 != 0\n      : @1715 (gas: 5)\n 53397: i32 a0 = s1 + 0\n 53399: u64 [sp + 0x50] = a0\n 53402: a0 = u64 [sp + 0x58]\n 53405: a1 = s1\n 53407: ra = 1776, jump @36\n      : @1716 [@dyn 888] (gas: 6)\n 53414: u32 [sp + 0x160] = s1\n 53418: i32 a0 = a0 + 0\n 53420: i32 a1 = sp + 0x160\n 53424: a2 = 0\n 53426: ecalli 14 // 'return_data_copy'\n 53428: fallthrough\n      : @1717 (gas: 3)\n 53429: a0 = i32 [sp + 0x160]\n 53433: a1 = u64 [sp + 0x50]\n 53436: jump @1720 if a0 <u a1\n      : @1718 (gas: 2)\n 53439: ecalli 15 // 'return_data_size'\n 53441: fallthrough\n      : @1719 (gas: 3)\n 53442: s1 = a0\n 53444: a0 = a0 >> 0x20\n 53447: jump @1721 if a0 == 0\n      : @1720 (gas: 1)\n 53450: trap\n      : @1721 (gas: 3)\n 53451: a0 = u64 [sp + 0x58]\n 53454: a1 = s1\n 53456: ra = 1778, jump @36\n      : @1722 [@dyn 889] (gas: 7)\n 53463: i32 a1 = a0 + 0\n 53465: i32 a2 = s1 + 0\n 53467: a0 = 0x1\n 53470: ecalli 16 // 'seal_return'\n 53472: a0 = 0\n 53474: ra = 0x6f4\n 53478: jump @42\n      : @1723 [export #0: 'call'] (gas: 2)\n 53482: a0 = 0\n 53484: ra = 1780, jump @42\n      : @1724 [@dyn 890] [export #1: 'deploy'] (gas: 2)\n 53491: a0 = 0x1\n 53494: ra = 1782, jump @42\n      : @1725 [@dyn 891] (gas: 22)\n 53501: a2 = u64 [s1 + 0x210]\n 53505: a5 = a2 <u 0x80\n 53509: a3 = u64 [s1 + 0x1e8]\n 53513: a1 = a3 if a5 != 0\n 53516: a4 = 0xffffffffffffffff\n 53519: a1 = a4 if a2 == 0\n 53522: u64 [s1 + 0x1e8] = a1\n 53526: a3 = a2\n 53528: a2 = u64 [s1 + 0x208]\n 53532: a1 = u64 [s1 + 0x1f0]\n 53536: a1 = a1 | a2\n 53539: a1 = a0 if a5 == 0\n 53542: a1 = a4 if a3 == 0\n 53545: u64 [s1 + 0x210] = a1\n 53549: a0 = u64 [s1 + 0x218]\n 53553: a0 = 0 if a5 == 0\n 53555: u64 [s1 + 0x218] = a0\n 53559: a2 = 0 if a5 == 0\n 53561: u64 [s1 + 0x208] = a2\n 53565: a1 = i32 [s1 + 0x200]\n 53569: a0 = s1 + 0x4000\n 53573: jump [t0]\n      : @1726 (gas: 12)\n 53575: a5 = s1 + 0x200\n 53579: a1 = u64 [a5 + 0x18]\n 53582: a0 = u64 [a5 + 0x8]\n 53585: a3 = u64 [a5]\n 53587: a3 = a3 | a0\n 53590: a4 = 0x100000000\n 53600: a0 = 0xfffffffc\n 53610: a0 = a1 <u a0\n 53613: a2 = u64 [a5 + 0x10]\n 53616: a0 = 0 if a2 != 0\n 53618: a0 = 0 if a3 != 0\n 53620: jump [t0]\n      : @1727 (gas: 9)\n 53622: a2 = s1 + 0x200\n 53626: a3 = u64 [a2 + 0x18]\n 53629: a0 = 0xffffffbc\n 53639: a0 = a3 <u a0\n 53642: a1 = u64 [a2 + 0x10]\n 53645: a0 = 0 if a1 != 0\n 53647: a1 = u64 [a2 + 0x8]\n 53650: a0 = 0 if a1 != 0\n 53652: jump [t0]\n      : @1728 (gas: 18)\n 53654: a1 = a0 <u a1\n 53657: a3 = u64 [a5 + 0x8]\n 53660: a2 = a3 + a1\n 53663: a3 = a2 <u a3\n 53666: a3 = a1 if a1 == 0\n 53669: a1 = u64 [s1 + 0x1f8]\n 53673: a3 = a3 + a1\n 53676: a1 = a3 <u a1\n 53679: a4 = u64 [a5]\n 53681: a1 = a1 + a4\n 53684: a4 = a0 | a3\n 53687: a1 = a1 | a2\n 53690: a4 = a4 | a1\n 53693: a4 = a4 >> 0x20\n 53696: a1 = a1 | a3\n 53699: a1 = a1 << 0x20\n 53702: a1 = a1 | a4\n 53705: jump [t0]\n      : @1729 (gas: 10)\n 53707: a4 = s1 + 0x200\n 53711: a3 = u64 [a4 + 0x8]\n 53714: a2 = u64 [a4 + 0x10]\n 53717: a1 = u64 [a4 + 0x18]\n 53720: a0 = u64 [a4]\n 53722: a0 = a0 + 0xffffffffffffffdc\n 53725: a0 = a1 <u a0\n 53728: a0 = 0 if a2 != 0\n 53730: a0 = 0 if a3 != 0\n 53732: jump [t0]\n      : @1730 (gas: 7)\n 53734: a1 = u64 [s1 + 0x218]\n 53738: a0 = a1 <u a0\n 53741: a1 = u64 [s1 + 0x210]\n 53745: a0 = 0 if a1 != 0\n 53747: a1 = u64 [s1 + 0x1f0]\n 53751: a0 = 0 if a1 != 0\n 53753: jump [t0]\n      : @1731 (gas: 9)\n 53755: a5 = u64 [s1 + 0x210]\n 53759: a0 = a0 & ~a5\n 53762: a5 = u64 [s1 + 0x1e8]\n 53766: a1 = a1 & ~a5\n 53769: a5 = u64 [s1 + 0x208]\n 53773: a2 = a2 & ~a5\n 53776: a5 = u64 [s1 + 0x218]\n 53780: a3 = a3 & ~a5\n 53783: jump [t0]\n      : @1732 (gas: 9)\n 53785: a1 = a1 + a4\n 53788: a4 = a0 | a3\n 53791: a1 = a1 | a2\n 53794: a4 = a4 | a1\n 53797: a4 = a4 >> 0x20\n 53800: a1 = a1 | a3\n 53803: a1 = a1 << 0x20\n 53806: a1 = a1 | a4\n 53809: jump [t0]\n      : @1733 (gas: 10)\n 53811: u64 [s1 + 0x208] = a0\n 53815: u64 [s1 + 0x218] = a1\n 53819: a0 = u64 [s1 + 0x1e8]\n 53823: a0 = a0 | a1\n 53826: u64 [s1 + 0x1e8] = a0\n 53830: a0 = u64 [s1 + 0x210]\n 53834: a2 = a0 + 0xffffffffffffff80\n 53837: a0 = 0xffffffffffffffff\n 53840: a1 = 0xffffffffffffffff\n 53843: jump [t0]\n      : @1734 (gas: 11)\n 53845: a3 = u64 [s1 + 0x218]\n 53849: a0 = u64 [a3 + 0x18]\n 53852: a1 = u64 [a3 + 0x10]\n 53855: a2 = u64 [a3 + 0x8]\n 53858: a3 = u64 [a3]\n 53860: a0 = reverse a0\n 53862: a1 = reverse a1\n 53864: a2 = reverse a2\n 53866: a3 = reverse a3\n 53868: a4 = s1 + 0x4998\n 53872: jump [t0]\n      : @1735 (gas: 13)\n 53874: a3 = u64 [s1 + 0x188]\n 53878: a0 = a3 <u 0x20\n 53881: a0 = a0 ^ 0x1\n 53884: a1 = u64 [s1 + 0x1d8]\n 53888: a4 = u64 [s1 + 0x218]\n 53892: a0 = a1 if a4 != 0\n 53895: a1 = u64 [s1 + 0x1e8]\n 53899: a2 = u64 [s1 + 0x1e0]\n 53903: a0 = a1 if a2 != 0\n 53906: t1 = u64 [s1 + 0x210]\n 53910: a1 = a4 | t1\n 53913: a5 = u64 [s1 + 0x1d0]\n 53917: jump [t0]\n      : @1736 (gas: 13)\n 53919: a1 = a0 <u a1\n 53922: a3 = u64 [s1 + 0x210]\n 53926: a2 = a3 + a1\n 53929: a3 = a2 <u a3\n 53932: a3 = a1 if a1 == 0\n 53935: a1 = u64 [s1 + 0x200]\n 53939: a3 = a3 + a1\n 53942: a1 = a3 <u a1\n 53945: a4 = u64 [s1 + 0x218]\n 53949: a1 = a1 + a4\n 53952: a4 = s1 + 0x4198\n 53956: a5 = a4 + 0x300\n 53960: jump [t0]\n      : @1737 (gas: 22)\n 53962: a4 = u64 [s1 + 0x218]\n 53966: a2 = a4 <u 0x80\n 53970: a3 = u64 [s1 + 0x1b8]\n 53974: a0 = a3 if a2 != 0\n 53977: a5 = u64 [s1 + 0x1c0]\n 53981: a3 = u64 [s1 + 0x1d8]\n 53985: a3 = a3 | a5\n 53988: a3 = a1 if a2 == 0\n 53991: a0 = 0xffffffffffffffff if a4 == 0\n 53994: a3 = 0xffffffffffffffff if a4 == 0\n 53997: a5 = 0 if a2 == 0\n 53999: a4 = u64 [s1 + 0x1d0]\n 54003: a4 = 0 if a2 == 0\n 54005: a1 = u64 [s1 + 0x1f8]\n 54009: a1 = a1 & ~a3\n 54012: a2 = u64 [s1 + 0x200]\n 54016: a0 = a2 & ~a0\n 54019: a2 = u64 [s1 + 0x208]\n 54023: a2 = a2 & ~a4\n 54026: a3 = u64 [s1 + 0x210]\n 54030: a3 = a3 & ~a5\n 54033: jump [t0]\n      : @1738 (gas: 14)\n 54035: a0 = a4 >u 0\n 54037: a5 = a2 >u 0\n 54039: a5 = a0 if a4 != 0\n 54042: u64 [s1 + 0x218] = a3\n 54046: a0 = a3 >u 0\n 54048: a3 = s1 + 0x100\n 54052: u64 [a3 + 0xd0] = a2\n 54056: u64 [s1 + 0x210] = a4\n 54060: a2 = a2 | a4\n 54063: u64 [a3 + 0xd8] = a0\n 54067: u64 [a3 + 0xe8] = a5\n 54071: u64 [a3 + 0xe0] = a2\n 54075: a0 = a5 if a2 != 0\n 54078: jump [t0]\n      : @1739 (gas: 12)\n 54080: a0 = a2 <u a0\n 54083: a3 = u64 [s1 + 0x210]\n 54087: a1 = a3 + a0\n 54090: a3 = a1 <u a3\n 54093: a3 = a0 if a0 == 0\n 54096: a0 = u64 [s1 + 0x200]\n 54100: a3 = a3 + a0\n 54103: a0 = a3 <u a0\n 54106: a4 = u64 [s1 + 0x218]\n 54110: a0 = a0 + a4\n 54113: a4 = a5 + 0x500\n 54117: jump [t0]\n      : @1740 (gas: 9)\n 54119: a5 = u64 [s1 + 0x1e0]\n 54123: a5 = a5 + 0x1\n 54126: a0 = a5 <u 0x1\n 54129: a3 = u64 [s1 + 0x1d8]\n 54133: a3 = a3 + a0\n 54136: a0 = a5 | a3\n 54139: a0 = a0 <u 0x1\n 54142: a1 = u64 [s1 + 0x1e8]\n 54146: jump [t0]\n      : @1741 (gas: 5)\n 54148: a1 = u64 [a2 + 0x10]\n 54151: a0 = 0 if a1 != 0\n 54153: a1 = u64 [a2 + 0x8]\n 54156: a0 = 0 if a1 != 0\n 54158: jump [t0]\n      : @1742 (gas: 11)\n 54160: a0 = u64 [s1 + 0x188]\n 54164: a0 = a0 & 0xffffffffffffffe0\n 54167: u64 [s1 + 0x1a0] = a0\n 54171: a0 = sp + 0xffffffffffffffe0\n 54174: a0 = a0 & 0xffffffffffffffe0\n 54177: u64 [s1 + 0x200] = a0\n 54181: sp = a0\n 54183: i32 a2 = a0 + 0\n 54185: a1 = 0x20\n 54188: a0 = u64 [s1 + 0x100]\n 54192: jump [t0]\n      : @1743 (gas: 6)\n 54194: a1 = a3 << 0x3\n 54197: u64 [s1 + 0x218] = a1\n 54201: i32 a2 = 0x80 - a1\n 54205: a0 = 0xffffffffffffffff\n 54208: a1 = 0xffffffffffffffff\n 54211: jump [t0]\n      : @1744 (gas: 6)\n 54213: a0 = a1 <u a0\n 54216: a2 = u64 [s1 + 0x210]\n 54220: a0 = 0 if a2 != 0\n 54222: a2 = u64 [s1 + 0x1e8]\n 54226: a0 = 0 if a2 != 0\n 54228: jump [t0]\n      : @1745 (gas: 7)\n 54230: a1 = a0 >> 0x38\n 54233: u64 [s1 + 0x210] = a1\n 54237: a2 = 0x80 - a1\n 54241: a0 = 0xffffffffffffffff\n 54244: a1 = 0xffffffffffffffff\n 54247: u64 [s1 + 0x200] = ra\n 54251: jump [t0]\n      : @1746 (gas: 17)\n 54253: a0 = u64 [a3]\n 54255: a1 = u64 [a3 + 0x8]\n 54258: a2 = u64 [a3 + 0x10]\n 54261: a3 = u64 [a3 + 0x18]\n 54264: a0 = reverse a0\n 54266: a1 = reverse a1\n 54268: a2 = reverse a2\n 54270: a3 = reverse a3\n 54272: a4 = a3 + 0x2\n 54275: a3 = a4 <u a3\n 54278: a5 = a2 + a3\n 54281: a2 = a5 <u a2\n 54284: a2 = a3 if a3 == 0\n 54287: a2 = a2 + a1\n 54290: a1 = a2 <u a1\n 54293: a0 = a0 + a1\n 54296: jump [t0]\n      : @1747 (gas: 13)\n 54298: a1 = a0 <u a1\n 54301: a3 = u64 [s1 + 0x210]\n 54305: a2 = a3 + a1\n 54308: a3 = a2 <u a3\n 54311: a3 = a1 if a1 == 0\n 54314: a1 = u64 [s1 + 0x200]\n 54318: a3 = a3 + a1\n 54321: a1 = a3 <u a1\n 54324: a4 = u64 [s1 + 0x218]\n 54328: a1 = a1 + a4\n 54331: a4 = s1 + 0x4198\n 54335: a5 = a4 + 0x200\n 54339: jump [t0]\n      : @1748 (gas: 13)\n 54341: a0 = a2 <u a0\n 54344: a1 = u64 [s1 + 0x160]\n 54348: a3 = a1 + a0\n 54351: a1 = a3 <u a1\n 54354: a1 = a0 if a0 == 0\n 54357: a0 = u64 [s1 + 0x128]\n 54361: a4 = a0 + a1\n 54364: a0 = a4 <u a0\n 54367: a1 = u64 [s1 + 0x130]\n 54371: a1 = a1 + a0\n 54374: a5 = s1 + 0x7ff\n 54378: a5 = a5 + 0x199\n 54382: jump [t0]\n      : @1749 (gas: 9)\n 54384: u64 [s1 + 0x1c0] = a1\n 54388: a1 = u64 [s1 + 0x1b8]\n 54392: a0 = a0 | a1\n 54395: u64 [s1 + 0x1b8] = a0\n 54399: a0 = u64 [s1 + 0x218]\n 54403: i32 a2 = a0 + 0xffffffffffffff80\n 54406: a0 = 0xffffffffffffffff\n 54409: a1 = 0xffffffffffffffff\n 54412: jump [t0]\n      : @1750 (gas: 6)\n 54414: a0 = a1 <u a0\n 54417: a2 = u64 [s1 + 0x218]\n 54421: a0 = 0 if a2 != 0\n 54423: a2 = u64 [s1 + 0x1f8]\n 54427: a0 = 0 if a2 != 0\n 54429: jump [t0]\n      : @1751 (gas: 7)\n 54431: a3 = a3 | a5\n 54434: a3 = a1 if a2 == 0\n 54437: a1 = 0xffffffffffffffff\n 54440: a0 = a1 if a4 == 0\n 54443: a3 = a1 if a4 == 0\n 54446: a5 = 0 if a2 == 0\n 54448: jump [t0]\n      : @1752 (gas: 10)\n 54450: a5 = 0\n 54452: u64 [s1 + 528] = 0\n 54456: u64 [s1 + 536] = 0\n 54460: u64 [s1 + 520] = 0\n 54464: a3 = u64 [s1 + 0x200]\n 54468: a0 = u64 [a3 + 0x18]\n 54471: a1 = u64 [a3 + 0x10]\n 54474: a2 = u64 [a3 + 0x8]\n 54477: a3 = u64 [a3]\n 54479: jump [t0]\n      : @1753 (gas: 13)\n 54481: a1 = a0 <u a1\n 54484: a3 = u64 [s1 + 0xf0]\n 54488: a2 = a3 + a1\n 54491: a3 = a2 <u a3\n 54494: a3 = a1 if a1 == 0\n 54497: a1 = u64 [s1 + 0x108]\n 54501: a3 = a3 + a1\n 54504: a1 = a3 <u a1\n 54507: a4 = u64 [s1 + 0xf8]\n 54511: a1 = a1 + a4\n 54514: a4 = s1 + 0x4198\n 54518: a5 = a4 + 0x600\n 54522: jump [t0]\n      : @1754 (gas: 6)\n 54524: a1 = a0 <u a1\n 54527: a3 = u64 [s1 + 0x210]\n 54531: a2 = a3 + a1\n 54534: a3 = a2 <u a3\n 54537: a3 = a1 if a1 == 0\n 54540: jump [t0]\n      : @1755 (gas: 10)\n 54542: a0 = a0 | a4\n 54545: a5 = s1 + 0x100\n 54549: a4 = u64 [a5 + 0xe0]\n 54553: a1 = a1 | a4\n 54556: a4 = u64 [a5 + 0xe8]\n 54560: a3 = a3 | a4\n 54563: a4 = u64 [a5 + 0xf0]\n 54567: a2 = a2 | a4\n 54570: a4 = s1 + 0x3998\n 54574: jump [t0]\n      : @1756 (gas: 5)\n 54576: a0 = sp + 0xffffffffffffffe0\n 54579: a2 = a0 & 0xffffffffffffffe0\n 54582: u64 [s1 + 0x218] = a2\n 54586: sp = a2\n 54588: jump [t0]\n      : @1757 (gas: 11)\n 54590: a4 = a4 + a1\n 54593: a1 = a4 <u a1\n 54596: a1 = a1 + a3\n 54599: a1 = a1 | a2\n 54602: a2 = a0 | a4\n 54605: a2 = a2 | a1\n 54608: a1 = a1 | a4\n 54611: a2 = a2 >> 0x20\n 54614: a1 = a1 << 0x20\n 54617: a1 = a1 | a2\n 54620: jump [t0]\n      : @1758 (gas: 6)\n 54622: u64 [s1 + 0x1f0] = a0\n 54626: u64 [s1 + 0x1e8] = a1\n 54630: a0 = 0xffffffffffffffff\n 54633: a1 = 0xffffffffffffffff\n 54636: a2 = u64 [s1 + 0x210]\n 54640: jump [t0]\n      : @1759 (gas: 9)\n 54642: a0 = u64 [a3 + 0x18]\n 54645: a1 = u64 [a3 + 0x10]\n 54648: a2 = u64 [a3 + 0x8]\n 54651: a3 = u64 [a3]\n 54653: a4 = reverse a0\n 54655: a1 = reverse a1\n 54657: a2 = reverse a2\n 54659: a0 = reverse a3\n 54661: jump [t0]\n      : @1760 (gas: 19)\n 54663: sp = sp + 0xffffffffffffff60\n 54667: u64 [sp + 0x98] = ra\n 54671: u64 [sp + 0x90] = s0\n 54675: u64 [sp + 0x88] = s1\n 54679: s0 = sp + 0xa0\n 54683: sp = sp & 0xffffffffffffffe0\n 54686: a3 = u64 [a2 + 0x10]\n 54689: a4 = u64 [a2 + 0x18]\n 54692: a5 = u64 [a2 + 0x8]\n 54695: a2 = u64 [a2]\n 54697: a4 = a4 | a5\n 54700: a5 = a2 | a3\n 54703: a5 = a5 | a4\n 54706: a5 = a5 >> 0x20\n 54709: a3 = a3 | a4\n 54712: a3 = a3 << 0x20\n 54715: a3 = a3 | a5\n 54718: u64 [sp + 0x20] = a0\n 54721: jump [t0]\n      : @1761 (gas: 14)\n 54723: a0 = u64 [a2 + 0x8]\n 54726: a1 = i32 [a2 + 0x10]\n 54729: a2 = u64 [a2]\n 54731: a0 = reverse a0\n 54733: a3 = a0 << 0x20\n 54736: a1 = reverse a1\n 54738: a1 = a1 >> 0x20\n 54741: a1 = a1 | a3\n 54744: u64 [s1 + 0x218] = a1\n 54748: a0 = a0 >> 0x20\n 54751: a1 = reverse a2\n 54753: a2 = a1 << 0x20\n 54756: a0 = a0 | a2\n 54759: jump [t0]\n      : @1762 (gas: 12)\n 54761: u64 [s1 + 0x1f8] = a0\n 54765: a0 = u64 [s1 + 0x208]\n 54769: a0 = a0 + 0x1\n 54772: a1 = a0 <u 0x1\n 54775: a2 = u64 [s1 + 0x210]\n 54779: a1 = a1 + a2\n 54782: a2 = a0 | a1\n 54785: a2 = a2 <u 0x1\n 54788: a3 = u64 [s1 + 0x200]\n 54792: a2 = a2 + a3\n 54795: a3 = a2 <u a3\n 54798: jump [t0]\n      : @1763 (gas: 8)\n 54800: a0 = sp + 0xffffffffffffffe0\n 54803: a0 = a0 & 0xffffffffffffffe0\n 54806: u64 [s1 + 0x1f8] = a0\n 54810: sp = a0\n 54812: a2 = u64 [s1 + 0xf8]\n 54816: a0 = i32 [a2]\n 54818: a1 = 0x1f\n 54821: jump [t0]\n      : @1764 (gas: 14)\n 54823: a3 = s1 + 0x200\n 54827: a0 = u64 [a3 + 0x8]\n 54830: a2 = u64 [a3]\n 54832: a2 = a2 | a0\n 54835: a0 = 0x100000000\n 54845: u64 [a3] = a0\n 54847: a0 = 0xfffffffc\n 54857: a1 = u64 [a3 + 0x18]\n 54860: a0 = a1 <u a0\n 54863: a1 = u64 [a3 + 0x10]\n 54866: a0 = 0 if a1 != 0\n 54868: u64 [a3 + 0x8] = a2\n 54871: a0 = 0 if a2 != 0\n 54873: jump [t0]\n      : @1765 (gas: 4)\n 54875: a2 = a3 + a1\n 54878: a3 = a2 <u a3\n 54881: a3 = a1 if a1 == 0\n 54884: jump [t0]\n      : @1766 (gas: 11)\n 54886: a1 = a0 <u a1\n 54889: a3 = u64 [s1 + 0x200]\n 54893: a2 = a3 + a1\n 54896: a3 = a2 <u a3\n 54899: a3 = a1 if a1 == 0\n 54902: a1 = u64 [s1 + 0x210]\n 54906: a3 = a3 + a1\n 54909: a1 = a3 <u a1\n 54912: a4 = u64 [s1 + 0x208]\n 54916: a1 = a1 + a4\n 54919: jump [t0]\n      : @1767 (gas: 11)\n 54921: a1 = a0 <u a1\n 54924: a3 = u64 [s1 + 0x208]\n 54928: a2 = a3 + a1\n 54931: a3 = a2 <u a3\n 54934: a3 = a1 if a1 == 0\n 54937: a1 = u64 [s1 + 0x1f8]\n 54941: a3 = a3 + a1\n 54944: a1 = a3 <u a1\n 54947: a4 = u64 [s1 + 0x200]\n 54951: a4 = a4 + a1\n 54954: jump [t0]\n      : @1768 (gas: 11)\n 54956: a0 = u64 [a3 + 0x18]\n 54959: a1 = u64 [a3 + 0x10]\n 54962: a2 = u64 [a3 + 0x8]\n 54965: a3 = u64 [a3]\n 54967: a0 = reverse a0\n 54969: a1 = reverse a1\n 54971: a2 = reverse a2\n 54973: a3 = reverse a3\n 54975: a4 = s1 + 0x4198\n 54979: a5 = a4 + 0x100\n 54983: jump [t0]\n      : @1769 (gas: 12)\n 54985: a3 = u64 [s1 + 0x218]\n 54989: a0 = u64 [a3 + 0x18]\n 54992: a1 = u64 [a3 + 0x10]\n 54995: a2 = u64 [a3 + 0x8]\n 54998: a3 = u64 [a3]\n 55000: a5 = reverse a0\n 55002: u64 [s1 + 0x208] = a5\n 55006: a4 = reverse a1\n 55008: u64 [s1 + 0x210] = a4\n 55012: a2 = reverse a2\n 55014: u64 [s1 + 0x200] = a2\n 55018: jump [t0]\n      : @1770 (gas: 6)\n 55020: a2 = a2 + a4\n 55023: a2 = a2 + a1\n 55026: a3 = a2 ^ a4\n 55029: a4 = a2 <u a4\n 55032: a4 = a1 if a3 == 0\n 55035: jump [t0]\n      : @1771 (gas: 7)\n 55037: u64 [s1 + 0x1b8] = a0\n 55041: u64 [s1 + 0x1d8] = a1\n 55045: a0 = u64 [s1 + 0x188]\n 55049: i32 a2 = a0 << 0x3\n 55052: a0 = 0xffffffffffffffff\n 55055: a1 = 0xffffffffffffffff\n 55058: jump [t0]\n      : @1772 (gas: 11)\n 55060: a3 = u64 [s1 + 0x210]\n 55064: a0 = u64 [a3 + 0x18]\n 55067: a1 = u64 [a3 + 0x10]\n 55070: a2 = u64 [a3 + 0x8]\n 55073: a3 = u64 [a3]\n 55075: a5 = reverse a0\n 55077: a4 = reverse a1\n 55079: a0 = reverse a2\n 55081: a2 = reverse a3\n 55083: a3 = s1 + 0x200\n 55087: jump [t0]\n      : @1773 (gas: 8)\n 55089: a0 = a0 | a2\n 55092: a2 = a4 | a1\n 55095: a2 = a2 | a0\n 55098: a2 = a2 >> 0x20\n 55101: a0 = a0 | a1\n 55104: a0 = a0 << 0x20\n 55107: a0 = a0 | a2\n 55110: jump [t0]\n      : @1774 (gas: 11)\n 55112: a0 = reverse a0\n 55114: a3 = a0 >> 0x20\n 55117: a1 = reverse a1\n 55119: a4 = a1 << 0x20\n 55122: a3 = a3 | a4\n 55125: a0 = a0 << 0x20\n 55128: a2 = reverse a2\n 55130: a2 = a2 >> 0x20\n 55133: a0 = a0 | a2\n 55136: a1 = a1 >> 0x20\n 55139: jump [t0]\n      : @1775 (gas: 10)\n 55141: a1 = a1 + a4\n 55144: a4 = a0 + 0x20\n 55147: a0 = a4 <u a0\n 55150: a5 = a2 + a0\n 55153: a2 = a5 <u a2\n 55156: a2 = a0 if a0 == 0\n 55159: a2 = a2 + a3\n 55162: a0 = a2 <u a3\n 55165: a0 = a0 + a1\n 55168: jump [t0]\n      : @1776 (gas: 11)\n 55170: a2 = u64 [sp + 0x8]\n 55173: a2 = a2 | s1\n 55176: s1 = 0x100000000\n 55186: a0 = 0xfffffffc\n 55196: a1 = u64 [sp + 0x18]\n 55199: a0 = a1 <u a0\n 55202: a1 = u64 [sp + 0x10]\n 55205: a0 = 0 if a1 != 0\n 55207: u64 [sp + 0x8] = a2\n 55210: a0 = 0 if a2 != 0\n 55212: jump [t0]\n      : @1777 (gas: 16)\n 55214: a4 = u64 [a3]\n 55216: u64 [sp + 0x18] = a4\n 55219: a4 = u64 [a3 + 0x8]\n 55222: u64 [sp + 0x20] = a4\n 55225: a4 = u64 [a3 + 0x10]\n 55228: u64 [sp + 0x28] = a4\n 55231: a3 = u64 [a3 + 0x18]\n 55234: u64 [sp + 0x30] = a3\n 55237: s1 = u64 [a2]\n 55239: a3 = u64 [a2 + 0x8]\n 55242: u64 [sp] = a3\n 55244: a3 = u64 [a2 + 0x10]\n 55247: u64 [sp + 0x8] = a3\n 55250: a2 = u64 [a2 + 0x18]\n 55253: u64 [sp + 0x10] = a2\n 55256: jump [t0]\n      : @1778 (gas: 10)\n 55258: a2 = s1 + 0x200\n 55262: a4 = u64 [a2 + 0x8]\n 55265: a3 = u64 [a2 + 0x10]\n 55268: a1 = u64 [a2 + 0x18]\n 55271: a0 = u64 [a2]\n 55273: a0 = a0 + 0xffffffffffffffdc\n 55276: a0 = a1 <u a0\n 55279: a0 = 0 if a3 != 0\n 55281: a0 = 0 if a4 != 0\n 55283: jump [t0]\n      : @1779 (gas: 15)\n 55285: a2 = u64 [sp + 0xb8]\n 55289: s1 = u64 [sp + 0xb0]\n 55293: a0 = u64 [sp + 0xa8]\n 55297: a1 = u64 [sp + 0xa0]\n 55301: u64 [sp + 0x10] = a0\n 55304: u64 [sp + 0x8] = a2\n 55307: a0 = a0 | a2\n 55310: u64 [sp + 0x18] = a1\n 55313: a1 = a1 | s1\n 55316: a1 = a1 | a0\n 55319: a1 = a1 >> 0x20\n 55322: a0 = a0 | s1\n 55325: a0 = a0 << 0x20\n 55328: a0 = a0 | a1\n 55331: jump [t0]\n      : @1780 (gas: 14)\n 55333: sp = sp + 0xffffffffffffff20\n 55337: u64 [sp + 0xd8] = ra\n 55341: u64 [sp + 0xd0] = s0\n 55345: u64 [sp + 0xc8] = s1\n 55349: s0 = sp + 0xe0\n 55353: sp = sp & 0xfffffffffffffff0\n 55356: a1 = u64 [a0 + 0x10]\n 55359: a2 = u64 [a0 + 0x18]\n 55362: a3 = u64 [a0 + 0x8]\n 55365: a0 = u64 [a0]\n 55367: a2 = a2 | a3\n 55370: a0 = a0 | a1\n 55373: a0 = a0 | a2\n 55376: jump [t0]\n      : @1781 (gas: 4)\n 55378: i32 a0 = a1 + 0x4\n 55381: a1 = 0x1998\n 55385: a2 = s1 + a1\n 55388: jump [t0]\n      : @1782 (gas: 4)\n 55390: a0 = u64 [s1 + 0x218]\n 55394: a0 = i32 [a0]\n 55396: a1 = 0x23\n 55399: jump [t0]\n      : @1783 (gas: 10)\n 55401: u64 [sp + 0x8] = a0\n 55404: a2 = u32 [0x20224]\n 55409: a0 = u64 [sp + 0x58]\n 55412: u64 [sp + 0x10] = a0\n 55415: t1 = u64 [sp + 0x50]\n 55418: a1 = u64 [sp + 0x28]\n 55421: a3 = a2 <u a1\n 55424: a4 = s1 >u 0\n 55426: a4 = a3 if s1 == 0\n 55429: jump [t0]\n      : @1784 (gas: 11)\n 55431: i32 a0 = a0 + 0xfffffffffffff998\n 55435: a3 = s1 + a0\n 55438: a4 = a3 + 0x300\n 55442: a0 = u64 [a4 + 0x58]\n 55445: a1 = u64 [a4 + 0x60]\n 55448: a2 = u64 [a4 + 0x50]\n 55451: a3 = u64 [a4 + 0x48]\n 55454: a1 = a1 | a2\n 55457: a0 = a0 | a3\n 55460: a0 = a0 | a1\n 55463: jump [t0]\n      : @1785 (gas: 4)\n 55465: a0 = 0x4198\n 55469: a3 = s1 + a0\n 55472: a4 = a3 + 0x300\n 55476: jump [t0]\n      : @1786 (gas: 9)\n 55478: i32 a0 = a0 + 0xfffffffffffff998\n 55482: a1 = s1 + a0\n 55485: a3 = 0\n 55487: u64 [a1 + 192] = 0\n 55491: u64 [a1 + 184] = 0\n 55495: u64 [a1 + 168] = 0x1\n 55500: a2 = a1\n 55502: a0 = 0x20\n 55505: jump [t0]\n      : @1787 (gas: 6)\n 55507: a0 = reverse a0\n 55509: a3 = a0 << 0x20\n 55512: a1 = reverse a1\n 55514: a1 = a1 >> 0x20\n 55517: a1 = a1 | a3\n 55520: jump [t0]\n      : @1788 (gas: 7)\n 55522: a0 = 0xffffffbc\n 55532: a0 = s1 <u a0\n 55535: a1 = u64 [sp + 0x10]\n 55538: a0 = 0 if a1 != 0\n 55540: a1 = u64 [sp + 0x8]\n 55543: a0 = 0 if a1 != 0\n 55545: jump [t0]\n      : @1789 (gas: 7)\n 55547: a0 = a2 <u a0\n 55550: a1 = u64 [s1 + 0x170]\n 55554: a3 = a1 + a0\n 55557: a1 = a3 <u a1\n 55560: a1 = a0 if a0 == 0\n 55563: a0 = u64 [s1 + 0x180]\n 55567: jump [t0]\n      : @1790 (gas: 8)\n 55569: a0 = sp + 0xffffffffffffffe0\n 55572: a0 = a0 & 0xffffffffffffffe0\n 55575: u64 [s1 + 0x210] = a0\n 55579: sp = a0\n 55581: i32 a2 = a0 + 0\n 55583: a1 = 0x20\n 55586: a0 = u64 [s1 + 0x160]\n 55590: jump [t0]\n      : @1791 (gas: 8)\n 55592: a4 = a4 | a2\n 55595: a2 = a0 | a1\n 55598: a2 = a2 | a4\n 55601: a2 = a2 >> 0x20\n 55604: a1 = a1 | a4\n 55607: a1 = a1 << 0x20\n 55610: a1 = a1 | a2\n 55613: jump [t0]\n      : @1792 (gas: 7)\n 55615: a0 = u64 [s1 + 0x218]\n 55619: a2 = u64 [s1 + 0x1e8]\n 55623: a1 = a2 <u a0\n 55626: t2 = a0\n 55628: a3 = u64 [s1 + 0x210]\n 55632: a4 = u64 [s1 + 0x1e0]\n 55636: jump [t0]\n      : @1793 (gas: 7)\n 55638: a0 = u64 [s1 + 0x218]\n 55642: a2 = u64 [s1 + 0x1e0]\n 55646: a1 = a2 <u a0\n 55649: t2 = a0\n 55651: a3 = u64 [s1 + 0x210]\n 55655: a4 = u64 [s1 + 0x1d8]\n 55659: jump [t0]\n      : @1794 (gas: 8)\n 55661: a1 = sp + 0xffffffffffffffe0\n 55664: a2 = a1 & 0xffffffffffffffe0\n 55667: u64 [s1 + 0x210] = a2\n 55671: sp = a2\n 55673: i32 a0 = a0 + 0\n 55675: a1 = i32 [s1 + 0x218]\n 55679: i32 a2 = a2 + 0\n 55681: jump [t0]\n      : @1795 (gas: 8)\n 55683: u64 [sp + 144] = 0\n 55687: u64 [sp + 136] = 0\n 55691: u64 [sp + 128] = 0\n 55695: a0 = 0x8c379a000000000\n 55705: a1 = sp + 0x80\n 55709: u64 [sp + 0x98] = a0\n 55713: a0 = u64 [sp + 0x18]\n 55716: jump [t0]\n      : @1796 (gas: 8)\n 55718: a0 = s1 + 0xffffffffffffffdc\n 55721: a1 = u64 [sp + 0x18]\n 55724: a0 = a1 <u a0\n 55727: a1 = u64 [sp + 0x10]\n 55730: a0 = 0 if a1 != 0\n 55732: a1 = u64 [sp + 0x8]\n 55735: a0 = 0 if a1 != 0\n 55737: jump [t0]\n      : @1797 (gas: 8)\n 55739: a0 = a0 >> 0x20\n 55742: a1 = reverse a2\n 55744: a2 = a1 << 0x20\n 55747: a0 = a0 | a2\n 55750: u64 [s1 + 0x1e8] = a0\n 55754: a1 = a1 >> 0x20\n 55757: u64 [s1 + 0x1e0] = a1\n 55761: jump [t0]\n      : @1798 (gas: 10)\n 55763: a0 = u64 [a1 + 0x18]\n 55766: u64 [sp + 0x38] = a0\n 55769: a0 = u64 [a1 + 0x10]\n 55772: u64 [sp + 0x30] = a0\n 55775: s1 = u64 [a1 + 0x8]\n 55778: a0 = u64 [a1]\n 55780: u64 [sp + 0x28] = a0\n 55783: i32 a1 = a2 + 0\n 55785: i32 a0 = sp + 0x40\n 55788: jump [t0]\n      : @1799 (gas: 8)\n 55790: a0 = sp + 0xffffffffffffffe0\n 55793: a0 = a0 & 0xffffffffffffffe0\n 55796: u64 [s1 + 0x208] = a0\n 55800: sp = a0\n 55802: a0 = u64 [s1 + 0x218]\n 55806: a0 = i32 [a0]\n 55808: a1 = 0x3f\n 55811: jump [t0]\n      : @1800 (gas: 4)\n 55813: i32 a0 = a1 + 0x4\n 55816: a1 = 0x2998\n 55820: a2 = s1 + a1\n 55823: jump [t0]\n      : @1801 (gas: 8)\n 55825: a1 = u64 [a2 + 0x80]\n 55829: u64 [s1 + 0x210] = a1\n 55833: a1 = u64 [a2 + 0x78]\n 55836: u64 [s1 + 0x208] = a1\n 55840: a1 = u64 [a2 + 0x70]\n 55843: u64 [s1 + 0x200] = a1\n 55847: a0 = u64 [a2 + 0x68]\n 55850: jump [t0]\n      : @1802 (gas: 6)\n 55852: sp = s0 + 0xffffffffffffffa0\n 55855: ra = u64 [sp + 0x58]\n 55858: s0 = u64 [sp + 0x50]\n 55861: s1 = u64 [sp + 0x48]\n 55864: sp = sp + 0x60\n 55867: jump [t0]\n      : @1803 (gas: 5)\n 55869: a5 = a2 - a5\n 55872: a5 = a5 - a1\n 55875: a1 = t1 <u a0\n 55878: a5 = a5 - a1\n 55881: jump [t0]\n      : @1804 (gas: 4)\n 55883: i32 a0 = a0 + 0x198\n 55887: a3 = s1 + a0\n 55890: a4 = a3 + 0x100\n 55894: jump [t0]\n      : @1805 (gas: 4)\n 55896: i32 a0 = a0 + 0x198\n 55900: a3 = s1 + a0\n 55903: a4 = a3 + 0x700\n 55907: jump [t0]\n      : @1806 (gas: 4)\n 55909: i32 a0 = a0 + 0xfffffffffffff998\n 55913: a3 = s1 + a0\n 55916: a4 = a3 + 0x200\n 55920: jump [t0]\n      : @1807 (gas: 4)\n 55922: a2 = a0\n 55924: a0 = 0x4e487b7100000000\n 55934: a1 = 0x2000\n 55938: jump [t0]\n      : @1808 (gas: 7)\n 55940: a0 = sp + 0xffffffffffffffe0\n 55943: a0 = a0 & 0xffffffffffffffe0\n 55946: u64 [s1 + 0x210] = a0\n 55950: sp = a0\n 55952: i32 a2 = a0 + 0\n 55954: a1 = 0x40\n 55957: jump [t0]\n      : @1809 (gas: 5)\n 55959: a0 = sp + 0xffffffffffffffe0\n 55962: a0 = a0 & 0xffffffffffffffe0\n 55965: u64 [s1 + 0x218] = a0\n 55969: sp = a0\n 55971: jump [t0]\n      : @1810 (gas: 8)\n 55973: a0 = u64 [a4 + 0xd8]\n 55977: a1 = u64 [a4 + 0xe0]\n 55981: a2 = u64 [a4 + 0xd0]\n 55985: a3 = u64 [a4 + 0xc8]\n 55989: a1 = a1 | a2\n 55992: a0 = a0 | a3\n 55995: a0 = a0 | a1\n 55998: jump [t0]\n      : @1811 (gas: 8)\n 56000: a0 = u64 [a4 + 0x18]\n 56003: a1 = u64 [a4 + 0x20]\n 56006: a2 = u64 [a4 + 0x10]\n 56009: a3 = u64 [a4 + 0x8]\n 56012: a1 = a1 | a2\n 56015: a0 = a0 | a3\n 56018: a0 = a0 | a1\n 56021: jump [t0]\n      : @1812 (gas: 2)\n 56023: a3 = a2 & 0x40\n 56026: jump @1816 if a3 != 0\n      : @1813 (gas: 1)\n 56029: jump @1815 if a2 == 0\n      : @1814 (gas: 6)\n 56032: i32 a3 = 0x40 - a2\n 56035: a3 = a1 << a3\n 56038: a1 = a1 >> a2\n 56041: a0 = a0 >> a2\n 56044: a0 = a0 | a3\n 56047: ret\n      : @1815 (gas: 1)\n 56049: ret\n      : @1816 (gas: 4)\n 56051: a0 = a2 + 0xffffffffffffffc0\n 56054: a0 = a1 >> a0\n 56057: a1 = 0\n 56059: ret\n      : @1817 (gas: 2)\n 56061: a3 = a2 & 0x40\n 56064: jump @1821 if a3 != 0\n      : @1818 (gas: 1)\n 56067: jump @1820 if a2 == 0\n      : @1819 (gas: 6)\n 56070: i32 a3 = 0x40 - a2\n 56073: a3 = a0 >> a3\n 56076: a0 = a0 << a2\n 56079: a1 = a1 << a2\n 56082: a1 = a1 | a3\n 56085: ret\n      : @1820 (gas: 1)\n 56087: ret\n      : @1821 (gas: 4)\n 56089: a1 = a2 + 0xffffffffffffffc0\n 56092: a1 = a0 << a1\n 56095: a0 = 0\n 56097: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "MAX_EVENT_DESCRIPTION_SIZE()": "57215d06",
              "currency()": "e5a6b10f",
              "expirePolicy(bytes32)": "47e3b138",
              "insuranceClaims(bytes32)": "c0b6b37e",
              "insurancePolicies(bytes32)": "563fcbe3",
              "issueInsurance(string,address,uint256,string,uint256,uint256)": "63f3a73b",
              "lastVerificationTimestamp(bytes32)": "77325712",
              "owner()": "8da5cb5b",
              "rejectClaim(bytes32)": "13be4f9e",
              "relayer()": "8406c079",
              "renounceOwnership()": "715018a6",
              "setRelayer(address)": "6548e9bc",
              "settleClaim(bytes32)": "bdf80435",
              "submitClaim(bytes32)": "8b35e14e",
              "transferOwnership(address)": "f2fde38b",
              "updateFlightData(bytes32,(string,string,uint256,uint256,string,string,string,uint16),uint256)": "0d24abee",
              "verifiedFlightData(bytes32)": "46dcb459"
            }
          },
          "irOptimized": "/// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 12:\"@openzeppelin/contracts/utils/Context.sol\", 17:\"contracts/Insurance.sol\"\nobject \"Insurance_2727\" {\n    code {\n        {\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            let _1 := memoryguard(0xa0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Insurance_2727\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 2:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 17:2392:2402  \"msg.sender\" */ caller())\n            /// @src 2:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                mstore(/** @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 2:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 36)\n            }\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), /** @src 17:2392:2402  \"msg.sender\" */ caller()))\n            /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _4 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n            /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 17:2392:2402  \"msg.sender\" */ caller())\n            /// @src 17:2414:2442  \"currency = IERC20(_currency)\"\n            mstore(128, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _2)\n            let _5 := datasize(\"Insurance_2727_deployed\")\n            codecopy(_4, dataoffset(\"Insurance_2727_deployed\"), _5)\n            setimmutable(_4, \"2127\", mload(/** @src 17:2414:2442  \"currency = IERC20(_currency)\" */ 128))\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            return(_4, _5)\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/access/Ownable.sol\", 11:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 12:\"@openzeppelin/contracts/utils/Context.sol\", 17:\"contracts/Insurance.sol\"\n    object \"Insurance_2727_deployed\" {\n        code {\n            {\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0d24abee {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let _2 := add(4, offset)\n                        if slt(add(sub(calldatasize(), offset), not(3)), 256) { revert(0, 0) }\n                        if iszero(/** @src 17:2496:2517  \"msg.sender == relayer\" */ eq(/** @src 17:2496:2506  \"msg.sender\" */ caller(), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(sload(/** @src 17:2510:2517  \"relayer\" */ 0x05), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 35)\n                            mstore(add(_1, 68), \"Only relayer can call this funct\")\n                            mstore(add(_1, 100), \"ion\")\n                            revert(_1, 132)\n                        }\n                        mstore(0, value)\n                        mstore(32, /** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let memberValue, memberValue_1 := access_calldata_tail_string_calldata(_2, _2)\n                        if gt(memberValue_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(dataSlot, extract_byte_array_length(sload(dataSlot)), memberValue_1)\n                        let srcOffset := 0\n                        switch gt(memberValue_1, 31)\n                        case 1 {\n                            let loopEnd := and(memberValue_1, not(31))\n                            mstore(0, dataSlot)\n                            let dstPtr := keccak256(0, 32)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, calldataload(add(memberValue, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, memberValue_1)\n                            {\n                                sstore(dstPtr, and(calldataload(add(memberValue, srcOffset)), not(shr(and(shl(/** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ memberValue_1), 248), not(0)))))\n                            }\n                            sstore(dataSlot, add(shl(1, memberValue_1), 1))\n                        }\n                        default {\n                            let value_1 := 0\n                            if memberValue_1\n                            {\n                                value_1 := calldataload(add(memberValue, srcOffset))\n                            }\n                            sstore(dataSlot, extract_used_part_and_set_length_of_short_byte_array(value_1, memberValue_1))\n                        }\n                        let memberSlot := add(dataSlot, 1)\n                        let _3 := add(offset, 36)\n                        let memberValue_2, memberValue_3 := access_calldata_tail_string_calldata(_2, _3)\n                        if gt(memberValue_3, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot, extract_byte_array_length(sload(memberSlot)), memberValue_3)\n                        let srcOffset_1 := 0\n                        switch gt(memberValue_3, 31)\n                        case 1 {\n                            let loopEnd_1 := and(memberValue_3, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr_1 := keccak256(0, 32)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, calldataload(add(memberValue_2, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(loopEnd_1, memberValue_3)\n                            {\n                                sstore(dstPtr_1, and(calldataload(add(memberValue_2, srcOffset_1)), not(shr(and(shl(/** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ memberValue_3), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(1, memberValue_3), 1))\n                        }\n                        default {\n                            let value_2 := 0\n                            if memberValue_3\n                            {\n                                value_2 := calldataload(add(memberValue_2, srcOffset_1))\n                            }\n                            sstore(memberSlot, extract_used_part_and_set_length_of_short_byte_array(value_2, memberValue_3))\n                        }\n                        let value_3 := calldataload(add(offset, 68))\n                        sstore(add(dataSlot, 2), value_3)\n                        let value_4 := calldataload(add(offset, 100))\n                        sstore(add(dataSlot, /** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value_4)\n                        let memberSlot_1 := add(dataSlot, 4)\n                        let _4 := add(offset, 132)\n                        let memberValue_4, memberValue_5 := access_calldata_tail_string_calldata(_2, _4)\n                        if gt(memberValue_5, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot_1, extract_byte_array_length(sload(memberSlot_1)), memberValue_5)\n                        let srcOffset_2 := 0\n                        switch gt(memberValue_5, 31)\n                        case 1 {\n                            let loopEnd_2 := and(memberValue_5, not(31))\n                            mstore(0, memberSlot_1)\n                            let dstPtr_2 := keccak256(0, 32)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd_2) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr_2, calldataload(add(memberValue_4, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, 1)\n                                srcOffset_2 := add(srcOffset_2, 32)\n                            }\n                            if lt(loopEnd_2, memberValue_5)\n                            {\n                                sstore(dstPtr_2, and(calldataload(add(memberValue_4, srcOffset_2)), not(shr(and(shl(/** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ memberValue_5), 248), not(0)))))\n                            }\n                            sstore(memberSlot_1, add(shl(1, memberValue_5), 1))\n                        }\n                        default {\n                            let value_5 := 0\n                            if memberValue_5\n                            {\n                                value_5 := calldataload(add(memberValue_4, srcOffset_2))\n                            }\n                            sstore(memberSlot_1, extract_used_part_and_set_length_of_short_byte_array(value_5, memberValue_5))\n                        }\n                        let memberSlot_2 := add(dataSlot, /** @src 17:2510:2517  \"relayer\" */ 0x05)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _5 := add(offset, 164)\n                        let memberValue_6, memberValue_7 := access_calldata_tail_string_calldata(_2, _5)\n                        if gt(memberValue_7, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot_2, extract_byte_array_length(sload(memberSlot_2)), memberValue_7)\n                        let srcOffset_3 := 0\n                        switch gt(memberValue_7, 31)\n                        case 1 {\n                            let loopEnd_3 := and(memberValue_7, not(31))\n                            mstore(0, memberSlot_2)\n                            let dstPtr_3 := keccak256(0, 32)\n                            let i_3 := 0\n                            for { } lt(i_3, loopEnd_3) { i_3 := add(i_3, 32) }\n                            {\n                                sstore(dstPtr_3, calldataload(add(memberValue_6, srcOffset_3)))\n                                dstPtr_3 := add(dstPtr_3, 1)\n                                srcOffset_3 := add(srcOffset_3, 32)\n                            }\n                            if lt(loopEnd_3, memberValue_7)\n                            {\n                                sstore(dstPtr_3, and(calldataload(add(memberValue_6, srcOffset_3)), not(shr(and(shl(/** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ memberValue_7), 248), not(0)))))\n                            }\n                            sstore(memberSlot_2, add(shl(1, memberValue_7), 1))\n                        }\n                        default {\n                            let value_6 := 0\n                            if memberValue_7\n                            {\n                                value_6 := calldataload(add(memberValue_6, srcOffset_3))\n                            }\n                            sstore(memberSlot_2, extract_used_part_and_set_length_of_short_byte_array(value_6, memberValue_7))\n                        }\n                        let memberSlot_3 := add(dataSlot, 6)\n                        let _6 := add(offset, 196)\n                        let memberValue_8, memberValue_9 := access_calldata_tail_string_calldata(_2, _6)\n                        if gt(memberValue_9, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot_3, extract_byte_array_length(sload(memberSlot_3)), memberValue_9)\n                        let srcOffset_4 := 0\n                        switch gt(memberValue_9, 31)\n                        case 1 {\n                            let loopEnd_4 := and(memberValue_9, not(31))\n                            mstore(0, memberSlot_3)\n                            let dstPtr_4 := keccak256(0, 32)\n                            let i_4 := 0\n                            for { } lt(i_4, loopEnd_4) { i_4 := add(i_4, 32) }\n                            {\n                                sstore(dstPtr_4, calldataload(add(memberValue_8, srcOffset_4)))\n                                dstPtr_4 := add(dstPtr_4, 1)\n                                srcOffset_4 := add(srcOffset_4, 32)\n                            }\n                            if lt(loopEnd_4, memberValue_9)\n                            {\n                                sstore(dstPtr_4, and(calldataload(add(memberValue_8, srcOffset_4)), not(shr(and(shl(/** @src 17:3018:3036  \"verifiedFlightData\" */ 0x03, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ memberValue_9), 248), not(0)))))\n                            }\n                            sstore(memberSlot_3, add(shl(1, memberValue_9), 1))\n                        }\n                        default {\n                            let value_7 := 0\n                            if memberValue_9\n                            {\n                                value_7 := calldataload(add(memberValue_8, srcOffset_4))\n                            }\n                            sstore(memberSlot_3, extract_used_part_and_set_length_of_short_byte_array(value_7, memberValue_9))\n                        }\n                        let memberSlot_4 := add(dataSlot, 7)\n                        let value_8 := calldataload(add(offset, 228))\n                        let _7 := and(value_8, 0xffff)\n                        let _8 := iszero(eq(value_8, _7))\n                        if _8 { revert(0, 0) }\n                        sstore(memberSlot_4, or(and(sload(memberSlot_4), not(65535)), _7))\n                        mstore(0, value)\n                        mstore(32, 4)\n                        sstore(keccak256(0, 64), calldataload(68))\n                        /// @src 17:3125:3158  \"FlightDataUpdated(flightId, data)\"\n                        let _9 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                        mstore(_9, 32)\n                        let memberValue0, memberValue1 := calldata_access_string_calldata(_2, _2)\n                        mstore(add(_9, 32), 256)\n                        let tail := abi_encode_string_calldata(memberValue0, memberValue1, add(_9, 288))\n                        let memberValue0_1, memberValue1_1 := calldata_access_string_calldata(_2, _3)\n                        mstore(add(_9, 64), add(sub(tail, _9), not(31)))\n                        let tail_1 := abi_encode_string_calldata(memberValue0_1, memberValue1_1, tail)\n                        mstore(add(_9, 96), value_3)\n                        mstore(add(_9, 128), value_4)\n                        let memberValue0_2, memberValue1_2 := calldata_access_string_calldata(_2, _4)\n                        mstore(add(_9, 160), add(sub(tail_1, _9), not(31)))\n                        let tail_2 := abi_encode_string_calldata(memberValue0_2, memberValue1_2, tail_1)\n                        let memberValue0_3, memberValue1_3 := calldata_access_string_calldata(_2, _5)\n                        mstore(add(_9, 192), add(sub(tail_2, _9), not(31)))\n                        let tail_3 := abi_encode_string_calldata(memberValue0_3, memberValue1_3, tail_2)\n                        let memberValue0_4, memberValue1_4 := calldata_access_string_calldata(_2, _6)\n                        mstore(add(_9, 224), add(sub(tail_3, _9), not(31)))\n                        let tail_4 := abi_encode_string_calldata(memberValue0_4, memberValue1_4, tail_3)\n                        _8 := 0\n                        mstore(add(_9, 256), _7)\n                        /// @src 17:3125:3158  \"FlightDataUpdated(flightId, data)\"\n                        log2(_9, sub(tail_4, _9), 0x5a0428f2de042d23ce1797aac79ce68d68212c9b80f7503693b25a49ff04bebc, value)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x13be4f9e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        mstore(0, value_9)\n                        mstore(32, /** @src 17:6319:6334  \"insuranceClaims\" */ 0x02)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _10 := sload(keccak256(0, 64))\n                        mstore(0, _10)\n                        mstore(32, 1)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let value_10 := and(sload(/** @src 17:6431:6444  \"policy.status\" */ dataSlot_1), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_10, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:6423:6491  \"require(policy.status == PolicyStatus.Claimed, \\\"Policy not claimed\\\")\"\n                        require_helper_stringliteral_ffaf(/** @src 17:6431:6468  \"policy.status == PolicyStatus.Claimed\" */ eq(value_10, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 1))\n                        let value_11 := 0\n                        value_11 := 0\n                        sstore(/** @src 17:6502:6537  \"policy.status = PolicyStatus.Active\" */ dataSlot_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(sload(/** @src 17:6502:6537  \"policy.status = PolicyStatus.Active\" */ dataSlot_1), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ not(255)))\n                        /// @src 17:6552:6584  \"ClaimRejected(claimId, policyId)\"\n                        log3(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 17:6552:6584  \"ClaimRejected(claimId, policyId)\" */ 0xaebcfd3c9d59eec021c4ecaf988ae8afc864298b4db60a4a545cef73553c309f, value_9, _10)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x46dcb459 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\" */ 3)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(dataSlot_2)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(dataSlot_2, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 1))\n                        let _11 := sload(/** @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\" */ add(dataSlot_2, 2))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _12 := sload(/** @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\" */ add(dataSlot_2, 3))\n                        let ret_mpos_2 := copy_array_from_storage_to_memory_string(add(dataSlot_2, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 4))\n                        /// @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\"\n                        let ret_mpos_3 := copy_array_from_storage_to_memory_string(add(dataSlot_2, 5))\n                        let ret_mpos_4 := copy_array_from_storage_to_memory_string(add(dataSlot_2, 6))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let value_12 := and(sload(/** @src 17:1226:1282  \"mapping(bytes32 => FlightData) public verifiedFlightData\" */ add(dataSlot_2, 7)), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xffff)\n                        let memPos := mload(64)\n                        mstore(memPos, 256)\n                        let tail_5 := abi_encode_string(ret_mpos, add(memPos, 256))\n                        mstore(add(memPos, 32), sub(tail_5, memPos))\n                        let tail_6 := abi_encode_string(ret_mpos_1, tail_5)\n                        mstore(add(memPos, 64), _11)\n                        mstore(add(memPos, 96), _12)\n                        mstore(add(memPos, 128), sub(tail_6, memPos))\n                        let tail_7 := abi_encode_string(ret_mpos_2, tail_6)\n                        mstore(add(memPos, 160), sub(tail_7, memPos))\n                        let tail_8 := abi_encode_string(ret_mpos_3, tail_7)\n                        mstore(add(memPos, 192), sub(tail_8, memPos))\n                        let tail_9 := abi_encode_string(ret_mpos_4, tail_8)\n                        mstore(add(memPos, 224), value_12)\n                        return(memPos, sub(tail_9, memPos))\n                    }\n                    case 0x47e3b138 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        mstore(0, value_13)\n                        mstore(32, 1)\n                        let dataSlot_3 := keccak256(0, 64)\n                        let value_14 := and(sload(/** @src 17:6734:6747  \"policy.status\" */ dataSlot_3), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_14, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:6726:6792  \"require(policy.status == PolicyStatus.Active, \\\"Policy not active\\\")\"\n                        require_helper_stringliteral_4bc2(/** @src 17:6734:6770  \"policy.status == PolicyStatus.Active\" */ iszero(value_14))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        if iszero(/** @src 17:6810:6854  \"block.timestamp > policy.expirationTimestamp\" */ gt(/** @src 17:6810:6825  \"block.timestamp\" */ timestamp(), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sload(/** @src 17:6828:6854  \"policy.expirationTimestamp\" */ add(dataSlot_3, 6))))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 18)\n                            mstore(add(memPtr, 68), \"Policy not expired\")\n                            revert(memPtr, 100)\n                        }\n                        let cleaned := 0\n                        cleaned := 0\n                        sstore(dataSlot_3, or(and(sload(dataSlot_3), not(255)), /** @src 17:6904:6924  \"PolicyStatus.Expired\" */ 3))\n                        /// @src 17:6939:6962  \"PolicyExpired(policyId)\"\n                        log2(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 17:6939:6962  \"PolicyExpired(policyId)\" */ 0xb42943f28e20e505899f2402abb3b329c050aebd77ccf1cbb4a6dd5957f4d98f, value_13)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x563fcbe3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 1)\n                        let dataSlot_4 := keccak256(0, 64)\n                        let value_15 := and(sload(/** @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\" */ dataSlot_4), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xff)\n                        /// @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\"\n                        let ret_mpos_5 := copy_array_from_storage_to_memory_string(add(dataSlot_4, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 1))\n                        let value_16 := and(sload(/** @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\" */ add(dataSlot_4, 2)), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let _13 := sload(/** @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\" */ add(dataSlot_4, 3))\n                        let ret_mpos_6 := copy_array_from_storage_to_memory_string(add(dataSlot_4, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 4))\n                        let _14 := sload(/** @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\" */ add(dataSlot_4, 5))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _15 := sload(/** @src 17:986:1046  \"mapping(bytes32 => InsurancePolicy) public insurancePolicies\" */ add(dataSlot_4, 6))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let memPos_1 := mload(64)\n                        if iszero(lt(value_15, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPos_1, value_15)\n                        mstore(add(memPos_1, 32), 224)\n                        let tail_10 := abi_encode_string(ret_mpos_5, add(memPos_1, 224))\n                        mstore(add(memPos_1, 64), value_16)\n                        mstore(add(memPos_1, 96), _13)\n                        mstore(add(memPos_1, 128), sub(tail_10, memPos_1))\n                        let tail_11 := abi_encode_string(ret_mpos_6, tail_10)\n                        mstore(add(memPos_1, 160), _14)\n                        mstore(add(memPos_1, 192), _15)\n                        return(memPos_1, sub(tail_11, memPos_1))\n                    }\n                    case 0x57215d06 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, /** @src 17:1475:1476  \"6\" */ 0x06)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x63f3a73b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(0, 0) }\n                        let offset_1 := calldataload(4)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset_1))\n                        let _16 := gt(length, 0xffffffffffffffff)\n                        if _16 { revert(0, 0) }\n                        let arrayPos := add(offset_1, 36)\n                        if gt(add(add(offset_1, length), 36), calldatasize()) { revert(0, 0) }\n                        let value_17 := 0\n                        value_17 := calldataload(36)\n                        let _17 := and(value_17, sub(shl(160, 1), 1))\n                        if iszero(eq(value_17, _17)) { revert(0, 0) }\n                        let value_18 := calldataload(68)\n                        let offset_2 := calldataload(100)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let array := abi_decode_available_length_string(add(offset_2, 36), calldataload(add(4, offset_2)), calldatasize())\n                        let value_19 := calldataload(132)\n                        let value_20 := calldataload(164)\n                        if /** @src 17:3457:3513  \"bytes(insuredEvent).length <= MAX_EVENT_DESCRIPTION_SIZE\" */ gt(length, /** @src 17:1475:1476  \"6\" */ 0x06)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 0x20)\n                            mstore(add(memPtr_1, 36), 26)\n                            mstore(add(memPtr_1, 68), \"Event description too long\")\n                            revert(memPtr_1, 100)\n                        }\n                        if /** @src 17:3562:3590  \"insuredAddress != address(0)\" */ iszero(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _17)\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 0x20)\n                            mstore(add(memPtr_2, 36), 23)\n                            mstore(add(memPtr_2, 68), \"Invalid insured address\")\n                            revert(memPtr_2, 100)\n                        }\n                        if /** @src 17:3636:3653  \"insuredAmount > 0\" */ iszero(value_18)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 0x20)\n                            mstore(add(memPtr_3, 36), 24)\n                            mstore(add(memPtr_3, 68), \"Amount should be above 0\")\n                            revert(memPtr_3, 100)\n                        }\n                        if iszero(/** @src 17:3700:3736  \"startTimestamp < expirationTimestamp\" */ lt(value_19, value_20))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 0x20)\n                            mstore(add(memPtr_4, 36), 18)\n                            mstore(add(memPtr_4, 68), \"Invalid timestamps\")\n                            revert(memPtr_4, 100)\n                        }\n                        let _18 := abi_decode_available_length_string(/** @src 17:3781:3910  \"_getPolicyId(...\" */ arrayPos, length, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ calldatasize())\n                        /// @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\"\n                        let expr_mpos := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                        /// @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\"\n                        let _19 := add(expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x20)\n                        mstore(_19, /** @src 17:3807:3819  \"block.number\" */ number())\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        mstore(add(/** @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 64), 128)\n                        let tail_12 := abi_encode_string(_18, add(/** @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 160))\n                        mstore(add(/** @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 96), _17)\n                        mstore(add(/** @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 128), value_18)\n                        /// @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\"\n                        let _20 := sub(tail_12, expr_mpos)\n                        mstore(expr_mpos, add(_20, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ not(31)))\n                        /// @src 17:7190:7258  \"abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount)\"\n                        finalize_allocation(expr_mpos, _20)\n                        /// @src 17:7173:7259  \"return keccak256(abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount))\"\n                        let var := /** @src 17:7180:7259  \"keccak256(abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount))\" */ keccak256(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _19, mload(/** @src 17:7180:7259  \"keccak256(abi.encode(blockNumber, insuredEvent, insuredAddress, insuredAmount))\" */ expr_mpos))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        mstore(0, var)\n                        mstore(0x20, 1)\n                        if iszero(/** @src 17:3928:3984  \"insurancePolicies[policyId].insuredAddress == address(0)\" */ iszero(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(sload(/** @src 17:3928:3970  \"insurancePolicies[policyId].insuredAddress\" */ add(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ keccak256(0, 64), /** @src 17:3928:3970  \"insurancePolicies[policyId].insuredAddress\" */ 2)), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 0x20)\n                            mstore(add(memPtr_5, 36), 21)\n                            mstore(add(memPtr_5, 68), \"Policy already issued\")\n                            revert(memPtr_5, 100)\n                        }\n                        mstore(0, var)\n                        mstore(0x20, 1)\n                        let dataSlot_5 := keccak256(0, 64)\n                        let value_21 := 0\n                        value_21 := 0\n                        sstore(/** @src 17:4094:4132  \"newPolicy.status = PolicyStatus.Active\" */ dataSlot_5, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(sload(/** @src 17:4094:4132  \"newPolicy.status = PolicyStatus.Active\" */ dataSlot_5), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ not(255)))\n                        /// @src 17:4142:4164  \"newPolicy.insuredEvent\"\n                        let _21 := add(dataSlot_5, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 1)\n                        _16 := 0\n                        clean_up_bytearray_end_slots_string_storage(_21, extract_byte_array_length(sload(_21)), length)\n                        let srcOffset_5 := 0\n                        switch gt(length, 0x1f)\n                        case 1 {\n                            let loopEnd_5 := and(length, not(31))\n                            mstore(0, _21)\n                            let dstPtr_5 := keccak256(0, 0x20)\n                            let i_5 := 0\n                            for { } lt(i_5, loopEnd_5) { i_5 := add(i_5, 0x20) }\n                            {\n                                sstore(dstPtr_5, calldataload(add(add(offset_1, srcOffset_5), 36)))\n                                dstPtr_5 := add(dstPtr_5, 1)\n                                srcOffset_5 := add(srcOffset_5, 0x20)\n                            }\n                            if lt(loopEnd_5, length)\n                            {\n                                sstore(dstPtr_5, and(calldataload(add(add(offset_1, srcOffset_5), 36)), not(shr(and(shl(3, length), 248), not(0)))))\n                            }\n                            sstore(_21, add(shl(1, length), 1))\n                        }\n                        default {\n                            let value_22 := 0\n                            if length\n                            {\n                                value_22 := calldataload(add(add(offset_1, srcOffset_5), 36))\n                            }\n                            sstore(_21, extract_used_part_and_set_length_of_short_byte_array(value_22, length))\n                        }\n                        /// @src 17:4189:4213  \"newPolicy.insuredAddress\"\n                        let _22 := add(dataSlot_5, /** @src 17:3928:3970  \"insurancePolicies[policyId].insuredAddress\" */ 2)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        sstore(_22, or(and(sload(_22), shl(160, 0xffffffffffffffffffffffff)), _17))\n                        sstore(/** @src 17:4240:4263  \"newPolicy.insuredAmount\" */ add(dataSlot_5, 3), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value_18)\n                        /// @src 17:4289:4307  \"newPolicy.flightId\"\n                        let _23 := add(dataSlot_5, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 4)\n                        let newLen := mload(array)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(_23, extract_byte_array_length(sload(_23)), newLen)\n                        let srcOffset_6 := 0\n                        srcOffset_6 := 0x20\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd_6 := and(newLen, not(31))\n                            mstore(0, _23)\n                            let dstPtr_6 := keccak256(0, srcOffset_6)\n                            let i_6 := 0\n                            for { } lt(i_6, loopEnd_6) { i_6 := add(i_6, 0x20) }\n                            {\n                                sstore(dstPtr_6, mload(add(array, srcOffset_6)))\n                                dstPtr_6 := add(dstPtr_6, 1)\n                                srcOffset_6 := add(srcOffset_6, 0x20)\n                            }\n                            if lt(loopEnd_6, newLen)\n                            {\n                                let lastValue := mload(add(array, srcOffset_6))\n                                sstore(dstPtr_6, and(lastValue, not(shr(and(shl(/** @src 17:4240:4263  \"newPolicy.insuredAmount\" */ 3, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ newLen), 248), not(0)))))\n                            }\n                            sstore(_23, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_23 := 0\n                            if newLen\n                            {\n                                value_23 := mload(add(array, srcOffset_6))\n                            }\n                            sstore(_23, extract_used_part_and_set_length_of_short_byte_array(value_23, newLen))\n                        }\n                        sstore(/** @src 17:4328:4352  \"newPolicy.startTimestamp\" */ add(dataSlot_5, 5), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value_19)\n                        sstore(/** @src 17:4379:4408  \"newPolicy.expirationTimestamp\" */ add(dataSlot_5, /** @src 17:1475:1476  \"6\" */ 0x06), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value_20)\n                        /// @src 17:4494:4507  \"insuredAmount\"\n                        fun_safeTransferFrom(/** @src 17:4441:4449  \"currency\" */ loadimmutable(\"2127\"), /** @src 17:4467:4477  \"msg.sender\" */ caller(), /** @src 17:4487:4491  \"this\" */ address(), /** @src 17:4494:4507  \"insuredAmount\" */ value_18)\n                        /// @src 17:4524:4695  \"PolicyIssued(...\"\n                        let _24 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                        mstore(_24, 96)\n                        let tail_13 := abi_encode_string_calldata(arrayPos, length, add(_24, 96))\n                        mstore(add(_24, 0x20), value_18)\n                        mstore(add(_24, 64), sub(tail_13, _24))\n                        /// @src 17:4524:4695  \"PolicyIssued(...\"\n                        log4(_24, sub(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ abi_encode_string(array, tail_13), /** @src 17:4524:4695  \"PolicyIssued(...\" */ _24), 0x462b97c644c45686704fa4cbe8f3fc4cc52ca38c83eb8cf2c7b596317a11e549, var, /** @src 17:4467:4477  \"msg.sender\" */ caller(), /** @src 17:4524:4695  \"PolicyIssued(...\" */ _17)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, var)\n                        return(memPos_3, 0x20)\n                    }\n                    case 0x6548e9bc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _25 := and(/** @src 17:2656:2678  \"_relayer != address(0)\" */ value0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 17:2656:2678  \"_relayer != address(0)\" */ iszero(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _25)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 23)\n                            mstore(add(memPtr_6, 68), \"Invalid relayer address\")\n                            revert(memPtr_6, 100)\n                        }\n                        let _26 := sload(/** @src 17:2736:2743  \"relayer\" */ 0x05)\n                        /// @src 17:2721:2754  \"RelayerUpdated(relayer, _relayer)\"\n                        log3(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 17:2721:2754  \"RelayerUpdated(relayer, _relayer)\" */ 0x605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(_26, sub(shl(160, 1), 1)), /** @src 17:2721:2754  \"RelayerUpdated(relayer, _relayer)\" */ _25)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        sstore(/** @src 17:2736:2743  \"relayer\" */ 0x05, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ or(and(_26, shl(160, 0xffffffffffffffffffffffff)), _25))\n                        return(0, 0)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _27 := sload(0)\n                        sstore(0, and(_27, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(_27, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x77325712 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let _28 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _28)\n                        return(memPos_4, 32)\n                    }\n                    case 0x8406c079 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_24 := and(sload(/** @src 17:1393:1415  \"address public relayer\" */ 5), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_24)\n                        return(memPos_5, 32)\n                    }\n                    case 0x8b35e14e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_25 := calldataload(4)\n                        mstore(0, value_25)\n                        mstore(32, 1)\n                        let dataSlot_6 := keccak256(0, 64)\n                        let value_26 := and(sload(/** @src 17:4844:4857  \"policy.status\" */ dataSlot_6), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_26, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:4836:4902  \"require(policy.status == PolicyStatus.Active, \\\"Policy not active\\\")\"\n                        require_helper_stringliteral_4bc2(/** @src 17:4844:4880  \"policy.status == PolicyStatus.Active\" */ iszero(value_26))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        if /** @src 17:4920:4960  \"block.timestamp >= policy.startTimestamp\" */ lt(/** @src 17:4920:4935  \"block.timestamp\" */ timestamp(), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sload(/** @src 17:4939:4960  \"policy.startTimestamp\" */ add(dataSlot_6, 5)))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 21)\n                            mstore(add(memPtr_7, 68), \"Policy not yet active\")\n                            revert(memPtr_7, 100)\n                        }\n                        if /** @src 17:5004:5049  \"block.timestamp <= policy.expirationTimestamp\" */ gt(/** @src 17:4920:4935  \"block.timestamp\" */ timestamp(), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sload(/** @src 17:5023:5049  \"policy.expirationTimestamp\" */ add(dataSlot_6, 6)))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), 14)\n                            mstore(add(memPtr_8, 68), \"Policy expired\")\n                            revert(memPtr_8, 100)\n                        }\n                        /// @src 17:5125:5140  \"policy.flightId\"\n                        let _29 := add(dataSlot_6, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 4)\n                        /// @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\"\n                        let expr_mpos_1 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                        /// @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\"\n                        let _30 := add(expr_mpos_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 32)\n                        let ret := 0\n                        let slotValue := sload(_29)\n                        let length_1 := extract_byte_array_length(slotValue)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(_30, and(slotValue, not(255)))\n                            ret := add(add(/** @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\" */ expr_mpos_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mul(length_1, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, _29)\n                            let dataPos := keccak256(0, 32)\n                            let i_7 := 0\n                            for { } lt(i_7, length_1) { i_7 := add(i_7, 32) }\n                            {\n                                mstore(add(add(/** @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\" */ expr_mpos_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ i_7), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(/** @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\" */ expr_mpos_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ length_1), 32)\n                        }\n                        /// @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\"\n                        let _31 := sub(ret, expr_mpos_1)\n                        mstore(expr_mpos_1, add(_31, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ not(31)))\n                        /// @src 17:5108:5141  \"abi.encodePacked(policy.flightId)\"\n                        finalize_allocation(expr_mpos_1, _31)\n                        /// @src 17:5098:5142  \"keccak256(abi.encodePacked(policy.flightId))\"\n                        let expr := keccak256(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _30, mload(/** @src 17:5098:5142  \"keccak256(abi.encodePacked(policy.flightId))\" */ expr_mpos_1))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        mstore(0, expr)\n                        mstore(32, /** @src 17:5160:5178  \"verifiedFlightData\" */ 0x03)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        if /** @src 17:5160:5205  \"verifiedFlightData[flightId].flight_date != 0\" */ iszero(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sload(/** @src 17:5160:5200  \"verifiedFlightData[flightId].flight_date\" */ add(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ keccak256(0, 64), /** @src 17:5160:5200  \"verifiedFlightData[flightId].flight_date\" */ 2)))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 24)\n                            mstore(add(memPtr_9, 68), \"Flight data not verified\")\n                            revert(memPtr_9, 100)\n                        }\n                        mstore(0, expr)\n                        mstore(32, /** @src 17:5160:5178  \"verifiedFlightData\" */ 0x03)\n                        /// @src 17:5281:5323  \"verifiedFlightData[flightId].flight_status\"\n                        let _32 := add(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ keccak256(0, 64), /** @src 17:5023:5049  \"policy.expirationTimestamp\" */ 6)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let memPtr_10 := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(_32)\n                        let length_2 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_10, length_2)\n                        let updated_pos := add(memPtr_10, 32)\n                        switch and(slotValue_1, 1)\n                        case 0 {\n                            mstore(updated_pos, and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_10, shl(/** @src 17:4939:4960  \"policy.startTimestamp\" */ 5, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ iszero(iszero(length_2)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, _32)\n                            let dataPos_1 := keccak256(0, 32)\n                            let i_8 := 0\n                            for { } lt(i_8, length_2) { i_8 := add(i_8, 32) }\n                            {\n                                mstore(add(add(memPtr_10, i_8), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_1 := add(add(memPtr_10, i_8), 32)\n                        }\n                        finalize_allocation(memPtr_10, sub(ret_1, memPtr_10))\n                        /// @src 17:5265:5325  \"keccak256(bytes(verifiedFlightData[flightId].flight_status))\"\n                        let expr_1 := keccak256(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ updated_pos, mload(/** @src 17:5265:5325  \"keccak256(bytes(verifiedFlightData[flightId].flight_status))\" */ memPtr_10))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let size := 0\n                        let _33 := 0\n                        _33 := 0\n                        size := 64\n                        let memPtr_11 := mload(size)\n                        finalize_allocation(memPtr_11, size)\n                        mstore(memPtr_11, 9)\n                        let _34 := add(memPtr_11, 32)\n                        mstore(_34, \"CANCELLED\")\n                        if iszero(/** @src 17:5265:5371  \"keccak256(bytes(verifiedFlightData[flightId].flight_status)) == ...\" */ eq(expr_1, /** @src 17:5342:5371  \"keccak256(bytes(\\\"CANCELLED\\\"))\" */ keccak256(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _34, 9)))\n                        {\n                            let memPtr_12 := mload(size)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 20)\n                            mstore(add(memPtr_12, 68), \"Flight not cancelled\")\n                            revert(memPtr_12, 100)\n                        }\n                        let cleaned_1 := 0\n                        cleaned_1 := 0\n                        sstore(dataSlot_6, or(and(sload(dataSlot_6), not(255)), 1))\n                        let _35 := copy_array_from_storage_to_memory_string(/** @src 17:5492:5537  \"_getClaimId(block.timestamp, policy.flightId)\" */ _29)\n                        /// @src 17:7417:7448  \"abi.encode(timestamp, flightId)\"\n                        let expr_mpos_2 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(size)\n                        /// @src 17:7417:7448  \"abi.encode(timestamp, flightId)\"\n                        let _36 := add(expr_mpos_2, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 32)\n                        mstore(_36, /** @src 17:4920:4935  \"block.timestamp\" */ timestamp())\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        mstore(add(/** @src 17:7417:7448  \"abi.encode(timestamp, flightId)\" */ expr_mpos_2, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ size), size)\n                        /// @src 17:7417:7448  \"abi.encode(timestamp, flightId)\"\n                        let _37 := sub(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ abi_encode_string(_35, add(/** @src 17:7417:7448  \"abi.encode(timestamp, flightId)\" */ expr_mpos_2, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 96)), /** @src 17:7417:7448  \"abi.encode(timestamp, flightId)\" */ expr_mpos_2)\n                        mstore(expr_mpos_2, add(_37, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ not(31)))\n                        /// @src 17:7417:7448  \"abi.encode(timestamp, flightId)\"\n                        finalize_allocation(expr_mpos_2, _37)\n                        /// @src 17:7400:7449  \"return keccak256(abi.encode(timestamp, flightId))\"\n                        let var_1 := /** @src 17:7407:7449  \"keccak256(abi.encode(timestamp, flightId))\" */ keccak256(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _36, mload(/** @src 17:7407:7449  \"keccak256(abi.encode(timestamp, flightId))\" */ expr_mpos_2))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        mstore(0, var_1)\n                        mstore(32, /** @src 17:5160:5200  \"verifiedFlightData[flightId].flight_date\" */ 2)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        sstore(keccak256(0, size), value_25)\n                        let _38 := sload(/** @src 17:5617:5637  \"policy.insuredAmount\" */ add(dataSlot_6, /** @src 17:5160:5178  \"verifiedFlightData\" */ 0x03))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let product := mul(_38, /** @src 17:5640:5648  \"0.001e18\" */ 0x038d7ea4c68000)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        if iszero(or(iszero(_38), eq(/** @src 17:5640:5648  \"0.001e18\" */ 0x038d7ea4c68000, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ div(product, _38))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:5719:5731  \"proposerBond\"\n                        fun_safeTransferFrom(/** @src 17:5666:5674  \"currency\" */ loadimmutable(\"2127\"), /** @src 17:5692:5702  \"msg.sender\" */ caller(), /** @src 17:5712:5716  \"this\" */ address(), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ div(product, /** @src 17:5652:5656  \"1e18\" */ 0x0de0b6b3a7640000))\n                        /// @src 17:5748:5798  \"ClaimSubmitted(block.timestamp, claimId, policyId)\"\n                        let _39 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(size)\n                        mstore(_39, /** @src 17:4920:4935  \"block.timestamp\" */ timestamp())\n                        /// @src 17:5748:5798  \"ClaimSubmitted(block.timestamp, claimId, policyId)\"\n                        log3(_39, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 32, /** @src 17:5748:5798  \"ClaimSubmitted(block.timestamp, claimId, policyId)\" */ 0x3e9086131cd56a11cb2fc7a195ff02167e166171a0357a11f6ee490775b51119, var_1, value_25)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_27 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_27)\n                        return(memPos_6, 32)\n                    }\n                    case 0xbdf80435 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_28 := calldataload(4)\n                        mstore(0, value_28)\n                        mstore(32, /** @src 17:5887:5902  \"insuranceClaims\" */ 0x02)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _40 := sload(keccak256(0, 64))\n                        mstore(0, _40)\n                        mstore(32, 1)\n                        let dataSlot_7 := keccak256(0, 64)\n                        let value_29 := and(sload(/** @src 17:5999:6012  \"policy.status\" */ dataSlot_7), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_29, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:5991:6059  \"require(policy.status == PolicyStatus.Claimed, \\\"Policy not claimed\\\")\"\n                        require_helper_stringliteral_ffaf(/** @src 17:5999:6036  \"policy.status == PolicyStatus.Claimed\" */ eq(value_29, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 1))\n                        let cleaned_2 := 0\n                        cleaned_2 := 0\n                        sstore(dataSlot_7, or(and(sload(dataSlot_7), not(255)), /** @src 17:5887:5902  \"insuranceClaims\" */ 0x02))\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let value_30 := and(sload(/** @src 17:6138:6159  \"policy.insuredAddress\" */ add(dataSlot_7, /** @src 17:5887:5902  \"insuranceClaims\" */ 0x02)), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let _41 := sload(/** @src 17:6161:6181  \"policy.insuredAmount\" */ add(dataSlot_7, 3))\n                        /// @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos_3 := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                        /// @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_mpos_3, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 32), shl(224, 0xa9059cbb))\n                        mstore(/** @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos_3, 36), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value_30)\n                        mstore(add(/** @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos_3, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 68), _41)\n                        /// @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos_3, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 68)\n                        /// @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_mpos_3, 100)\n                        fun_callOptionalReturn(/** @src 17:6116:6124  \"currency\" */ loadimmutable(\"2127\"), /** @src 11:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos_3)\n                        /// @src 17:6198:6230  \"ClaimAccepted(claimId, policyId)\"\n                        log3(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 17:6198:6230  \"ClaimAccepted(claimId, policyId)\" */ 0x7a556a7dd17e7c65d9162b71bf1434aab934a041cdde071ee2653901c7a5c382, value_28, _40)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xc0b6b37e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 17:1108:1158  \"mapping(bytes32 => bytes32) public insuranceClaims\" */ 2)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _42 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _42)\n                        return(memPos_7, 32)\n                    }\n                    case 0xe5a6b10f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, and(/** @src 17:1355:1387  \"IERC20 public immutable currency\" */ loadimmutable(\"2127\"), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_8, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        /// @src 2:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        let _43 := and(/** @src 2:2627:2649  \"newOwner == address(0)\" */ value0_1, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 2:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ _43)\n                        /// @src 2:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, /** @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                            mstore(4, 0)\n                            /// @src 2:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 36)\n                        }\n                        let _44 := sload(0)\n                        sstore(0, or(and(_44, shl(160, 0xffffffffffffffffffffffff)), _43))\n                        /// @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0, 0, /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(_44, sub(shl(160, 1), 1)), /** @src 2:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _43)\n                        /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, size)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            function access_calldata_tail_string_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _1 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _1) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n            }\n            /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function calldata_access_string_calldata(base_ref, ptr) -> value, length\n            {\n                let rel_offset_of_tail := calldataload(ptr)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let value_1 := add(rel_offset_of_tail, base_ref)\n                length := calldataload(value_1)\n                value := add(value_1, 0x20)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function require_helper_stringliteral_ffaf(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Policy not claimed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_4bc2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"Policy not active\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1490 @src 11:1618:1806  \"function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {...\"\n            function fun_safeTransferFrom(var_token_address, var_from, var_to, var_value)\n            {\n                /// @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                let expr_mpos := /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ mload(64)\n                /// @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                mstore(add(expr_mpos, 0x20), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ shl(224, 0x23b872dd))\n                mstore(/** @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, 36), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(add(/** @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 68), and(var_to, sub(shl(160, 1), 1)))\n                mstore(add(/** @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 100), var_value)\n                /// @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                mstore(expr_mpos, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 100)\n                /// @src 11:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                finalize_allocation(expr_mpos, 132)\n                fun_callOptionalReturn(var_token_address, expr_mpos)\n            }\n            /// @ast-id 463 @src 2:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                let value := and(sload(/** @src 2:1710:1716  \"_owner\" */ 0x00), /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 2:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ value, /** @src 12:735:745  \"msg.sender\" */ caller()))\n                /// @src 2:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 2:1710:1716  \"_owner\" */ 0x00, /** @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                    mstore(/** @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 12:735:745  \"msg.sender\" */ caller())\n                    /// @src 2:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 2:1710:1716  \"_owner\" */ 0x00, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 36)\n                }\n            }\n            /// @ast-id 1840 @src 11:8370:9090  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_1803_address, var_data_mpos)\n            {\n                /// @src 11:8507:8928  \"assembly (\\\"memory-safe\\\") {...\"\n                if iszero(call(gas(), var_token_1803_address, /** @src -1:-1:-1 */ 0, /** @src 11:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ 0, /** @src 11:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ 0x20))\n                {\n                    let usr$ptr := mload(0x40)\n                    returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 11:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                    revert(usr$ptr, returndatasize())\n                }\n                let var_returnSize := returndatasize()\n                let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                /// @src 11:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 11:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                switch /** @src 11:8942:8957  \"returnSize == 0\" */ iszero(var_returnSize)\n                case /** @src 11:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                    expr := /** @src 11:8994:9010  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 11:9009:9010  \"1\" */ 0x01))\n                }\n                default /// @src 11:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                {\n                    expr := /** @src 11:8960:8991  \"address(token).code.length == 0\" */ iszero(/** @src 11:8960:8986  \"address(token).code.length\" */ extcodesize(/** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(/** @src 11:8960:8974  \"address(token)\" */ var_token_1803_address, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1))))\n                }\n                /// @src 11:8938:9084  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                if expr\n                {\n                    /// @src 11:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ shl(224, 0x5274afe7))\n                    /// @src 17:235:7458  \"contract Insurance is Ownable {...\"\n                    mstore(/** @src 11:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ 4, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ and(/** @src 11:9058:9072  \"address(token)\" */ var_token_1803_address, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 11:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 17:235:7458  \"contract Insurance is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cc6719fd1bb3649c587fbaa1e30382950c5e38c9ca260a092b417f2d0aa3b52c64736f6c634300081c0033\"\n    }\n}\n",
          "hash": "8b386970870320b0183976c634210f374645d35b79f9ad6f5ec20fcb9c19d707",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MyToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x72a3fcfc8985f958f1d2676e9caa1b90194c01e2afbbc9c020e147dd1f7df04d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://972094b2503beeabda07de09a9229ee6f7155fae0630ab47841325f2c1715745\",\"dweb:/ipfs/QmXcsfdSBFhMe5CiPu7CB3tf8Aa1vB9sBNjuVqk6fRbHT8\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 616/66208 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 9900\n// Code size = 34674 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20270]\n   117: jump @261 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x302a0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @261\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @33\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @33\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 5 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @1351\n      : @23 [@dyn 4] (gas: 10)\n   791: u64 [s1 + 0x18] = a3\n   794: u64 [s1 + 0x10] = a2\n   797: u64 [s1 + 0x8] = a1\n   800: u64 [s1] = a0\n   802: sp = s0 + 0xffffffffffffffa0\n   805: ra = u64 [sp + 0x58]\n   808: s0 = u64 [sp + 0x50]\n   811: s1 = u64 [sp + 0x48]\n   814: sp = sp + 0x60\n   817: ret\n      : @24 (gas: 40)\n   819: sp = sp + 0xffffffffffffffa0\n   822: u64 [sp + 0x58] = ra\n   825: u64 [sp + 0x50] = s0\n   828: s0 = sp + 0x60\n   831: sp = sp & 0xffffffffffffffe0\n   834: t0 = u64 [a0]\n   836: a3 = u64 [a0 + 0x8]\n   839: a4 = u64 [a0 + 0x10]\n   842: a0 = u64 [a0 + 0x18]\n   845: t1 = u64 [a1]\n   847: a2 = u64 [a1 + 0x8]\n   850: a5 = u64 [a1 + 0x10]\n   853: a1 = u64 [a1 + 0x18]\n   856: t2 = reverse a0\n   858: a4 = reverse a4\n   860: a3 = reverse a3\n   862: a0 = reverse t0\n   864: t0 = reverse a1\n   866: a5 = reverse a5\n   868: a2 = reverse a2\n   870: a1 = reverse t1\n   872: u64 [sp + 0x18] = a0\n   875: u64 [sp + 0x10] = a3\n   878: u64 [sp + 0x8] = a4\n   881: u64 [sp] = t2\n   883: u64 [sp + 0x38] = a1\n   886: u64 [sp + 0x30] = a2\n   889: u64 [sp + 0x28] = a5\n   892: u64 [sp + 0x20] = t0\n   895: i32 a1 = sp + 0\n   897: i32 a3 = sp + 0x20\n   900: a2 = 0xffffffffffffffff\n   903: a4 = 0x20\n   906: a0 = 0\n   908: ecalli 9 // 'set_storage'\n   910: sp = s0 + 0xffffffffffffffa0\n   913: ra = u64 [sp + 0x58]\n   916: s0 = u64 [sp + 0x50]\n   919: sp = sp + 0x60\n   922: ret\n      : @25 (gas: 16)\n   924: sp = sp + 0xffffffffffffffa0\n   927: u64 [sp + 0x58] = ra\n   930: u64 [sp + 0x50] = s0\n   933: u64 [sp + 0x48] = s1\n   936: s0 = sp + 0x60\n   939: sp = sp & 0xffffffffffffffe0\n   942: a3 = u64 [a2]\n   944: u64 [sp + 0x18] = a3\n   947: a3 = u64 [a2 + 0x8]\n   950: u64 [sp + 0x10] = a3\n   953: a3 = u64 [a2 + 0x10]\n   956: u64 [sp + 0x8] = a3\n   959: a2 = u64 [a2 + 0x18]\n   962: u64 [sp] = a2\n   964: s1 = a1\n   966: ra = 10, jump @33\n      : @26 [@dyn 5] (gas: 23)\n   971: a1 = u64 [sp]\n   973: a1 = reverse a1\n   975: a2 = u64 [sp + 0x8]\n   978: a2 = reverse a2\n   980: a3 = u64 [sp + 0x10]\n   983: a3 = reverse a3\n   985: a4 = u64 [sp + 0x18]\n   988: a4 = reverse a4\n   990: u64 [sp + 0x38] = a4\n   993: u64 [sp + 0x30] = a3\n   996: u64 [sp + 0x28] = a2\n   999: u64 [sp + 0x20] = a1\n  1002: i32 a2 = a0 + 0\n  1004: i32 a3 = s1 + 0\n  1006: i32 a0 = sp + 0x20\n  1009: a1 = 0x1\n  1012: ecalli 4 // 'deposit_event'\n  1014: sp = s0 + 0xffffffffffffffa0\n  1017: ra = u64 [sp + 0x58]\n  1020: s0 = u64 [sp + 0x50]\n  1023: s1 = u64 [sp + 0x48]\n  1026: sp = sp + 0x60\n  1029: ret\n      : @27 (gas: 15)\n  1031: sp = sp + 0xffffffffffffff20\n  1035: u64 [sp + 0xd8] = ra\n  1039: u64 [sp + 0xd0] = s0\n  1043: u64 [sp + 0xc8] = s1\n  1047: s0 = sp + 0xe0\n  1051: sp = sp & 0xffffffffffffffe0\n  1054: a5 = u64 [a4]\n  1056: u64 [sp + 0x40] = a5\n  1059: a5 = u64 [a4 + 0x8]\n  1062: u64 [sp + 0x48] = a5\n  1065: a5 = u64 [a4 + 0x10]\n  1068: u64 [sp + 0x50] = a5\n  1071: a4 = u64 [a4 + 0x18]\n  1074: u64 [sp + 0x58] = a4\n  1077: t0 = 12, jump @1367\n      : @28 [@dyn 6] (gas: 2)\n  1082: u64 [sp + 0x38] = a1\n  1085: ra = 14, jump @33\n      : @29 [@dyn 7] (gas: 46)\n  1090: a1 = reverse s1\n  1092: u64 [sp + 0x78] = a1\n  1095: a1 = u64 [sp]\n  1097: a1 = reverse a1\n  1099: u64 [sp + 0x70] = a1\n  1102: a1 = u64 [sp + 0x8]\n  1105: a1 = reverse a1\n  1107: u64 [sp + 0x68] = a1\n  1110: a1 = u64 [sp + 0x10]\n  1113: a1 = reverse a1\n  1115: u64 [sp + 0x60] = a1\n  1118: a1 = u64 [sp + 0x18]\n  1121: a1 = reverse a1\n  1123: u64 [sp + 0x98] = a1\n  1127: a1 = u64 [sp + 0x20]\n  1130: a1 = reverse a1\n  1132: u64 [sp + 0x90] = a1\n  1136: a1 = u64 [sp + 0x28]\n  1139: a1 = reverse a1\n  1141: u64 [sp + 0x88] = a1\n  1145: a1 = u64 [sp + 0x30]\n  1148: a1 = reverse a1\n  1150: u64 [sp + 0x80] = a1\n  1154: a1 = u64 [sp + 0x40]\n  1157: a1 = reverse a1\n  1159: u64 [sp + 0xb8] = a1\n  1163: a1 = u64 [sp + 0x48]\n  1166: a1 = reverse a1\n  1168: u64 [sp + 0xb0] = a1\n  1172: a1 = u64 [sp + 0x50]\n  1175: a1 = reverse a1\n  1177: u64 [sp + 0xa8] = a1\n  1181: a1 = u64 [sp + 0x58]\n  1184: a1 = reverse a1\n  1186: u64 [sp + 0xa0] = a1\n  1190: i32 a2 = a0 + 0\n  1192: a3 = i32 [sp + 0x38]\n  1195: i32 a0 = sp + 0x60\n  1198: a1 = 0x3\n  1201: ecalli 4 // 'deposit_event'\n  1203: sp = s0 + 0xffffffffffffff20\n  1207: ra = u64 [sp + 0xd8]\n  1211: s0 = u64 [sp + 0xd0]\n  1215: s1 = u64 [sp + 0xc8]\n  1219: sp = sp + 0xe0\n  1223: ret\n      : @30 (gas: 23)\n  1225: sp = sp + 0xfffffffffffffee0\n  1229: u64 [sp + 0x118] = ra\n  1233: u64 [sp + 0x110] = s0\n  1237: u64 [sp + 0x108] = s1\n  1241: s0 = sp + 0x120\n  1245: sp = sp & 0xffffffffffffffe0\n  1248: s1 = u64 [a5]\n  1250: u64 [sp + 0x60] = s1\n  1253: s1 = u64 [a5 + 0x8]\n  1256: u64 [sp + 0x68] = s1\n  1259: s1 = u64 [a5 + 0x10]\n  1262: u64 [sp + 0x70] = s1\n  1265: a5 = u64 [a5 + 0x18]\n  1268: u64 [sp + 0x78] = a5\n  1271: a5 = u64 [a4]\n  1273: u64 [sp + 0x38] = a5\n  1276: a5 = u64 [a4 + 0x8]\n  1279: u64 [sp + 0x40] = a5\n  1282: a5 = u64 [a4 + 0x10]\n  1285: u64 [sp + 0x48] = a5\n  1288: a4 = u64 [a4 + 0x18]\n  1291: u64 [sp + 0x50] = a4\n  1294: t0 = 16, jump @1367\n      : @31 [@dyn 8] (gas: 2)\n  1299: u64 [sp + 0x58] = a1\n  1302: ra = 18, jump @33\n      : @32 [@dyn 9] (gas: 58)\n  1307: a1 = reverse s1\n  1309: u64 [sp + 0x98] = a1\n  1313: a1 = u64 [sp]\n  1315: a1 = reverse a1\n  1317: u64 [sp + 0x90] = a1\n  1321: a1 = u64 [sp + 0x8]\n  1324: a1 = reverse a1\n  1326: u64 [sp + 0x88] = a1\n  1330: a1 = u64 [sp + 0x10]\n  1333: a1 = reverse a1\n  1335: u64 [sp + 0x80] = a1\n  1339: a1 = u64 [sp + 0x18]\n  1342: a1 = reverse a1\n  1344: u64 [sp + 0xb8] = a1\n  1348: a1 = u64 [sp + 0x20]\n  1351: a1 = reverse a1\n  1353: u64 [sp + 0xb0] = a1\n  1357: a1 = u64 [sp + 0x28]\n  1360: a1 = reverse a1\n  1362: u64 [sp + 0xa8] = a1\n  1366: a1 = u64 [sp + 0x30]\n  1369: a1 = reverse a1\n  1371: u64 [sp + 0xa0] = a1\n  1375: a1 = u64 [sp + 0x38]\n  1378: a1 = reverse a1\n  1380: u64 [sp + 0xd8] = a1\n  1384: a1 = u64 [sp + 0x40]\n  1387: a1 = reverse a1\n  1389: u64 [sp + 0xd0] = a1\n  1393: a1 = u64 [sp + 0x48]\n  1396: a1 = reverse a1\n  1398: u64 [sp + 0xc8] = a1\n  1402: a1 = u64 [sp + 0x50]\n  1405: a1 = reverse a1\n  1407: u64 [sp + 0xc0] = a1\n  1411: a1 = u64 [sp + 0x60]\n  1414: a1 = reverse a1\n  1416: u64 [sp + 0xf8] = a1\n  1420: a1 = u64 [sp + 0x68]\n  1423: a1 = reverse a1\n  1425: u64 [sp + 0xf0] = a1\n  1429: a1 = u64 [sp + 0x70]\n  1432: a1 = reverse a1\n  1434: u64 [sp + 0xe8] = a1\n  1438: a1 = u64 [sp + 0x78]\n  1441: a1 = reverse a1\n  1443: u64 [sp + 0xe0] = a1\n  1447: i32 a2 = a0 + 0\n  1449: a3 = i32 [sp + 0x58]\n  1452: i32 a0 = sp + 0x80\n  1456: a1 = 0x4\n  1459: ecalli 4 // 'deposit_event'\n  1461: sp = s0 + 0xfffffffffffffee0\n  1465: ra = u64 [sp + 0x118]\n  1469: s0 = u64 [sp + 0x110]\n  1473: s1 = u64 [sp + 0x108]\n  1477: sp = sp + 0x120\n  1481: ret\n      : @33 (gas: 2)\n  1483: i32 a2 = a0 >> 0x10\n  1486: jump @38 if a2 != 0\n      : @34 (gas: 4)\n  1489: a1 = a1 + a0\n  1492: i32 a1 = a1 + 0x1f\n  1495: a1 = a1 & 0xffffffffffffffe0\n  1498: jump @38 if a1 >u 65536\n      : @35 (gas: 3)\n  1504: a2 = 0x2026c\n  1509: a3 = i32 [0x2026c]\n  1514: jump @37 if a3 >=u a1\n      : @36 (gas: 2)\n  1517: u32 [0x2026c] = a1\n  1522: fallthrough\n      : @37 (gas: 4)\n  1523: a1 = 0x20280\n  1528: i32 a0 = a0 + 0\n  1530: a0 = a0 + a1\n  1533: ret\n      : @38 (gas: 1)\n  1535: trap\n      : @39 (gas: 6)\n  1536: sp = sp + 0xfffffffffffffff0\n  1539: u64 [sp + 0x8] = ra\n  1542: u64 [sp] = s0\n  1544: s0 = a0 & 0x1\n  1547: ecalli 2 // 'call_data_size'\n  1549: fallthrough\n      : @40 (gas: 2)\n  1550: u32 [0x20268] = a0\n  1555: jump @42 if s0 == 0\n      : @41 (gas: 1)\n  1558: ra = 20, jump @43\n      : @42 [@dyn 10] (gas: 18)\n  1562: ra = 0x16\n  1565: sp = sp + 0xfffffffffffffe10\n  1569: u64 [sp + 0x1e8] = ra\n  1573: u64 [sp + 0x1e0] = s0\n  1577: u64 [sp + 0x1d8] = s1\n  1581: s0 = sp + 0x1f0\n  1585: sp = sp + 0xffffffffffffe650\n  1589: sp = sp & 0xffffffffffffffe0\n  1592: s1 = sp\n  1594: a2 = s1 + 0x1038\n  1598: u64 [a2 + 1248] = 0\n  1602: u64 [a2 + 1240] = 0\n  1606: u64 [a2 + 1224] = 0x80\n  1612: a0 = 0x40\n  1615: a1 = s1 + 0x1500\n  1619: u64 [a2 + 1232] = 0\n  1623: ra = 0x112\n  1627: jump @19\n      : @43 [@dyn 11] (gas: 21)\n  1630: sp = sp + 0xfffffffffffff808\n  1634: a0 = sp + 0x700\n  1638: u64 [a0 + 0xf0] = ra\n  1642: u64 [a0 + 0xe8] = s0\n  1646: u64 [a0 + 0xe0] = s1\n  1650: s0 = sp + 0x7f8\n  1654: sp = sp + 0xfffffffffffffcf8\n  1658: sp = sp & 0xffffffffffffffe0\n  1661: s1 = sp\n  1663: a0 = s1 + 0x1000\n  1667: u64 [a0 + 4294965304] = 0\n  1671: a0 = s1 + 0x1000\n  1675: u64 [a0 + 4294965296] = 0\n  1679: a1 = s1 + 0x1000\n  1683: u64 [a1 + 4294965280] = 0x80\n  1689: a0 = 0x40\n  1692: a1 = s1 + 0x7ff\n  1696: a1 = a1 + 0x21\n  1699: a2 = s1 + 0x1000\n  1703: u64 [a2 + 4294965288] = 0\n  1707: ra = 24, jump @19\n      : @44 [@dyn 12] (gas: 12)\n  1712: a0 = s1 + 0x1000\n  1716: u64 [a0 + 4294965336] = 0\n  1720: a0 = s1 + 0x1000\n  1724: u64 [a0 + 4294965328] = 0\n  1728: a0 = s1 + 0x1000\n  1732: u64 [a0 + 4294965320] = 0\n  1736: a0 = s1 + 0x1000\n  1740: u64 [a0 + 4294965312] = 0\n  1744: a0 = s1 + 0x1000\n  1748: i32 a0 = a0 + 0xfffffffffffff840\n  1752: ecalli 10 // 'value_transferred'\n  1754: fallthrough\n      : @45 (gas: 12)\n  1755: a0 = s1 + 0x1000\n  1759: a0 = u64 [a0 + 0xfffffffffffff850]\n  1763: a1 = s1 + 0x1000\n  1767: a1 = u64 [a1 + 0xfffffffffffff858]\n  1771: a2 = s1 + 0x1000\n  1775: a2 = u64 [a2 + 0xfffffffffffff848]\n  1779: a3 = s1 + 0x1000\n  1783: a3 = u64 [a3 + 0xfffffffffffff840]\n  1787: a1 = a1 | a2\n  1790: a0 = a0 | a3\n  1793: a0 = a0 | a1\n  1796: jump @47 if a0 == 0\n      : @46 (gas: 1)\n  1799: jump @217\n      : @47 (gas: 10)\n  1802: a2 = u32 [0x20268]\n  1807: u64 [s1 + 2040] = 0\n  1811: u64 [s1 + 2032] = 0\n  1815: u64 [s1 + 2024] = 0\n  1819: a0 = s1 + 0x7ff\n  1823: a0 = a0 + 0x1\n  1826: a1 = s1 + 0x7e0\n  1830: u64 [s1 + 0x138] = a2\n  1834: u64 [s1 + 0x7e0] = a2\n  1838: ra = 26, jump @857\n      : @48 [@dyn 13] (gas: 9)\n  1843: a0 = s1 + 0x1000\n  1847: a3 = u64 [a0 + 0xfffffffffffff818]\n  1851: a0 = s1 + 0x1000\n  1855: a1 = u64 [a0 + 0xfffffffffffff810]\n  1859: a0 = s1 + 0x1000\n  1863: a2 = u64 [a0 + 0xfffffffffffff808]\n  1867: a0 = s1 + 0x1000\n  1871: a0 = u64 [a0 + 0xfffffffffffff800]\n  1875: t0 = 28, jump @1332\n      : @49 [@dyn 14] (gas: 1)\n  1880: jump @51 if a1 == 0\n      : @50 (gas: 1)\n  1883: jump @216\n      : @51 (gas: 3)\n  1886: u64 [s1 + 0x130] = a0\n  1890: a1 = u64 [s1 + 0x138]\n  1894: ra = 30, jump @33\n      : @52 [@dyn 15] (gas: 5)\n  1899: i32 a0 = a0 + 0\n  1901: a1 = i32 [s1 + 0x138]\n  1905: a2 = 0\n  1907: ecalli 0 // 'call_data_copy'\n  1908: fallthrough\n      : @53 (gas: 2)\n  1909: a1 = u64 [s1 + 0x138]\n  1913: jump @55 if a1 >u 31\n      : @54 (gas: 1)\n  1917: jump @218\n      : @55 (gas: 3)\n  1920: a0 = s1 + 0x7c0\n  1924: a1 = u64 [s1 + 0x130]\n  1928: ra = 32, jump @17\n      : @56 [@dyn 16] (gas: 15)\n  1933: a0 = u64 [s1 + 0x7d8]\n  1937: u64 [s1 + 0x80] = a0\n  1941: a0 = u64 [s1 + 0x7d0]\n  1945: u64 [s1 + 0x78] = a0\n  1948: a0 = u64 [s1 + 0x7c8]\n  1952: u64 [s1 + 0x70] = a0\n  1955: a0 = u64 [s1 + 0x7c0]\n  1959: u64 [s1 + 0x68] = a0\n  1962: u64 [s1 + 1944] = 0\n  1966: u64 [s1 + 1936] = 0\n  1970: u64 [s1 + 1920] = 0x40\n  1975: a0 = s1 + 0x7a0\n  1979: a1 = s1 + 0x780\n  1983: u64 [s1 + 1928] = 0\n  1987: ra = 34, jump @857\n      : @57 [@dyn 17] (gas: 13)\n  1992: a1 = s1 + 0x700\n  1996: a2 = u64 [a1 + 0xb8]\n  2000: a3 = u64 [a1 + 0xb0]\n  2004: a4 = u64 [a1 + 0xa8]\n  2008: a0 = u64 [a1 + 0xa0]\n  2012: a5 = a4 | a2\n  2015: a1 = a0 | a3\n  2018: a1 = a1 | a5\n  2021: a1 = a1 >> 0x20\n  2024: a5 = a5 | a3\n  2027: a5 = a5 << 0x20\n  2030: a1 = a1 | a5\n  2033: jump @59 if a1 == 0\n      : @58 (gas: 1)\n  2036: jump @216\n      : @59 (gas: 11)\n  2039: u64 [s1 + 1912] = 0\n  2043: u64 [s1 + 1904] = 0\n  2047: u64 [s1 + 1896] = 0\n  2051: a5 = 0x7\n  2054: a1 = s1 + 0x760\n  2058: u64 [s1 + 0x760] = a5\n  2062: u64 [s1 + 0xc8] = a2\n  2066: u64 [s1 + 0xc0] = a3\n  2070: u64 [s1 + 0xb8] = a4\n  2074: u64 [s1 + 0xd0] = a0\n  2078: ra = 36, jump @19\n      : @60 [@dyn 18] (gas: 10)\n  2083: a3 = u64 [s1 + 0xd0]\n  2087: a0 = u64 [s1 + 0xc8]\n  2091: a1 = u64 [s1 + 0xc0]\n  2095: a0 = a0 | a1\n  2098: a1 = 0xffffffe0\n  2108: a1 = a3 <u a1\n  2111: a2 = u64 [s1 + 0xb8]\n  2115: a1 = 0 if a2 != 0\n  2117: a1 = 0 if a0 != 0\n  2119: jump @62 if a1 != 0\n      : @61 (gas: 1)\n  2122: jump @216\n      : @62 (gas: 9)\n  2125: i32 a0 = a3 + 0x20\n  2128: u64 [s1 + 1872] = 0\n  2132: a2 = u64 [0x20000]\n  2137: u64 [s1 + 1864] = 0\n  2141: u64 [s1 + 1856] = 0\n  2145: a1 = s1 + 0x740\n  2149: u64 [s1 + 0x758] = a2\n  2153: u64 [s1 + 0xf0] = a0\n  2157: ra = 38, jump @19\n      : @63 [@dyn 19] (gas: 7)\n  2162: u64 [s1 + 1816] = 0\n  2166: u64 [s1 + 1808] = 0\n  2170: u64 [s1 + 1792] = 0x40\n  2175: a0 = s1 + 0x720\n  2179: a1 = s1 + 0x700\n  2183: u64 [s1 + 1800] = 0\n  2187: ra = 40, jump @857\n      : @64 [@dyn 20] (gas: 13)\n  2192: a1 = s1 + 0x700\n  2196: a5 = u64 [a1 + 0x38]\n  2199: a2 = u64 [a1 + 0x30]\n  2202: a3 = u64 [a1 + 0x28]\n  2205: a0 = u64 [a1 + 0x20]\n  2208: a4 = a3 | a5\n  2211: a1 = a0 | a2\n  2214: a1 = a1 | a4\n  2217: a1 = a1 >> 0x20\n  2220: a4 = a4 | a2\n  2223: a4 = a4 << 0x20\n  2226: a1 = a1 | a4\n  2229: jump @66 if a1 == 0\n      : @65 (gas: 1)\n  2232: jump @216\n      : @66 (gas: 11)\n  2235: u64 [s1 + 1784] = 0\n  2239: u64 [s1 + 1776] = 0\n  2243: u64 [s1 + 1768] = 0\n  2247: a4 = 0x3\n  2250: a1 = s1 + 0x6e0\n  2254: u64 [s1 + 0x6e0] = a4\n  2258: u64 [s1 + 0x98] = a2\n  2262: u64 [s1 + 0x90] = a3\n  2266: u64 [s1 + 0xa0] = a0\n  2270: u64 [s1 + 0x88] = a5\n  2274: ra = 42, jump @19\n      : @67 [@dyn 21] (gas: 10)\n  2279: a3 = u64 [s1 + 0xa0]\n  2283: a0 = u64 [s1 + 0x98]\n  2287: a1 = u64 [s1 + 0x88]\n  2291: a0 = a0 | a1\n  2294: a1 = 0xffffffe0\n  2304: a1 = a3 <u a1\n  2307: a2 = u64 [s1 + 0x90]\n  2311: a1 = 0 if a2 != 0\n  2313: a1 = 0 if a0 != 0\n  2315: jump @69 if a1 != 0\n      : @68 (gas: 1)\n  2318: jump @216\n      : @69 (gas: 9)\n  2321: i32 a0 = a3 + 0x20\n  2324: u64 [s1 + 1744] = 0\n  2328: u64 [s1 + 1736] = 0\n  2332: u64 [s1 + 1728] = 0\n  2336: a2 = 0x4d544b0000000000\n  2346: a1 = s1 + 0x6c0\n  2350: u64 [s1 + 0x6d8] = a2\n  2354: u64 [s1 + 0x18] = a0\n  2357: ra = 44, jump @19\n      : @70 [@dyn 22] (gas: 3)\n  2362: a0 = s1 + 0x6a0\n  2366: a1 = u64 [s1 + 0xd0]\n  2370: ra = 46, jump @17\n      : @71 [@dyn 23] (gas: 17)\n  2375: a0 = s1 + 0x600\n  2379: a3 = u64 [a0 + 0xb8]\n  2383: a1 = u64 [a0 + 0xb0]\n  2387: a2 = u64 [a0 + 0xa8]\n  2391: a0 = a3 >u 0\n  2393: a4 = a1 >u 0\n  2395: a4 = a0 if a3 != 0\n  2398: u64 [s1 + 0xe8] = a2\n  2402: a0 = a2 >u 0\n  2404: u64 [s1 + 0x58] = a1\n  2407: u64 [s1 + 0xe0] = a3\n  2411: a1 = a1 | a3\n  2414: u64 [s1 + 0x50] = a0\n  2417: u64 [s1 + 0xa8] = a4\n  2421: u64 [s1 + 0xd8] = a1\n  2425: a0 = a4 if a1 != 0\n  2428: jump @73 if a0 == 0\n      : @72 (gas: 1)\n  2431: jump @219\n      : @73 (gas: 14)\n  2434: a0 = u64 [s1 + 0x6a0]\n  2438: u64 [s1 + 0x60] = a0\n  2441: a0 = s1 + 0x1000\n  2445: u64 [a0 + 4294965368] = 0\n  2449: a0 = s1 + 0x1000\n  2453: u64 [a0 + 4294965360] = 0\n  2457: a0 = s1 + 0x1000\n  2461: u64 [a0 + 4294965352] = 0\n  2465: a1 = s1 + 0x1000\n  2469: u64 [a1 + 4294965344] = 0x3\n  2474: a0 = s1 + 0x680\n  2478: a1 = s1 + 0x7ff\n  2482: a1 = a1 + 0x61\n  2485: ra = 48, jump @21\n      : @74 [@dyn 24] (gas: 6)\n  2490: a4 = s1 + 0x600\n  2494: a0 = u64 [a4 + 0x90]\n  2498: a1 = u64 [a4 + 0x88]\n  2502: a2 = u64 [a4 + 0x80]\n  2506: a3 = u64 [a4 + 0x98]\n  2510: t0 = 50, jump @1357\n      : @75 [@dyn 25] (gas: 12)\n  2515: t0 = a2 <u 0x1\n  2518: ra = a1 & 0x7f\n  2521: t2 = a5 & a0\n  2524: a4 = a5 & t1\n  2527: ra = a1 if a2 != 0\n  2530: a1 = ra <u 0x20\n  2533: a5 = a5 & a3\n  2536: a2 = a1\n  2538: a2 = 0 if a4 != 0\n  2540: a0 = t2 | a5\n  2543: a2 = 0 if a0 != 0\n  2545: jump @77 if t0 == a2\n      : @76 (gas: 1)\n  2548: jump @225\n      : @77 (gas: 1)\n  2551: t0 = 52, jump @1368\n      : @78 [@dyn 26] (gas: 4)\n  2556: a0 = u64 [s1 + 0x60]\n  2559: a0 = a0 <u 0x20\n  2562: u64 [s1 + 0xb0] = a0\n  2566: jump @90 if a3 == 0\n      : @79 (gas: 11)\n  2570: u64 [s1 + 0x110] = a4\n  2574: u64 [s1 + 0x118] = ra\n  2578: u64 [s1 + 0x120] = a5\n  2582: u64 [s1 + 0x130] = t2\n  2586: u64 [s1 + 1656] = 0\n  2590: u64 [s1 + 1648] = 0\n  2594: u64 [s1 + 1640] = 0\n  2598: a1 = s1 + 0x660\n  2602: u64 [s1 + 1632] = 0x3\n  2607: a0 = 0\n  2609: ra = 54, jump @19\n      : @80 [@dyn 27] (gas: 2)\n  2614: a1 = i32 [0x2026c]\n  2619: jump @82 if a1 >u 31\n      : @81 (gas: 2)\n  2623: u32 [0x2026c] = 0x20\n  2629: fallthrough\n      : @82 (gas: 11)\n  2630: a0 = sp + 0xffffffffffffffe0\n  2633: a2 = a0 & 0xffffffffffffffe0\n  2636: u64 [s1 + 0x128] = a2\n  2640: sp = a2\n  2642: a0 = 0x20280\n  2647: i32 a0 = a0 + 0\n  2649: i32 a2 = a2 + 0\n  2651: a1 = 0x20\n  2654: ra = 0x38\n  2657: ecalli 6 // 'hash_keccak_256'\n  2659: fallthrough\n      : @83 [@dyn 28] (gas: 9)\n  2660: a0 = u64 [s1 + 0x60]\n  2663: a1 = a0 + 0x1f\n  2666: a0 = a1 <u a0\n  2669: a5 = u64 [s1 + 0xe8]\n  2673: a2 = a5 + a0\n  2676: a3 = a2 <u a5\n  2679: a3 = a0 if a0 == 0\n  2682: a4 = u64 [s1 + 0x58]\n  2685: t0 = 58, jump @1352\n      : @84 [@dyn 29] (gas: 35)\n  2690: a1 = u64 [s1 + 0xb0]\n  2694: a1 = 0 if a5 != 0\n  2696: a3 = u64 [s1 + 0xd8]\n  2700: a1 = 0 if a3 != 0\n  2702: a4 = 0 if a1 != 0\n  2704: a0 = 0 if a1 != 0\n  2706: t0 = t2 + a0\n  2709: a0 = t0 <u t2\n  2712: a5 = a2 + a0\n  2715: a4 = a4 + a5\n  2718: u64 [s1 + 0x138] = a4\n  2722: a5 = a4 ^ a2\n  2725: a3 = a4 <u a2\n  2728: a3 = a0 if a5 == 0\n  2731: u64 [s1 + 0x100] = a3\n  2735: a0 = u64 [s1 + 0x118]\n  2739: ra = a0 + 0x1f\n  2742: a4 = ra <u a0\n  2745: a3 = u64 [s1 + 0x110]\n  2749: a0 = a3 + a4\n  2752: a5 = a0 <u a3\n  2755: a5 = a4 if a4 == 0\n  2758: t1 = u64 [s1 + 0x130]\n  2762: t1 = t1 + a5\n  2765: a4 = t1 << 0x3b\n  2768: a3 = a0 >> 0x5\n  2771: a3 = a3 | a4\n  2774: a0 = a0 << 0x3b\n  2777: a4 = ra >> 0x5\n  2780: a0 = a0 | a4\n  2783: a0 = a0 + t2\n  2786: u64 [s1 + 0x118] = a0\n  2790: a0 = a0 <u t2\n  2793: t2 = t0\n  2795: t0 = 60, jump @1375\n      : @85 [@dyn 30] (gas: 16)\n  2800: a0 = u64 [s1 + 0x58]\n  2803: a0 = a4 <u a0\n  2806: a3 = u64 [s1 + 0xe0]\n  2810: a0 = a0 + a3\n  2813: a3 = a4 >> 0x5\n  2816: a4 = a0 << 0x3b\n  2819: a3 = a3 | a4\n  2822: a4 = u64 [s1 + 0x128]\n  2826: t0 = u64 [a4]\n  2828: a4 = u64 [a4 + 0x8]\n  2831: a0 = a0 >> 0x5\n  2834: a3 = 0 if a1 != 0\n  2836: a0 = 0 if a1 != 0\n  2838: a1 = reverse a4\n  2840: a4 = reverse t0\n  2842: t0 = 62, jump @1393\n      : @86 [@dyn 31] (gas: 25)\n  2847: t0 = a0 + a3\n  2850: a0 = u64 [s1 + 0x130]\n  2854: a0 = t1 <u a0\n  2857: a3 = u64 [s1 + 0x120]\n  2861: a0 = a0 + a3\n  2864: a3 = t1 >> 0x5\n  2867: a5 = a0 << 0x3b\n  2870: a3 = a3 | a5\n  2873: a0 = a0 >> 0x5\n  2876: a0 = a0 + a4\n  2879: a5 = s1 + 0x100\n  2883: a4 = u64 [a5 + 0x38]\n  2886: a3 = a3 + a1\n  2889: a1 = a3 <u a1\n  2892: a0 = a0 + a1\n  2895: a2 = a2 + a3\n  2898: u64 [a5 + 0x8] = a2\n  2901: a1 = a2 <u a3\n  2904: a0 = a0 + a1\n  2907: u64 [a5] = a0\n  2909: a0 = sp + 0xffffffffffffffe0\n  2912: t1 = a0 & 0xffffffffffffffe0\n  2915: sp = t1\n  2917: u64 [s1 + 0xf8] = t1\n  2921: fallthrough\n      : @87 (gas: 20)\n  2922: a0 = u64 [s1 + 0x118]\n  2926: a0 = t2 <u a0\n  2929: a2 = u64 [s1 + 0x110]\n  2933: a1 = a4 ^ a2\n  2936: a2 = a4 <u a2\n  2939: a2 = a0 if a1 == 0\n  2942: a5 = u64 [s1 + 0x108]\n  2946: a0 = ra <u a5\n  2949: a3 = u64 [s1 + 0x100]\n  2953: a1 = t0 ^ a3\n  2956: a3 = t0 <u a3\n  2959: a3 = a0 if a1 == 0\n  2962: a0 = ra ^ a5\n  2965: a0 = a0 | a1\n  2968: a3 = a2 if a0 == 0\n  2971: u64 [t1] = t2\n  2973: u64 [t1 + 0x8] = a4\n  2976: u64 [t1 + 0x10] = ra\n  2979: u64 [t1 + 0x18] = t0\n  2982: jump @90 if a3 == 0\n      : @88 (gas: 16)\n  2985: a0 = s1 + 0x1000\n  2989: u64 [a0 + 4294965400] = 0\n  2993: a0 = s1 + 0x1000\n  2997: u64 [a0 + 4294965392] = 0\n  3001: a0 = s1 + 0x1000\n  3005: u64 [a0 + 4294965384] = 0\n  3009: a0 = s1 + 0x1000\n  3013: u64 [a0 + 4294965376] = 0\n  3017: a1 = s1 + 0x7ff\n  3021: a1 = a1 + 0x81\n  3025: a0 = t1\n  3027: u64 [s1 + 0x130] = t2\n  3031: u64 [s1 + 0x138] = a4\n  3035: u64 [s1 + 0x128] = t0\n  3039: u64 [s1 + 0x120] = ra\n  3043: ra = 64, jump @24\n      : @89 [@dyn 32] (gas: 15)\n  3048: t1 = u64 [s1 + 0xf8]\n  3052: t0 = u64 [s1 + 0x128]\n  3056: a4 = u64 [s1 + 0x138]\n  3060: t2 = u64 [s1 + 0x130]\n  3064: t2 = t2 + 0x1\n  3067: a0 = t2 <u 0x1\n  3070: a4 = a4 + a0\n  3073: a0 = t2 | a4\n  3076: a0 = a0 <u 0x1\n  3079: a1 = u64 [s1 + 0x120]\n  3083: a0 = a0 + a1\n  3086: a1 = a0 <u a1\n  3089: t0 = t0 + a1\n  3092: ra = a0\n  3094: jump @87\n      : @90 (gas: 26)\n  3097: a0 = u64 [s1 + 0xb0]\n  3101: a0 = a0 ^ 0x1\n  3104: a4 = u64 [s1 + 0xe8]\n  3108: a1 = u64 [s1 + 0x50]\n  3111: a0 = a1 if a4 != 0\n  3114: a1 = u64 [s1 + 0xa8]\n  3118: a2 = u64 [s1 + 0xd8]\n  3122: a0 = a1 if a2 != 0\n  3125: t1 = u64 [s1 + 0xe0]\n  3129: a1 = a4 | t1\n  3132: u64 [s1 + 0xb0] = a1\n  3136: a1 = u64 [s1 + 0x58]\n  3139: t2 = a1 >> 0x3f\n  3142: t1 = t1 << 0x1\n  3145: a5 = a4 >> 0x3f\n  3148: t0 = a1 << 0x1\n  3151: a3 = u64 [s1 + 0x60]\n  3154: ra = a3 >> 0x3f\n  3157: a4 = a4 << 0x1\n  3160: a2 = a3 << 0x1\n  3163: u64 [s1 + 0x48] = a2\n  3166: u64 [s1 + 0x40] = t1\n  3169: u64 [s1 + 0x38] = ra\n  3172: u64 [s1 + 0x30] = a5\n  3175: u64 [s1 + 0x50] = t0\n  3178: jump @101 if a0 == 0\n      : @91 (gas: 11)\n  3182: u64 [s1 + 0x28] = a4\n  3185: u64 [s1 + 0x20] = t2\n  3188: a3 = a3 & 0xffffffffffffffe0\n  3191: u64 [s1 + 0xa8] = a3\n  3195: u64 [s1 + 1592] = 0\n  3199: u64 [s1 + 1584] = 0\n  3203: u64 [s1 + 1576] = 0\n  3207: a1 = s1 + 0x620\n  3211: u64 [s1 + 1568] = 0x3\n  3216: a0 = 0\n  3218: ra = 66, jump @19\n      : @92 [@dyn 33] (gas: 7)\n  3223: a0 = sp + 0xffffffffffffffe0\n  3226: a0 = a0 & 0xffffffffffffffe0\n  3229: u64 [s1 + 0x118] = a0\n  3233: sp = a0\n  3235: a1 = 0x20\n  3238: a0 = 0\n  3240: ra = 68, jump @33\n      : @93 [@dyn 34] (gas: 35)\n  3245: a1 = sp + 0xffffffffffffffe0\n  3248: a1 = a1 & 0xffffffffffffffe0\n  3251: u64 [s1 + 0x110] = a1\n  3255: sp = a1\n  3257: i32 a0 = a0 + 0\n  3259: i32 a2 = a1 + 0\n  3261: a1 = 0x20\n  3264: ecalli 6 // 'hash_keccak_256'\n  3266: u64 [s1 + 312] = 0x20\n  3271: t0 = 0\n  3273: u64 [s1 + 304] = 0\n  3277: u64 [s1 + 296] = 0\n  3281: a4 = 0\n  3283: a5 = 0\n  3285: ra = 0\n  3287: u64 [s1 + 288] = 0\n  3291: a3 = u64 [s1 + 0x110]\n  3295: a0 = u64 [a3 + 0x18]\n  3298: a1 = u64 [a3 + 0x10]\n  3301: a2 = u64 [a3 + 0x8]\n  3304: t1 = u64 [a3]\n  3306: a0 = reverse a0\n  3308: a1 = reverse a1\n  3310: a3 = reverse a2\n  3312: t1 = reverse t1\n  3314: t2 = t1\n  3316: a2 = u64 [s1 + 0x118]\n  3320: u64 [a2 + 0x18] = t1\n  3323: u64 [s1 + 0xf0] = a3\n  3327: u64 [a2 + 0x10] = a3\n  3330: u64 [s1 + 0x110] = a1\n  3334: u64 [a2 + 0x8] = a1\n  3337: a3 = a0\n  3339: u64 [a2] = a0\n  3341: fallthrough\n      : @94 (gas: 25)\n  3342: u64 [s1 + 0x108] = t2\n  3346: t1 = a3\n  3348: a0 = u64 [s1 + 0xa8]\n  3352: u64 [s1 + 0x100] = a4\n  3356: a0 = a4 <u a0\n  3359: a4 = a0 ^ 0x1\n  3362: u64 [s1 + 0xf8] = a5\n  3366: a4 = 0x1 if a5 != 0\n  3369: a5 = s1 + 0x100\n  3373: a0 = u64 [a5 + 0x20]\n  3376: a0 = ra | a0\n  3379: a4 = 0x1 if a0 != 0\n  3382: a1 = u64 [s1 + 0xd0]\n  3386: a0 = u64 [a5 + 0x38]\n  3389: a1 = a1 + a0\n  3392: a3 = u64 [s1 + 0xb8]\n  3396: a3 = a3 + t0\n  3399: a2 = u64 [s1 + 0xc0]\n  3403: a0 = u64 [a5 + 0x30]\n  3406: a2 = a2 + a0\n  3409: a0 = u64 [s1 + 0xc8]\n  3413: t2 = u64 [s1 + 0x128]\n  3417: t2 = t2 + a0\n  3420: a0 = u64 [s1 + 0xb0]\n  3424: jump @103 if a4 != 0\n      : @95 (gas: 9)\n  3428: a0 = u64 [s1 + 0x138]\n  3432: a4 = a1 <u a0\n  3435: a3 = a3 + a4\n  3438: a0 = t0\n  3440: t0 = a3 ^ t0\n  3443: u64 [s1 + 0xe0] = a0\n  3447: a5 = a3 <u a0\n  3450: a5 = a4 if t0 == 0\n  3453: t0 = 70, jump @1355\n      : @96 [@dyn 35] (gas: 2)\n  3458: u64 [s1 + 0xe8] = t1\n  3462: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  3465: jump @216\n      : @98 (gas: 3)\n  3468: a0 = s1 + 0x1c0\n  3472: u64 [s1 + 0xd8] = ra\n  3476: ra = 72, jump @17\n      : @99 [@dyn 36] (gas: 16)\n  3481: a0 = u64 [s1 + 0x1d8]\n  3485: a1 = u64 [s1 + 0x1d0]\n  3489: a2 = u64 [s1 + 0x1c8]\n  3493: a3 = u64 [s1 + 0x1c0]\n  3497: a4 = s1 + 0x7ff\n  3501: a4 = a4 + 0xb9\n  3505: u64 [a4] = a0\n  3507: u64 [a4 + 0xfffffffffffffff8] = a1\n  3510: a0 = s1 + 0x1000\n  3514: u64 [a0 + 0xfffffffffffff8a8] = a2\n  3518: a0 = s1 + 0x1000\n  3522: u64 [a0 + 0xfffffffffffff8a0] = a3\n  3526: a1 = s1 + 0x7ff\n  3530: a1 = a1 + 0xa1\n  3534: a0 = u64 [s1 + 0x118]\n  3538: ra = 74, jump @24\n      : @100 [@dyn 37] (gas: 56)\n  3543: t2 = u64 [s1 + 0xe8]\n  3547: t2 = t2 + 0x1\n  3550: a0 = t2 <u 0x1\n  3553: t0 = u64 [s1 + 0x110]\n  3557: t0 = t0 + a0\n  3560: a0 = t2 | t0\n  3563: a0 = a0 <u 0x1\n  3566: a1 = u64 [s1 + 0xf0]\n  3570: t1 = a1 + a0\n  3573: a1 = t1 <u a1\n  3576: a0 = u64 [s1 + 0x108]\n  3580: a0 = a0 + a1\n  3583: a1 = u64 [s1 + 0x138]\n  3587: a2 = a1 + 0x20\n  3590: u64 [s1 + 0x108] = a2\n  3594: a3 = a2 <u a1\n  3597: a1 = u64 [s1 + 0xe0]\n  3601: a2 = a1 + a3\n  3604: u64 [s1 + 0xe8] = a2\n  3608: a4 = a2 <u a1\n  3611: a4 = a3 if a3 == 0\n  3614: a1 = u64 [s1 + 0x130]\n  3618: ra = a1 + a4\n  3621: a4 = ra <u a1\n  3624: a1 = u64 [s1 + 0x128]\n  3628: a1 = a1 + a4\n  3631: u64 [s1 + 0x128] = a1\n  3635: a1 = u64 [s1 + 0x100]\n  3639: a4 = a1 + 0x20\n  3642: a5 = a4 <u a1\n  3645: a2 = u64 [s1 + 0xf8]\n  3649: a1 = a2 + a5\n  3652: a2 = a1 <u a2\n  3655: a2 = a5 if a5 == 0\n  3658: a3 = u64 [s1 + 0xd8]\n  3662: a2 = a2 + a3\n  3665: a5 = a2 <u a3\n  3668: a3 = u64 [s1 + 0x120]\n  3672: a3 = a3 + a5\n  3675: u64 [s1 + 0x120] = a3\n  3679: u64 [s1 + 0x110] = t0\n  3683: a5 = u64 [s1 + 0x118]\n  3687: u64 [a5 + 0x8] = t0\n  3690: a3 = t2\n  3692: u64 [a5] = t2\n  3694: u64 [a5 + 0x10] = t1\n  3697: t2 = a0\n  3699: u64 [a5 + 0x18] = a0\n  3702: u64 [s1 + 0xf0] = t1\n  3706: a0 = u64 [s1 + 0x108]\n  3710: u64 [s1 + 0x138] = a0\n  3714: t0 = u64 [s1 + 0xe8]\n  3718: u64 [s1 + 0x130] = ra\n  3722: a5 = a1\n  3724: ra = a2\n  3726: jump @94\n      : @101 (gas: 4)\n  3729: a0 = a3 | a1\n  3732: a1 = u64 [s1 + 0xb0]\n  3736: a0 = a0 | a1\n  3739: jump @118 if a0 != 0\n      : @102 (gas: 9)\n  3743: u64 [s1 + 288] = 0\n  3747: u64 [s1 + 280] = 0\n  3751: u64 [s1 + 296] = 0\n  3755: u64 [s1 + 304] = 0\n  3759: t1 = u64 [s1 + 0x40]\n  3762: t0 = u64 [s1 + 0x38]\n  3765: a1 = u64 [s1 + 0x30]\n  3768: a5 = u64 [s1 + 0x50]\n  3771: jump @120\n      : @103 (gas: 10)\n  3774: ra = t0\n  3776: t1 = u64 [s1 + 0x60]\n  3779: a4 = u64 [s1 + 0xa8]\n  3783: a4 = a4 ^ t1\n  3786: a5 = u64 [s1 + 0x58]\n  3789: a4 = a4 | a5\n  3792: a4 = a4 | a0\n  3795: t0 = u64 [s1 + 0x28]\n  3798: a5 = u64 [s1 + 0x50]\n  3801: jump @117 if a4 == 0\n      : @104 (gas: 7)\n  3805: a0 = u64 [s1 + 0x138]\n  3809: a4 = a1 <u a0\n  3812: a3 = a3 + a4\n  3815: t0 = a3 ^ ra\n  3818: a5 = a3 <u ra\n  3821: a5 = a4 if t0 == 0\n  3824: t0 = 76, jump @1355\n      : @105 [@dyn 38] (gas: 1)\n  3829: jump @107 if a0 == 0\n      : @106 (gas: 1)\n  3832: jump @216\n      : @107 (gas: 2)\n  3835: a0 = s1 + 0x600\n  3839: ra = 78, jump @17\n      : @108 [@dyn 39] (gas: 11)\n  3844: a1 = s1 + 0x600\n  3848: a0 = u64 [a1 + 0x18]\n  3851: u64 [s1 + 0x130] = a0\n  3855: a0 = u64 [a1 + 0x10]\n  3858: u64 [s1 + 0x128] = a0\n  3862: a0 = u64 [a1 + 0x8]\n  3865: u64 [s1 + 0x120] = a0\n  3869: a0 = u64 [a1]\n  3871: u64 [s1 + 0x110] = a0\n  3875: a0 = u64 [s1 + 0x60]\n  3878: t0 = 80, jump @1388\n      : @109 [@dyn 40] (gas: 1)\n  3883: ra = 82, jump @1404\n      : @110 [@dyn 41] (gas: 6)\n  3888: u64 [s1 + 0x108] = a0\n  3892: u64 [s1 + 0xf0] = a1\n  3896: a0 = 0xffffffffffffffff\n  3899: a1 = 0xffffffffffffffff\n  3902: a2 = u64 [s1 + 0x138]\n  3906: ra = 84, jump @1399\n      : @111 [@dyn 42] (gas: 1)\n  3911: t0 = 86, jump @1379\n      : @112 [@dyn 43] (gas: 1)\n  3916: ra = 88, jump @1399\n      : @113 [@dyn 44] (gas: 1)\n  3921: t0 = 90, jump @1342\n      : @114 [@dyn 45] (gas: 2)\n  3926: a2 = u64 [s1 + 0x120]\n  3930: t0 = 92, jump @1371\n      : @115 [@dyn 46] (gas: 8)\n  3935: u64 [a4 + 0x20] = a3\n  3938: u64 [a4 + 0x18] = a2\n  3941: u64 [a4 + 0x10] = a1\n  3944: u64 [a4 + 0x8] = a0\n  3947: a1 = s1 + 0x7ff\n  3951: a1 = a1 + 0xc1\n  3955: a0 = u64 [s1 + 0x118]\n  3959: ra = 94, jump @24\n      : @116 [@dyn 47] (gas: 3)\n  3964: a5 = u64 [s1 + 0x50]\n  3967: t0 = u64 [s1 + 0x28]\n  3970: fallthrough\n      : @117 (gas: 25)\n  3971: a0 = u64 [s1 + 0x20]\n  3974: a1 = u64 [s1 + 0x40]\n  3977: a0 = a0 | a1\n  3980: a1 = u64 [s1 + 0x30]\n  3983: a1 = a1 | a5\n  3986: a2 = u64 [s1 + 0x38]\n  3989: a2 = t0 | a2\n  3992: a3 = u64 [s1 + 0x48]\n  3995: a3 = a3 + 0x1\n  3998: a5 = s1 + 0x7ff\n  4002: a5 = a5 + 0xb9\n  4006: u64 [a5 + 64] = 0\n  4009: u64 [a5 + 56] = 0\n  4012: u64 [a5 + 48] = 0\n  4015: u64 [a5 + 40] = 0x3\n  4019: u64 [a5 + 0x48] = a3\n  4022: u64 [a5 + 0x50] = a2\n  4025: u64 [a5 + 0x58] = a1\n  4028: u64 [a5 + 0x60] = a0\n  4031: a0 = s1 + 0x7ff\n  4035: a0 = a0 + 0xe1\n  4039: a1 = s1 + 0x7ff\n  4043: a1 = a1 + 0x101\n  4047: ra = 0x6e\n  4050: jump @24\n      : @118 (gas: 5)\n  4053: a0 = s1 + 0x640\n  4057: a1 = u64 [s1 + 0xf0]\n  4061: u64 [s1 + 0x20] = t2\n  4064: u64 [s1 + 0x28] = a4\n  4067: ra = 96, jump @17\n      : @119 [@dyn 48] (gas: 17)\n  4072: a5 = u64 [s1 + 0x50]\n  4075: a4 = u64 [s1 + 0x28]\n  4078: a1 = u64 [s1 + 0x30]\n  4081: t0 = u64 [s1 + 0x38]\n  4084: t1 = u64 [s1 + 0x40]\n  4087: t2 = u64 [s1 + 0x20]\n  4090: a3 = u64 [s1 + 0x60]\n  4093: a2 = s1 + 0x600\n  4097: a0 = u64 [a2 + 0x58]\n  4100: u64 [s1 + 0x130] = a0\n  4104: a0 = u64 [a2 + 0x50]\n  4107: u64 [s1 + 0x128] = a0\n  4111: a0 = u64 [a2 + 0x48]\n  4114: u64 [s1 + 0x118] = a0\n  4118: a0 = u64 [a2 + 0x40]\n  4121: u64 [s1 + 0x120] = a0\n  4125: fallthrough\n      : @120 (gas: 7)\n  4126: a0 = a5 | a1\n  4129: u64 [s1 + 0x110] = a0\n  4133: a0 = t1 | t2\n  4136: u64 [s1 + 0x108] = a0\n  4140: a0 = a4 | t0\n  4143: u64 [s1 + 0x100] = a0\n  4147: t0 = 98, jump @1394\n      : @121 [@dyn 49] (gas: 1)\n  4152: ra = 100, jump @1404\n      : @122 [@dyn 50] (gas: 7)\n  4157: u64 [s1 + 0xe0] = a0\n  4161: u64 [s1 + 0xf8] = a1\n  4165: a0 = u64 [s1 + 0x60]\n  4168: i32 a2 = a0 << 0x3\n  4171: a0 = 0xffffffffffffffff\n  4174: a1 = 0xffffffffffffffff\n  4177: ra = 102, jump @1399\n      : @123 [@dyn 51] (gas: 10)\n  4182: u64 [s1 + 0xf0] = a0\n  4186: u64 [s1 + 0xe8] = a1\n  4190: a1 = u64 [s1 + 0xe0]\n  4194: a0 = a0 | a1\n  4197: u64 [s1 + 0xe0] = a0\n  4201: a0 = u64 [s1 + 0x138]\n  4205: i32 a2 = a0 + 0xffffffffffffff80\n  4208: a0 = 0xffffffffffffffff\n  4211: a1 = 0xffffffffffffffff\n  4214: ra = 104, jump @1399\n      : @124 [@dyn 52] (gas: 7)\n  4219: a4 = u64 [s1 + 0x138]\n  4223: a2 = a4 <u 0x80\n  4227: a3 = u64 [s1 + 0xe0]\n  4231: a0 = a3 if a2 != 0\n  4234: a5 = u64 [s1 + 0xe8]\n  4238: a3 = u64 [s1 + 0xf8]\n  4242: t0 = 106, jump @1396\n      : @125 [@dyn 53] (gas: 2)\n  4247: a4 = u64 [s1 + 0xf0]\n  4251: t0 = 108, jump @1356\n      : @126 [@dyn 54] (gas: 24)\n  4256: a4 = u64 [s1 + 0x48]\n  4259: a0 = a0 | a4\n  4262: a5 = s1 + 0x100\n  4266: a4 = u64 [a5]\n  4268: a1 = a1 | a4\n  4271: a4 = u64 [a5 + 0x8]\n  4274: a3 = a3 | a4\n  4277: a4 = u64 [a5 + 0x10]\n  4280: a2 = a2 | a4\n  4283: a5 = s1 + 0x7ff\n  4287: a5 = a5 + 0xb9\n  4291: u64 [a5 + 104] = 0x3\n  4295: u64 [a5 + 0x98] = a2\n  4299: u64 [a5 + 0xa0] = a3\n  4303: u64 [a5 + 0x90] = a1\n  4307: u64 [a5 + 0x88] = a0\n  4311: u64 [a5 + 128] = 0\n  4315: u64 [a5 + 120] = 0\n  4318: u64 [a5 + 112] = 0\n  4321: a0 = s1 + 0x7ff\n  4325: a0 = a0 + 0x121\n  4329: a1 = s1 + 0x7ff\n  4333: a1 = a1 + 0x141\n  4337: ra = 110, jump @24\n      : @127 [@dyn 55] (gas: 3)\n  4342: a0 = s1 + 0x5e0\n  4346: a1 = u64 [s1 + 0xa0]\n  4350: ra = 112, jump @17\n      : @128 [@dyn 56] (gas: 17)\n  4355: a0 = s1 + 0x500\n  4359: a3 = u64 [a0 + 0xf8]\n  4363: a2 = u64 [a0 + 0xf0]\n  4367: a1 = u64 [a0 + 0xe8]\n  4371: a0 = a3 >u 0\n  4373: a4 = a2 >u 0\n  4375: a4 = a0 if a3 != 0\n  4378: u64 [s1 + 0xb8] = a1\n  4382: a0 = a1 >u 0\n  4384: u64 [s1 + 0xb0] = a2\n  4388: u64 [s1 + 0xa8] = a3\n  4392: a2 = a2 | a3\n  4395: u64 [s1 + 0xd8] = a0\n  4399: u64 [s1 + 0xe0] = a4\n  4403: u64 [s1 + 0xf0] = a2\n  4407: a0 = a4 if a2 != 0\n  4410: jump @231 if a0 != 0\n      : @129 (gas: 12)\n  4414: a0 = u64 [s1 + 0x5e0]\n  4418: u64 [s1 + 0xc0] = a0\n  4422: a1 = s1 + 0x7ff\n  4426: a1 = a1 + 0xb9\n  4430: u64 [a1 + 192] = 0\n  4434: u64 [a1 + 184] = 0\n  4438: u64 [a1 + 176] = 0\n  4442: u64 [a1 + 168] = 0x4\n  4447: a0 = s1 + 0x5c0\n  4451: a1 = s1 + 0x7ff\n  4455: a1 = a1 + 0x161\n  4459: ra = 114, jump @21\n      : @130 [@dyn 57] (gas: 6)\n  4464: a4 = s1 + 0x500\n  4468: a0 = u64 [a4 + 0xd0]\n  4472: a1 = u64 [a4 + 0xc8]\n  4476: a2 = u64 [a4 + 0xc0]\n  4480: a3 = u64 [a4 + 0xd8]\n  4484: t0 = 116, jump @1357\n      : @131 [@dyn 58] (gas: 12)\n  4489: t0 = a2 <u 0x1\n  4492: ra = a1 & 0x7f\n  4495: t2 = a5 & a0\n  4498: a4 = a5 & t1\n  4501: ra = a1 if a2 != 0\n  4504: a1 = ra <u 0x20\n  4507: a5 = a5 & a3\n  4510: a2 = a1\n  4512: a2 = 0 if a4 != 0\n  4514: a0 = t2 | a5\n  4517: a2 = 0 if a0 != 0\n  4519: jump @237 if t0 != a2\n      : @132 (gas: 1)\n  4523: t0 = 118, jump @1368\n      : @133 [@dyn 59] (gas: 4)\n  4528: a0 = u64 [s1 + 0xc0]\n  4532: a0 = a0 <u 0x20\n  4535: u64 [s1 + 0xe8] = a0\n  4539: jump @145 if a3 == 0\n      : @134 (gas: 11)\n  4543: u64 [s1 + 0x110] = a4\n  4547: u64 [s1 + 0x118] = ra\n  4551: u64 [s1 + 0x120] = a5\n  4555: u64 [s1 + 0x130] = t2\n  4559: u64 [s1 + 1464] = 0\n  4563: u64 [s1 + 1456] = 0\n  4567: u64 [s1 + 1448] = 0\n  4571: a1 = s1 + 0x5a0\n  4575: u64 [s1 + 1440] = 0x4\n  4580: a0 = 0\n  4582: ra = 120, jump @19\n      : @135 [@dyn 60] (gas: 2)\n  4587: a1 = i32 [0x2026c]\n  4592: jump @137 if a1 >u 31\n      : @136 (gas: 2)\n  4596: u32 [0x2026c] = 0x20\n  4602: fallthrough\n      : @137 (gas: 11)\n  4603: a0 = sp + 0xffffffffffffffe0\n  4606: a2 = a0 & 0xffffffffffffffe0\n  4609: u64 [s1 + 0x128] = a2\n  4613: sp = a2\n  4615: a0 = 0x20280\n  4620: i32 a0 = a0 + 0\n  4622: i32 a2 = a2 + 0\n  4624: a1 = 0x20\n  4627: ra = 0x7a\n  4630: ecalli 6 // 'hash_keccak_256'\n  4632: fallthrough\n      : @138 [@dyn 61] (gas: 9)\n  4633: a0 = u64 [s1 + 0xc0]\n  4637: a1 = a0 + 0x1f\n  4640: a0 = a1 <u a0\n  4643: a5 = u64 [s1 + 0xb8]\n  4647: a2 = a5 + a0\n  4650: a3 = a2 <u a5\n  4653: a3 = a0 if a0 == 0\n  4656: a4 = u64 [s1 + 0xb0]\n  4660: t0 = 124, jump @1352\n      : @139 [@dyn 62] (gas: 35)\n  4665: a1 = u64 [s1 + 0xe8]\n  4669: a1 = 0 if a5 != 0\n  4671: a3 = u64 [s1 + 0xf0]\n  4675: a1 = 0 if a3 != 0\n  4677: a4 = 0 if a1 != 0\n  4679: a0 = 0 if a1 != 0\n  4681: t0 = t2 + a0\n  4684: a0 = t0 <u t2\n  4687: a5 = a2 + a0\n  4690: a4 = a4 + a5\n  4693: u64 [s1 + 0x138] = a4\n  4697: a5 = a4 ^ a2\n  4700: a3 = a4 <u a2\n  4703: a3 = a0 if a5 == 0\n  4706: u64 [s1 + 0x100] = a3\n  4710: a0 = u64 [s1 + 0x118]\n  4714: ra = a0 + 0x1f\n  4717: a4 = ra <u a0\n  4720: a3 = u64 [s1 + 0x110]\n  4724: a0 = a3 + a4\n  4727: a5 = a0 <u a3\n  4730: a5 = a4 if a4 == 0\n  4733: t1 = u64 [s1 + 0x130]\n  4737: t1 = t1 + a5\n  4740: a4 = t1 << 0x3b\n  4743: a3 = a0 >> 0x5\n  4746: a3 = a3 | a4\n  4749: a0 = a0 << 0x3b\n  4752: a4 = ra >> 0x5\n  4755: a0 = a0 | a4\n  4758: a0 = a0 + t2\n  4761: u64 [s1 + 0x118] = a0\n  4765: a0 = a0 <u t2\n  4768: t2 = t0\n  4770: t0 = 126, jump @1375\n      : @140 [@dyn 63] (gas: 16)\n  4775: a0 = u64 [s1 + 0xb0]\n  4779: a0 = a4 <u a0\n  4782: a3 = u64 [s1 + 0xa8]\n  4786: a0 = a0 + a3\n  4789: a3 = a4 >> 0x5\n  4792: a4 = a0 << 0x3b\n  4795: a3 = a3 | a4\n  4798: a4 = u64 [s1 + 0x128]\n  4802: t0 = u64 [a4]\n  4804: a4 = u64 [a4 + 0x8]\n  4807: a0 = a0 >> 0x5\n  4810: a3 = 0 if a1 != 0\n  4812: a0 = 0 if a1 != 0\n  4814: a1 = reverse a4\n  4816: a4 = reverse t0\n  4818: t0 = 128, jump @1393\n      : @141 [@dyn 64] (gas: 25)\n  4824: t0 = a0 + a3\n  4827: a0 = u64 [s1 + 0x130]\n  4831: a0 = t1 <u a0\n  4834: a3 = u64 [s1 + 0x120]\n  4838: a0 = a0 + a3\n  4841: a3 = t1 >> 0x5\n  4844: a5 = a0 << 0x3b\n  4847: a3 = a3 | a5\n  4850: a0 = a0 >> 0x5\n  4853: a0 = a0 + a4\n  4856: a5 = s1 + 0x100\n  4860: a4 = u64 [a5 + 0x38]\n  4863: a3 = a3 + a1\n  4866: a1 = a3 <u a1\n  4869: a0 = a0 + a1\n  4872: a2 = a2 + a3\n  4875: u64 [a5 + 0x8] = a2\n  4878: a1 = a2 <u a3\n  4881: a0 = a0 + a1\n  4884: u64 [a5] = a0\n  4886: a0 = sp + 0xffffffffffffffe0\n  4889: t1 = a0 & 0xffffffffffffffe0\n  4892: sp = t1\n  4894: u64 [s1 + 0xf8] = t1\n  4898: fallthrough\n      : @142 (gas: 20)\n  4899: a0 = u64 [s1 + 0x118]\n  4903: a0 = t2 <u a0\n  4906: a2 = u64 [s1 + 0x110]\n  4910: a1 = a4 ^ a2\n  4913: a2 = a4 <u a2\n  4916: a2 = a0 if a1 == 0\n  4919: a5 = u64 [s1 + 0x108]\n  4923: a0 = ra <u a5\n  4926: a3 = u64 [s1 + 0x100]\n  4930: a1 = t0 ^ a3\n  4933: a3 = t0 <u a3\n  4936: a3 = a0 if a1 == 0\n  4939: a0 = ra ^ a5\n  4942: a0 = a0 | a1\n  4945: a3 = a2 if a0 == 0\n  4948: u64 [t1] = t2\n  4950: u64 [t1 + 0x8] = a4\n  4953: u64 [t1 + 0x10] = ra\n  4956: u64 [t1 + 0x18] = t0\n  4959: jump @145 if a3 == 0\n      : @143 (gas: 14)\n  4962: a0 = s1 + 0x7ff\n  4966: a0 = a0 + 0xb9\n  4970: u64 [a0 + 224] = 0\n  4974: u64 [a0 + 216] = 0\n  4978: u64 [a0 + 208] = 0\n  4982: u64 [a0 + 200] = 0\n  4986: a1 = s1 + 0x7ff\n  4990: a1 = a1 + 0x181\n  4994: a0 = t1\n  4996: u64 [s1 + 0x130] = t2\n  5000: u64 [s1 + 0x138] = a4\n  5004: u64 [s1 + 0x128] = t0\n  5008: u64 [s1 + 0x120] = ra\n  5012: ra = 130, jump @24\n      : @144 [@dyn 65] (gas: 15)\n  5018: t1 = u64 [s1 + 0xf8]\n  5022: t0 = u64 [s1 + 0x128]\n  5026: a4 = u64 [s1 + 0x138]\n  5030: t2 = u64 [s1 + 0x130]\n  5034: t2 = t2 + 0x1\n  5037: a0 = t2 <u 0x1\n  5040: a4 = a4 + a0\n  5043: a0 = t2 | a4\n  5046: a0 = a0 <u 0x1\n  5049: a1 = u64 [s1 + 0x120]\n  5053: a0 = a0 + a1\n  5056: a1 = a0 <u a1\n  5059: t0 = t0 + a1\n  5062: ra = a0\n  5064: jump @142\n      : @145 (gas: 9)\n  5067: a0 = u64 [s1 + 0xe8]\n  5071: a0 = a0 ^ 0x1\n  5074: a2 = u64 [s1 + 0xb8]\n  5078: a1 = u64 [s1 + 0xd8]\n  5082: a0 = a1 if a2 != 0\n  5085: a1 = u64 [s1 + 0xe0]\n  5089: a3 = u64 [s1 + 0xf0]\n  5093: a0 = a1 if a3 != 0\n  5096: jump @155 if a0 == 0\n      : @146 (gas: 10)\n  5100: a0 = u64 [s1 + 0xc0]\n  5104: a0 = a0 & 0xffffffffffffffe0\n  5107: u64 [s1 + 0xc8] = a0\n  5111: u64 [s1 + 1400] = 0\n  5115: u64 [s1 + 1392] = 0\n  5119: u64 [s1 + 1384] = 0\n  5123: a1 = s1 + 0x560\n  5127: u64 [s1 + 1376] = 0x4\n  5132: a0 = 0\n  5134: ra = 132, jump @19\n      : @147 [@dyn 66] (gas: 7)\n  5140: a0 = sp + 0xffffffffffffffe0\n  5143: a0 = a0 & 0xffffffffffffffe0\n  5146: u64 [s1 + 0x120] = a0\n  5150: sp = a0\n  5152: a1 = 0x20\n  5155: a0 = 0\n  5157: ra = 134, jump @33\n      : @148 [@dyn 67] (gas: 39)\n  5163: a1 = sp + 0xffffffffffffffe0\n  5166: a1 = a1 & 0xffffffffffffffe0\n  5169: u64 [s1 + 0x118] = a1\n  5173: sp = a1\n  5175: i32 a0 = a0 + 0\n  5177: i32 a2 = a1 + 0\n  5179: a1 = 0x20\n  5182: ecalli 6 // 'hash_keccak_256'\n  5184: u64 [s1 + 312] = 0x20\n  5189: a5 = 0\n  5191: u64 [s1 + 296] = 0\n  5195: u64 [s1 + 304] = 0\n  5199: a4 = 0\n  5201: a3 = 0\n  5203: a2 = 0\n  5205: t1 = 0\n  5207: a0 = u64 [s1 + 0x118]\n  5211: t0 = u64 [a0 + 0x18]\n  5214: a1 = u64 [a0 + 0x10]\n  5217: ra = u64 [a0 + 0x8]\n  5220: a0 = u64 [a0]\n  5222: u64 [s1 + 0x110] = a0\n  5226: a0 = reverse t0\n  5228: u64 [s1 + 0x118] = a0\n  5232: t2 = reverse a1\n  5234: t0 = reverse ra\n  5236: a0 = u64 [s1 + 0x110]\n  5240: a1 = reverse a0\n  5242: ra = a1\n  5244: a0 = u64 [s1 + 0x120]\n  5248: u64 [a0 + 0x18] = a1\n  5251: a1 = t0\n  5253: u64 [s1 + 0xd8] = a1\n  5257: u64 [a0 + 0x10] = a1\n  5260: u64 [s1 + 0x108] = t2\n  5264: u64 [a0 + 0x8] = t2\n  5267: a1 = u64 [s1 + 0x118]\n  5271: u64 [a0] = a1\n  5273: fallthrough\n      : @149 (gas: 24)\n  5274: u64 [s1 + 0x100] = ra\n  5278: a0 = u64 [s1 + 0xc8]\n  5282: u64 [s1 + 0xf0] = a4\n  5286: a0 = a4 <u a0\n  5289: a4 = a0 ^ 0x1\n  5292: u64 [s1 + 0xe8] = a3\n  5296: a4 = 0x1 if a3 != 0\n  5299: u64 [s1 + 0x110] = t1\n  5303: u64 [s1 + 0xf8] = a2\n  5307: a0 = a2 | t1\n  5310: a4 = 0x1 if a0 != 0\n  5313: a0 = u64 [s1 + 0xa0]\n  5317: a1 = u64 [s1 + 0x138]\n  5321: a1 = a1 + a0\n  5324: a3 = u64 [s1 + 0x90]\n  5328: u64 [s1 + 0xe0] = a5\n  5332: t0 = a3 + a5\n  5335: t2 = u64 [s1 + 0x98]\n  5339: a2 = u64 [s1 + 0x128]\n  5343: a2 = a2 + t2\n  5346: t1 = u64 [s1 + 0x88]\n  5350: a5 = u64 [s1 + 0x130]\n  5354: t1 = t1 + a5\n  5357: jump @157 if a4 != 0\n      : @150 (gas: 6)\n  5361: ra = a1 <u a0\n  5364: a4 = t0 + ra\n  5367: t0 = a4 ^ a3\n  5370: a5 = a4 <u a3\n  5373: a5 = ra if t0 == 0\n  5376: t0 = 136, jump @1360\n      : @151 [@dyn 68] (gas: 1)\n  5382: jump @216 if a0 != 0\n      : @152 (gas: 2)\n  5386: a0 = s1 + 0x260\n  5390: ra = 138, jump @17\n      : @153 [@dyn 69] (gas: 15)\n  5396: a4 = s1 + 0x200\n  5400: a0 = u64 [a4 + 0x78]\n  5403: a1 = u64 [a4 + 0x70]\n  5406: a2 = u64 [a4 + 0x68]\n  5409: a3 = u64 [a4 + 0x60]\n  5412: a4 = s1 + 0x7ff\n  5416: a4 = a4 + 0xb9\n  5420: u64 [a4 + 0x100] = a0\n  5424: u64 [a4 + 0xf8] = a1\n  5428: u64 [a4 + 0xf0] = a2\n  5432: u64 [a4 + 0xe8] = a3\n  5436: a1 = s1 + 0x7ff\n  5440: a1 = a1 + 0x1a1\n  5444: a0 = u64 [s1 + 0x120]\n  5448: ra = 140, jump @24\n      : @154 [@dyn 70] (gas: 54)\n  5454: ra = u64 [s1 + 0x118]\n  5458: ra = ra + 0x1\n  5461: a0 = ra <u 0x1\n  5464: a3 = u64 [s1 + 0x108]\n  5468: a3 = a3 + a0\n  5471: a0 = ra | a3\n  5474: a0 = a0 <u 0x1\n  5477: a1 = u64 [s1 + 0xd8]\n  5481: a0 = a0 + a1\n  5484: a1 = a0 <u a1\n  5487: t0 = u64 [s1 + 0x100]\n  5491: t0 = t0 + a1\n  5494: a1 = u64 [s1 + 0x138]\n  5498: a2 = a1 + 0x20\n  5501: u64 [s1 + 0x100] = a2\n  5505: a1 = a2 <u a1\n  5508: a2 = u64 [s1 + 0xe0]\n  5512: a4 = a2 + a1\n  5515: u64 [s1 + 0xd0] = a4\n  5519: a4 = a4 <u a2\n  5522: a4 = a1 if a1 == 0\n  5525: a1 = u64 [s1 + 0x128]\n  5529: t2 = a1 + a4\n  5532: a4 = t2 <u a1\n  5535: a1 = u64 [s1 + 0x130]\n  5539: a1 = a1 + a4\n  5542: u64 [s1 + 0x130] = a1\n  5546: a1 = u64 [s1 + 0xf0]\n  5550: a4 = a1 + 0x20\n  5553: a5 = a4 <u a1\n  5556: a2 = u64 [s1 + 0xe8]\n  5560: a1 = a2 + a5\n  5563: a2 = a1 <u a2\n  5566: a2 = a5 if a5 == 0\n  5569: a5 = u64 [s1 + 0xf8]\n  5573: a2 = a2 + a5\n  5576: a5 = a2 <u a5\n  5579: t1 = u64 [s1 + 0x110]\n  5583: t1 = t1 + a5\n  5586: u64 [s1 + 0x108] = a3\n  5590: a5 = u64 [s1 + 0x120]\n  5594: u64 [a5 + 0x8] = a3\n  5597: u64 [s1 + 0x118] = ra\n  5601: u64 [a5] = ra\n  5603: u64 [a5 + 0x10] = a0\n  5606: ra = t0\n  5608: u64 [a5 + 0x18] = t0\n  5611: u64 [s1 + 0xd8] = a0\n  5615: a0 = u64 [s1 + 0x100]\n  5619: u64 [s1 + 0x138] = a0\n  5623: a5 = u64 [s1 + 0xd0]\n  5627: u64 [s1 + 0x128] = t2\n  5631: a3 = a1\n  5633: jump @149\n      : @155 (gas: 7)\n  5636: a3 = u64 [s1 + 0xc0]\n  5640: a4 = u64 [s1 + 0xb0]\n  5644: a0 = a3 | a4\n  5647: a5 = u64 [s1 + 0xa8]\n  5651: a1 = a2 | a5\n  5654: a0 = a0 | a1\n  5657: jump @171 if a0 != 0\n      : @156 (gas: 5)\n  5661: u64 [s1 + 288] = 0\n  5665: u64 [s1 + 280] = 0\n  5669: u64 [s1 + 296] = 0\n  5673: u64 [s1 + 304] = 0\n  5677: jump @173\n      : @157 (gas: 12)\n  5680: a4 = u64 [s1 + 0xc8]\n  5684: a5 = u64 [s1 + 0xc0]\n  5688: a4 = a4 ^ a5\n  5691: ra = u64 [s1 + 0xb0]\n  5695: a4 = a4 | ra\n  5698: u64 [s1 + 0x138] = a4\n  5702: a5 = u64 [s1 + 0xb8]\n  5706: a4 = u64 [s1 + 0xa8]\n  5710: a5 = a5 | a4\n  5713: a4 = u64 [s1 + 0x138]\n  5717: a4 = a4 | a5\n  5720: jump @170 if a4 == 0\n      : @158 (gas: 6)\n  5724: ra = a1 <u a0\n  5727: a4 = t0 + ra\n  5730: t0 = a4 ^ a3\n  5733: a5 = a4 <u a3\n  5736: a5 = ra if t0 == 0\n  5739: t0 = 142, jump @1360\n      : @159 [@dyn 71] (gas: 1)\n  5745: jump @216 if a0 != 0\n      : @160 (gas: 2)\n  5749: a0 = s1 + 0x540\n  5753: ra = 144, jump @17\n      : @161 [@dyn 72] (gas: 11)\n  5759: a1 = s1 + 0x500\n  5763: a0 = u64 [a1 + 0x58]\n  5766: u64 [s1 + 0x130] = a0\n  5770: a0 = u64 [a1 + 0x50]\n  5773: u64 [s1 + 0x128] = a0\n  5777: a0 = u64 [a1 + 0x48]\n  5780: u64 [s1 + 0x118] = a0\n  5784: a0 = u64 [a1 + 0x40]\n  5787: u64 [s1 + 0x110] = a0\n  5791: a0 = u64 [s1 + 0xc0]\n  5795: t0 = 146, jump @1388\n      : @162 [@dyn 73] (gas: 1)\n  5801: ra = 148, jump @1404\n      : @163 [@dyn 74] (gas: 6)\n  5807: u64 [s1 + 0x108] = a0\n  5811: u64 [s1 + 0xf0] = a1\n  5815: a0 = 0xffffffffffffffff\n  5818: a1 = 0xffffffffffffffff\n  5821: a2 = u64 [s1 + 0x138]\n  5825: ra = 150, jump @1399\n      : @164 [@dyn 75] (gas: 1)\n  5831: t0 = 152, jump @1379\n      : @165 [@dyn 76] (gas: 1)\n  5837: ra = 154, jump @1399\n      : @166 [@dyn 77] (gas: 1)\n  5843: t0 = 156, jump @1342\n      : @167 [@dyn 78] (gas: 2)\n  5849: a2 = u64 [s1 + 0x118]\n  5853: t0 = 158, jump @1371\n      : @168 [@dyn 79] (gas: 9)\n  5859: a5 = a4 + 0x100\n  5863: u64 [a5 + 0x20] = a3\n  5866: u64 [a5 + 0x18] = a2\n  5869: u64 [a5 + 0x10] = a1\n  5872: u64 [a5 + 0x8] = a0\n  5875: a1 = s1 + 0x7ff\n  5879: a1 = a1 + 0x1c1\n  5883: a0 = u64 [s1 + 0x120]\n  5887: ra = 160, jump @24\n      : @169 [@dyn 80] (gas: 2)\n  5893: ra = u64 [s1 + 0xb0]\n  5897: fallthrough\n      : @170 (gas: 31)\n  5898: a0 = ra >> 0x3f\n  5901: a1 = u64 [s1 + 0xa8]\n  5905: a1 = a1 << 0x1\n  5908: a0 = a0 | a1\n  5911: a3 = u64 [s1 + 0xb8]\n  5915: a1 = a3 >> 0x3f\n  5918: a2 = ra << 0x1\n  5921: a1 = a1 | a2\n  5924: a4 = u64 [s1 + 0xc0]\n  5928: a2 = a4 >> 0x3f\n  5931: a3 = a3 << 0x1\n  5934: a2 = a2 | a3\n  5937: a3 = a4 << 0x1\n  5940: a3 = a3 + 0x1\n  5943: a5 = s1 + 0x7ff\n  5947: a5 = a5 + 0xb9\n  5951: u64 [a5 + 320] = 0\n  5955: u64 [a5 + 312] = 0\n  5959: u64 [a5 + 304] = 0\n  5963: u64 [a5 + 296] = 0x4\n  5968: a4 = a5 + 0x100\n  5972: u64 [a4 + 0x48] = a3\n  5975: u64 [a4 + 0x50] = a2\n  5978: u64 [a4 + 0x58] = a1\n  5981: u64 [a4 + 0x60] = a0\n  5984: a0 = s1 + 0x7ff\n  5988: a0 = a0 + 0x1e1\n  5992: a1 = s1 + 0x7ff\n  5996: a1 = a1 + 0x201\n  6000: ra = 0xb0\n  6004: jump @24\n      : @171 (gas: 3)\n  6007: a0 = s1 + 0x580\n  6011: a1 = u64 [s1 + 0x18]\n  6014: ra = 162, jump @17\n      : @172 [@dyn 81] (gas: 14)\n  6020: a5 = u64 [s1 + 0xa8]\n  6024: a4 = u64 [s1 + 0xb0]\n  6028: a2 = u64 [s1 + 0xb8]\n  6032: a3 = u64 [s1 + 0xc0]\n  6036: a1 = s1 + 0x500\n  6040: a0 = u64 [a1 + 0x98]\n  6044: u64 [s1 + 0x130] = a0\n  6048: a0 = u64 [a1 + 0x90]\n  6052: u64 [s1 + 0x128] = a0\n  6056: a0 = u64 [a1 + 0x88]\n  6060: u64 [s1 + 0x118] = a0\n  6064: a0 = u64 [a1 + 0x80]\n  6068: u64 [s1 + 0x120] = a0\n  6072: fallthrough\n      : @173 (gas: 15)\n  6073: a0 = a2 >> 0x3f\n  6076: a1 = a4 << 0x1\n  6079: a0 = a0 | a1\n  6082: u64 [s1 + 0x110] = a0\n  6086: a0 = a4 >> 0x3f\n  6089: a1 = a5 << 0x1\n  6092: a0 = a0 | a1\n  6095: u64 [s1 + 0x108] = a0\n  6099: a0 = a3 >> 0x3f\n  6102: a1 = a2 << 0x1\n  6105: a0 = a0 | a1\n  6108: u64 [s1 + 0x100] = a0\n  6112: a0 = a3 << 0x1\n  6115: u64 [s1 + 0xf8] = a0\n  6119: t0 = 164, jump @1394\n      : @174 [@dyn 82] (gas: 1)\n  6125: ra = 166, jump @1404\n      : @175 [@dyn 83] (gas: 7)\n  6131: u64 [s1 + 0xd8] = a0\n  6135: u64 [s1 + 0xf0] = a1\n  6139: a0 = u64 [s1 + 0xc0]\n  6143: i32 a2 = a0 << 0x3\n  6146: a0 = 0xffffffffffffffff\n  6149: a1 = 0xffffffffffffffff\n  6152: ra = 168, jump @1399\n      : @176 [@dyn 84] (gas: 10)\n  6158: u64 [s1 + 0xe8] = a0\n  6162: u64 [s1 + 0xe0] = a1\n  6166: a1 = u64 [s1 + 0xd8]\n  6170: a0 = a0 | a1\n  6173: u64 [s1 + 0xd8] = a0\n  6177: a0 = u64 [s1 + 0x138]\n  6181: i32 a2 = a0 + 0xffffffffffffff80\n  6184: a0 = 0xffffffffffffffff\n  6187: a1 = 0xffffffffffffffff\n  6190: ra = 170, jump @1399\n      : @177 [@dyn 85] (gas: 7)\n  6196: a4 = u64 [s1 + 0x138]\n  6200: a2 = a4 <u 0x80\n  6204: a3 = u64 [s1 + 0xd8]\n  6208: a0 = a3 if a2 != 0\n  6211: a5 = u64 [s1 + 0xe0]\n  6215: a3 = u64 [s1 + 0xf0]\n  6219: t0 = 172, jump @1396\n      : @178 [@dyn 86] (gas: 2)\n  6225: a4 = u64 [s1 + 0xe8]\n  6229: t0 = 174, jump @1356\n      : @179 [@dyn 87] (gas: 25)\n  6235: a4 = u64 [s1 + 0xf8]\n  6239: a0 = a0 | a4\n  6242: a5 = s1 + 0x100\n  6246: a4 = u64 [a5]\n  6248: a1 = a1 | a4\n  6251: a4 = u64 [a5 + 0x8]\n  6254: a3 = a3 | a4\n  6257: a4 = u64 [a5 + 0x10]\n  6260: a2 = a2 | a4\n  6263: a5 = s1 + 0x7ff\n  6267: a5 = a5 + 0xb9\n  6271: u64 [a5 + 360] = 0x4\n  6276: a4 = a5 + 0x100\n  6280: u64 [a4 + 0x98] = a2\n  6284: u64 [a4 + 0xa0] = a3\n  6288: u64 [a4 + 0x90] = a1\n  6292: u64 [a4 + 0x88] = a0\n  6296: u64 [a5 + 384] = 0\n  6300: u64 [a5 + 376] = 0\n  6304: u64 [a5 + 368] = 0\n  6308: a0 = s1 + 0x7ff\n  6312: a0 = a0 + 0x221\n  6316: a1 = s1 + 0x7ff\n  6320: a1 = a1 + 0x241\n  6324: ra = 176, jump @24\n      : @180 [@dyn 88] (gas: 8)\n  6330: a0 = 0x30280\n  6335: u64 [s1 + 0x138] = a0\n  6339: i32 a0 = a0 + 0\n  6341: u64 [s1 + 0x130] = a0\n  6345: ra = 0xb2\n  6349: ecalli 3 // 'caller'\n  6351: t0 = 0xb4\n  6355: jump @1324\n      : @181 [@dyn 89] (gas: 1)\n  6358: t0 = 180, jump @1324\n      : @182 [@dyn 90] (gas: 8)\n  6364: u64 [s1 + 1304] = 0\n  6368: a2 = s1 + 0x500\n  6372: u64 [a2 + 0x10] = a1\n  6375: u64 [a2 + 0x8] = a0\n  6378: a0 = s1 + 0x520\n  6382: a1 = s1 + 0x500\n  6386: u64 [a2] = a3\n  6388: ra = 182, jump @868\n      : @183 [@dyn 91] (gas: 5)\n  6394: a0 = u64 [s1 + 0x130]\n  6398: ra = 0xb8\n  6402: ecalli 3 // 'caller'\n  6404: t0 = 0xba\n  6408: jump @1324\n      : @184 [@dyn 92] (gas: 1)\n  6411: t0 = 186, jump @1324\n      : @185 [@dyn 93] (gas: 9)\n  6417: u64 [s1 + 1240] = 0\n  6421: u64 [s1 + 0x4d0] = a1\n  6425: u64 [s1 + 0x4c8] = a0\n  6429: a0 = s1 + 0x4e0\n  6433: a1 = s1 + 0x4c0\n  6437: u64 [s1 + 0x4c0] = a3\n  6441: ra = 0xbc\n  6445: t0 = 0x358\n  6449: jump @1358\n      : @186 [@dyn 94] (gas: 5)\n  6452: a0 = u64 [s1 + 0x130]\n  6456: ra = 0xbe\n  6460: ecalli 3 // 'caller'\n  6462: t0 = 0xc0\n  6466: jump @1324\n      : @187 [@dyn 95] (gas: 1)\n  6469: t0 = 192, jump @1324\n      : @188 [@dyn 96] (gas: 10)\n  6475: u64 [s1 + 1176] = 0\n  6479: a2 = s1 + 0x400\n  6483: u64 [a2 + 0x90] = a1\n  6487: u64 [a2 + 0x88] = a0\n  6491: a0 = s1 + 0x4a0\n  6495: a1 = s1 + 0x480\n  6499: u64 [a2 + 0x80] = a3\n  6503: ra = 0xc2\n  6507: t0 = 0x39e\n  6511: jump @1358\n      : @189 [@dyn 97] (gas: 3)\n  6514: a0 = u64 [s1 + 0x130]\n  6518: ecalli 3 // 'caller'\n  6520: fallthrough\n      : @190 (gas: 7)\n  6521: a2 = u64 [s1 + 0x138]\n  6525: a0 = u32 [a2 + 0x10]\n  6528: a1 = u64 [a2]\n  6530: a2 = u64 [a2 + 0x8]\n  6533: a0 = a0 | a1\n  6536: a0 = a0 | a2\n  6539: jump @243 if a0 == 0\n      : @191 (gas: 10)\n  6543: a1 = s1 + 0x7ff\n  6547: a1 = a1 + 0xb9\n  6551: u64 [a1 + 448] = 0\n  6555: u64 [a1 + 440] = 0\n  6559: u64 [a1 + 432] = 0\n  6563: u64 [a1 + 424] = 0x5\n  6568: a0 = s1 + 0x460\n  6572: a1 = s1 + 0x7ff\n  6576: a1 = a1 + 0x261\n  6580: ra = 196, jump @21\n      : @192 [@dyn 98] (gas: 2)\n  6586: a0 = u8 [s1 + 0x460]\n  6590: jump @248 if a0 != 0\n      : @193 (gas: 10)\n  6594: a0 = s1 + 0x7ff\n  6598: a0 = a0 + 0xb9\n  6602: u64 [a0 + 480] = 0\n  6606: u64 [a0 + 472] = 0\n  6610: u64 [a0 + 464] = 0\n  6614: u64 [a0 + 456] = 0x2\n  6619: a0 = s1 + 0x420\n  6623: a1 = s1 + 0x7ff\n  6627: a1 = a1 + 0x281\n  6631: ra = 198, jump @21\n      : @194 [@dyn 99] (gas: 43)\n  6637: t2 = u64 [s1 + 0x438]\n  6641: t1 = u64 [s1 + 0x430]\n  6645: ra = u64 [s1 + 0x420]\n  6649: u64 [s1 + 0x128] = ra\n  6653: a5 = u64 [s1 + 0x428]\n  6657: a1 = sp + 0xffffffffffffffe0\n  6660: a1 = a1 & 0xffffffffffffffe0\n  6663: sp = a1\n  6665: a2 = u64 [s1 + 0x70]\n  6668: a4 = a2 + a5\n  6671: a0 = u64 [s1 + 0x68]\n  6674: ra = ra + a0\n  6677: a0 = ra <u a0\n  6680: a4 = a4 + a0\n  6683: a3 = a4 ^ a2\n  6686: a2 = a4 <u a2\n  6689: a2 = a0 if a3 == 0\n  6692: t0 = u64 [s1 + 0x78]\n  6695: a0 = t0 + t1\n  6698: a3 = u64 [s1 + 0x80]\n  6702: a3 = a3 + t2\n  6705: t0 = a0 <u t0\n  6708: a3 = a3 + t0\n  6711: a2 = a2 + a0\n  6714: a0 = a2 <u a0\n  6717: t0 = a3 + a0\n  6720: a0 = a5 ^ a4\n  6723: a5 = a4 <u a5\n  6726: a3 = u64 [s1 + 0x128]\n  6730: a3 = ra <u a3\n  6733: a3 = a5 if a0 != 0\n  6736: a0 = a2 <u t1\n  6739: a5 = t2 ^ t0\n  6742: t2 = t0 <u t2\n  6745: t2 = a0 if a5 == 0\n  6748: a0 = t1 ^ a2\n  6751: a0 = a0 | a5\n  6754: a3 = t2 if a0 != 0\n  6757: u64 [a1 + 0x10] = a2\n  6760: u64 [a1 + 0x8] = a4\n  6763: u64 [a1] = ra\n  6765: u64 [a1 + 0x18] = t0\n  6768: jump @252 if a3 != 0\n      : @195 (gas: 9)\n  6772: a0 = s1 + 0x7ff\n  6776: a0 = a0 + 0xb9\n  6780: u64 [a0 + 512] = 0\n  6784: u64 [a0 + 504] = 0\n  6788: u64 [a0 + 496] = 0\n  6792: u64 [a0 + 488] = 0x2\n  6797: a0 = s1 + 0x7ff\n  6801: a0 = a0 + 0x2a1\n  6805: ra = 200, jump @24\n      : @196 [@dyn 100] (gas: 5)\n  6811: a0 = u64 [s1 + 0x130]\n  6815: ra = 0xca\n  6819: ecalli 3 // 'caller'\n  6821: t0 = 0xcc\n  6825: jump @1324\n      : @197 [@dyn 101] (gas: 1)\n  6828: t0 = 204, jump @1324\n      : @198 [@dyn 102] (gas: 8)\n  6834: u64 [s1 + 1048] = 0\n  6838: a2 = s1 + 0x400\n  6842: u64 [a2 + 0x10] = a1\n  6845: u64 [a2 + 0x8] = a0\n  6848: a1 = s1 + 0x400\n  6852: u64 [a2] = a3\n  6854: a0 = 0\n  6856: ra = 206, jump @19\n      : @199 [@dyn 103] (gas: 7)\n  6862: u64 [s1 + 1016] = 0\n  6866: u64 [s1 + 1008] = 0\n  6870: u64 [s1 + 1000] = 0\n  6874: a0 = 0x20\n  6877: a1 = s1 + 0x3e0\n  6881: u64 [s1 + 992] = 0\n  6885: ra = 208, jump @19\n      : @200 [@dyn 104] (gas: 6)\n  6891: a0 = sp + 0xffffffffffffffe0\n  6894: a0 = a0 & 0xffffffffffffffe0\n  6897: u64 [s1 + 0x128] = a0\n  6901: sp = a0\n  6903: a1 = i32 [0x2026c]\n  6908: jump @202 if a1 >u 63\n      : @201 (gas: 2)\n  6912: u32 [0x2026c] = 0x40\n  6918: fallthrough\n      : @202 (gas: 13)\n  6919: a0 = sp + 0xffffffffffffffe0\n  6922: a2 = a0 & 0xffffffffffffffe0\n  6925: u64 [s1 + 0x120] = a2\n  6929: sp = a2\n  6931: a0 = 0x20280\n  6936: i32 a0 = a0 + 0\n  6938: i32 a2 = a2 + 0\n  6940: a1 = 0x40\n  6943: ra = 0xd2\n  6947: ecalli 6 // 'hash_keccak_256'\n  6949: a3 = u64 [s1 + 0x120]\n  6953: t0 = 0xd4\n  6957: jump @1330\n      : @203 [@dyn 105] (gas: 2)\n  6960: a3 = u64 [s1 + 0x120]\n  6964: t0 = 212, jump @1330\n      : @204 [@dyn 106] (gas: 7)\n  6970: a1 = u64 [s1 + 0x128]\n  6974: u64 [a1 + 0x18] = a3\n  6977: u64 [a1 + 0x10] = a2\n  6980: u64 [a1 + 0x8] = a4\n  6983: u64 [a1] = a0\n  6985: a0 = s1 + 0x3c0\n  6989: ra = 214, jump @21\n      : @205 [@dyn 107] (gas: 33)\n  6995: a0 = u64 [s1 + 0x3c8]\n  6999: a1 = u64 [s1 + 0x3c0]\n  7003: t0 = u64 [s1 + 0x3d8]\n  7007: a3 = u64 [s1 + 0x3d0]\n  7011: a4 = u64 [s1 + 0x70]\n  7014: a4 = a4 + a0\n  7017: a5 = u64 [s1 + 0x68]\n  7020: a5 = a5 + a1\n  7023: a1 = a5 <u a1\n  7026: a4 = a4 + a1\n  7029: a2 = a4 ^ a0\n  7032: a0 = a4 <u a0\n  7035: a0 = a1 if a2 == 0\n  7038: a1 = u64 [s1 + 0x78]\n  7041: a1 = a1 + a3\n  7044: a2 = u64 [s1 + 0x80]\n  7048: t0 = t0 + a2\n  7051: a2 = a1 <u a3\n  7054: a2 = a2 + t0\n  7057: a0 = a0 + a1\n  7060: a1 = a0 <u a1\n  7063: a1 = a1 + a2\n  7066: a2 = s1 + 0x7ff\n  7070: a2 = a2 + 0xb9\n  7074: a3 = a2 + 0x200\n  7078: u64 [a3 + 0x8] = a5\n  7081: u64 [a3 + 0x10] = a4\n  7084: u64 [a3 + 0x18] = a0\n  7087: u64 [a3 + 0x20] = a1\n  7090: a1 = s1 + 0x7ff\n  7094: a1 = a1 + 0x2c1\n  7098: a0 = u64 [s1 + 0x128]\n  7102: ra = 216, jump @24\n      : @206 [@dyn 108] (gas: 3)\n  7108: a0 = s1 + 0x3a0\n  7112: a1 = 0x40\n  7115: ra = 218, jump @17\n      : @207 [@dyn 109] (gas: 6)\n  7121: a4 = s1 + 0x300\n  7125: a3 = u64 [a4 + 0xb8]\n  7129: a1 = u64 [a4 + 0xb0]\n  7133: a2 = u64 [a4 + 0xa8]\n  7137: a0 = u64 [a4 + 0xa0]\n  7141: t0 = 220, jump @1332\n      : @208 [@dyn 110] (gas: 1)\n  7147: jump @216 if a1 != 0\n      : @209 (gas: 11)\n  7151: a1 = u64 [s1 + 0x68]\n  7154: u64 [s1 + 0x380] = a1\n  7158: a1 = u64 [s1 + 0x70]\n  7161: u64 [s1 + 0x388] = a1\n  7165: a1 = u64 [s1 + 0x78]\n  7168: u64 [s1 + 0x390] = a1\n  7172: a1 = s1 + 0x380\n  7176: a2 = u64 [s1 + 0x80]\n  7180: u64 [s1 + 0x398] = a2\n  7184: u64 [s1 + 0x128] = a0\n  7188: ra = 222, jump @19\n      : @210 [@dyn 111] (gas: 6)\n  7194: a0 = u64 [s1 + 0x130]\n  7198: ra = 0xe0\n  7202: ecalli 3 // 'caller'\n  7204: a2 = u64 [s1 + 0x138]\n  7208: t0 = 0xe2\n  7212: jump @1325\n      : @211 [@dyn 112] (gas: 2)\n  7215: a2 = u64 [s1 + 0x138]\n  7219: t0 = 226, jump @1325\n      : @212 [@dyn 113] (gas: 28)\n  7225: t0 = a1 | a0\n  7228: a3 = a3 >> 0x20\n  7231: a2 = reverse a2\n  7233: a1 = a2 << 0x20\n  7236: a1 = a1 | a3\n  7239: a2 = a2 >> 0x20\n  7242: u64 [s1 + 824] = 0\n  7246: u64 [s1 + 856] = 0\n  7250: u64 [s1 + 848] = 0\n  7254: u64 [s1 + 840] = 0\n  7258: u64 [s1 + 832] = 0\n  7262: a3 = u64 [0x20008]\n  7267: a4 = u64 [0x20010]\n  7272: a5 = u64 [0x20018]\n  7277: a0 = u64 [0x20020]\n  7282: u64 [s1 + 0x378] = a3\n  7286: u64 [s1 + 0x370] = a4\n  7290: u64 [s1 + 0x368] = a5\n  7294: u64 [s1 + 0x360] = a0\n  7298: u64 [s1 + 0x330] = a2\n  7302: u64 [s1 + 0x328] = a1\n  7306: a1 = 0x20\n  7309: a2 = s1 + 0x360\n  7313: a3 = s1 + 0x340\n  7317: a4 = s1 + 0x320\n  7321: u64 [s1 + 0x320] = t0\n  7325: a0 = u64 [s1 + 0x128]\n  7329: ra = 228, jump @27\n      : @213 [@dyn 114] (gas: 3)\n  7335: a0 = s1 + 0x300\n  7339: a1 = 0x40\n  7342: ra = 230, jump @17\n      : @214 [@dyn 115] (gas: 6)\n  7348: a4 = s1 + 0x300\n  7352: a3 = u64 [a4 + 0x18]\n  7355: a1 = u64 [a4 + 0x10]\n  7358: a2 = u64 [a4 + 0x8]\n  7361: a0 = u64 [a4]\n  7363: t0 = 232, jump @1332\n      : @215 [@dyn 116] (gas: 1)\n  7369: jump @259 if a1 == 0\n      : @216 (gas: 1)\n  7373: trap\n      : @217 (gas: 6)\n  7374: a1 = 0x20280\n  7379: i32 a1 = a1 + 0\n  7381: a0 = 0x1\n  7384: a2 = 0\n  7386: ecalli 7 // 'seal_return'\n  7388: jump @219\n      : @218 (gas: 6)\n  7390: a1 = 0x20280\n  7395: i32 a1 = a1 + 0\n  7397: a0 = 0x1\n  7400: a2 = 0\n  7402: ecalli 7 // 'seal_return'\n  7404: fallthrough\n      : @219 (gas: 6)\n  7405: u64 [s1 + 368] = 0\n  7409: u64 [s1 + 360] = 0\n  7413: u64 [s1 + 352] = 0\n  7417: t0 = 0xea\n  7421: a0 = 0x4e487b7100000000\n  7431: fallthrough\n      : @220 [@dyn 117] (gas: 4)\n  7432: a1 = s1 + 0x160\n  7436: u64 [s1 + 0x178] = a0\n  7440: a0 = 0\n  7442: ra = 236, jump @19\n      : @221 [@dyn 118] (gas: 7)\n  7448: u64 [s1 + 344] = 0\n  7452: u64 [s1 + 336] = 0\n  7456: u64 [s1 + 320] = 0x41\n  7461: a0 = 0x4\n  7464: a1 = s1 + 0x140\n  7468: u64 [s1 + 328] = 0\n  7472: ra = 238, jump @19\n      : @222 [@dyn 119] (gas: 2)\n  7478: a1 = i32 [0x2026c]\n  7483: jump @224 if a1 >u 63\n      : @223 (gas: 3)\n  7487: u32 [0x2026c] = 0x40\n  7493: a1 = 0x20280\n  7498: jump @258\n      : @224 (gas: 2)\n  7501: a1 = 0x20280\n  7506: jump @258\n      : @225 (gas: 6)\n  7509: u64 [s1 + 432] = 0\n  7513: u64 [s1 + 424] = 0\n  7517: u64 [s1 + 416] = 0\n  7521: t0 = 0xf0\n  7525: a0 = 0x4e487b7100000000\n  7535: fallthrough\n      : @226 [@dyn 120] (gas: 4)\n  7536: a1 = s1 + 0x1a0\n  7540: u64 [s1 + 0x1b8] = a0\n  7544: a0 = 0\n  7546: ra = 242, jump @19\n      : @227 [@dyn 121] (gas: 7)\n  7552: u64 [s1 + 408] = 0\n  7556: u64 [s1 + 400] = 0\n  7560: u64 [s1 + 384] = 0x22\n  7565: a0 = 0x4\n  7568: a1 = s1 + 0x180\n  7572: u64 [s1 + 392] = 0\n  7576: ra = 244, jump @19\n      : @228 [@dyn 122] (gas: 2)\n  7582: a1 = i32 [0x2026c]\n  7587: jump @230 if a1 >u 63\n      : @229 (gas: 3)\n  7591: u32 [0x2026c] = 0x40\n  7597: a1 = 0x20280\n  7602: jump @258\n      : @230 (gas: 2)\n  7605: a1 = 0x20280\n  7610: jump @258\n      : @231 (gas: 6)\n  7613: u64 [s1 + 528] = 0\n  7617: u64 [s1 + 520] = 0\n  7621: u64 [s1 + 512] = 0\n  7625: t0 = 0xf6\n  7629: a0 = 0x4e487b7100000000\n  7639: fallthrough\n      : @232 [@dyn 123] (gas: 4)\n  7640: a1 = s1 + 0x200\n  7644: u64 [s1 + 0x218] = a0\n  7648: a0 = 0\n  7650: ra = 248, jump @19\n      : @233 [@dyn 124] (gas: 7)\n  7656: u64 [s1 + 504] = 0\n  7660: u64 [s1 + 496] = 0\n  7664: u64 [s1 + 480] = 0x41\n  7669: a0 = 0x4\n  7672: a1 = s1 + 0x1e0\n  7676: u64 [s1 + 488] = 0\n  7680: ra = 250, jump @19\n      : @234 [@dyn 125] (gas: 2)\n  7686: a1 = i32 [0x2026c]\n  7691: jump @236 if a1 >u 63\n      : @235 (gas: 3)\n  7695: u32 [0x2026c] = 0x40\n  7701: a1 = 0x20280\n  7706: jump @258\n      : @236 (gas: 2)\n  7709: a1 = 0x20280\n  7714: jump @258\n      : @237 (gas: 6)\n  7717: u64 [s1 + 592] = 0\n  7721: u64 [s1 + 584] = 0\n  7725: u64 [s1 + 576] = 0\n  7729: t0 = 0xfc\n  7733: a0 = 0x4e487b7100000000\n  7743: fallthrough\n      : @238 [@dyn 126] (gas: 4)\n  7744: a1 = s1 + 0x240\n  7748: u64 [s1 + 0x258] = a0\n  7752: a0 = 0\n  7754: ra = 254, jump @19\n      : @239 [@dyn 127] (gas: 7)\n  7760: u64 [s1 + 568] = 0\n  7764: u64 [s1 + 560] = 0\n  7768: u64 [s1 + 544] = 0x22\n  7773: a0 = 0x4\n  7776: a1 = s1 + 0x220\n  7780: u64 [s1 + 552] = 0\n  7784: ra = 256, jump @19\n      : @240 [@dyn 128] (gas: 2)\n  7790: a1 = i32 [0x2026c]\n  7795: jump @242 if a1 >u 63\n      : @241 (gas: 3)\n  7799: u32 [0x2026c] = 0x40\n  7805: a1 = 0x20280\n  7810: jump @258\n      : @242 (gas: 2)\n  7813: a1 = 0x20280\n  7818: jump @258\n      : @243 (gas: 8)\n  7821: u64 [s1 + 688] = 0\n  7825: u64 [s1 + 680] = 0\n  7829: u64 [s1 + 672] = 0\n  7833: a0 = 0xec442f0500000000\n  7843: a1 = s1 + 0x2a0\n  7847: u64 [s1 + 0x2b8] = a0\n  7851: a0 = 0\n  7853: ra = 258, jump @19\n      : @244 [@dyn 129] (gas: 7)\n  7859: u64 [s1 + 664] = 0\n  7863: u64 [s1 + 656] = 0\n  7867: u64 [s1 + 648] = 0\n  7871: a0 = 0x4\n  7874: a1 = s1 + 0x280\n  7878: u64 [s1 + 640] = 0\n  7882: ra = 260, jump @19\n      : @245 [@dyn 130] (gas: 2)\n  7888: a1 = i32 [0x2026c]\n  7893: jump @247 if a1 >u 63\n      : @246 (gas: 3)\n  7897: u32 [0x2026c] = 0x40\n  7903: a1 = 0x20280\n  7908: jump @258\n      : @247 (gas: 2)\n  7911: a1 = 0x20280\n  7916: jump @258\n      : @248 (gas: 8)\n  7919: u64 [s1 + 1104] = 0\n  7923: u64 [s1 + 1096] = 0\n  7927: u64 [s1 + 1088] = 0\n  7931: a0 = 0xd93c066500000000\n  7941: a1 = s1 + 0x440\n  7945: u64 [s1 + 0x458] = a0\n  7949: a0 = 0\n  7951: ra = 262, jump @19\n      : @249 [@dyn 131] (gas: 2)\n  7957: a1 = i32 [0x2026c]\n  7962: jump @251 if a1 >u 31\n      : @250 (gas: 2)\n  7966: u32 [0x2026c] = 0x20\n  7972: fallthrough\n      : @251 (gas: 6)\n  7973: a1 = 0x20280\n  7978: i32 a1 = a1 + 0\n  7980: a0 = 0x1\n  7983: a2 = 0x4\n  7986: ecalli 7 // 'seal_return'\n  7988: fallthrough\n      : @252 (gas: 6)\n  7989: u64 [s1 + 752] = 0\n  7993: u64 [s1 + 744] = 0\n  7997: u64 [s1 + 736] = 0\n  8001: t0 = 0x108\n  8005: a0 = 0x4e487b7100000000\n  8015: fallthrough\n      : @253 [@dyn 132] (gas: 4)\n  8016: a1 = s1 + 0x2e0\n  8020: u64 [s1 + 0x2f8] = a0\n  8024: a0 = 0\n  8026: ra = 266, jump @19\n      : @254 [@dyn 133] (gas: 7)\n  8032: u64 [s1 + 728] = 0\n  8036: u64 [s1 + 720] = 0\n  8040: u64 [s1 + 704] = 0x11\n  8045: a0 = 0x4\n  8048: a1 = s1 + 0x2c0\n  8052: u64 [s1 + 712] = 0\n  8056: ra = 268, jump @19\n      : @255 [@dyn 134] (gas: 2)\n  8062: a1 = i32 [0x2026c]\n  8067: jump @257 if a1 >u 63\n      : @256 (gas: 3)\n  8071: u32 [0x2026c] = 0x40\n  8077: a1 = 0x20280\n  8082: jump @258\n      : @257 (gas: 2)\n  8084: a1 = 0x20280\n  8089: fallthrough\n      : @258 (gas: 7)\n  8090: i32 a1 = a1 + 0\n  8092: a0 = 0x1\n  8095: a2 = 0x24\n  8098: ecalli 7 // 'seal_return'\n  8100: u64 [s1 + 0x138] = a0\n  8104: ra = 0x10e\n  8108: jump @33\n      : @259 (gas: 2)\n  8111: u64 [s1 + 0x138] = a0\n  8115: ra = 270, jump @33\n      : @260 [@dyn 135] (gas: 5)\n  8121: i32 a0 = a0 + 0\n  8123: a1 = 0\n  8125: a2 = 0\n  8127: ecalli 0 // 'call_data_copy'\n  8128: jump @15\n      : @261 (gas: 3)\n  8131: a0 = u64 [s1 + 0x138]\n  8135: a1 = 0\n  8137: ra = 272, jump @33\n      : @262 [@dyn 136] (gas: 5)\n  8143: i32 a1 = a0 + 0\n  8145: a0 = 0\n  8147: a2 = 0\n  8149: ecalli 7 // 'seal_return'\n  8151: jump @219\n      : @263 [@dyn 137] (gas: 4)\n  8154: a0 = 0x20268\n  8159: u64 [s1 + 0xb8] = a0\n  8163: a0 = i32 [0x20268]\n  8168: jump @265 if a0 >=u 4\n      : @264 (gas: 1)\n  8172: jump @823\n      : @265 (gas: 6)\n  8175: a0 = s1 + 0x1000\n  8179: i32 a0 = a0 + 0x520\n  8183: a1 = 0\n  8185: ra = 0x114\n  8189: ecalli 1 // 'call_data_load'\n  8191: fallthrough\n      : @266 [@dyn 138] (gas: 3)\n  8192: a2 = s1 + 0x1038\n  8196: a0 = i32 [a2 + 0x504]\n  8200: jump @268 if a0 != 2220280665\n      : @267 (gas: 1)\n  8207: jump @557\n      : @268 (gas: 1)\n  8210: jump @304 if a0 == 2446411860\n      : @269 (gas: 1)\n  8218: jump @271 if a0 != 2514000705\n      : @270 (gas: 1)\n  8225: jump @474\n      : @271 (gas: 1)\n  8228: jump @332 if a0 == 2719481311\n      : @272 (gas: 1)\n  8236: jump @274 if a0 != 2835717307\n      : @273 (gas: 1)\n  8243: jump @591\n      : @274 (gas: 1)\n  8246: jump @384 if a0 == 3577287571\n      : @275 (gas: 1)\n  8254: jump @344 if a0 == 3714247998\n      : @276 (gas: 1)\n  8262: jump @278 if a0 != 3862606313\n      : @277 (gas: 1)\n  8269: jump @618\n      : @278 (gas: 1)\n  8272: jump @395 if a0 == 117300739\n      : @279 (gas: 1)\n  8280: jump @281 if a0 != 157198259\n      : @280 (gas: 1)\n  8287: jump @625\n      : @281 (gas: 1)\n  8290: jump @283 if a0 != 404098525\n      : @282 (gas: 1)\n  8297: jump @528\n      : @283 (gas: 1)\n  8300: jump @285 if a0 != 599290589\n      : @284 (gas: 1)\n  8307: jump @605\n      : @285 (gas: 1)\n  8310: jump @287 if a0 != 613063843\n      : @286 (gas: 1)\n  8317: jump @577\n      : @287 (gas: 1)\n  8320: jump @372 if a0 == 826074471\n      : @288 (gas: 1)\n  8328: jump @290 if a0 != 1061922874\n      : @289 (gas: 1)\n  8335: jump @510\n      : @290 (gas: 1)\n  8338: jump @427 if a0 == 1086394137\n      : @291 (gas: 1)\n  8346: jump @293 if a0 == 1553423035\n      : @292 (gas: 1)\n  8353: jump @538\n      : @293 (gas: 9)\n  8356: a0 = s1 + 0x1838\n  8360: u64 [a0 + 160] = 0\n  8364: u64 [a0 + 152] = 0\n  8368: u64 [a0 + 144] = 0\n  8372: u64 [a0 + 136] = 0\n  8376: a0 = s1 + 0x2000\n  8380: i32 a0 = a0 + 0xfffffffffffff8c0\n  8384: ecalli 10 // 'value_transferred'\n  8386: fallthrough\n      : @294 (gas: 9)\n  8387: a3 = s1 + 0x1838\n  8391: a0 = u64 [a3 + 0x98]\n  8395: a1 = u64 [a3 + 0xa0]\n  8399: a2 = u64 [a3 + 0x90]\n  8403: a3 = u64 [a3 + 0x88]\n  8407: a1 = a1 | a2\n  8410: a0 = a0 | a3\n  8413: a0 = a0 | a1\n  8416: jump @296 if a0 == 0\n      : @295 (gas: 1)\n  8419: jump @681\n      : @296 (gas: 3)\n  8422: a0 = u64 [s1 + 0xb8]\n  8426: a0 = i32 [a0]\n  8428: jump @298 if a0 >u 3\n      : @297 (gas: 1)\n  8432: jump @682\n      : @298 (gas: 9)\n  8435: a1 = s1 + 0x1838\n  8439: u64 [a1 + 192] = 0\n  8443: u64 [a1 + 184] = 0\n  8447: u64 [a1 + 176] = 0\n  8451: u64 [a1 + 168] = 0x5\n  8456: a0 = s1 + 0x7ff\n  8460: a0 = a0 + 0x481\n  8464: a1 = s1 + 0x18e0\n  8468: ra = 278, jump @21\n      : @299 [@dyn 139] (gas: 8)\n  8474: a0 = s1 + 0x7ff\n  8478: a0 = a0 + 0x39\n  8481: a0 = u64 [a0 + 0x448]\n  8485: u64 [s1 + 0xb8] = a0\n  8489: a0 = s1 + 0x7ff\n  8493: a0 = a0 + 0x461\n  8497: a1 = 0x40\n  8500: ra = 280, jump @17\n      : @300 [@dyn 140] (gas: 8)\n  8506: a3 = s1 + 0x7ff\n  8510: a3 = a3 + 0x39\n  8513: a5 = a3 + 0x400\n  8517: a4 = u64 [a5 + 0x40]\n  8520: a1 = u64 [a5 + 0x38]\n  8523: a2 = u64 [a5 + 0x30]\n  8526: a0 = u64 [a5 + 0x28]\n  8529: t0 = 282, jump @1341\n      : @301 [@dyn 141] (gas: 1)\n  8535: jump @303 if a1 == 0\n      : @302 (gas: 1)\n  8538: jump @654\n      : @303 (gas: 11)\n  8541: a1 = u8 [s1 + 0xb8]\n  8545: a1 = a1 >u 0\n  8547: u64 [a3 + 1056] = 0\n  8551: u64 [a3 + 1048] = 0\n  8555: u64 [a3 + 0x408] = a1\n  8559: a1 = s1 + 0x7ff\n  8563: a1 = a1 + 0x441\n  8567: u64 [a3 + 1040] = 0\n  8571: u64 [s1 + 0xb8] = a0\n  8575: ra = 0x2d6\n  8579: jump @19\n      : @304 (gas: 11)\n  8582: a0 = s1 + 0x1838\n  8586: u64 [a0 + 480] = 0\n  8590: u64 [a0 + 472] = 0\n  8594: u64 [a0 + 464] = 0\n  8598: u64 [a0 + 456] = 0\n  8602: a0 = s1 + 0x2000\n  8606: i32 a0 = a0 + 0xfffffffffffffa00\n  8610: ra = 0x11c\n  8614: ecalli 10 // 'value_transferred'\n  8616: t0 = 0x11e\n  8620: jump @1376\n      : @305 [@dyn 142] (gas: 1)\n  8623: t0 = 286, jump @1376\n      : @306 [@dyn 143] (gas: 1)\n  8629: t0 = 288, jump @1392\n      : @307 [@dyn 144] (gas: 1)\n  8635: jump @309 if a0 == 0\n      : @308 (gas: 1)\n  8638: jump @683\n      : @309 (gas: 4)\n  8641: a0 = u64 [s1 + 0xb8]\n  8645: a0 = i32 [a0]\n  8647: a1 = 0x43\n  8650: jump @311 if a1 <u a0\n      : @310 (gas: 1)\n  8653: jump @684\n      : @311 (gas: 5)\n  8656: a0 = s1 + 0x7ff\n  8660: a0 = a0 + 0x781\n  8664: ra = 0x122\n  8668: t0 = 0x3fc\n  8672: jump @1397\n      : @312 [@dyn 145] (gas: 16)\n  8675: a1 = s1 + 0x7ff\n  8679: a1 = a1 + 0x39\n  8682: a2 = a1 + 0x700\n  8686: a0 = u64 [a2 + 0x58]\n  8689: u64 [s1 + 0xa8] = a0\n  8693: a0 = u64 [a2 + 0x50]\n  8696: u64 [s1 + 0xb0] = a0\n  8700: a0 = u64 [a2 + 0x48]\n  8703: u64 [s1 + 0xb8] = a0\n  8707: a0 = s1 + 0x2000\n  8711: i32 a0 = a0 + 0xfffffffffffffa20\n  8715: a1 = 0x4\n  8718: ra = 0x124\n  8722: ecalli 1 // 'call_data_load'\n  8724: t0 = 0x126\n  8728: jump @1376\n      : @313 [@dyn 146] (gas: 1)\n  8731: t0 = 294, jump @1376\n      : @314 [@dyn 147] (gas: 15)\n  8737: a0 = u64 [a4 + 0xe8]\n  8741: a1 = u64 [a4 + 0xf0]\n  8745: a2 = u64 [a4 + 0xf8]\n  8749: a3 = u64 [a3 + 0x200]\n  8753: a4 = s1 + 0x7ff\n  8757: a4 = a4 + 0x39\n  8760: a5 = a4 + 0x700\n  8764: u64 [a5 + 0x40] = a3\n  8767: u64 [a5 + 0x38] = a2\n  8770: u64 [a5 + 0x30] = a1\n  8773: a1 = s1 + 0x7ff\n  8777: a1 = a1 + 0x761\n  8781: u64 [a5 + 0x28] = a0\n  8784: a0 = 0\n  8786: ra = 296, jump @19\n      : @315 [@dyn 148] (gas: 11)\n  8792: a1 = s1 + 0x7ff\n  8796: a1 = a1 + 0x39\n  8799: u64 [a1 + 1824] = 0\n  8803: u64 [a1 + 1816] = 0\n  8807: u64 [a1 + 1800] = 0x6\n  8812: a2 = a1\n  8814: a0 = 0x20\n  8817: a1 = s1 + 0x7ff\n  8821: a1 = a1 + 0x741\n  8825: u64 [a2 + 1808] = 0\n  8829: ra = 298, jump @19\n      : @316 [@dyn 149] (gas: 3)\n  8835: a1 = 0x2026c\n  8840: a0 = i32 [0x2026c]\n  8845: jump @318 if a0 >u 63\n      : @317 (gas: 2)\n  8849: u32 [0x2026c] = 0x40\n  8855: fallthrough\n      : @318 (gas: 15)\n  8856: a0 = sp + 0xffffffffffffffe0\n  8859: a2 = a0 & 0xffffffffffffffe0\n  8862: u64 [s1 + 0x90] = a2\n  8866: sp = a2\n  8868: a0 = 0x20280\n  8873: i32 a0 = a0 + 0\n  8875: i32 a2 = a2 + 0\n  8877: u64 [s1 + 0xa0] = a1\n  8881: a1 = 0x40\n  8884: u64 [s1 + 0x98] = a0\n  8888: ra = 0x12c\n  8892: ecalli 6 // 'hash_keccak_256'\n  8894: a3 = u64 [s1 + 0x90]\n  8898: t0 = 0x12e\n  8902: jump @1383\n      : @319 [@dyn 150] (gas: 2)\n  8905: a3 = u64 [s1 + 0x90]\n  8909: t0 = 302, jump @1383\n      : @320 [@dyn 151] (gas: 27)\n  8915: u64 [s1 + 0x88] = a0\n  8919: a0 = reverse a1\n  8921: u64 [s1 + 0x80] = a0\n  8925: a0 = reverse a2\n  8927: u64 [s1 + 0x78] = a0\n  8930: a0 = reverse a3\n  8932: u64 [s1 + 0x70] = a0\n  8935: a0 = sp + 0xffffffffffffffe0\n  8938: a0 = a0 & 0xffffffffffffffe0\n  8941: u64 [s1 + 0x90] = a0\n  8945: sp = a0\n  8947: a0 = u64 [s1 + 0xa8]\n  8951: a0 = a0 << 0x20\n  8954: a0 = a0 >> 0x20\n  8957: a2 = s1 + 0x7ff\n  8961: a2 = a2 + 0x39\n  8964: u64 [a2 + 1792] = 0\n  8968: a3 = a2 + 0x600\n  8972: u64 [a3 + 0xf8] = a0\n  8976: a0 = u64 [s1 + 0xb0]\n  8980: u64 [a3 + 0xf0] = a0\n  8984: a1 = s1 + 0x7ff\n  8988: a1 = a1 + 0x721\n  8992: a0 = u64 [s1 + 0xb8]\n  8996: u64 [a3 + 0xe8] = a0\n  9000: a0 = 0\n  9002: ra = 304, jump @19\n      : @321 [@dyn 152] (gas: 16)\n  9008: a0 = u64 [s1 + 0x70]\n  9011: a1 = s1 + 0x7ff\n  9015: a1 = a1 + 0x39\n  9018: a2 = a1 + 0x600\n  9022: u64 [a2 + 0xe0] = a0\n  9026: a0 = u64 [s1 + 0x78]\n  9029: u64 [a2 + 0xd8] = a0\n  9033: a0 = u64 [s1 + 0x80]\n  9037: u64 [a2 + 0xd0] = a0\n  9041: a3 = a1\n  9043: a0 = 0x20\n  9046: a1 = s1 + 0x7ff\n  9050: a1 = a1 + 0x701\n  9054: a2 = u64 [s1 + 0x88]\n  9058: u64 [a3 + 0x6c8] = a2\n  9062: ra = 306, jump @19\n      : @322 [@dyn 153] (gas: 3)\n  9068: a1 = u64 [s1 + 0xa0]\n  9072: a0 = i32 [a1]\n  9074: jump @324 if a0 >u 63\n      : @323 (gas: 2)\n  9078: u32 [a1 + 0] = 0x40\n  9081: fallthrough\n      : @324 (gas: 12)\n  9082: a0 = sp + 0xffffffffffffffe0\n  9085: a0 = a0 & 0xffffffffffffffe0\n  9088: u64 [s1 + 0xb8] = a0\n  9092: sp = a0\n  9094: i32 a2 = a0 + 0\n  9096: a1 = 0x40\n  9099: a0 = u64 [s1 + 0x98]\n  9103: ra = 0x134\n  9107: ecalli 6 // 'hash_keccak_256'\n  9109: a3 = u64 [s1 + 0xb8]\n  9113: t0 = 0x136\n  9117: jump @1330\n      : @325 [@dyn 154] (gas: 2)\n  9120: a3 = u64 [s1 + 0xb8]\n  9124: t0 = 310, jump @1330\n      : @326 [@dyn 155] (gas: 8)\n  9130: a1 = u64 [s1 + 0x90]\n  9134: u64 [a1 + 0x18] = a3\n  9137: u64 [a1 + 0x10] = a2\n  9140: u64 [a1 + 0x8] = a4\n  9143: u64 [a1] = a0\n  9145: a0 = s1 + 0x7ff\n  9149: a0 = a0 + 0x6e1\n  9153: ra = 312, jump @21\n      : @327 [@dyn 156] (gas: 8)\n  9159: a0 = s1 + 0x7ff\n  9163: a0 = a0 + 0x39\n  9166: a0 = u64 [a0 + 0x6a8]\n  9170: u64 [s1 + 0xb8] = a0\n  9174: a0 = s1 + 0x7ff\n  9178: a0 = a0 + 0x6c1\n  9182: a1 = 0x40\n  9185: ra = 314, jump @17\n      : @328 [@dyn 157] (gas: 8)\n  9191: a3 = s1 + 0x7ff\n  9195: a3 = a3 + 0x39\n  9198: a5 = a3 + 0x600\n  9202: a4 = u64 [a5 + 0xa0]\n  9206: a1 = u64 [a5 + 0x98]\n  9210: a2 = u64 [a5 + 0x90]\n  9214: a0 = u64 [a5 + 0x88]\n  9218: t0 = 316, jump @1341\n      : @329 [@dyn 158] (gas: 1)\n  9224: jump @331 if a1 == 0\n      : @330 (gas: 1)\n  9227: jump @654\n      : @331 (gas: 11)\n  9230: a1 = u8 [s1 + 0xb8]\n  9234: a1 = a1 >u 0\n  9236: u64 [a3 + 1664] = 0\n  9240: u64 [a3 + 1656] = 0\n  9244: u64 [a3 + 0x668] = a1\n  9248: a1 = s1 + 0x7ff\n  9252: a1 = a1 + 0x6a1\n  9256: u64 [a3 + 1648] = 0\n  9260: u64 [s1 + 0xb8] = a0\n  9264: ra = 0x2d6\n  9268: jump @19\n      : @332 (gas: 11)\n  9271: a0 = s1 + 0x1838\n  9275: u64 [a0 + 608] = 0\n  9279: u64 [a0 + 600] = 0\n  9283: u64 [a0 + 592] = 0\n  9287: u64 [a0 + 584] = 0\n  9291: a0 = s1 + 0x2000\n  9295: i32 a0 = a0 + 0xfffffffffffffa80\n  9299: ra = 0x13e\n  9303: ecalli 10 // 'value_transferred'\n  9305: t0 = 0x140\n  9309: jump @1361\n      : @333 [@dyn 159] (gas: 1)\n  9312: t0 = 320, jump @1361\n      : @334 [@dyn 160] (gas: 1)\n  9318: t0 = 322, jump @1374\n      : @335 [@dyn 161] (gas: 1)\n  9324: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  9327: jump @685\n      : @337 (gas: 3)\n  9330: a0 = u64 [s1 + 0xb8]\n  9334: a0 = i32 [a0]\n  9336: jump @339 if a0 >u 3\n      : @338 (gas: 1)\n  9340: jump @686\n      : @339 (gas: 3)\n  9343: a0 = s1 + 0x11a0\n  9347: a1 = 0x40\n  9350: ra = 324, jump @17\n      : @340 [@dyn 162] (gas: 7)\n  9356: a3 = s1 + 0x1038\n  9360: a5 = a3 + 0x100\n  9364: a4 = u64 [a5 + 0x80]\n  9368: a1 = u64 [a5 + 0x78]\n  9371: a2 = u64 [a5 + 0x70]\n  9374: a0 = u64 [a5 + 0x68]\n  9377: t0 = 326, jump @1341\n      : @341 [@dyn 163] (gas: 1)\n  9383: jump @343 if a1 == 0\n      : @342 (gas: 1)\n  9386: jump @654\n      : @343 (gas: 8)\n  9389: u64 [a3 + 352] = 0\n  9393: u64 [a3 + 344] = 0\n  9397: u64 [a3 + 336] = 0\n  9401: a1 = s1 + 0x1180\n  9405: u64 [a3 + 328] = 0\n  9409: u64 [s1 + 0xb8] = a0\n  9413: ra = 0x2d6\n  9417: jump @19\n      : @344 (gas: 10)\n  9420: a0 = s1 + 0x1838\n  9424: u64 [a0 + 800] = 0\n  9428: u64 [a0 + 792] = 0\n  9432: u64 [a0 + 784] = 0\n  9436: u64 [a0 + 776] = 0\n  9440: a0 = s1 + 0x2000\n  9444: i32 a0 = a0 + 0xfffffffffffffb40\n  9448: ra = 0x148\n  9452: ecalli 10 // 'value_transferred'\n  9454: fallthrough\n      : @345 [@dyn 164] (gas: 3)\n  9455: a3 = s1 + 0x1838\n  9459: a4 = a3 + 0x300\n  9463: t0 = 330, jump @1362\n      : @346 [@dyn 165] (gas: 1)\n  9469: jump @348 if a0 == 0\n      : @347 (gas: 1)\n  9472: jump @687\n      : @348 (gas: 4)\n  9475: a0 = u64 [s1 + 0xb8]\n  9479: a0 = i32 [a0]\n  9481: a1 = 0x43\n  9484: jump @350 if a1 <u a0\n      : @349 (gas: 1)\n  9487: jump @688\n      : @350 (gas: 6)\n  9490: a0 = 0xffffffff\n  9500: u64 [s1 + 0xb8] = a0\n  9504: a0 = s1 + 0x14a0\n  9508: ra = 0x14c\n  9512: t0 = 0x3f2\n  9516: jump @1397\n      : @351 [@dyn 166] (gas: 11)\n  9519: a1 = s1 + 0x1038\n  9523: a0 = u64 [a1 + 0x468]\n  9527: u64 [s1 + 0xb0] = a0\n  9531: a0 = u64 [a1 + 0x470]\n  9535: u64 [s1 + 0x90] = a0\n  9539: a0 = u32 [a1 + 0x478]\n  9543: u64 [s1 + 0x88] = a0\n  9547: a0 = s1 + 0x1480\n  9551: ra = 0x14e\n  9555: t0 = 0x3fc\n  9559: jump @1397\n      : @352 [@dyn 167] (gas: 3)\n  9562: t0 = 0x150\n  9566: a1 = s1 + 0x1038\n  9570: fallthrough\n      : @353 [@dyn 168] (gas: 18)\n  9571: a2 = a1 + 0x400\n  9575: a0 = u64 [a2 + 0x58]\n  9578: u64 [s1 + 0xa8] = a0\n  9582: a0 = u64 [a2 + 0x50]\n  9585: u64 [s1 + 0xa0] = a0\n  9589: a0 = u64 [a2 + 0x48]\n  9592: u64 [s1 + 0x98] = a0\n  9596: u64 [a1 + 1088] = 0\n  9600: a0 = u64 [s1 + 0x88]\n  9604: u64 [a2 + 0x38] = a0\n  9607: a0 = u64 [s1 + 0x90]\n  9611: u64 [a2 + 0x30] = a0\n  9614: a2 = a1\n  9616: a1 = s1 + 0x1460\n  9620: a0 = u64 [s1 + 0xb0]\n  9624: u64 [a2 + 0x428] = a0\n  9628: a0 = 0\n  9630: ra = 338, jump @19\n      : @354 [@dyn 169] (gas: 3)\n  9636: t0 = 0x154\n  9640: a1 = s1 + 0x1038\n  9644: fallthrough\n      : @355 [@dyn 170] (gas: 8)\n  9645: u64 [a1 + 1056] = 0\n  9649: u64 [a1 + 1048] = 0\n  9653: u64 [a1 + 1032] = 0x1\n  9658: a2 = a1\n  9660: a0 = 0x20\n  9663: a1 = s1 + 0x1440\n  9667: u64 [a2 + 1040] = 0\n  9671: ra = 342, jump @19\n      : @356 [@dyn 171] (gas: 3)\n  9677: a1 = 0x2026c\n  9682: a0 = i32 [0x2026c]\n  9687: jump @358 if a0 >u 63\n      : @357 (gas: 2)\n  9691: u32 [0x2026c] = 0x40\n  9697: fallthrough\n      : @358 (gas: 15)\n  9698: a0 = sp + 0xffffffffffffffe0\n  9701: a2 = a0 & 0xffffffffffffffe0\n  9704: u64 [s1 + 0x88] = a2\n  9708: sp = a2\n  9710: a0 = 0x20280\n  9715: i32 a0 = a0 + 0\n  9717: i32 a2 = a2 + 0\n  9719: u64 [s1 + 0xb0] = a1\n  9723: a1 = 0x40\n  9726: u64 [s1 + 0x90] = a0\n  9730: ra = 0x158\n  9734: ecalli 6 // 'hash_keccak_256'\n  9736: a3 = u64 [s1 + 0x88]\n  9740: t0 = 0x15a\n  9744: jump @1383\n      : @359 [@dyn 172] (gas: 2)\n  9747: a3 = u64 [s1 + 0x88]\n  9751: t0 = 346, jump @1383\n      : @360 [@dyn 173] (gas: 27)\n  9757: u64 [s1 + 0x80] = a0\n  9761: a0 = reverse a1\n  9763: u64 [s1 + 0x78] = a0\n  9766: a0 = reverse a2\n  9768: u64 [s1 + 0x70] = a0\n  9771: a0 = reverse a3\n  9773: u64 [s1 + 0x68] = a0\n  9776: a0 = sp + 0xffffffffffffffe0\n  9779: a0 = a0 & 0xffffffffffffffe0\n  9782: u64 [s1 + 0x88] = a0\n  9786: sp = a0\n  9788: a0 = u64 [s1 + 0x98]\n  9792: a0 = a0 & 0xffffffffffffffff\n  9795: a2 = u64 [s1 + 0xa0]\n  9799: a1 = a2 & 0xffffffffffffffff\n  9802: a2 = u64 [s1 + 0xb8]\n  9806: a3 = u64 [s1 + 0xa8]\n  9810: a2 = a2 & a3\n  9813: a3 = s1 + 0x1038\n  9817: u64 [a3 + 1024] = 0\n  9821: a4 = a3 + 0x300\n  9825: u64 [a4 + 0xf8] = a2\n  9829: u64 [a4 + 0xf0] = a1\n  9833: a1 = s1 + 0x1420\n  9837: u64 [a4 + 0xe8] = a0\n  9841: a0 = 0\n  9843: ra = 348, jump @19\n      : @361 [@dyn 174] (gas: 14)\n  9849: a0 = u64 [s1 + 0x68]\n  9852: a1 = s1 + 0x1038\n  9856: a2 = a1 + 0x300\n  9860: u64 [a2 + 0xe0] = a0\n  9864: a0 = u64 [s1 + 0x70]\n  9867: u64 [a2 + 0xd8] = a0\n  9871: a0 = u64 [s1 + 0x78]\n  9874: u64 [a2 + 0xd0] = a0\n  9878: a3 = a1\n  9880: a0 = 0x20\n  9883: a1 = s1 + 0x1400\n  9887: a2 = u64 [s1 + 0x80]\n  9891: u64 [a3 + 0x3c8] = a2\n  9895: ra = 350, jump @19\n      : @362 [@dyn 175] (gas: 3)\n  9901: a1 = u64 [s1 + 0xb0]\n  9905: a0 = i32 [a1]\n  9907: jump @364 if a0 >u 63\n      : @363 (gas: 2)\n  9911: u32 [a1 + 0] = 0x40\n  9914: fallthrough\n      : @364 (gas: 12)\n  9915: a0 = sp + 0xffffffffffffffe0\n  9918: a0 = a0 & 0xffffffffffffffe0\n  9921: u64 [s1 + 0xb8] = a0\n  9925: sp = a0\n  9927: i32 a2 = a0 + 0\n  9929: a1 = 0x40\n  9932: a0 = u64 [s1 + 0x90]\n  9936: ra = 0x160\n  9940: ecalli 6 // 'hash_keccak_256'\n  9942: a3 = u64 [s1 + 0xb8]\n  9946: t0 = 0x162\n  9950: jump @1330\n      : @365 [@dyn 176] (gas: 2)\n  9953: a3 = u64 [s1 + 0xb8]\n  9957: t0 = 354, jump @1330\n      : @366 [@dyn 177] (gas: 7)\n  9963: a1 = u64 [s1 + 0x88]\n  9967: u64 [a1 + 0x18] = a3\n  9970: u64 [a1 + 0x10] = a2\n  9973: u64 [a1 + 0x8] = a4\n  9976: u64 [a1] = a0\n  9978: a0 = s1 + 0x13e0\n  9982: ra = 356, jump @21\n      : @367 [@dyn 178] (gas: 13)\n  9988: a1 = s1 + 0x1038\n  9992: a2 = a1 + 0x300\n  9996: a0 = u64 [a2 + 0xc0]\n 10000: u64 [s1 + 0xb8] = a0\n 10004: a0 = u64 [a2 + 0xb8]\n 10008: u64 [s1 + 0xb0] = a0\n 10012: a0 = u64 [a2 + 0xb0]\n 10016: u64 [s1 + 0xa8] = a0\n 10020: a0 = u64 [a2 + 0xa8]\n 10024: u64 [s1 + 0xa0] = a0\n 10028: a0 = s1 + 0x13c0\n 10032: a1 = 0x40\n 10035: ra = 358, jump @17\n      : @368 [@dyn 179] (gas: 3)\n 10041: a3 = s1 + 0x1038\n 10045: a5 = a3 + 0x300\n 10049: t0 = 360, jump @1386\n      : @369 [@dyn 180] (gas: 1)\n 10055: jump @371 if a0 == 0\n      : @370 (gas: 1)\n 10058: jump @654\n      : @371 (gas: 14)\n 10061: a0 = u64 [s1 + 0xa0]\n 10065: a2 = a3 + 0x300\n 10069: u64 [a2 + 0x68] = a0\n 10072: a0 = u64 [s1 + 0xa8]\n 10076: u64 [a2 + 0x70] = a0\n 10079: a0 = u64 [s1 + 0xb0]\n 10083: u64 [a2 + 0x78] = a0\n 10086: a1 = s1 + 0x13a0\n 10090: a0 = u64 [s1 + 0xb8]\n 10094: u64 [a2 + 0x80] = a0\n 10098: a0 = a4\n 10100: u64 [s1 + 0xb8] = a4\n 10104: ra = 0x2d6\n 10108: jump @19\n      : @372 (gas: 10)\n 10111: u64 [a2 + 1760] = 0\n 10115: u64 [a2 + 1752] = 0\n 10119: u64 [a2 + 1744] = 0\n 10123: u64 [a2 + 1736] = 0\n 10127: a0 = s1 + 0x1000\n 10131: i32 a0 = a0 + 0x700\n 10135: ra = 0x16a\n 10139: ecalli 10 // 'value_transferred'\n 10141: t0 = 0x16c\n 10145: jump @1354\n      : @373 [@dyn 181] (gas: 1)\n 10148: t0 = 364, jump @1354\n      : @374 [@dyn 182] (gas: 1)\n 10154: t0 = 366, jump @1392\n      : @375 [@dyn 183] (gas: 1)\n 10160: jump @377 if a0 == 0\n      : @376 (gas: 1)\n 10163: jump @689\n      : @377 (gas: 3)\n 10166: a0 = u64 [s1 + 0xb8]\n 10170: a0 = i32 [a0]\n 10172: jump @379 if a0 >u 3\n      : @378 (gas: 1)\n 10176: jump @690\n      : @379 (gas: 3)\n 10179: a0 = s1 + 0x7e0\n 10183: a1 = 0x40\n 10186: ra = 368, jump @17\n      : @380 [@dyn 184] (gas: 6)\n 10192: a4 = s1 + 0x700\n 10196: a3 = u64 [a4 + 0xf8]\n 10200: a1 = u64 [a4 + 0xf0]\n 10204: a2 = u64 [a4 + 0xe8]\n 10208: a0 = u64 [a4 + 0xe0]\n 10212: t0 = 370, jump @1332\n      : @381 [@dyn 185] (gas: 1)\n 10218: jump @383 if a1 == 0\n      : @382 (gas: 1)\n 10221: jump @654\n      : @383 (gas: 8)\n 10224: u64 [s1 + 2008] = 0\n 10228: u64 [s1 + 2000] = 0\n 10232: u64 [s1 + 1992] = 0\n 10236: a1 = s1 + 0x7c0\n 10240: u64 [s1 + 1984] = 0x12\n 10245: u64 [s1 + 0xb8] = a0\n 10249: ra = 0x2d6\n 10253: jump @19\n      : @384 (gas: 11)\n 10256: a0 = s1 + 0x1838\n 10260: u64 [a0 + 704] = 0\n 10264: u64 [a0 + 696] = 0\n 10268: u64 [a0 + 688] = 0\n 10272: u64 [a0 + 680] = 0\n 10276: a0 = s1 + 0x2000\n 10280: i32 a0 = a0 + 0xfffffffffffffae0\n 10284: ra = 0x174\n 10288: ecalli 10 // 'value_transferred'\n 10290: t0 = 0x176\n 10294: jump @1361\n      : @385 [@dyn 186] (gas: 1)\n 10297: t0 = 374, jump @1361\n      : @386 [@dyn 187] (gas: 8)\n 10303: a0 = u64 [a4 + 0xb8]\n 10307: a1 = u64 [a4 + 0xc0]\n 10311: a2 = u64 [a4 + 0xb0]\n 10315: a3 = u64 [a4 + 0xa8]\n 10319: a1 = a1 | a2\n 10322: a0 = a0 | a3\n 10325: a0 = a0 | a1\n 10328: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 10331: jump @691\n      : @388 (gas: 3)\n 10334: a0 = u64 [s1 + 0xb8]\n 10338: a0 = i32 [a0]\n 10340: jump @390 if a0 >u 3\n      : @389 (gas: 1)\n 10344: jump @692\n      : @390 (gas: 3)\n 10347: a0 = s1 + 0x12a0\n 10351: a1 = 0x40\n 10354: ra = 376, jump @17\n      : @391 [@dyn 188] (gas: 7)\n 10360: a3 = s1 + 0x1038\n 10364: a5 = a3 + 0x200\n 10368: a4 = u64 [a5 + 0x80]\n 10372: a1 = u64 [a5 + 0x78]\n 10375: a2 = u64 [a5 + 0x70]\n 10378: a0 = u64 [a5 + 0x68]\n 10381: t0 = 378, jump @1341\n      : @392 [@dyn 189] (gas: 1)\n 10387: jump @394 if a1 == 0\n      : @393 (gas: 1)\n 10390: jump @654\n      : @394 (gas: 13)\n 10393: a1 = u64 [0x20048]\n 10398: a5 = a3 + 0x200\n 10402: u64 [a5 + 0x60] = a1\n 10405: a4 = u64 [0x20050]\n 10410: a1 = u64 [0x20058]\n 10415: a2 = u64 [0x20060]\n 10420: u64 [a5 + 0x58] = a4\n 10423: u64 [a5 + 0x50] = a1\n 10426: a1 = s1 + 0x1280\n 10430: u64 [a5 + 0x48] = a2\n 10433: u64 [s1 + 0xb8] = a0\n 10437: ra = 0x2d6\n 10441: jump @19\n      : @395 (gas: 10)\n 10444: u64 [a2 + 1376] = 0\n 10448: u64 [a2 + 1368] = 0\n 10452: u64 [a2 + 1360] = 0\n 10456: u64 [a2 + 1352] = 0\n 10460: a0 = s1 + 0x1000\n 10464: i32 a0 = a0 + 0x580\n 10468: ra = 0x17c\n 10472: ecalli 10 // 'value_transferred'\n 10474: t0 = 0x17e\n 10478: jump @1398\n      : @396 [@dyn 190] (gas: 1)\n 10481: t0 = 382, jump @1398\n      : @397 [@dyn 191] (gas: 1)\n 10487: t0 = 384, jump @1374\n      : @398 [@dyn 192] (gas: 1)\n 10493: jump @400 if a0 == 0\n      : @399 (gas: 1)\n 10496: jump @693\n      : @400 (gas: 3)\n 10499: a0 = u64 [s1 + 0xb8]\n 10503: a0 = i32 [a0]\n 10505: jump @402 if a0 >u 3\n      : @401 (gas: 1)\n 10509: jump @694\n      : @402 (gas: 3)\n 10512: a0 = s1 + 0x2a0\n 10516: a1 = 0x40\n 10519: ra = 386, jump @17\n      : @403 [@dyn 193] (gas: 16)\n 10525: a0 = u64 [s1 + 0x2b8]\n 10529: u64 [s1 + 0x18] = a0\n 10532: a0 = u64 [s1 + 0x2b0]\n 10536: u64 [s1 + 0x28] = a0\n 10539: a0 = u64 [s1 + 0x2a8]\n 10543: u64 [s1 + 0x20] = a0\n 10546: a0 = u64 [s1 + 0x2a0]\n 10550: u64 [s1 + 0x30] = a0\n 10553: a0 = s1 + 0x1038\n 10557: u64 [a0 + 1408] = 0\n 10561: u64 [a0 + 1400] = 0\n 10565: u64 [a0 + 1392] = 0\n 10569: u64 [a0 + 1384] = 0x3\n 10574: a0 = s1 + 0x280\n 10578: a1 = s1 + 0x15a0\n 10582: ra = 388, jump @21\n      : @404 [@dyn 194] (gas: 34)\n 10588: a2 = u64 [s1 + 0x290]\n 10592: t2 = u64 [s1 + 0x288]\n 10596: t0 = u64 [s1 + 0x298]\n 10600: a5 = u64 [s1 + 0x280]\n 10604: a0 = a2 << 0x3f\n 10607: a1 = t2 >> 0x1\n 10610: a0 = a0 | a1\n 10613: a1 = t0 << 0x3f\n 10616: u64 [s1 + 0xb0] = a2\n 10620: a2 = a2 >> 0x1\n 10623: a1 = a1 | a2\n 10626: a2 = t2 << 0x3f\n 10629: a3 = a5 >> 0x1\n 10632: a4 = a3 | a2\n 10635: a2 = t0 >> 0x1\n 10638: u64 [s1 + 0xa8] = a5\n 10642: a5 = a5 & 0x1\n 10645: a3 = -a5\n 10647: a1 = a1 & a3\n 10650: t1 = a3 & a0\n 10653: a2 = a2 & a3\n 10656: ra = a4 & 0x7f\n 10659: a4 = ra if a5 == 0\n 10662: u64 [s1 + 0x70] = a4\n 10665: a0 = a4 <u 0x20\n 10668: u64 [s1 + 0x60] = t1\n 10671: a0 = 0 if t1 != 0\n 10673: u64 [s1 + 0x68] = a1\n 10676: u64 [s1 + 0x58] = a2\n 10679: a1 = a1 | a2\n 10682: a0 = 0 if a1 != 0\n 10684: u64 [s1 + 0xb8] = a5\n 10688: a1 = a5 <u 0x1\n 10691: jump @406 if a1 == a0\n      : @405 (gas: 1)\n 10694: jump @695\n      : @406 (gas: 12)\n 10697: a2 = u64 [s1 + 0x28]\n 10700: a4 = u64 [s1 + 0x30]\n 10703: a0 = a4 | a2\n 10706: a1 = u64 [s1 + 0x18]\n 10709: a3 = u64 [s1 + 0x20]\n 10712: a1 = a1 | a3\n 10715: a0 = a0 | a1\n 10718: a0 = a0 >> 0x20\n 10721: a1 = a1 | a2\n 10724: a1 = a1 << 0x20\n 10727: a1 = a1 | a0\n 10730: jump @408 if a1 == 0\n      : @407 (gas: 1)\n 10733: jump @654\n      : @408 (gas: 15)\n 10736: a0 = a4\n 10738: u64 [s1 + 0x90] = ra\n 10742: u64 [s1 + 0x98] = t2\n 10746: u64 [s1 + 0xa0] = t0\n 10750: a1 = u64 [s1 + 0x70]\n 10753: a3 = s1 + 0x200\n 10757: u64 [a3 + 0x60] = a1\n 10760: a1 = u64 [s1 + 0x60]\n 10763: u64 [a3 + 0x68] = a1\n 10766: a1 = u64 [s1 + 0x68]\n 10769: u64 [a3 + 0x70] = a1\n 10772: a1 = s1 + 0x260\n 10776: a2 = u64 [s1 + 0x58]\n 10779: u64 [a3 + 0x78] = a2\n 10782: ra = 390, jump @19\n      : @409 [@dyn 195] (gas: 2)\n 10788: a0 = u64 [s1 + 0xb8]\n 10792: jump @411 if a0 == 0\n      : @410 (gas: 1)\n 10795: jump @655\n      : @411 (gas: 1)\n 10798: t0 = 392, jump @1372\n      : @412 [@dyn 196] (gas: 1)\n 10804: jump @414 if a1 != 0\n      : @413 (gas: 1)\n 10807: jump @654\n      : @414 (gas: 13)\n 10810: a1 = u64 [s1 + 0xa8]\n 10814: a1 = a1 & 0xffffffffffffff00\n 10818: i32 a0 = a3 + 0x20\n 10821: a3 = u64 [s1 + 0x98]\n 10825: a2 = s1 + 0x100\n 10829: u64 [a2 + 0xe8] = a3\n 10833: u64 [a2 + 0xe0] = a1\n 10837: a1 = u64 [s1 + 0xb0]\n 10841: u64 [a2 + 0xf0] = a1\n 10845: a1 = s1 + 0x1e0\n 10849: a3 = u64 [s1 + 0xa0]\n 10853: u64 [a2 + 0xf8] = a3\n 10857: ra = 394, jump @19\n      : @415 [@dyn 197] (gas: 9)\n 10863: t2 = 0\n 10865: t1 = 0\n 10867: u64 [s1 + 176] = 0\n 10871: a0 = u64 [s1 + 0x90]\n 10875: a0 = a0 >u 0\n 10877: a0 = a0 << 0x5\n 10880: u64 [s1 + 0xb8] = a0\n 10884: t0 = 0x18c\n 10888: jump @1366\n      : @416 (gas: 1)\n 10891: t0 = 396, jump @1366\n      : @417 [@dyn 198] (gas: 28)\n 10897: t0 = u64 [s1 + 0x20]\n 10900: a3 = a2 + t0\n 10903: ra = a3 + a0\n 10906: a3 = ra ^ a2\n 10909: a4 = ra <u a2\n 10912: a4 = a0 if a3 == 0\n 10915: a0 = a2 <u t2\n 10918: a0 = a1 if a1 == 0\n 10921: a0 = a0 + t1\n 10924: a1 = a0 <u t1\n 10927: a2 = u64 [s1 + 0x28]\n 10930: a2 = a2 + a0\n 10933: a4 = a4 + a2\n 10936: a0 = a2 <u a0\n 10939: a2 = a4 <u a2\n 10942: t1 = u64 [s1 + 0x18]\n 10945: a3 = u64 [s1 + 0xb0]\n 10949: a3 = a3 + t1\n 10952: a1 = a1 + a3\n 10955: a0 = a0 + a1\n 10958: a5 = a0 + a2\n 10961: a0 = a5 >u 0\n 10963: a1 = a4 >u 0\n 10965: a1 = a0 if a5 != 0\n 10968: a0 = a4 | a5\n 10971: a2 = ra >u 0\n 10973: a2 = a1 if a0 != 0\n 10976: jump @419 if a2 == 0\n      : @418 (gas: 1)\n 10979: jump @764\n      : @419 (gas: 6)\n 10982: a0 = u64 [s1 + 0x30]\n 10985: a1 = u64 [s1 + 0xb8]\n 10989: a0 = a1 <u a0\n 10992: a1 = ra ^ t0\n 10995: a2 = ra <u t0\n 10998: t0 = 398, jump @1364\n      : @420 [@dyn 199] (gas: 1)\n 11004: jump @422 if a3 == 0\n      : @421 (gas: 1)\n 11007: jump @764\n      : @422 (gas: 11)\n 11010: a0 = u64 [s1 + 0xb8]\n 11014: u64 [s1 + 0x1c0] = a0\n 11018: u64 [s1 + 0x1c8] = ra\n 11022: u64 [s1 + 0x1d0] = a4\n 11026: a0 = 0x40\n 11029: a1 = s1 + 0x1c0\n 11033: u64 [s1 + 0x1d8] = a5\n 11037: u64 [s1 + 0xa8] = ra\n 11041: u64 [s1 + 0xa0] = a4\n 11045: u64 [s1 + 0xb0] = a5\n 11049: ra = 400, jump @19\n      : @423 [@dyn 200] (gas: 21)\n 11055: a0 = u64 [s1 + 0x18]\n 11058: a4 = s1 + 0x100\n 11062: u64 [a4 + 0x78] = a0\n 11065: a0 = u64 [s1 + 0x28]\n 11068: u64 [a4 + 0x70] = a0\n 11071: a0 = u64 [s1 + 0x20]\n 11074: u64 [a4 + 0x68] = a0\n 11077: a0 = u64 [s1 + 0x30]\n 11080: u64 [a4 + 0x60] = a0\n 11083: a0 = u64 [s1 + 0xb0]\n 11087: u64 [a4 + 0x98] = a0\n 11091: a0 = u64 [s1 + 0xa0]\n 11095: u64 [a4 + 0x90] = a0\n 11099: a0 = u64 [s1 + 0xa8]\n 11103: u64 [a4 + 0x88] = a0\n 11107: a0 = s1 + 0x1a0\n 11111: a1 = s1 + 0x180\n 11115: a2 = s1 + 0x160\n 11119: a3 = u64 [s1 + 0xb8]\n 11123: u64 [a4 + 0x80] = a3\n 11127: ra = 402, jump @995\n      : @424 [@dyn 201] (gas: 12)\n 11133: a2 = u64 [s1 + 0xa0]\n 11137: a4 = u64 [s1 + 0xa8]\n 11141: t0 = u64 [s1 + 0xb8]\n 11145: a0 = t0 | a2\n 11148: a1 = u64 [s1 + 0xb0]\n 11152: a1 = a1 | a4\n 11155: a0 = a0 | a1\n 11158: a0 = a0 >> 0x20\n 11161: a1 = a1 | a2\n 11164: a1 = a1 << 0x20\n 11167: a0 = a0 | a1\n 11170: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 11173: jump @654\n      : @426 (gas: 7)\n 11176: a5 = s1 + 0x100\n 11180: a0 = u64 [a5 + 0xa8]\n 11184: a1 = u64 [a5 + 0xb8]\n 11188: u64 [s1 + 0x98] = a1\n 11192: t1 = u64 [s1 + 0x1a0]\n 11196: a3 = u64 [a5 + 0xb0]\n 11200: jump @506\n      : @427 (gas: 8)\n 11203: u64 [a2 + 1984] = 0\n 11207: u64 [a2 + 1976] = 0\n 11211: u64 [a2 + 1968] = 0\n 11215: u64 [a2 + 1960] = 0\n 11219: a0 = s1 + 0x1000\n 11223: i32 a0 = a0 + 0x7e0\n 11227: ecalli 10 // 'value_transferred'\n 11229: fallthrough\n      : @428 (gas: 10)\n 11230: a3 = s1 + 0x1038\n 11234: a4 = a3 + 0x700\n 11238: a0 = u64 [a4 + 0xb8]\n 11242: a1 = u64 [a4 + 0xc0]\n 11246: a2 = u64 [a4 + 0xb0]\n 11250: a3 = u64 [a4 + 0xa8]\n 11254: a1 = a1 | a2\n 11257: a0 = a0 | a3\n 11260: a0 = a0 | a1\n 11263: jump @430 if a0 == 0\n      : @429 (gas: 1)\n 11266: jump @701\n      : @430 (gas: 4)\n 11269: a0 = u64 [s1 + 0xb8]\n 11273: a0 = i32 [a0]\n 11275: a1 = 0x43\n 11278: jump @432 if a1 <u a0\n      : @431 (gas: 1)\n 11281: jump @702\n      : @432 (gas: 5)\n 11284: a0 = s1 + 0x7ff\n 11288: a0 = a0 + 0x3e1\n 11292: ra = 0x194\n 11296: t0 = 0x3f2\n 11300: jump @1397\n      : @433 [@dyn 202] (gas: 42)\n 11303: a1 = s1 + 0x7ff\n 11307: a1 = a1 + 0x39\n 11310: a2 = a1 + 0x300\n 11314: a0 = u64 [a2 + 0xb8]\n 11318: u64 [s1 + 0x78] = a0\n 11321: a0 = u64 [a2 + 0xb0]\n 11325: u64 [s1 + 0xa8] = a0\n 11329: a0 = u64 [a2 + 0xa8]\n 11333: u64 [s1 + 0xb0] = a0\n 11337: a0 = s1 + 0x2000\n 11341: i32 a0 = a0 + 0xfffffffffffff800\n 11345: a1 = 0x24\n 11348: ecalli 1 // 'call_data_load'\n 11350: a0 = s1 + 0x1038\n 11354: a2 = a0 + 0x700\n 11358: a1 = u64 [a2 + 0xe0]\n 11362: u64 [s1 + 0xa0] = a1\n 11366: a1 = u64 [a2 + 0xd8]\n 11370: u64 [s1 + 0x90] = a1\n 11374: a1 = u64 [a2 + 0xd0]\n 11378: u64 [s1 + 0x88] = a1\n 11382: a0 = u64 [a2 + 0xc8]\n 11386: u64 [s1 + 0x80] = a0\n 11390: a0 = u64 [0x20048]\n 11395: u64 [s1 + 0x40] = a0\n 11398: a3 = s1 + 0x7ff\n 11402: a3 = a3 + 0x39\n 11405: a4 = a3 + 0x300\n 11409: u64 [a4 + 0xa0] = a0\n 11413: a1 = u64 [0x20050]\n 11418: a2 = u64 [0x20058]\n 11423: a0 = u64 [0x20060]\n 11428: u64 [s1 + 0x30] = a1\n 11431: u64 [a4 + 0x98] = a1\n 11435: u64 [s1 + 0x28] = a2\n 11438: u64 [a4 + 0x90] = a2\n 11442: a1 = s1 + 0x7ff\n 11446: a1 = a1 + 0x3c1\n 11450: u64 [s1 + 0x38] = a0\n 11453: u64 [a4 + 0x88] = a0\n 11457: a0 = 0\n 11459: ra = 406, jump @19\n      : @434 [@dyn 203] (gas: 11)\n 11465: a1 = s1 + 0x7ff\n 11469: a1 = a1 + 0x39\n 11472: u64 [a1 + 896] = 0\n 11476: u64 [a1 + 888] = 0\n 11480: u64 [a1 + 872] = 0x6\n 11485: a2 = a1\n 11487: a0 = 0x20\n 11490: a1 = s1 + 0x7ff\n 11494: a1 = a1 + 0x3a1\n 11498: u64 [a2 + 880] = 0\n 11502: ra = 408, jump @19\n      : @435 [@dyn 204] (gas: 3)\n 11508: a1 = 0x2026c\n 11513: a0 = i32 [0x2026c]\n 11518: jump @437 if a0 >u 63\n      : @436 (gas: 2)\n 11522: u32 [0x2026c] = 0x40\n 11528: fallthrough\n      : @437 (gas: 15)\n 11529: a0 = sp + 0xffffffffffffffe0\n 11532: a2 = a0 & 0xffffffffffffffe0\n 11535: u64 [s1 + 0x70] = a2\n 11538: sp = a2\n 11540: a0 = 0x20280\n 11545: i32 a0 = a0 + 0\n 11547: u64 [s1 + 0x98] = a1\n 11551: i32 a2 = a2 + 0\n 11553: a1 = 0x40\n 11556: u64 [s1 + 0xb8] = a0\n 11560: ra = 0x19a\n 11564: ecalli 6 // 'hash_keccak_256'\n 11566: a3 = u64 [s1 + 0x70]\n 11569: t0 = 0x19c\n 11573: jump @1349\n      : @438 [@dyn 205] (gas: 2)\n 11576: a3 = u64 [s1 + 0x70]\n 11579: t0 = 412, jump @1349\n      : @439 [@dyn 206] (gas: 9)\n 11585: a0 = 0x30280\n 11590: u64 [s1 + 0x70] = a0\n 11593: i32 a0 = a0 + 0\n 11595: u64 [s1 + 0x20] = a0\n 11598: ra = 0x19e\n 11602: ecalli 3 // 'caller'\n 11604: a2 = u64 [s1 + 0x70]\n 11607: t0 = 0x1a0\n 11611: jump @1321\n      : @440 [@dyn 207] (gas: 2)\n 11614: a2 = u64 [s1 + 0x70]\n 11617: t0 = 416, jump @1321\n      : @441 [@dyn 208] (gas: 9)\n 11623: u64 [a2 + 864] = 0\n 11627: a4 = a2 + 0x300\n 11631: u64 [a4 + 0x58] = a1\n 11634: u64 [a4 + 0x50] = a0\n 11637: a1 = s1 + 0x7ff\n 11641: a1 = a1 + 0x381\n 11645: u64 [a4 + 0x48] = a3\n 11648: a0 = 0\n 11650: ra = 418, jump @19\n      : @442 [@dyn 209] (gas: 16)\n 11656: a0 = u64 [s1 + 0x48]\n 11659: a1 = s1 + 0x7ff\n 11663: a1 = a1 + 0x39\n 11666: a2 = a1 + 0x300\n 11670: u64 [a2 + 0x40] = a0\n 11673: a0 = u64 [s1 + 0x50]\n 11676: u64 [a2 + 0x38] = a0\n 11679: a0 = u64 [s1 + 0x58]\n 11682: u64 [a2 + 0x30] = a0\n 11685: a3 = a1\n 11687: a0 = 0x20\n 11690: a1 = s1 + 0x7ff\n 11694: a1 = a1 + 0x361\n 11698: a2 = u64 [s1 + 0x60]\n 11701: u64 [a3 + 0x328] = a2\n 11705: ra = 420, jump @19\n      : @443 [@dyn 210] (gas: 3)\n 11711: a1 = u64 [s1 + 0x98]\n 11715: a0 = i32 [a1]\n 11717: jump @445 if a0 >u 63\n      : @444 (gas: 2)\n 11721: u32 [a1 + 0] = 0x40\n 11724: fallthrough\n      : @445 (gas: 4)\n 11725: a0 = sp + 0xffffffffffffffe0\n 11728: a0 = a0 & 0xffffffffffffffe0\n 11731: u64 [s1 + 0x60] = a0\n 11734: t0 = 422, jump @1385\n      : @446 [@dyn 211] (gas: 5)\n 11740: ra = 0x1a8\n 11744: ecalli 6 // 'hash_keccak_256'\n 11746: a3 = u64 [s1 + 0x60]\n 11749: t0 = 0x1aa\n 11753: jump @1359\n      : @447 [@dyn 212] (gas: 2)\n 11756: a3 = u64 [s1 + 0x60]\n 11759: t0 = 426, jump @1359\n      : @448 [@dyn 213] (gas: 3)\n 11765: a0 = s1 + 0x7ff\n 11769: a0 = a0 + 0x341\n 11773: ra = 428, jump @21\n      : @449 [@dyn 214] (gas: 4)\n 11779: a2 = s1 + 0x7ff\n 11783: a2 = a2 + 0x39\n 11786: a0 = u8 [a2 + 0x308]\n 11790: jump @451 if a0 != 0\n      : @450 (gas: 1)\n 11793: jump @703\n      : @451 (gas: 9)\n 11796: a0 = u64 [s1 + 0x78]\n 11799: a0 = a0 << 0x20\n 11802: a2 = a0 >> 0x20\n 11805: a0 = u64 [s1 + 0xb0]\n 11809: a1 = u64 [s1 + 0xa8]\n 11813: a0 = a0 | a1\n 11816: u64 [s1 + 0x70] = a2\n 11819: a0 = a0 | a2\n 11822: jump @453 if a0 != 0\n      : @452 (gas: 1)\n 11825: jump @711\n      : @453 (gas: 1)\n 11828: ra = 430, jump @1312\n      : @454 [@dyn 215] (gas: 9)\n 11834: a0 = s1 + 0x1838\n 11838: u64 [a0 + 0] = 0\n 11840: u64 [a0 + 4294967288] = 0\n 11843: u64 [a0 + 4294967280] = 0\n 11846: u64 [a0 + 4294967272] = 0x2\n 11850: a0 = s1 + 0x7ff\n 11854: a0 = a0 + 0x321\n 11858: a1 = s1 + 0x1820\n 11862: ra = 432, jump @21\n      : @455 [@dyn 216] (gas: 40)\n 11868: a1 = s1 + 0x7ff\n 11872: a1 = a1 + 0x39\n 11875: t2 = u64 [a1 + 0x300]\n 11879: a2 = a1 + 0x200\n 11883: a0 = u64 [a2 + 0xf8]\n 11887: a4 = u64 [a2 + 0xe8]\n 11891: a5 = u64 [a2 + 0xf0]\n 11895: a1 = sp + 0xffffffffffffffe0\n 11898: a1 = a1 & 0xffffffffffffffe0\n 11901: sp = a1\n 11903: a3 = u64 [s1 + 0x88]\n 11907: a3 = a3 + a5\n 11910: t0 = u64 [s1 + 0x80]\n 11914: t0 = t0 + a4\n 11917: a4 = t0 <u a4\n 11920: a3 = a3 + a4\n 11923: t1 = a3 ^ a5\n 11926: a2 = a3 <u a5\n 11929: a2 = a4 if t1 == 0\n 11932: a4 = u64 [s1 + 0x90]\n 11936: a4 = a4 + a0\n 11939: a5 = a4 + a2\n 11942: t1 = a5 <u a4\n 11945: ra = u64 [s1 + 0xa0]\n 11949: ra = ra + t2\n 11952: a4 = a4 <u a0\n 11955: a4 = a4 + ra\n 11958: ra = a4 + t1\n 11961: t1 = a5 <u a0\n 11964: a4 = t2 ^ ra\n 11967: t2 = ra <u t2\n 11970: t2 = t1 if a4 == 0\n 11973: a0 = a0 ^ a5\n 11976: a0 = a0 | a4\n 11979: t2 = a2 if a0 == 0\n 11982: u64 [a1 + 0x10] = a5\n 11985: u64 [a1 + 0x8] = a3\n 11988: u64 [a1] = t0\n 11990: u64 [a1 + 0x18] = ra\n 11993: jump @457 if t2 == 0\n      : @456 (gas: 1)\n 11996: jump @713\n      : @457 (gas: 7)\n 11999: a0 = s1 + 0x1838\n 12003: u64 [a0 + 32] = 0\n 12006: u64 [a0 + 24] = 0\n 12009: u64 [a0 + 16] = 0\n 12012: u64 [a0 + 8] = 0x2\n 12016: a0 = s1 + 0x1840\n 12020: ra = 434, jump @24\n      : @458 [@dyn 217] (gas: 14)\n 12026: a2 = s1 + 0x7ff\n 12030: a2 = a2 + 0x39\n 12033: u64 [a2 + 736] = 0\n 12037: a0 = u64 [s1 + 0x70]\n 12040: a3 = a2 + 0x200\n 12044: u64 [a3 + 0xd8] = a0\n 12048: a0 = u64 [s1 + 0xa8]\n 12052: u64 [a3 + 0xd0] = a0\n 12056: a1 = s1 + 0x7ff\n 12060: a1 = a1 + 0x301\n 12064: a0 = u64 [s1 + 0xb0]\n 12068: u64 [a3 + 0xc8] = a0\n 12072: a0 = 0\n 12074: ra = 436, jump @19\n      : @459 [@dyn 218] (gas: 11)\n 12080: a0 = s1 + 0x7ff\n 12084: a0 = a0 + 0x39\n 12087: u64 [a0 + 704] = 0\n 12091: u64 [a0 + 696] = 0\n 12095: u64 [a0 + 688] = 0\n 12099: a2 = a0\n 12101: a0 = 0x20\n 12104: a1 = s1 + 0x7ff\n 12108: a1 = a1 + 0x2e1\n 12112: u64 [a2 + 680] = 0\n 12116: ra = 438, jump @19\n      : @460 [@dyn 219] (gas: 7)\n 12122: a0 = sp + 0xffffffffffffffe0\n 12125: a0 = a0 & 0xffffffffffffffe0\n 12128: u64 [s1 + 0x78] = a0\n 12131: sp = a0\n 12133: a2 = u64 [s1 + 0x98]\n 12137: a0 = i32 [a2]\n 12139: jump @462 if a0 >u 63\n      : @461 (gas: 2)\n 12143: u32 [a2 + 0] = 0x40\n 12146: fallthrough\n      : @462 (gas: 4)\n 12147: a0 = sp + 0xffffffffffffffe0\n 12150: a0 = a0 & 0xffffffffffffffe0\n 12153: u64 [s1 + 0x98] = a0\n 12157: t0 = 440, jump @1385\n      : @463 [@dyn 220] (gas: 5)\n 12163: ra = 0x1ba\n 12167: ecalli 6 // 'hash_keccak_256'\n 12169: a3 = u64 [s1 + 0x98]\n 12173: t0 = 0x1bc\n 12177: jump @1330\n      : @464 [@dyn 221] (gas: 2)\n 12180: a3 = u64 [s1 + 0x98]\n 12184: t0 = 444, jump @1330\n      : @465 [@dyn 222] (gas: 8)\n 12190: a1 = u64 [s1 + 0x78]\n 12193: u64 [a1 + 0x18] = a3\n 12196: u64 [a1 + 0x10] = a2\n 12199: u64 [a1 + 0x8] = a4\n 12202: u64 [a1] = a0\n 12204: a0 = s1 + 0x7ff\n 12208: a0 = a0 + 0x2c1\n 12212: ra = 446, jump @21\n      : @466 [@dyn 223] (gas: 33)\n 12218: a2 = s1 + 0x7ff\n 12222: a2 = a2 + 0x39\n 12225: a4 = a2 + 0x200\n 12229: a0 = u64 [a4 + 0x90]\n 12233: a1 = u64 [a4 + 0x88]\n 12237: t0 = u64 [a2 + 0x2a0]\n 12241: a3 = u64 [a4 + 0x98]\n 12245: a4 = u64 [s1 + 0x88]\n 12249: a4 = a4 + a0\n 12252: a5 = u64 [s1 + 0x80]\n 12256: a5 = a5 + a1\n 12259: a1 = a5 <u a1\n 12262: a4 = a4 + a1\n 12265: a2 = a4 ^ a0\n 12268: a0 = a4 <u a0\n 12271: a0 = a1 if a2 == 0\n 12274: a1 = u64 [s1 + 0x90]\n 12278: a1 = a1 + a3\n 12281: a2 = u64 [s1 + 0xa0]\n 12285: t0 = t0 + a2\n 12288: a2 = a1 <u a3\n 12291: a2 = a2 + t0\n 12294: a0 = a0 + a1\n 12297: a1 = a0 <u a1\n 12300: a1 = a1 + a2\n 12303: a2 = s1 + 0x1838\n 12307: u64 [a2 + 0x28] = a5\n 12310: u64 [a2 + 0x30] = a4\n 12313: u64 [a2 + 0x38] = a0\n 12316: u64 [a2 + 0x40] = a1\n 12319: a1 = s1 + 0x1860\n 12323: a0 = u64 [s1 + 0x78]\n 12326: ra = 448, jump @24\n      : @467 [@dyn 224] (gas: 4)\n 12332: a0 = s1 + 0x7ff\n 12336: a0 = a0 + 0x2a1\n 12340: a1 = 0x40\n 12343: ra = 450, jump @17\n      : @468 [@dyn 225] (gas: 8)\n 12349: a3 = s1 + 0x7ff\n 12353: a3 = a3 + 0x39\n 12356: a5 = a3 + 0x200\n 12360: a4 = u64 [a5 + 0x80]\n 12364: a1 = u64 [a5 + 0x78]\n 12367: a2 = u64 [a5 + 0x70]\n 12370: a0 = u64 [a5 + 0x68]\n 12373: t0 = 452, jump @1341\n      : @469 [@dyn 226] (gas: 1)\n 12379: jump @471 if a1 == 0\n      : @470 (gas: 1)\n 12382: jump @654\n      : @471 (gas: 13)\n 12385: a1 = u64 [s1 + 0x80]\n 12389: a4 = a3 + 0x200\n 12393: u64 [a4 + 0x48] = a1\n 12396: a1 = u64 [s1 + 0x88]\n 12400: u64 [a4 + 0x50] = a1\n 12403: a1 = u64 [s1 + 0x90]\n 12407: u64 [a4 + 0x58] = a1\n 12410: a1 = s1 + 0x7ff\n 12414: a1 = a1 + 0x281\n 12418: a2 = u64 [s1 + 0xa0]\n 12422: u64 [a4 + 0x60] = a2\n 12425: u64 [s1 + 0xa0] = a0\n 12429: ra = 454, jump @19\n      : @472 [@dyn 227] (gas: 32)\n 12435: a5 = s1 + 0x7ff\n 12439: a5 = a5 + 0x39\n 12442: u64 [a5 + 512] = 0\n 12446: a0 = u64 [s1 + 0x70]\n 12449: a1 = a5 + 0x100\n 12453: u64 [a1 + 0xf8] = a0\n 12457: a0 = u64 [s1 + 0xa8]\n 12461: u64 [a1 + 0xf0] = a0\n 12465: a0 = u64 [s1 + 0xb0]\n 12469: u64 [a1 + 0xe8] = a0\n 12473: u64 [a5 + 544] = 0\n 12477: u64 [a5 + 536] = 0\n 12481: u64 [a5 + 528] = 0\n 12485: a0 = u64 [0x200a8]\n 12490: a1 = u64 [0x200b0]\n 12495: a2 = u64 [0x200b8]\n 12500: a3 = u64 [0x200c0]\n 12505: a4 = a5 + 0x200\n 12509: u64 [a4 + 0x40] = a0\n 12512: u64 [a4 + 0x38] = a1\n 12515: u64 [a4 + 0x30] = a2\n 12518: u64 [a4 + 0x28] = a3\n 12521: a1 = 0x20\n 12524: a2 = s1 + 0x7ff\n 12528: a2 = a2 + 0x261\n 12532: a3 = s1 + 0x7ff\n 12536: a3 = a3 + 0x241\n 12540: a4 = s1 + 0x7ff\n 12544: a4 = a4 + 0x221\n 12548: u64 [a5 + 520] = 0\n 12552: a0 = u64 [s1 + 0xa0]\n 12556: ra = 456, jump @27\n      : @473 [@dyn 228] (gas: 5)\n 12562: a0 = 0\n 12564: a1 = u64 [s1 + 0xb8]\n 12568: a2 = 0\n 12570: ecalli 7 // 'seal_return'\n 12572: jump @825\n      : @474 (gas: 11)\n 12575: a0 = s1 + 0x1838\n 12579: u64 [a0 + 544] = 0\n 12583: u64 [a0 + 536] = 0\n 12587: u64 [a0 + 528] = 0\n 12591: u64 [a0 + 520] = 0\n 12595: a0 = s1 + 0x2000\n 12599: i32 a0 = a0 + 0xfffffffffffffa40\n 12603: ra = 0x1ca\n 12607: ecalli 10 // 'value_transferred'\n 12609: t0 = 0x1cc\n 12613: jump @1361\n      : @475 [@dyn 229] (gas: 1)\n 12616: t0 = 460, jump @1361\n      : @476 [@dyn 230] (gas: 1)\n 12622: t0 = 462, jump @1362\n      : @477 [@dyn 231] (gas: 1)\n 12628: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 12631: jump @718\n      : @479 (gas: 3)\n 12634: a0 = u64 [s1 + 0xb8]\n 12638: a0 = i32 [a0]\n 12640: jump @481 if a0 >u 3\n      : @480 (gas: 1)\n 12644: jump @719\n      : @481 (gas: 3)\n 12647: a0 = s1 + 0x1160\n 12651: a1 = 0x40\n 12654: ra = 464, jump @17\n      : @482 [@dyn 232] (gas: 18)\n 12660: a1 = s1 + 0x1038\n 12664: a2 = a1 + 0x100\n 12668: a0 = u64 [a2 + 0x40]\n 12671: u64 [s1 + 0x18] = a0\n 12674: a0 = u64 [a2 + 0x38]\n 12677: u64 [s1 + 0x28] = a0\n 12680: a0 = u64 [a2 + 0x30]\n 12683: u64 [s1 + 0x20] = a0\n 12686: a0 = u64 [a2 + 0x28]\n 12689: u64 [s1 + 0x30] = a0\n 12692: a1 = s1 + 0x1838\n 12696: u64 [a1 + 576] = 0\n 12700: u64 [a1 + 568] = 0\n 12704: u64 [a1 + 560] = 0\n 12708: u64 [a1 + 552] = 0x4\n 12713: a0 = s1 + 0x1140\n 12717: a1 = s1 + 0x1a60\n 12721: ra = 466, jump @21\n      : @483 [@dyn 233] (gas: 35)\n 12727: a0 = s1 + 0x1038\n 12731: t2 = u64 [a0 + 0x118]\n 12735: ra = u64 [a0 + 0x110]\n 12739: t1 = u64 [a0 + 0x120]\n 12743: a4 = u64 [a0 + 0x108]\n 12747: a0 = t2 << 0x3f\n 12750: a1 = ra >> 0x1\n 12753: a0 = a0 | a1\n 12756: a1 = t1 << 0x3f\n 12759: a2 = t2 >> 0x1\n 12762: a1 = a1 | a2\n 12765: a2 = ra << 0x3f\n 12768: a3 = a4 >> 0x1\n 12771: a5 = a3 | a2\n 12774: a2 = t1 >> 0x1\n 12777: u64 [s1 + 0xb0] = a4\n 12781: a4 = a4 & 0x1\n 12784: a3 = -a4\n 12786: a1 = a1 & a3\n 12789: t0 = a3 & a0\n 12792: a2 = a2 & a3\n 12795: a0 = a5 & 0x7f\n 12798: u64 [s1 + 0xa8] = a0\n 12802: a5 = a0 if a4 == 0\n 12805: u64 [s1 + 0x70] = a5\n 12808: a0 = a5 <u 0x20\n 12811: u64 [s1 + 0x60] = t0\n 12814: a0 = 0 if t0 != 0\n 12816: u64 [s1 + 0x68] = a1\n 12819: u64 [s1 + 0x58] = a2\n 12822: a1 = a1 | a2\n 12825: a0 = 0 if a1 != 0\n 12827: u64 [s1 + 0xb8] = a4\n 12831: a1 = a4 <u 0x1\n 12834: jump @485 if a1 == a0\n      : @484 (gas: 1)\n 12837: jump @720\n      : @485 (gas: 12)\n 12840: a2 = u64 [s1 + 0x28]\n 12843: a3 = u64 [s1 + 0x30]\n 12846: a0 = a3 | a2\n 12849: a1 = u64 [s1 + 0x20]\n 12852: a4 = u64 [s1 + 0x18]\n 12855: a1 = a1 | a4\n 12858: a0 = a0 | a1\n 12861: a0 = a0 >> 0x20\n 12864: a1 = a1 | a2\n 12867: a1 = a1 << 0x20\n 12870: a1 = a1 | a0\n 12873: jump @487 if a1 == 0\n      : @486 (gas: 1)\n 12876: jump @654\n      : @487 (gas: 15)\n 12879: a0 = a3\n 12881: u64 [s1 + 0x90] = ra\n 12885: u64 [s1 + 0x98] = t2\n 12889: u64 [s1 + 0xa0] = t1\n 12893: a1 = u64 [s1 + 0x70]\n 12896: a3 = s1 + 0x1038\n 12900: u64 [a3 + 0xe8] = a1\n 12904: a1 = u64 [s1 + 0x60]\n 12907: u64 [a3 + 0xf0] = a1\n 12911: a1 = u64 [s1 + 0x68]\n 12914: u64 [a3 + 0xf8] = a1\n 12918: a1 = s1 + 0x1120\n 12922: a2 = u64 [s1 + 0x58]\n 12925: u64 [a3 + 0x100] = a2\n 12929: ra = 468, jump @19\n      : @488 [@dyn 234] (gas: 2)\n 12935: a0 = u64 [s1 + 0xb8]\n 12939: jump @490 if a0 == 0\n      : @489 (gas: 1)\n 12942: jump @668\n      : @490 (gas: 1)\n 12945: t0 = 470, jump @1372\n      : @491 [@dyn 235] (gas: 1)\n 12951: jump @493 if a1 != 0\n      : @492 (gas: 1)\n 12954: jump @654\n      : @493 (gas: 13)\n 12957: a1 = u64 [s1 + 0xb0]\n 12961: a1 = a1 & 0xffffffffffffff00\n 12965: i32 a0 = a3 + 0x20\n 12968: a2 = s1 + 0x1038\n 12972: a3 = u64 [s1 + 0x90]\n 12976: u64 [a2 + 0x70] = a3\n 12979: u64 [a2 + 0x68] = a1\n 12982: a1 = u64 [s1 + 0x98]\n 12986: u64 [a2 + 0x78] = a1\n 12989: a1 = s1 + 0x10a0\n 12993: a3 = u64 [s1 + 0xa0]\n 12997: u64 [a2 + 0x80] = a3\n 13001: ra = 472, jump @19\n      : @494 [@dyn 236] (gas: 9)\n 13007: t2 = 0\n 13009: t1 = 0\n 13011: u64 [s1 + 176] = 0\n 13015: a0 = u64 [s1 + 0xa8]\n 13019: a0 = a0 >u 0\n 13021: a0 = a0 << 0x5\n 13024: u64 [s1 + 0xb8] = a0\n 13028: t0 = 0x1da\n 13032: jump @1366\n      : @495 (gas: 1)\n 13035: t0 = 474, jump @1366\n      : @496 [@dyn 237] (gas: 28)\n 13041: t0 = u64 [s1 + 0x20]\n 13044: a3 = a2 + t0\n 13047: ra = a3 + a0\n 13050: a3 = ra ^ a2\n 13053: a4 = ra <u a2\n 13056: a4 = a0 if a3 == 0\n 13059: a0 = a2 <u t2\n 13062: a0 = a1 if a1 == 0\n 13065: a0 = a0 + t1\n 13068: a1 = a0 <u t1\n 13071: a2 = u64 [s1 + 0x28]\n 13074: a2 = a2 + a0\n 13077: a4 = a4 + a2\n 13080: a0 = a2 <u a0\n 13083: a2 = a4 <u a2\n 13086: t1 = u64 [s1 + 0x18]\n 13089: a3 = u64 [s1 + 0xb0]\n 13093: a3 = a3 + t1\n 13096: a1 = a1 + a3\n 13099: a0 = a0 + a1\n 13102: a5 = a0 + a2\n 13105: a0 = a5 >u 0\n 13107: a1 = a4 >u 0\n 13109: a1 = a0 if a5 != 0\n 13112: a0 = a4 | a5\n 13115: a2 = ra >u 0\n 13117: a2 = a1 if a0 != 0\n 13120: jump @498 if a2 == 0\n      : @497 (gas: 1)\n 13123: jump @770\n      : @498 (gas: 6)\n 13126: a0 = u64 [s1 + 0x30]\n 13129: a1 = u64 [s1 + 0xb8]\n 13133: a0 = a1 <u a0\n 13136: a1 = ra ^ t0\n 13139: a2 = ra <u t0\n 13142: t0 = 476, jump @1364\n      : @499 [@dyn 238] (gas: 1)\n 13148: jump @501 if a3 == 0\n      : @500 (gas: 1)\n 13151: jump @770\n      : @501 (gas: 13)\n 13154: a2 = s1 + 0x1038\n 13158: a0 = u64 [s1 + 0xb8]\n 13162: u64 [a2 + 0x48] = a0\n 13165: a3 = ra\n 13167: u64 [a2 + 0x50] = a3\n 13170: u64 [a2 + 0x58] = a4\n 13173: a0 = 0x40\n 13176: a1 = s1 + 0x1080\n 13180: u64 [a2 + 0x60] = a5\n 13183: u64 [s1 + 0xa8] = a3\n 13187: u64 [s1 + 0xa0] = a4\n 13191: u64 [s1 + 0xb0] = a5\n 13195: ra = 478, jump @19\n      : @502 [@dyn 239] (gas: 23)\n 13201: a1 = s1 + 0x1038\n 13205: a0 = u64 [s1 + 0x18]\n 13208: u64 [a1] = a0\n 13210: a0 = u64 [s1 + 0x28]\n 13213: a2 = a1 + 0xffffffffffffff00\n 13217: u64 [a2 + 0xf8] = a0\n 13221: a0 = u64 [s1 + 0x20]\n 13224: u64 [a2 + 0xf0] = a0\n 13228: a0 = u64 [s1 + 0x30]\n 13231: u64 [a2 + 0xe8] = a0\n 13235: a0 = u64 [s1 + 0xb0]\n 13239: u64 [a1 + 0x20] = a0\n 13242: a0 = u64 [s1 + 0xa0]\n 13246: u64 [a1 + 0x18] = a0\n 13249: a0 = u64 [s1 + 0xa8]\n 13253: u64 [a1 + 0x10] = a0\n 13256: a4 = a1\n 13258: a0 = s1 + 0x1060\n 13262: a1 = s1 + 0x1040\n 13266: a2 = s1 + 0x1020\n 13270: a3 = u64 [s1 + 0xb8]\n 13274: u64 [a4 + 0x8] = a3\n 13277: ra = 480, jump @995\n      : @503 [@dyn 240] (gas: 12)\n 13283: a3 = u64 [s1 + 0xa0]\n 13287: a4 = u64 [s1 + 0xa8]\n 13291: t0 = u64 [s1 + 0xb8]\n 13295: a0 = t0 | a3\n 13298: a1 = u64 [s1 + 0xb0]\n 13302: a1 = a1 | a4\n 13305: a0 = a0 | a1\n 13308: a0 = a0 >> 0x20\n 13311: a1 = a1 | a3\n 13314: a1 = a1 << 0x20\n 13317: a0 = a0 | a1\n 13320: jump @505 if a0 == 0\n      : @504 (gas: 1)\n 13323: jump @654\n      : @505 (gas: 8)\n 13326: a1 = s1 + 0x1038\n 13330: a0 = u64 [a1 + 0x30]\n 13333: a2 = u64 [a1 + 0x40]\n 13336: u64 [s1 + 0x98] = a2\n 13340: a2 = a3\n 13342: t1 = u64 [a1 + 0x28]\n 13345: a3 = u64 [a1 + 0x38]\n 13348: fallthrough\n      : @506 (gas: 24)\n 13349: t2 = a0 ^ a4\n 13352: a5 = a0 <u a4\n 13355: ra = t1 <u t0\n 13358: a5 = ra if t2 == 0\n 13361: a1 = a3 - a2\n 13364: t2 = a1 - a5\n 13367: a1 = a1 <u a5\n 13370: a3 = a3 <u a2\n 13373: a2 = u64 [s1 + 0x98]\n 13377: a3 = a2 - a3\n 13380: a2 = u64 [s1 + 0xb0]\n 13384: a3 = a3 - a2\n 13387: a3 = a3 - a1\n 13390: a0 = a0 - a4\n 13393: a0 = a0 - ra\n 13396: a1 = t1 - t0\n 13399: a0 = a0 | a3\n 13402: a2 = a1 | t2\n 13405: a2 = a2 | a0\n 13408: a0 = a0 | t2\n 13411: a2 = a2 >> 0x20\n 13414: a0 = a0 << 0x20\n 13417: a0 = a0 | a2\n 13420: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 13423: jump @654\n      : @508 (gas: 3)\n 13426: a0 = t0\n 13428: u64 [s1 + 0xb8] = a1\n 13432: ra = 482, jump @33\n      : @509 [@dyn 241] (gas: 6)\n 13438: i32 a1 = a0 + 0\n 13440: a2 = i32 [s1 + 0xb8]\n 13444: a0 = 0\n 13446: ra = 0x2da\n 13450: ecalli 7 // 'seal_return'\n 13452: jump @781\n      : @510 (gas: 8)\n 13455: u64 [a2 + 1856] = 0\n 13459: u64 [a2 + 1848] = 0\n 13463: u64 [a2 + 1840] = 0\n 13467: u64 [a2 + 1832] = 0\n 13471: a0 = s1 + 0x1000\n 13475: i32 a0 = a0 + 0x760\n 13479: ecalli 10 // 'value_transferred'\n 13481: fallthrough\n      : @511 (gas: 10)\n 13482: a3 = s1 + 0x1038\n 13486: a4 = a3 + 0x700\n 13490: a0 = u64 [a4 + 0x38]\n 13493: a1 = u64 [a4 + 0x40]\n 13496: a2 = u64 [a4 + 0x30]\n 13499: a3 = u64 [a4 + 0x28]\n 13502: a1 = a1 | a2\n 13505: a0 = a0 | a3\n 13508: a0 = a0 | a1\n 13511: jump @513 if a0 == 0\n      : @512 (gas: 1)\n 13514: jump @725\n      : @513 (gas: 3)\n 13517: a0 = u64 [s1 + 0xb8]\n 13521: a0 = i32 [a0]\n 13523: jump @515 if a0 >u 3\n      : @514 (gas: 1)\n 13527: jump @726\n      : @515 (gas: 1)\n 13530: ra = 484, jump @1131\n      : @516 [@dyn 242] (gas: 9)\n 13536: a0 = s1 + 0x1038\n 13540: u64 [a0 + 1888] = 0\n 13544: u64 [a0 + 1880] = 0\n 13548: u64 [a0 + 1872] = 0\n 13552: u64 [a0 + 1864] = 0x5\n 13557: a0 = s1 + 0x7ff\n 13561: a0 = a0 + 0x121\n 13565: a1 = s1 + 0x1780\n 13569: ra = 486, jump @21\n      : @517 [@dyn 243] (gas: 5)\n 13575: a3 = s1 + 0x7ff\n 13579: a3 = a3 + 0x39\n 13582: a0 = u64 [a3 + 0xe8]\n 13586: a1 = a0 & 0xff\n 13590: jump @519 if a1 != 0\n      : @518 (gas: 1)\n 13593: jump @727\n      : @519 (gas: 17)\n 13596: a1 = u64 [a3 + 0x100]\n 13600: a2 = u64 [a3 + 0xf8]\n 13604: a3 = u64 [a3 + 0xf0]\n 13608: a0 = a0 & 0xffffffffffffff00\n 13612: a4 = s1 + 0x1038\n 13616: u64 [a4 + 1920] = 0\n 13620: u64 [a4 + 1912] = 0\n 13624: u64 [a4 + 1904] = 0\n 13628: u64 [a4 + 1896] = 0x5\n 13633: a5 = a4 + 0x700\n 13637: u64 [a5 + 0x90] = a3\n 13641: u64 [a5 + 0x88] = a0\n 13645: u64 [a5 + 0x98] = a2\n 13649: u64 [a5 + 0xa0] = a1\n 13653: a0 = s1 + 0x17a0\n 13657: a1 = s1 + 0x17c0\n 13661: ra = 488, jump @24\n      : @520 [@dyn 244] (gas: 4)\n 13667: a0 = s1 + 0x7ff\n 13671: a0 = a0 + 0x101\n 13675: a1 = 0x40\n 13678: ra = 490, jump @17\n      : @521 [@dyn 245] (gas: 17)\n 13684: a0 = s1 + 0x7ff\n 13688: a0 = a0 + 0x39\n 13691: a1 = u64 [a0 + 0xe0]\n 13695: u64 [s1 + 0xb0] = a1\n 13699: a1 = u64 [a0 + 0xd8]\n 13703: u64 [s1 + 0xa8] = a1\n 13707: a1 = u64 [a0 + 0xd0]\n 13711: u64 [s1 + 0xa0] = a1\n 13715: a0 = u64 [a0 + 0xc8]\n 13719: u64 [s1 + 0xb8] = a0\n 13723: a0 = 0x30280\n 13728: u64 [s1 + 0x98] = a0\n 13732: i32 a0 = a0 + 0\n 13734: ra = 0x1ec\n 13738: ecalli 3 // 'caller'\n 13740: t0 = 0x1ee\n 13744: jump @1387\n      : @522 [@dyn 246] (gas: 1)\n 13747: t0 = 494, jump @1387\n      : @523 [@dyn 247] (gas: 1)\n 13753: jump @654 if a0 != 0\n      : @524 (gas: 2)\n 13757: a2 = u64 [s1 + 0x98]\n 13761: t0 = 496, jump @1321\n      : @525 [@dyn 248] (gas: 8)\n 13767: u64 [a2 + 192] = 0\n 13771: u64 [a2 + 0xb8] = a1\n 13775: u64 [a2 + 0xb0] = a0\n 13779: a1 = s1 + 0x7ff\n 13783: a1 = a1 + 0xe1\n 13787: u64 [a2 + 0xa8] = a3\n 13791: a0 = a4\n 13793: ra = 498, jump @19\n      : @526 [@dyn 249] (gas: 16)\n 13799: a0 = u64 [0x200c8]\n 13804: a1 = u64 [0x200d0]\n 13809: a2 = s1 + 0x7ff\n 13813: a2 = a2 + 0x39\n 13816: u64 [a2 + 0xa0] = a0\n 13820: a0 = u64 [0x200d8]\n 13825: u64 [a2 + 0x98] = a1\n 13829: a3 = u64 [0x200e0]\n 13834: u64 [a2 + 0x90] = a0\n 13838: a0 = a2\n 13840: a1 = 0x20\n 13843: a2 = s1 + 0x7ff\n 13847: a2 = a2 + 0xc1\n 13851: u64 [a0 + 0x88] = a3\n 13855: a0 = u64 [s1 + 0xb8]\n 13859: ra = 500, jump @25\n      : @527 [@dyn 250] (gas: 6)\n 13865: a1 = 0x20280\n 13870: i32 a1 = a1 + 0\n 13872: a0 = 0\n 13874: a2 = 0\n 13876: ecalli 7 // 'seal_return'\n 13878: jump @825\n      : @528 (gas: 8)\n 13881: u64 [a2 + 1504] = 0\n 13885: u64 [a2 + 1496] = 0\n 13889: u64 [a2 + 1488] = 0\n 13893: u64 [a2 + 1480] = 0\n 13897: a0 = s1 + 0x1000\n 13901: i32 a0 = a0 + 0x600\n 13905: ecalli 10 // 'value_transferred'\n 13907: fallthrough\n      : @529 (gas: 10)\n 13908: a4 = s1 + 0x1038\n 13912: a5 = a4 + 0x500\n 13916: a0 = u64 [a5 + 0xd8]\n 13920: a1 = u64 [a5 + 0xe0]\n 13924: a2 = u64 [a5 + 0xd0]\n 13928: a3 = u64 [a5 + 0xc8]\n 13932: a1 = a1 | a2\n 13935: a0 = a0 | a3\n 13938: a0 = a0 | a1\n 13941: jump @531 if a0 == 0\n      : @530 (gas: 1)\n 13944: jump @732\n      : @531 (gas: 3)\n 13947: a0 = u64 [s1 + 0xb8]\n 13951: a0 = i32 [a0]\n 13953: jump @533 if a0 >u 3\n      : @532 (gas: 1)\n 13957: jump @733\n      : @533 (gas: 7)\n 13960: u64 [a4 + 1536] = 0\n 13964: u64 [a4 + 1528] = 0\n 13968: u64 [a4 + 1520] = 0\n 13972: u64 [a4 + 1512] = 0x2\n 13977: a0 = s1 + 0x500\n 13981: a1 = s1 + 0x1620\n 13985: ra = 502, jump @21\n      : @534 [@dyn 251] (gas: 12)\n 13991: a1 = s1 + 0x500\n 13995: a0 = u64 [a1 + 0x18]\n 13998: u64 [s1 + 0xb8] = a0\n 14002: a0 = u64 [a1 + 0x10]\n 14005: u64 [s1 + 0xb0] = a0\n 14009: a0 = u64 [a1 + 0x8]\n 14012: u64 [s1 + 0xa8] = a0\n 14016: a0 = u64 [a1]\n 14018: u64 [s1 + 0xa0] = a0\n 14022: a0 = s1 + 0x4e0\n 14026: a1 = 0x40\n 14029: ra = 504, jump @17\n      : @535 [@dyn 252] (gas: 6)\n 14035: a4 = s1 + 0x400\n 14039: a0 = u64 [a4 + 0xf8]\n 14043: a1 = u64 [a4 + 0xf0]\n 14047: a2 = u64 [a4 + 0xe8]\n 14051: a3 = u64 [a4 + 0xe0]\n 14055: t0 = 506, jump @1384\n      : @536 [@dyn 253] (gas: 1)\n 14061: jump @654 if a0 != 0\n      : @537 (gas: 14)\n 14065: a0 = u64 [s1 + 0xa0]\n 14069: a2 = s1 + 0x400\n 14073: u64 [a2 + 0xc0] = a0\n 14077: a0 = u64 [s1 + 0xa8]\n 14081: u64 [a2 + 0xc8] = a0\n 14085: a0 = u64 [s1 + 0xb0]\n 14089: u64 [a2 + 0xd0] = a0\n 14093: a1 = s1 + 0x4c0\n 14097: a0 = u64 [s1 + 0xb8]\n 14101: u64 [a2 + 0xd8] = a0\n 14105: a0 = a3\n 14107: u64 [s1 + 0xb8] = a3\n 14111: ra = 0x2d6\n 14115: jump @19\n      : @538 (gas: 2)\n 14118: a2 = s1 + 0x1838\n 14122: jump @540 if a0 == 1889567281\n      : @539 (gas: 1)\n 14129: jump @734\n      : @540 (gas: 8)\n 14132: u64 [a2 + 224] = 0\n 14136: u64 [a2 + 216] = 0\n 14140: u64 [a2 + 208] = 0\n 14144: u64 [a2 + 200] = 0\n 14148: a0 = s1 + 0x2000\n 14152: i32 a0 = a0 + 0xfffffffffffff900\n 14156: ecalli 10 // 'value_transferred'\n 14158: fallthrough\n      : @541 (gas: 9)\n 14159: a3 = s1 + 0x1838\n 14163: a0 = u64 [a3 + 0xd8]\n 14167: a1 = u64 [a3 + 0xe0]\n 14171: a2 = u64 [a3 + 0xd0]\n 14175: a3 = u64 [a3 + 0xc8]\n 14179: a1 = a1 | a2\n 14182: a0 = a0 | a3\n 14185: a0 = a0 | a1\n 14188: jump @543 if a0 == 0\n      : @542 (gas: 1)\n 14191: jump @740\n      : @543 (gas: 4)\n 14194: a0 = u64 [s1 + 0xb8]\n 14198: a0 = i32 [a0]\n 14200: a1 = 0x23\n 14203: jump @545 if a1 <u a0\n      : @544 (gas: 1)\n 14206: jump @741\n      : @545 (gas: 5)\n 14209: a0 = s1 + 0x7ff\n 14213: a0 = a0 + 0x541\n 14217: ra = 0x1fc\n 14221: t0 = 0x3f2\n 14225: jump @1397\n      : @546 [@dyn 254] (gas: 14)\n 14228: a3 = s1 + 0x7ff\n 14232: a3 = a3 + 0x39\n 14235: a0 = u64 [a3 + 0x508]\n 14239: a1 = u64 [a3 + 0x510]\n 14243: a2 = u32 [a3 + 0x518]\n 14247: u64 [a3 + 1280] = 0\n 14251: a4 = a3 + 0x400\n 14255: u64 [a4 + 0xf8] = a2\n 14259: u64 [a4 + 0xf0] = a1\n 14263: a1 = s1 + 0x7ff\n 14267: a1 = a1 + 0x521\n 14271: u64 [a4 + 0xe8] = a0\n 14275: a0 = 0\n 14277: ra = 510, jump @19\n      : @547 [@dyn 255] (gas: 11)\n 14283: a0 = s1 + 0x7ff\n 14287: a0 = a0 + 0x39\n 14290: u64 [a0 + 1248] = 0\n 14294: u64 [a0 + 1240] = 0\n 14298: u64 [a0 + 1232] = 0\n 14302: a2 = a0\n 14304: a0 = 0x20\n 14307: a1 = s1 + 0x7ff\n 14311: a1 = a1 + 0x501\n 14315: u64 [a2 + 1224] = 0\n 14319: ra = 512, jump @19\n      : @548 [@dyn 256] (gas: 2)\n 14325: a1 = i32 [0x2026c]\n 14330: jump @550 if a1 >u 63\n      : @549 (gas: 2)\n 14334: u32 [0x2026c] = 0x40\n 14340: fallthrough\n      : @550 (gas: 11)\n 14341: a0 = sp + 0xffffffffffffffe0\n 14344: a2 = a0 & 0xffffffffffffffe0\n 14347: u64 [s1 + 0xb8] = a2\n 14351: sp = a2\n 14353: a0 = 0x20280\n 14358: i32 a0 = a0 + 0\n 14360: i32 a2 = a2 + 0\n 14362: a1 = 0x40\n 14365: ra = 0x202\n 14369: ecalli 6 // 'hash_keccak_256'\n 14371: fallthrough\n      : @551 [@dyn 257] (gas: 6)\n 14372: a3 = u64 [s1 + 0xb8]\n 14376: a0 = u64 [a3 + 0x18]\n 14379: a1 = u64 [a3 + 0x10]\n 14382: a2 = u64 [a3 + 0x8]\n 14385: a3 = u64 [a3]\n 14387: t0 = 516, jump @1351\n      : @552 [@dyn 258] (gas: 9)\n 14393: a4 = s1 + 0x1838\n 14397: u64 [a4 + 0x100] = a3\n 14401: u64 [a4 + 0xf8] = a2\n 14405: u64 [a4 + 0xf0] = a1\n 14409: u64 [a4 + 0xe8] = a0\n 14413: a0 = s1 + 0x7ff\n 14417: a0 = a0 + 0x4e1\n 14421: a1 = s1 + 0x1920\n 14425: ra = 518, jump @21\n      : @553 [@dyn 259] (gas: 15)\n 14431: a1 = s1 + 0x7ff\n 14435: a1 = a1 + 0x39\n 14438: a2 = a1 + 0x400\n 14442: a0 = u64 [a2 + 0xc0]\n 14446: u64 [s1 + 0xb8] = a0\n 14450: a0 = u64 [a2 + 0xb8]\n 14454: u64 [s1 + 0xb0] = a0\n 14458: a0 = u64 [a2 + 0xb0]\n 14462: u64 [s1 + 0xa8] = a0\n 14466: a0 = u64 [a2 + 0xa8]\n 14470: u64 [s1 + 0xa0] = a0\n 14474: a0 = s1 + 0x7ff\n 14478: a0 = a0 + 0x4c1\n 14482: a1 = 0x40\n 14485: ra = 520, jump @17\n      : @554 [@dyn 260] (gas: 4)\n 14491: a3 = s1 + 0x7ff\n 14495: a3 = a3 + 0x39\n 14498: a5 = a3 + 0x400\n 14502: t0 = 522, jump @1386\n      : @555 [@dyn 261] (gas: 1)\n 14508: jump @654 if a0 != 0\n      : @556 (gas: 15)\n 14512: a0 = u64 [s1 + 0xa0]\n 14516: a2 = a3 + 0x400\n 14520: u64 [a2 + 0x68] = a0\n 14523: a0 = u64 [s1 + 0xa8]\n 14527: u64 [a2 + 0x70] = a0\n 14530: a0 = u64 [s1 + 0xb0]\n 14534: u64 [a2 + 0x78] = a0\n 14537: a1 = s1 + 0x7ff\n 14541: a1 = a1 + 0x4a1\n 14545: a0 = u64 [s1 + 0xb8]\n 14549: u64 [a2 + 0x80] = a0\n 14553: a0 = a4\n 14555: u64 [s1 + 0xb8] = a4\n 14559: ra = 0x2d6\n 14563: jump @19\n      : @557 (gas: 11)\n 14566: a0 = s1 + 0x1838\n 14570: u64 [a0 + 352] = 0\n 14574: u64 [a0 + 344] = 0\n 14578: u64 [a0 + 336] = 0\n 14582: u64 [a0 + 328] = 0\n 14586: a0 = s1 + 0x2000\n 14590: i32 a0 = a0 + 0xfffffffffffff980\n 14594: ra = 0x20c\n 14598: ecalli 10 // 'value_transferred'\n 14600: t0 = 0x20e\n 14604: jump @1376\n      : @558 [@dyn 262] (gas: 1)\n 14607: t0 = 526, jump @1376\n      : @559 [@dyn 263] (gas: 1)\n 14613: t0 = 528, jump @1374\n      : @560 [@dyn 264] (gas: 1)\n 14619: jump @562 if a0 == 0\n      : @561 (gas: 1)\n 14622: jump @742\n      : @562 (gas: 3)\n 14625: a0 = u64 [s1 + 0xb8]\n 14629: a0 = i32 [a0]\n 14631: jump @564 if a0 >u 3\n      : @563 (gas: 1)\n 14635: jump @743\n      : @564 (gas: 1)\n 14638: ra = 530, jump @1131\n      : @565 [@dyn 265] (gas: 1)\n 14644: ra = 532, jump @1312\n      : @566 [@dyn 266] (gas: 9)\n 14650: a1 = s1 + 0x1838\n 14654: u64 [a1 + 384] = 0\n 14658: u64 [a1 + 376] = 0\n 14662: u64 [a1 + 368] = 0\n 14666: u64 [a1 + 360] = 0x5\n 14671: a0 = s1 + 0x7ff\n 14675: a0 = a0 + 0x681\n 14679: a1 = s1 + 0x19a0\n 14683: ra = 534, jump @21\n      : @567 [@dyn 267] (gas: 22)\n 14689: a3 = s1 + 0x7ff\n 14693: a3 = a3 + 0x39\n 14696: a4 = a3 + 0x600\n 14700: a0 = u64 [a4 + 0x48]\n 14703: a1 = u64 [a4 + 0x50]\n 14706: a2 = u64 [a4 + 0x58]\n 14709: a3 = u64 [a4 + 0x60]\n 14712: a0 = a0 & 0xffffffffffffff00\n 14716: a0 = a0 | 0x1\n 14719: a4 = s1 + 0x1838\n 14723: u64 [a4 + 416] = 0\n 14727: u64 [a4 + 408] = 0\n 14731: u64 [a4 + 400] = 0\n 14735: u64 [a4 + 392] = 0x5\n 14740: a5 = a4 + 0x100\n 14744: u64 [a5 + 0xc0] = a3\n 14748: u64 [a5 + 0xb8] = a2\n 14752: u64 [a5 + 0xb0] = a1\n 14756: u64 [a5 + 0xa8] = a0\n 14760: a0 = s1 + 0x19c0\n 14764: a1 = s1 + 0x19e0\n 14768: ra = 536, jump @24\n      : @568 [@dyn 268] (gas: 4)\n 14774: a0 = s1 + 0x7ff\n 14778: a0 = a0 + 0x661\n 14782: a1 = 0x40\n 14785: ra = 538, jump @17\n      : @569 [@dyn 269] (gas: 18)\n 14791: a0 = s1 + 0x7ff\n 14795: a0 = a0 + 0x39\n 14798: a2 = a0 + 0x600\n 14802: a1 = u64 [a2 + 0x40]\n 14805: u64 [s1 + 0xb0] = a1\n 14809: a1 = u64 [a2 + 0x38]\n 14812: u64 [s1 + 0xa8] = a1\n 14816: a1 = u64 [a2 + 0x30]\n 14819: u64 [s1 + 0xa0] = a1\n 14823: a0 = u64 [a2 + 0x28]\n 14826: u64 [s1 + 0xb8] = a0\n 14830: a0 = 0x30280\n 14835: u64 [s1 + 0x98] = a0\n 14839: i32 a0 = a0 + 0\n 14841: ra = 0x21c\n 14845: ecalli 3 // 'caller'\n 14847: t0 = 0x21e\n 14851: jump @1387\n      : @570 [@dyn 270] (gas: 1)\n 14854: t0 = 542, jump @1387\n      : @571 [@dyn 271] (gas: 1)\n 14860: jump @654 if a0 != 0\n      : @572 (gas: 2)\n 14864: a2 = u64 [s1 + 0x98]\n 14868: t0 = 544, jump @1321\n      : @573 [@dyn 272] (gas: 9)\n 14874: u64 [a2 + 1568] = 0\n 14878: a5 = a2 + 0x600\n 14882: u64 [a5 + 0x18] = a1\n 14885: u64 [a5 + 0x10] = a0\n 14888: a1 = s1 + 0x7ff\n 14892: a1 = a1 + 0x641\n 14896: u64 [a5 + 0x8] = a3\n 14899: a0 = a4\n 14901: ra = 546, jump @19\n      : @574 [@dyn 273] (gas: 16)\n 14907: a0 = u64 [0x20088]\n 14912: a1 = u64 [0x20090]\n 14917: a2 = s1 + 0x7ff\n 14921: a2 = a2 + 0x39\n 14924: u64 [a2 + 0x600] = a0\n 14928: a0 = u64 [0x20098]\n 14933: u64 [a2 + 0x5f8] = a1\n 14937: a3 = u64 [0x200a0]\n 14942: u64 [a2 + 0x5f0] = a0\n 14946: a0 = a2\n 14948: a1 = 0x20\n 14951: a2 = s1 + 0x7ff\n 14955: a2 = a2 + 0x621\n 14959: u64 [a0 + 0x5e8] = a3\n 14963: a0 = u64 [s1 + 0xb8]\n 14967: ra = 548, jump @25\n      : @575 [@dyn 274] (gas: 6)\n 14973: a1 = 0x20280\n 14978: i32 a1 = a1 + 0\n 14980: a0 = 0\n 14982: a2 = 0\n 14984: ecalli 7 // 'seal_return'\n 14986: jump @825\n      : @576 (gas: 5)\n 14989: i32 a1 = a1 + 0\n 14991: a0 = 0\n 14993: a2 = 0\n 14995: ecalli 7 // 'seal_return'\n 14997: jump @825\n      : @577 (gas: 10)\n 15000: u64 [a2 + 1632] = 0\n 15004: u64 [a2 + 1624] = 0\n 15008: u64 [a2 + 1616] = 0\n 15012: u64 [a2 + 1608] = 0\n 15016: a0 = s1 + 0x1000\n 15020: i32 a0 = a0 + 0x680\n 15024: ra = 0x226\n 15028: ecalli 10 // 'value_transferred'\n 15030: t0 = 0x228\n 15034: jump @1354\n      : @578 [@dyn 275] (gas: 1)\n 15037: t0 = 552, jump @1354\n      : @579 [@dyn 276] (gas: 1)\n 15043: t0 = 554, jump @1374\n      : @580 [@dyn 277] (gas: 1)\n 15049: jump @582 if a0 == 0\n      : @581 (gas: 1)\n 15052: jump @744\n      : @582 (gas: 3)\n 15055: a0 = u64 [s1 + 0xb8]\n 15059: a0 = i32 [a0]\n 15061: jump @584 if a0 >u 35\n      : @583 (gas: 1)\n 15065: jump @745\n      : @584 (gas: 7)\n 15068: a0 = s1 + 0x1000\n 15072: i32 a0 = a0 + 0x6a0\n 15076: a1 = 0x4\n 15079: ra = 0x22c\n 15083: ecalli 1 // 'call_data_load'\n 15085: t0 = 0x22e\n 15089: jump @1354\n      : @585 [@dyn 278] (gas: 1)\n 15092: t0 = 558, jump @1354\n      : @586 [@dyn 279] (gas: 11)\n 15098: a2 = u64 [a4 + 0x68]\n 15101: a0 = u64 [a4 + 0x70]\n 15104: a1 = u64 [a4 + 0x78]\n 15107: a3 = u64 [a4 + 0x80]\n 15111: u64 [s1 + 0x6b8] = a3\n 15115: u64 [s1 + 0x6b0] = a1\n 15119: u64 [s1 + 0x6a8] = a0\n 15123: a0 = s1 + 0x6c0\n 15127: a1 = s1 + 0x6a0\n 15131: u64 [s1 + 0x6a0] = a2\n 15135: ra = 560, jump @1024\n      : @587 [@dyn 280] (gas: 11)\n 15141: a0 = u64 [s1 + 0x6d8]\n 15145: u64 [s1 + 0xb8] = a0\n 15149: a0 = u64 [s1 + 0x6d0]\n 15153: u64 [s1 + 0xb0] = a0\n 15157: a0 = u64 [s1 + 0x6c8]\n 15161: u64 [s1 + 0xa8] = a0\n 15165: a0 = u64 [s1 + 0x6c0]\n 15169: u64 [s1 + 0xa0] = a0\n 15173: a0 = s1 + 0x680\n 15177: a1 = 0x40\n 15180: ra = 562, jump @17\n      : @588 [@dyn 281] (gas: 6)\n 15186: a4 = s1 + 0x600\n 15190: a0 = u64 [a4 + 0x98]\n 15194: a1 = u64 [a4 + 0x90]\n 15198: a2 = u64 [a4 + 0x88]\n 15202: a3 = u64 [a4 + 0x80]\n 15206: t0 = 564, jump @1384\n      : @589 [@dyn 282] (gas: 1)\n 15212: jump @654 if a0 != 0\n      : @590 (gas: 14)\n 15216: a0 = u64 [s1 + 0xa0]\n 15220: a2 = s1 + 0x600\n 15224: u64 [a2 + 0x60] = a0\n 15227: a0 = u64 [s1 + 0xa8]\n 15231: u64 [a2 + 0x68] = a0\n 15234: a0 = u64 [s1 + 0xb0]\n 15238: u64 [a2 + 0x70] = a0\n 15241: a1 = s1 + 0x660\n 15245: a0 = u64 [s1 + 0xb8]\n 15249: u64 [a2 + 0x78] = a0\n 15252: a0 = a3\n 15254: u64 [s1 + 0xb8] = a3\n 15258: ra = 0x2d6\n 15262: jump @19\n      : @591 (gas: 11)\n 15265: a0 = s1 + 0x1838\n 15269: u64 [a0 + 640] = 0\n 15273: u64 [a0 + 632] = 0\n 15277: u64 [a0 + 624] = 0\n 15281: u64 [a0 + 616] = 0\n 15285: a0 = s1 + 0x2000\n 15289: i32 a0 = a0 + 0xfffffffffffffaa0\n 15293: ra = 0x236\n 15297: ecalli 10 // 'value_transferred'\n 15299: t0 = 0x238\n 15303: jump @1361\n      : @592 [@dyn 283] (gas: 1)\n 15306: t0 = 568, jump @1361\n      : @593 [@dyn 284] (gas: 8)\n 15312: a0 = u64 [a4 + 0x78]\n 15315: a1 = u64 [a4 + 0x80]\n 15319: a2 = u64 [a4 + 0x70]\n 15322: a3 = u64 [a4 + 0x68]\n 15325: a1 = a1 | a2\n 15328: a0 = a0 | a3\n 15331: a0 = a0 | a1\n 15334: jump @595 if a0 == 0\n      : @594 (gas: 1)\n 15337: jump @746\n      : @595 (gas: 4)\n 15340: a0 = u64 [s1 + 0xb8]\n 15344: a0 = i32 [a0]\n 15346: a1 = 0x43\n 15349: jump @597 if a1 <u a0\n      : @596 (gas: 1)\n 15352: jump @747\n      : @597 (gas: 4)\n 15355: a0 = s1 + 0x1260\n 15359: ra = 0x23a\n 15363: t0 = 0x3f2\n 15367: jump @1397\n      : @598 [@dyn 285] (gas: 31)\n 15370: a1 = s1 + 0x1038\n 15374: a2 = a1 + 0x200\n 15378: a0 = u64 [a2 + 0x28]\n 15381: u64 [s1 + 0xb8] = a0\n 15385: a0 = u64 [a2 + 0x30]\n 15388: u64 [s1 + 0xb0] = a0\n 15392: a0 = u64 [a2 + 0x38]\n 15395: u64 [s1 + 0xa8] = a0\n 15399: a0 = u64 [a2 + 0x40]\n 15402: u64 [s1 + 0xa0] = a0\n 15406: a0 = s1 + 0x2000\n 15410: i32 a0 = a0 + 0xfffffffffffffac0\n 15414: a1 = 0x24\n 15417: ecalli 1 // 'call_data_load'\n 15419: a0 = s1 + 0x1838\n 15423: a2 = a0 + 0x200\n 15427: a1 = u64 [a2 + 0x88]\n 15431: u64 [s1 + 0x98] = a1\n 15435: a1 = u64 [a2 + 0x90]\n 15439: u64 [s1 + 0x90] = a1\n 15443: a1 = u64 [a2 + 0x98]\n 15447: u64 [s1 + 0x88] = a1\n 15451: a0 = u64 [a2 + 0xa0]\n 15455: u64 [s1 + 0x80] = a0\n 15459: a0 = 0x30280\n 15464: u64 [s1 + 0x78] = a0\n 15467: i32 a0 = a0 + 0\n 15469: ra = 0x23c\n 15473: ecalli 3 // 'caller'\n 15475: t0 = 0x23e\n 15479: jump @1353\n      : @599 [@dyn 286] (gas: 1)\n 15482: t0 = 574, jump @1353\n      : @600 [@dyn 287] (gas: 27)\n 15488: a3 = s1 + 0x1038\n 15492: a4 = u64 [s1 + 0x80]\n 15496: a5 = a3 + 0x100\n 15500: u64 [a5 + 0xe0] = a4\n 15504: a4 = u64 [s1 + 0x88]\n 15508: u64 [a5 + 0xd8] = a4\n 15512: a4 = u64 [s1 + 0x90]\n 15516: u64 [a5 + 0xd0] = a4\n 15520: a4 = u64 [s1 + 0x98]\n 15524: u64 [a5 + 0xc8] = a4\n 15528: a4 = u64 [s1 + 0xa0]\n 15532: u64 [a3 + 0x200] = a4\n 15536: a4 = u64 [s1 + 0xa8]\n 15540: u64 [a5 + 0xf8] = a4\n 15544: a4 = u64 [s1 + 0xb0]\n 15548: u64 [a5 + 0xf0] = a4\n 15552: a4 = u64 [s1 + 0xb8]\n 15556: u64 [a5 + 0xe8] = a4\n 15560: a4 = a3 + 0x200\n 15564: u64 [a4 + 0x18] = a2\n 15567: u64 [a4 + 0x10] = a0\n 15570: u64 [a4 + 0x8] = a1\n 15573: a0 = s1 + 0x1240\n 15577: a1 = s1 + 0x1220\n 15581: a2 = s1 + 0x1200\n 15585: u64 [a3 + 544] = 0\n 15589: ra = 576, jump @1079\n      : @601 [@dyn 288] (gas: 3)\n 15595: a0 = s1 + 0x11e0\n 15599: a1 = 0x40\n 15602: ra = 578, jump @17\n      : @602 [@dyn 289] (gas: 7)\n 15608: a3 = s1 + 0x1038\n 15612: a5 = a3 + 0x100\n 15616: a4 = u64 [a5 + 0xc0]\n 15620: a1 = u64 [a5 + 0xb8]\n 15624: a2 = u64 [a5 + 0xb0]\n 15628: a0 = u64 [a5 + 0xa8]\n 15632: t0 = 580, jump @1341\n      : @603 [@dyn 290] (gas: 1)\n 15638: jump @654 if a1 != 0\n      : @604 (gas: 8)\n 15642: u64 [a3 + 416] = 0\n 15646: u64 [a3 + 408] = 0\n 15650: u64 [a3 + 392] = 0x1\n 15655: a1 = s1 + 0x11c0\n 15659: u64 [a3 + 400] = 0\n 15663: u64 [s1 + 0xb8] = a0\n 15667: ra = 0x2d6\n 15671: jump @19\n      : @605 (gas: 10)\n 15674: u64 [a2 + 1568] = 0\n 15678: u64 [a2 + 1560] = 0\n 15682: u64 [a2 + 1552] = 0\n 15686: u64 [a2 + 1544] = 0\n 15690: a0 = s1 + 0x1000\n 15694: i32 a0 = a0 + 0x640\n 15698: ra = 0x246\n 15702: ecalli 10 // 'value_transferred'\n 15704: t0 = 0x248\n 15708: jump @1354\n      : @606 [@dyn 291] (gas: 1)\n 15711: t0 = 584, jump @1354\n      : @607 [@dyn 292] (gas: 1)\n 15717: t0 = 586, jump @1362\n      : @608 [@dyn 293] (gas: 1)\n 15723: jump @748 if a0 != 0\n      : @609 (gas: 4)\n 15727: a0 = u64 [s1 + 0xb8]\n 15731: a0 = i32 [a0]\n 15733: a1 = 0x63\n 15736: jump @749 if a1 >=u a0\n      : @610 (gas: 4)\n 15740: a0 = s1 + 0x640\n 15744: ra = 0x24c\n 15748: t0 = 0x3f2\n 15752: jump @1397\n      : @611 [@dyn 294] (gas: 12)\n 15755: a0 = u64 [s1 + 0x640]\n 15759: u64 [s1 + 0xb8] = a0\n 15763: a0 = u64 [s1 + 0x648]\n 15767: u64 [s1 + 0xb0] = a0\n 15771: a0 = u64 [s1 + 0x650]\n 15775: u64 [s1 + 0xa8] = a0\n 15779: a0 = u64 [s1 + 0x658]\n 15783: u64 [s1 + 0xa0] = a0\n 15787: a0 = s1 + 0x620\n 15791: ra = 0x24e\n 15795: t0 = 0x3fc\n 15799: jump @1397\n      : @612 [@dyn 295] (gas: 65)\n 15802: a0 = u64 [s1 + 0x620]\n 15806: u64 [s1 + 0x78] = a0\n 15809: a0 = u64 [s1 + 0x628]\n 15813: u64 [s1 + 0x70] = a0\n 15816: a0 = u64 [s1 + 0x630]\n 15820: u64 [s1 + 0x68] = a0\n 15823: a0 = u64 [s1 + 0x638]\n 15827: u64 [s1 + 0x60] = a0\n 15830: a0 = s1 + 0x1000\n 15834: i32 a0 = a0 + 0x660\n 15838: a1 = 0x44\n 15841: ecalli 1 // 'call_data_load'\n 15843: a0 = s1 + 0x1038\n 15847: a2 = a0 + 0x600\n 15851: a1 = u64 [a2 + 0x28]\n 15854: u64 [s1 + 0x98] = a1\n 15858: a1 = u64 [a2 + 0x30]\n 15861: u64 [s1 + 0x90] = a1\n 15865: a1 = u64 [a2 + 0x38]\n 15868: u64 [s1 + 0x88] = a1\n 15872: a0 = u64 [a2 + 0x40]\n 15875: u64 [s1 + 0x80] = a0\n 15879: a0 = 0x30280\n 15884: u64 [s1 + 0x58] = a0\n 15887: i32 a0 = a0 + 0\n 15889: ecalli 3 // 'caller'\n 15891: a2 = u64 [s1 + 0x58]\n 15894: a0 = u64 [a2 + 0x8]\n 15897: a1 = i32 [a2 + 0x10]\n 15900: a2 = u64 [a2]\n 15902: a0 = reverse a0\n 15904: a3 = a0 << 0x20\n 15907: a1 = reverse a1\n 15909: a1 = a1 >> 0x20\n 15912: a3 = a3 | a1\n 15915: a0 = a0 >> 0x20\n 15918: a1 = reverse a2\n 15920: a2 = a1 << 0x20\n 15923: a0 = a0 | a2\n 15926: a1 = a1 >> 0x20\n 15929: a2 = u64 [s1 + 0x80]\n 15933: u64 [s1 + 0x5d8] = a2\n 15937: a2 = u64 [s1 + 0x88]\n 15941: u64 [s1 + 0x5d0] = a2\n 15945: a2 = u64 [s1 + 0x90]\n 15949: u64 [s1 + 0x5c8] = a2\n 15953: a2 = u64 [s1 + 0x98]\n 15957: u64 [s1 + 0x5c0] = a2\n 15961: u64 [s1 + 1528] = 0\n 15965: a2 = u64 [s1 + 0xa0]\n 15969: a4 = s1 + 0x600\n 15973: u64 [a4 + 0x18] = a2\n 15976: a2 = u64 [s1 + 0xa8]\n 15980: u64 [a4 + 0x10] = a2\n 15983: a2 = u64 [s1 + 0xb0]\n 15987: u64 [a4 + 0x8] = a2\n 15990: a2 = u64 [s1 + 0xb8]\n 15994: u64 [a4] = a2\n 15996: u64 [s1 + 0x5f0] = a1\n 16000: u64 [s1 + 0x5e8] = a0\n 16004: a0 = s1 + 0x600\n 16008: a1 = s1 + 0x5e0\n 16012: a2 = s1 + 0x5c0\n 16016: u64 [s1 + 0x5e0] = a3\n 16020: ra = 592, jump @1032\n      : @613 [@dyn 296] (gas: 28)\n 16026: a0 = u64 [s1 + 0x80]\n 16030: u64 [s1 + 0x578] = a0\n 16034: a0 = u64 [s1 + 0x88]\n 16038: u64 [s1 + 0x570] = a0\n 16042: a0 = u64 [s1 + 0x90]\n 16046: u64 [s1 + 0x568] = a0\n 16050: a0 = u64 [s1 + 0x98]\n 16054: u64 [s1 + 0x560] = a0\n 16058: a0 = u64 [s1 + 0x60]\n 16061: u64 [s1 + 0x598] = a0\n 16065: a0 = u64 [s1 + 0x68]\n 16068: u64 [s1 + 0x590] = a0\n 16072: a0 = u64 [s1 + 0x70]\n 16075: u64 [s1 + 0x588] = a0\n 16079: a0 = u64 [s1 + 0x78]\n 16082: u64 [s1 + 0x580] = a0\n 16086: a0 = u64 [s1 + 0xa0]\n 16090: u64 [s1 + 0x5b8] = a0\n 16094: a0 = u64 [s1 + 0xa8]\n 16098: u64 [s1 + 0x5b0] = a0\n 16102: a0 = u64 [s1 + 0xb0]\n 16106: u64 [s1 + 0x5a8] = a0\n 16110: a0 = s1 + 0x5a0\n 16114: a1 = s1 + 0x580\n 16118: a2 = s1 + 0x560\n 16122: a3 = u64 [s1 + 0xb8]\n 16126: u64 [s1 + 0x5a0] = a3\n 16130: ra = 594, jump @1079\n      : @614 [@dyn 297] (gas: 3)\n 16136: a0 = s1 + 0x540\n 16140: a1 = 0x40\n 16143: ra = 596, jump @17\n      : @615 [@dyn 298] (gas: 6)\n 16149: a4 = s1 + 0x500\n 16153: a3 = u64 [a4 + 0x58]\n 16156: a1 = u64 [a4 + 0x50]\n 16159: a2 = u64 [a4 + 0x48]\n 16162: a0 = u64 [a4 + 0x40]\n 16165: t0 = 598, jump @1332\n      : @616 [@dyn 299] (gas: 1)\n 16171: jump @654 if a1 != 0\n      : @617 (gas: 8)\n 16175: u64 [s1 + 1336] = 0\n 16179: u64 [s1 + 1328] = 0\n 16183: u64 [s1 + 1320] = 0\n 16187: a1 = s1 + 0x520\n 16191: u64 [s1 + 1312] = 0x1\n 16196: u64 [s1 + 0xb8] = a0\n 16200: ra = 0x2d6\n 16204: jump @19\n      : @618 (gas: 9)\n 16207: a0 = s1 + 0x1838\n 16211: u64 [a0 + 832] = 0\n 16215: u64 [a0 + 824] = 0\n 16219: u64 [a0 + 816] = 0\n 16223: u64 [a0 + 808] = 0\n 16227: a0 = s1 + 0x2000\n 16231: i32 a0 = a0 + 0xfffffffffffffb60\n 16235: ecalli 10 // 'value_transferred'\n 16237: fallthrough\n      : @619 (gas: 10)\n 16238: a3 = s1 + 0x1838\n 16242: a4 = a3 + 0x300\n 16246: a0 = u64 [a4 + 0x38]\n 16249: a1 = u64 [a4 + 0x40]\n 16252: a2 = u64 [a4 + 0x30]\n 16255: a3 = u64 [a4 + 0x28]\n 16258: a1 = a1 | a2\n 16261: a0 = a0 | a3\n 16264: a0 = a0 | a1\n 16267: jump @750 if a0 != 0\n      : @620 (gas: 3)\n 16271: a0 = u64 [s1 + 0xb8]\n 16275: a0 = i32 [a0]\n 16277: jump @751 if a0 <=u 3\n      : @621 (gas: 3)\n 16282: a0 = s1 + 0x14e0\n 16286: a1 = 0x40\n 16289: ra = 600, jump @17\n      : @622 [@dyn 300] (gas: 7)\n 16295: a3 = s1 + 0x1038\n 16299: a5 = a3 + 0x400\n 16303: a4 = u64 [a5 + 0xc0]\n 16307: a1 = u64 [a5 + 0xb8]\n 16311: a2 = u64 [a5 + 0xb0]\n 16315: a0 = u64 [a5 + 0xa8]\n 16319: t0 = 602, jump @1341\n      : @623 [@dyn 301] (gas: 1)\n 16325: jump @654 if a1 != 0\n      : @624 (gas: 13)\n 16329: a1 = u64 [0x20028]\n 16334: a5 = a3 + 0x400\n 16338: u64 [a5 + 0xa0] = a1\n 16342: a4 = u64 [0x20030]\n 16347: a1 = u64 [0x20038]\n 16352: a2 = u64 [0x20040]\n 16357: u64 [a5 + 0x98] = a4\n 16361: u64 [a5 + 0x90] = a1\n 16365: a1 = s1 + 0x14c0\n 16369: u64 [a5 + 0x88] = a2\n 16373: u64 [s1 + 0xb8] = a0\n 16377: ra = 0x2d6\n 16381: jump @19\n      : @625 (gas: 10)\n 16384: u64 [a2 + 1440] = 0\n 16388: u64 [a2 + 1432] = 0\n 16392: u64 [a2 + 1424] = 0\n 16396: u64 [a2 + 1416] = 0\n 16400: a0 = s1 + 0x1000\n 16404: i32 a0 = a0 + 0x5c0\n 16408: ra = 0x25c\n 16412: ecalli 10 // 'value_transferred'\n 16414: t0 = 0x25e\n 16418: jump @1398\n      : @626 [@dyn 302] (gas: 1)\n 16421: t0 = 606, jump @1398\n      : @627 [@dyn 303] (gas: 8)\n 16427: a0 = u64 [a4 + 0x98]\n 16431: a1 = u64 [a4 + 0xa0]\n 16435: a2 = u64 [a4 + 0x90]\n 16439: a3 = u64 [a4 + 0x88]\n 16443: a1 = a1 | a2\n 16446: a0 = a0 | a3\n 16449: a0 = a0 | a1\n 16452: jump @752 if a0 != 0\n      : @628 (gas: 4)\n 16456: a0 = u64 [s1 + 0xb8]\n 16460: a0 = i32 [a0]\n 16462: a1 = 0x43\n 16465: jump @753 if a1 >=u a0\n      : @629 (gas: 4)\n 16469: a0 = s1 + 0x4a0\n 16473: ra = 0x260\n 16477: t0 = 0x3f2\n 16481: jump @1397\n      : @630 [@dyn 304] (gas: 36)\n 16484: a1 = s1 + 0x400\n 16488: a0 = u64 [a1 + 0xb0]\n 16492: u64 [s1 + 0x98] = a0\n 16496: a0 = u64 [a1 + 0xa8]\n 16500: u64 [s1 + 0xb0] = a0\n 16504: a0 = u64 [a1 + 0xa0]\n 16508: u64 [s1 + 0xb8] = a0\n 16512: a0 = sp + 0xffffffffffffffe0\n 16515: a0 = a0 & 0xffffffffffffffe0\n 16518: u64 [s1 + 0xa0] = a0\n 16522: sp = a0\n 16524: a0 = s1 + 0x1000\n 16528: i32 a0 = a0 + 0x5e0\n 16532: a1 = 0x24\n 16535: ecalli 1 // 'call_data_load'\n 16537: a0 = s1 + 0x1038\n 16541: a4 = a0 + 0x500\n 16545: a1 = u64 [a4 + 0xc0]\n 16549: a2 = u64 [a4 + 0xb8]\n 16553: a3 = u64 [a4 + 0xb0]\n 16557: a0 = u64 [a4 + 0xa8]\n 16561: u64 [s1 + 0x50] = a1\n 16564: a4 = u64 [s1 + 0xa0]\n 16568: u64 [a4 + 0x18] = a1\n 16571: u64 [s1 + 0x48] = a2\n 16574: u64 [a4 + 0x10] = a2\n 16577: u64 [s1 + 0x40] = a3\n 16580: u64 [a4 + 0x8] = a3\n 16583: u64 [s1 + 0x38] = a0\n 16586: u64 [a4] = a0\n 16588: a0 = 0x30280\n 16593: u64 [s1 + 0xa8] = a0\n 16597: i32 a0 = a0 + 0\n 16599: u64 [s1 + 0x90] = a0\n 16603: ecalli 3 // 'caller'\n 16605: fallthrough\n      : @631 (gas: 7)\n 16606: a2 = u64 [s1 + 0xa8]\n 16610: a0 = u32 [a2 + 0x10]\n 16613: a1 = u64 [a2]\n 16615: a2 = u64 [a2 + 0x8]\n 16618: a0 = a0 | a1\n 16621: a0 = a0 | a2\n 16624: jump @754 if a0 == 0\n      : @632 (gas: 9)\n 16628: a0 = u64 [s1 + 0x98]\n 16632: a0 = a0 << 0x20\n 16635: a1 = a0 >> 0x20\n 16638: a0 = u64 [s1 + 0xb0]\n 16642: a2 = u64 [s1 + 0xb8]\n 16646: a0 = a0 | a2\n 16649: u64 [s1 + 0x98] = a1\n 16653: a0 = a0 | a1\n 16656: jump @759 if a0 == 0\n      : @633 (gas: 23)\n 16660: a0 = u64 [s1 + 0x90]\n 16664: ecalli 3 // 'caller'\n 16666: a2 = u64 [s1 + 0xa8]\n 16670: a0 = u64 [a2 + 0x8]\n 16673: a1 = i32 [a2 + 0x10]\n 16676: a2 = u64 [a2]\n 16678: a0 = reverse a0\n 16680: a3 = a0 << 0x20\n 16683: a1 = reverse a1\n 16685: a1 = a1 >> 0x20\n 16688: a3 = a3 | a1\n 16691: a0 = a0 >> 0x20\n 16694: a1 = reverse a2\n 16696: a2 = a1 << 0x20\n 16699: a0 = a0 | a2\n 16702: a1 = a1 >> 0x20\n 16705: u64 [s1 + 1176] = 0\n 16709: u64 [s1 + 0x490] = a1\n 16713: u64 [s1 + 0x488] = a0\n 16717: a1 = s1 + 0x480\n 16721: u64 [s1 + 0x480] = a3\n 16725: a0 = 0\n 16727: ra = 610, jump @19\n      : @634 [@dyn 305] (gas: 7)\n 16733: u64 [s1 + 1144] = 0\n 16737: u64 [s1 + 1136] = 0\n 16741: u64 [s1 + 1120] = 0x1\n 16746: a0 = 0x20\n 16749: a1 = s1 + 0x460\n 16753: u64 [s1 + 1128] = 0\n 16757: ra = 612, jump @19\n      : @635 [@dyn 306] (gas: 3)\n 16763: a1 = 0x2026c\n 16768: a0 = i32 [0x2026c]\n 16773: jump @637 if a0 >u 63\n      : @636 (gas: 2)\n 16777: u32 [0x2026c] = 0x40\n 16783: fallthrough\n      : @637 (gas: 15)\n 16784: a0 = sp + 0xffffffffffffffe0\n 16787: a2 = a0 & 0xffffffffffffffe0\n 16790: u64 [s1 + 0x78] = a2\n 16793: sp = a2\n 16795: a0 = 0x20280\n 16800: i32 a0 = a0 + 0\n 16802: i32 a2 = a2 + 0\n 16804: u64 [s1 + 0x88] = a1\n 16808: a1 = 0x40\n 16811: u64 [s1 + 0x80] = a0\n 16815: ra = 0x266\n 16819: ecalli 6 // 'hash_keccak_256'\n 16821: a3 = u64 [s1 + 0x78]\n 16824: t0 = 0x268\n 16828: jump @1383\n      : @638 [@dyn 307] (gas: 2)\n 16831: a3 = u64 [s1 + 0x78]\n 16834: t0 = 616, jump @1383\n      : @639 [@dyn 308] (gas: 21)\n 16840: u64 [s1 + 0x70] = a0\n 16843: a0 = reverse a1\n 16845: u64 [s1 + 0x68] = a0\n 16848: a0 = reverse a2\n 16850: u64 [s1 + 0x60] = a0\n 16853: a0 = reverse a3\n 16855: u64 [s1 + 0x58] = a0\n 16858: a0 = sp + 0xffffffffffffffe0\n 16861: a0 = a0 & 0xffffffffffffffe0\n 16864: u64 [s1 + 0x78] = a0\n 16867: sp = a0\n 16869: u64 [s1 + 1112] = 0\n 16873: a0 = u64 [s1 + 0x98]\n 16877: u64 [s1 + 0x450] = a0\n 16881: a0 = u64 [s1 + 0xb0]\n 16885: u64 [s1 + 0x448] = a0\n 16889: a1 = s1 + 0x440\n 16893: a0 = u64 [s1 + 0xb8]\n 16897: u64 [s1 + 0x440] = a0\n 16901: a0 = 0\n 16903: ra = 618, jump @19\n      : @640 [@dyn 309] (gas: 12)\n 16909: a0 = u64 [s1 + 0x58]\n 16912: a3 = s1 + 0x400\n 16916: u64 [a3 + 0x38] = a0\n 16919: a0 = u64 [s1 + 0x60]\n 16922: u64 [a3 + 0x30] = a0\n 16925: a0 = u64 [s1 + 0x68]\n 16928: u64 [a3 + 0x28] = a0\n 16931: a0 = 0x20\n 16934: a1 = s1 + 0x420\n 16938: a2 = u64 [s1 + 0x70]\n 16941: u64 [a3 + 0x20] = a2\n 16944: ra = 620, jump @19\n      : @641 [@dyn 310] (gas: 3)\n 16950: a1 = u64 [s1 + 0x88]\n 16954: a0 = i32 [a1]\n 16956: jump @643 if a0 >u 63\n      : @642 (gas: 2)\n 16960: u32 [a1 + 0] = 0x40\n 16963: fallthrough\n      : @643 (gas: 24)\n 16964: a0 = sp + 0xffffffffffffffe0\n 16967: a0 = a0 & 0xffffffffffffffe0\n 16970: u64 [s1 + 0x88] = a0\n 16974: sp = a0\n 16976: i32 a2 = a0 + 0\n 16978: a1 = 0x40\n 16981: a0 = u64 [s1 + 0x80]\n 16985: ecalli 6 // 'hash_keccak_256'\n 16987: a3 = u64 [s1 + 0x88]\n 16991: a0 = u64 [a3 + 0x18]\n 16994: a1 = u64 [a3 + 0x10]\n 16997: a2 = u64 [a3 + 0x8]\n 17000: a3 = u64 [a3]\n 17002: a4 = reverse a0\n 17004: a1 = reverse a1\n 17006: a2 = reverse a2\n 17008: a3 = reverse a3\n 17010: a0 = u64 [s1 + 0x78]\n 17013: u64 [a0 + 0x18] = a3\n 17016: u64 [a0 + 0x10] = a2\n 17019: u64 [a0 + 0x8] = a1\n 17022: u64 [a0] = a4\n 17024: a1 = u64 [s1 + 0xa0]\n 17028: ra = 622, jump @24\n      : @644 [@dyn 311] (gas: 3)\n 17034: a0 = s1 + 0x400\n 17038: a1 = 0x40\n 17041: ra = 624, jump @17\n      : @645 [@dyn 312] (gas: 6)\n 17047: a4 = s1 + 0x400\n 17051: a0 = u64 [a4 + 0x18]\n 17054: a1 = u64 [a4 + 0x10]\n 17057: a2 = u64 [a4 + 0x8]\n 17060: a3 = u64 [a4]\n 17062: t0 = 626, jump @1384\n      : @646 [@dyn 313] (gas: 1)\n 17068: jump @654 if a0 != 0\n      : @647 (gas: 12)\n 17072: a0 = u64 [s1 + 0x38]\n 17075: u64 [s1 + 0x3e0] = a0\n 17079: a0 = u64 [s1 + 0x40]\n 17082: u64 [s1 + 0x3e8] = a0\n 17086: a0 = u64 [s1 + 0x48]\n 17089: u64 [s1 + 0x3f0] = a0\n 17093: a1 = s1 + 0x3e0\n 17097: a0 = u64 [s1 + 0x50]\n 17100: u64 [s1 + 0x3f8] = a0\n 17104: a0 = a3\n 17106: u64 [s1 + 0xa0] = a3\n 17110: ra = 628, jump @19\n      : @648 [@dyn 314] (gas: 6)\n 17116: a0 = u64 [s1 + 0x90]\n 17120: ra = 0x276\n 17124: ecalli 3 // 'caller'\n 17126: a2 = u64 [s1 + 0xa8]\n 17130: t0 = 0x278\n 17134: jump @1325\n      : @649 [@dyn 315] (gas: 2)\n 17137: a2 = u64 [s1 + 0xa8]\n 17141: t0 = 632, jump @1325\n      : @650 [@dyn 316] (gas: 31)\n 17147: t0 = a1 | a0\n 17150: a3 = a3 >> 0x20\n 17153: a2 = reverse a2\n 17155: a1 = a2 << 0x20\n 17158: a1 = a1 | a3\n 17161: a2 = a2 >> 0x20\n 17164: u64 [s1 + 920] = 0\n 17168: a0 = u64 [s1 + 0x98]\n 17172: u64 [s1 + 0x390] = a0\n 17176: a0 = u64 [s1 + 0xb0]\n 17180: u64 [s1 + 0x388] = a0\n 17184: a0 = u64 [s1 + 0xb8]\n 17188: u64 [s1 + 0x380] = a0\n 17192: u64 [s1 + 952] = 0\n 17196: a3 = u64 [0x200e8]\n 17201: a4 = u64 [0x200f0]\n 17206: a5 = u64 [0x200f8]\n 17211: a0 = u64 [0x20100]\n 17216: u64 [s1 + 0x3d8] = a3\n 17220: u64 [s1 + 0x3d0] = a4\n 17224: u64 [s1 + 0x3c8] = a5\n 17228: u64 [s1 + 0x3c0] = a0\n 17232: u64 [s1 + 0x3b0] = a2\n 17236: u64 [s1 + 0x3a8] = a1\n 17240: a1 = 0x20\n 17243: a2 = s1 + 0x3c0\n 17247: a3 = s1 + 0x3a0\n 17251: a4 = s1 + 0x380\n 17255: u64 [s1 + 0x3a0] = t0\n 17259: a0 = u64 [s1 + 0xa0]\n 17263: ra = 634, jump @27\n      : @651 [@dyn 317] (gas: 3)\n 17269: a0 = s1 + 0x360\n 17273: a1 = 0x40\n 17276: ra = 636, jump @17\n      : @652 [@dyn 318] (gas: 6)\n 17282: a4 = s1 + 0x300\n 17286: a3 = u64 [a4 + 0x78]\n 17289: a1 = u64 [a4 + 0x70]\n 17292: a2 = u64 [a4 + 0x68]\n 17295: a0 = u64 [a4 + 0x60]\n 17298: t0 = 638, jump @1332\n      : @653 [@dyn 319] (gas: 1)\n 17304: jump @777 if a1 == 0\n      : @654 (gas: 1)\n 17308: trap\n      : @655 (gas: 7)\n 17309: u64 [s1 + 600] = 0\n 17313: u64 [s1 + 592] = 0\n 17317: u64 [s1 + 584] = 0\n 17321: a1 = s1 + 0x240\n 17325: u64 [s1 + 576] = 0x3\n 17330: a0 = 0\n 17332: ra = 640, jump @19\n      : @656 [@dyn 320] (gas: 1)\n 17338: t0 = 642, jump @1389\n      : @657 [@dyn 321] (gas: 30)\n 17344: t0 = u64 [0x20108]\n 17349: a3 = u64 [0x20110]\n 17354: a1 = u64 [s1 + 0x30]\n 17357: a0 = a1 + 0x20\n 17360: u64 [s1 + 0x50] = a0\n 17363: a0 = a0 <u a1\n 17366: a1 = u64 [s1 + 0x20]\n 17369: a2 = a1 + a0\n 17372: u64 [s1 + 0x48] = a2\n 17375: a1 = a2 <u a1\n 17378: a1 = a0 if a0 == 0\n 17381: a5 = u64 [0x20118]\n 17386: a0 = u64 [0x20120]\n 17391: ra = t0\n 17393: u64 [a4 + 0x18] = t0\n 17396: u64 [s1 + 0x78] = a3\n 17399: u64 [a4 + 0x10] = a3\n 17402: t0 = a5\n 17404: u64 [a4 + 0x8] = a5\n 17407: u64 [s1 + 0x98] = a4\n 17411: a2 = a0\n 17413: u64 [a4] = a0\n 17415: a0 = u64 [s1 + 0x28]\n 17418: a1 = a1 + a0\n 17421: u64 [s1 + 0x40] = a1\n 17424: a0 = a1 <u a0\n 17427: a1 = u64 [s1 + 0x18]\n 17430: a0 = a0 + a1\n 17433: u64 [s1 + 0x38] = a0\n 17436: fallthrough\n      : @658 (gas: 3)\n 17437: u64 [s1 + 0x80] = a2\n 17441: u64 [s1 + 0x88] = t0\n 17445: t0 = 644, jump @1340\n      : @659 [@dyn 322] (gas: 1)\n 17451: jump @661 if a3 != 0\n      : @660 (gas: 1)\n 17454: jump @416\n      : @661 (gas: 5)\n 17457: a0 = s1 + 0x220\n 17461: a1 = u64 [s1 + 0x98]\n 17465: u64 [s1 + 0xa8] = t1\n 17469: u64 [s1 + 0xa0] = t2\n 17473: ra = 646, jump @21\n      : @662 [@dyn 323] (gas: 1)\n 17479: t0 = 648, jump @1344\n      : @663 [@dyn 324] (gas: 6)\n 17485: t0 = a1 <u a5\n 17488: a5 = u64 [s1 + 0xb0]\n 17492: a3 = u64 [s1 + 0x38]\n 17495: a5 = a5 + a3\n 17498: a5 = a5 + t0\n 17501: t0 = 650, jump @1378\n      : @664 [@dyn 325] (gas: 1)\n 17507: jump @654 if a1 != 0\n      : @665 (gas: 12)\n 17511: a3 = s1 + 0x200\n 17515: a2 = u64 [a3 + 0x38]\n 17518: a1 = u64 [a3 + 0x30]\n 17521: a5 = u64 [a3 + 0x28]\n 17524: a4 = u64 [a3 + 0x20]\n 17527: u64 [a3] = a4\n 17529: u64 [a3 + 0x8] = a5\n 17532: u64 [a3 + 0x10] = a1\n 17535: a1 = s1 + 0x200\n 17539: u64 [a3 + 0x18] = a2\n 17542: u64 [s1 + 0xb8] = t2\n 17546: ra = 652, jump @19\n      : @666 [@dyn 326] (gas: 1)\n 17552: t0 = 654, jump @1327\n      : @667 [@dyn 327] (gas: 14)\n 17558: t0 = ra\n 17560: a5 = u64 [s1 + 0x98]\n 17564: u64 [a5 + 0x8] = ra\n 17567: a2 = a3\n 17569: u64 [a5] = a3\n 17571: a3 = t2\n 17573: u64 [a5 + 0x10] = a3\n 17576: ra = a0\n 17578: u64 [a5 + 0x18] = a0\n 17581: u64 [s1 + 0x78] = a3\n 17584: u64 [s1 + 0xb8] = t1\n 17588: t2 = a1\n 17590: t1 = a4\n 17592: jump @658\n      : @668 (gas: 8)\n 17595: a2 = s1 + 0x1038\n 17599: u64 [a2 + 224] = 0\n 17603: u64 [a2 + 216] = 0\n 17607: u64 [a2 + 208] = 0\n 17611: a1 = s1 + 0x1100\n 17615: u64 [a2 + 200] = 0x4\n 17620: a0 = 0\n 17622: ra = 656, jump @19\n      : @669 [@dyn 328] (gas: 1)\n 17628: t0 = 658, jump @1389\n      : @670 [@dyn 329] (gas: 30)\n 17634: t0 = u64 [0x20068]\n 17639: a3 = u64 [0x20070]\n 17644: a1 = u64 [s1 + 0x30]\n 17647: a0 = a1 + 0x20\n 17650: u64 [s1 + 0x50] = a0\n 17653: a0 = a0 <u a1\n 17656: a1 = u64 [s1 + 0x20]\n 17659: a2 = a1 + a0\n 17662: u64 [s1 + 0x48] = a2\n 17665: a1 = a2 <u a1\n 17668: a1 = a0 if a0 == 0\n 17671: a5 = u64 [0x20078]\n 17676: a0 = u64 [0x20080]\n 17681: ra = t0\n 17683: u64 [a4 + 0x18] = t0\n 17686: u64 [s1 + 0x78] = a3\n 17689: u64 [a4 + 0x10] = a3\n 17692: t0 = a5\n 17694: u64 [a4 + 0x8] = a5\n 17697: u64 [s1 + 0x98] = a4\n 17701: a2 = a0\n 17703: u64 [a4] = a0\n 17705: a0 = u64 [s1 + 0x28]\n 17708: a1 = a1 + a0\n 17711: u64 [s1 + 0x40] = a1\n 17714: a0 = a1 <u a0\n 17717: a1 = u64 [s1 + 0x18]\n 17720: a0 = a0 + a1\n 17723: u64 [s1 + 0x38] = a0\n 17726: fallthrough\n      : @671 (gas: 3)\n 17727: u64 [s1 + 0x80] = a2\n 17731: u64 [s1 + 0x88] = t0\n 17735: t0 = 660, jump @1340\n      : @672 [@dyn 330] (gas: 1)\n 17741: jump @674 if a3 != 0\n      : @673 (gas: 1)\n 17744: jump @495\n      : @674 (gas: 5)\n 17747: a0 = s1 + 0x10e0\n 17751: a1 = u64 [s1 + 0x98]\n 17755: u64 [s1 + 0xa8] = t1\n 17759: u64 [s1 + 0xa0] = t2\n 17763: ra = 662, jump @21\n      : @675 [@dyn 331] (gas: 1)\n 17769: t0 = 664, jump @1344\n      : @676 [@dyn 332] (gas: 6)\n 17775: t0 = a1 <u a5\n 17778: a5 = u64 [s1 + 0xb0]\n 17782: a3 = u64 [s1 + 0x38]\n 17785: a5 = a5 + a3\n 17788: a5 = a5 + t0\n 17791: t0 = 666, jump @1378\n      : @677 [@dyn 333] (gas: 1)\n 17797: jump @654 if a1 != 0\n      : @678 (gas: 12)\n 17801: a5 = s1 + 0x1038\n 17805: t0 = u64 [a5 + 0xc0]\n 17809: a1 = u64 [a5 + 0xb8]\n 17813: a2 = u64 [a5 + 0xb0]\n 17817: a4 = u64 [a5 + 0xa8]\n 17821: u64 [a5 + 0x88] = a4\n 17825: u64 [a5 + 0x90] = a2\n 17829: u64 [a5 + 0x98] = a1\n 17833: a1 = s1 + 0x10c0\n 17837: u64 [a5 + 0xa0] = t0\n 17841: u64 [s1 + 0xb8] = t2\n 17845: ra = 668, jump @19\n      : @679 [@dyn 334] (gas: 1)\n 17851: t0 = 670, jump @1327\n      : @680 [@dyn 335] (gas: 14)\n 17857: t0 = ra\n 17859: a5 = u64 [s1 + 0x98]\n 17863: u64 [a5 + 0x8] = ra\n 17866: a2 = a3\n 17868: u64 [a5] = a3\n 17870: a3 = t2\n 17872: u64 [a5 + 0x10] = a3\n 17875: ra = a0\n 17877: u64 [a5 + 0x18] = a0\n 17880: u64 [s1 + 0x78] = a3\n 17883: u64 [s1 + 0xb8] = t1\n 17887: t2 = a1\n 17889: t1 = a4\n 17891: jump @671\n      : @681 (gas: 6)\n 17894: a1 = 0x20280\n 17899: i32 a1 = a1 + 0\n 17901: a0 = 0x1\n 17904: a2 = 0\n 17906: ecalli 7 // 'seal_return'\n 17908: jump @825\n      : @682 (gas: 6)\n 17911: a1 = 0x20280\n 17916: i32 a1 = a1 + 0\n 17918: a0 = 0x1\n 17921: a2 = 0\n 17923: ecalli 7 // 'seal_return'\n 17925: jump @825\n      : @683 (gas: 6)\n 17928: a1 = 0x20280\n 17933: i32 a1 = a1 + 0\n 17935: a0 = 0x1\n 17938: a2 = 0\n 17940: ecalli 7 // 'seal_return'\n 17942: jump @825\n      : @684 (gas: 6)\n 17945: a1 = 0x20280\n 17950: i32 a1 = a1 + 0\n 17952: a0 = 0x1\n 17955: a2 = 0\n 17957: ecalli 7 // 'seal_return'\n 17959: jump @825\n      : @685 (gas: 6)\n 17962: a1 = 0x20280\n 17967: i32 a1 = a1 + 0\n 17969: a0 = 0x1\n 17972: a2 = 0\n 17974: ecalli 7 // 'seal_return'\n 17976: jump @825\n      : @686 (gas: 6)\n 17979: a1 = 0x20280\n 17984: i32 a1 = a1 + 0\n 17986: a0 = 0x1\n 17989: a2 = 0\n 17991: ecalli 7 // 'seal_return'\n 17993: jump @825\n      : @687 (gas: 6)\n 17996: a1 = 0x20280\n 18001: i32 a1 = a1 + 0\n 18003: a0 = 0x1\n 18006: a2 = 0\n 18008: ecalli 7 // 'seal_return'\n 18010: jump @825\n      : @688 (gas: 6)\n 18013: a1 = 0x20280\n 18018: i32 a1 = a1 + 0\n 18020: a0 = 0x1\n 18023: a2 = 0\n 18025: ecalli 7 // 'seal_return'\n 18027: jump @825\n      : @689 (gas: 6)\n 18030: a1 = 0x20280\n 18035: i32 a1 = a1 + 0\n 18037: a0 = 0x1\n 18040: a2 = 0\n 18042: ecalli 7 // 'seal_return'\n 18044: jump @825\n      : @690 (gas: 6)\n 18047: a1 = 0x20280\n 18052: i32 a1 = a1 + 0\n 18054: a0 = 0x1\n 18057: a2 = 0\n 18059: ecalli 7 // 'seal_return'\n 18061: jump @825\n      : @691 (gas: 6)\n 18064: a1 = 0x20280\n 18069: i32 a1 = a1 + 0\n 18071: a0 = 0x1\n 18074: a2 = 0\n 18076: ecalli 7 // 'seal_return'\n 18078: jump @825\n      : @692 (gas: 6)\n 18081: a1 = 0x20280\n 18086: i32 a1 = a1 + 0\n 18088: a0 = 0x1\n 18091: a2 = 0\n 18093: ecalli 7 // 'seal_return'\n 18095: jump @825\n      : @693 (gas: 6)\n 18098: a1 = 0x20280\n 18103: i32 a1 = a1 + 0\n 18105: a0 = 0x1\n 18108: a2 = 0\n 18110: ecalli 7 // 'seal_return'\n 18112: jump @825\n      : @694 (gas: 6)\n 18115: a1 = 0x20280\n 18120: i32 a1 = a1 + 0\n 18122: a0 = 0x1\n 18125: a2 = 0\n 18127: ecalli 7 // 'seal_return'\n 18129: jump @825\n      : @695 (gas: 6)\n 18132: u64 [s1 + 272] = 0\n 18136: u64 [s1 + 264] = 0\n 18140: u64 [s1 + 256] = 0\n 18144: t0 = 0x2a0\n 18148: a0 = 0x4e487b7100000000\n 18158: fallthrough\n      : @696 [@dyn 336] (gas: 4)\n 18159: a1 = s1 + 0x100\n 18163: u64 [s1 + 0x118] = a0\n 18167: a0 = 0\n 18169: ra = 674, jump @19\n      : @697 [@dyn 337] (gas: 7)\n 18175: u64 [s1 + 248] = 0\n 18179: u64 [s1 + 240] = 0\n 18183: u64 [s1 + 224] = 0x22\n 18188: a0 = 0x4\n 18191: a1 = s1 + 0xe0\n 18195: u64 [s1 + 232] = 0\n 18199: ra = 676, jump @19\n      : @698 [@dyn 338] (gas: 2)\n 18205: a1 = i32 [0x2026c]\n 18210: jump @700 if a1 >u 63\n      : @699 (gas: 3)\n 18214: u32 [0x2026c] = 0x40\n 18220: a1 = 0x20280\n 18225: jump @776\n      : @700 (gas: 2)\n 18228: a1 = 0x20280\n 18233: jump @776\n      : @701 (gas: 6)\n 18236: a1 = 0x20280\n 18241: i32 a1 = a1 + 0\n 18243: a0 = 0x1\n 18246: a2 = 0\n 18248: ecalli 7 // 'seal_return'\n 18250: jump @825\n      : @702 (gas: 6)\n 18253: a1 = 0x20280\n 18258: i32 a1 = a1 + 0\n 18260: a0 = 0x1\n 18263: a2 = 0\n 18265: ecalli 7 // 'seal_return'\n 18267: jump @825\n      : @703 (gas: 9)\n 18270: u64 [a2 + 344] = 0\n 18274: u64 [a2 + 336] = 0\n 18278: u64 [a2 + 328] = 0\n 18282: a0 = 0xe2517d3f00000000\n 18292: a1 = s1 + 0x7ff\n 18296: a1 = a1 + 0x181\n 18300: u64 [a2 + 0x160] = a0\n 18304: a0 = 0\n 18306: ra = 678, jump @19\n      : @704 [@dyn 339] (gas: 6)\n 18312: a0 = u64 [s1 + 0x20]\n 18315: ra = 0x2a8\n 18319: ecalli 3 // 'caller'\n 18321: a2 = u64 [s1 + 0x70]\n 18324: t0 = 0x2aa\n 18328: jump @1321\n      : @705 [@dyn 340] (gas: 2)\n 18331: a2 = u64 [s1 + 0x70]\n 18334: t0 = 682, jump @1321\n      : @706 [@dyn 341] (gas: 9)\n 18340: u64 [a2 + 320] = 0\n 18344: a4 = a2 + 0x100\n 18348: u64 [a4 + 0x38] = a1\n 18351: u64 [a4 + 0x30] = a0\n 18354: a0 = 0x4\n 18357: a1 = s1 + 0x7ff\n 18361: a1 = a1 + 0x161\n 18365: u64 [a4 + 0x28] = a3\n 18368: ra = 684, jump @19\n      : @707 [@dyn 342] (gas: 16)\n 18374: a0 = u64 [s1 + 0x40]\n 18377: a1 = s1 + 0x7ff\n 18381: a1 = a1 + 0x39\n 18384: a2 = a1 + 0x100\n 18388: u64 [a2 + 0x20] = a0\n 18391: a0 = u64 [s1 + 0x30]\n 18394: u64 [a2 + 0x18] = a0\n 18397: a0 = u64 [s1 + 0x28]\n 18400: u64 [a2 + 0x10] = a0\n 18403: a3 = a1\n 18405: a0 = 0x24\n 18408: a1 = s1 + 0x7ff\n 18412: a1 = a1 + 0x141\n 18416: a2 = u64 [s1 + 0x38]\n 18419: u64 [a3 + 0x108] = a2\n 18423: ra = 686, jump @19\n      : @708 [@dyn 343] (gas: 3)\n 18429: a0 = u64 [s1 + 0x98]\n 18433: a0 = i32 [a0]\n 18435: jump @710 if a0 >u 95\n      : @709 (gas: 7)\n 18439: a1 = u64 [s1 + 0x98]\n 18443: u32 [a1 + 0] = 0x60\n 18446: a0 = 0x1\n 18449: a2 = 0x44\n 18452: a1 = u64 [s1 + 0xb8]\n 18456: ecalli 7 // 'seal_return'\n 18458: jump @718\n      : @710 (gas: 5)\n 18461: a0 = 0x1\n 18464: a2 = 0x44\n 18467: a1 = u64 [s1 + 0xb8]\n 18471: ecalli 7 // 'seal_return'\n 18473: jump @718\n      : @711 (gas: 12)\n 18476: a0 = s1 + 0x7ff\n 18480: a0 = a0 + 0x39\n 18483: u64 [a0 + 408] = 0\n 18487: u64 [a0 + 400] = 0\n 18491: u64 [a0 + 392] = 0\n 18495: a2 = a0\n 18497: a0 = 0xec442f0500000000\n 18507: a1 = s1 + 0x7ff\n 18511: a1 = a1 + 0x1c1\n 18515: u64 [a2 + 0x1a0] = a0\n 18519: a0 = 0\n 18521: ra = 688, jump @19\n      : @712 [@dyn 344] (gas: 12)\n 18527: a0 = s1 + 0x7ff\n 18531: a0 = a0 + 0x39\n 18534: u64 [a0 + 384] = 0\n 18538: u64 [a0 + 376] = 0\n 18542: u64 [a0 + 368] = 0\n 18546: a2 = a0\n 18548: a0 = 0x4\n 18551: a1 = s1 + 0x7ff\n 18555: a1 = a1 + 0x1a1\n 18559: u64 [a2 + 360] = 0\n 18563: ra = 0x2b4\n 18567: jump @19\n      : @713 (gas: 12)\n 18570: a0 = s1 + 0x7ff\n 18574: a0 = a0 + 0x39\n 18577: u64 [a0 + 472] = 0\n 18581: u64 [a0 + 464] = 0\n 18585: u64 [a0 + 456] = 0\n 18589: a2 = a0\n 18591: a0 = 0x4e487b7100000000\n 18601: a1 = s1 + 0x7ff\n 18605: a1 = a1 + 0x201\n 18609: u64 [a2 + 0x1e0] = a0\n 18613: a0 = 0\n 18615: ra = 690, jump @19\n      : @714 [@dyn 345] (gas: 11)\n 18621: a1 = s1 + 0x7ff\n 18625: a1 = a1 + 0x39\n 18628: u64 [a1 + 448] = 0\n 18632: u64 [a1 + 440] = 0\n 18636: u64 [a1 + 424] = 0x11\n 18641: a2 = a1\n 18643: a0 = 0x4\n 18646: a1 = s1 + 0x7ff\n 18650: a1 = a1 + 0x1e1\n 18654: u64 [a2 + 432] = 0\n 18658: ra = 692, jump @19\n      : @715 [@dyn 346] (gas: 3)\n 18664: a0 = u64 [s1 + 0x98]\n 18668: a0 = i32 [a0]\n 18670: jump @717 if a0 >u 63\n      : @716 (gas: 7)\n 18674: a1 = u64 [s1 + 0x98]\n 18678: u32 [a1 + 0] = 0x40\n 18681: a0 = 0x1\n 18684: a2 = 0x24\n 18687: a1 = u64 [s1 + 0xb8]\n 18691: ecalli 7 // 'seal_return'\n 18693: jump @718\n      : @717 (gas: 5)\n 18695: a0 = 0x1\n 18698: a2 = 0x24\n 18701: a1 = u64 [s1 + 0xb8]\n 18705: ecalli 7 // 'seal_return'\n 18707: fallthrough\n      : @718 (gas: 6)\n 18708: a1 = 0x20280\n 18713: i32 a1 = a1 + 0\n 18715: a0 = 0x1\n 18718: a2 = 0\n 18720: ecalli 7 // 'seal_return'\n 18722: jump @825\n      : @719 (gas: 6)\n 18725: a1 = 0x20280\n 18730: i32 a1 = a1 + 0\n 18732: a0 = 0x1\n 18735: a2 = 0\n 18737: ecalli 7 // 'seal_return'\n 18739: jump @825\n      : @720 (gas: 12)\n 18742: a0 = s1 + 0x7ff\n 18746: a0 = a0 + 0x39\n 18749: u64 [a0 + 1944] = 0\n 18753: u64 [a0 + 1936] = 0\n 18757: u64 [a0 + 1928] = 0\n 18761: a2 = a0\n 18763: a0 = 0x4e487b7100000000\n 18773: a1 = s1 + 0x7ff\n 18777: a1 = a1 + 0x7c1\n 18781: u64 [a2 + 0x7a0] = a0\n 18785: a0 = 0\n 18787: ra = 694, jump @19\n      : @721 [@dyn 347] (gas: 11)\n 18793: a1 = s1 + 0x7ff\n 18797: a1 = a1 + 0x39\n 18800: u64 [a1 + 1920] = 0\n 18804: u64 [a1 + 1912] = 0\n 18808: u64 [a1 + 1896] = 0x22\n 18813: a2 = a1\n 18815: a0 = 0x4\n 18818: a1 = s1 + 0x7ff\n 18822: a1 = a1 + 0x7a1\n 18826: u64 [a2 + 1904] = 0\n 18830: ra = 696, jump @19\n      : @722 [@dyn 348] (gas: 2)\n 18836: a1 = i32 [0x2026c]\n 18841: jump @724 if a1 >u 63\n      : @723 (gas: 3)\n 18845: u32 [0x2026c] = 0x40\n 18851: a1 = 0x20280\n 18856: jump @776\n      : @724 (gas: 2)\n 18859: a1 = 0x20280\n 18864: jump @776\n      : @725 (gas: 6)\n 18867: a1 = 0x20280\n 18872: i32 a1 = a1 + 0\n 18874: a0 = 0x1\n 18877: a2 = 0\n 18879: ecalli 7 // 'seal_return'\n 18881: jump @825\n      : @726 (gas: 6)\n 18884: a1 = 0x20280\n 18889: i32 a1 = a1 + 0\n 18891: a0 = 0x1\n 18894: a2 = 0\n 18896: ecalli 7 // 'seal_return'\n 18898: jump @825\n      : @727 (gas: 9)\n 18901: u64 [a3 + 120] = 0\n 18904: u64 [a3 + 112] = 0\n 18907: a0 = 0x8dfc202b00000000\n 18917: u64 [a3 + 0x80] = a0\n 18921: a1 = s1 + 0x7ff\n 18925: a1 = a1 + 0xa1\n 18929: u64 [a3 + 104] = 0\n 18932: a0 = 0\n 18934: ra = 698, jump @19\n      : @728 [@dyn 349] (gas: 2)\n 18940: a1 = i32 [0x2026c]\n 18945: jump @730 if a1 >u 31\n      : @729 (gas: 3)\n 18949: u32 [0x2026c] = 0x20\n 18955: a1 = 0x20280\n 18960: jump @731\n      : @730 (gas: 2)\n 18962: a1 = 0x20280\n 18967: fallthrough\n      : @731 (gas: 5)\n 18968: i32 a1 = a1 + 0\n 18970: a0 = 0x1\n 18973: a2 = 0x4\n 18976: ecalli 7 // 'seal_return'\n 18978: fallthrough\n      : @732 (gas: 6)\n 18979: a1 = 0x20280\n 18984: i32 a1 = a1 + 0\n 18986: a0 = 0x1\n 18989: a2 = 0\n 18991: ecalli 7 // 'seal_return'\n 18993: jump @825\n      : @733 (gas: 6)\n 18996: a1 = 0x20280\n 19001: i32 a1 = a1 + 0\n 19003: a0 = 0x1\n 19006: a2 = 0\n 19008: ecalli 7 // 'seal_return'\n 19010: jump @825\n      : @734 (gas: 1)\n 19013: jump @781 if a0 != 3578229791\n      : @735 (gas: 11)\n 19021: a0 = s1 + 0x1838\n 19025: u64 [a0 + 736] = 0\n 19029: u64 [a0 + 728] = 0\n 19033: u64 [a0 + 720] = 0\n 19037: u64 [a0 + 712] = 0\n 19041: a0 = s1 + 0x2000\n 19045: i32 a0 = a0 + 0xfffffffffffffb00\n 19049: ra = 0x2bc\n 19053: ecalli 10 // 'value_transferred'\n 19055: t0 = 0x2be\n 19059: jump @1361\n      : @736 [@dyn 350] (gas: 1)\n 19062: t0 = 702, jump @1361\n      : @737 [@dyn 351] (gas: 1)\n 19068: t0 = 704, jump @1392\n      : @738 [@dyn 352] (gas: 1)\n 19074: jump @792 if a0 == 0\n      : @739 (gas: 6)\n 19078: a1 = 0x20280\n 19083: i32 a1 = a1 + 0\n 19085: a0 = 0x1\n 19088: a2 = 0\n 19090: ecalli 7 // 'seal_return'\n 19092: jump @825\n      : @740 (gas: 6)\n 19095: a1 = 0x20280\n 19100: i32 a1 = a1 + 0\n 19102: a0 = 0x1\n 19105: a2 = 0\n 19107: ecalli 7 // 'seal_return'\n 19109: jump @825\n      : @741 (gas: 6)\n 19112: a1 = 0x20280\n 19117: i32 a1 = a1 + 0\n 19119: a0 = 0x1\n 19122: a2 = 0\n 19124: ecalli 7 // 'seal_return'\n 19126: jump @825\n      : @742 (gas: 6)\n 19129: a1 = 0x20280\n 19134: i32 a1 = a1 + 0\n 19136: a0 = 0x1\n 19139: a2 = 0\n 19141: ecalli 7 // 'seal_return'\n 19143: jump @825\n      : @743 (gas: 6)\n 19146: a1 = 0x20280\n 19151: i32 a1 = a1 + 0\n 19153: a0 = 0x1\n 19156: a2 = 0\n 19158: ecalli 7 // 'seal_return'\n 19160: jump @825\n      : @744 (gas: 6)\n 19163: a1 = 0x20280\n 19168: i32 a1 = a1 + 0\n 19170: a0 = 0x1\n 19173: a2 = 0\n 19175: ecalli 7 // 'seal_return'\n 19177: jump @825\n      : @745 (gas: 6)\n 19180: a1 = 0x20280\n 19185: i32 a1 = a1 + 0\n 19187: a0 = 0x1\n 19190: a2 = 0\n 19192: ecalli 7 // 'seal_return'\n 19194: jump @825\n      : @746 (gas: 6)\n 19197: a1 = 0x20280\n 19202: i32 a1 = a1 + 0\n 19204: a0 = 0x1\n 19207: a2 = 0\n 19209: ecalli 7 // 'seal_return'\n 19211: jump @825\n      : @747 (gas: 6)\n 19214: a1 = 0x20280\n 19219: i32 a1 = a1 + 0\n 19221: a0 = 0x1\n 19224: a2 = 0\n 19226: ecalli 7 // 'seal_return'\n 19228: jump @825\n      : @748 (gas: 6)\n 19231: a1 = 0x20280\n 19236: i32 a1 = a1 + 0\n 19238: a0 = 0x1\n 19241: a2 = 0\n 19243: ecalli 7 // 'seal_return'\n 19245: jump @825\n      : @749 (gas: 6)\n 19248: a1 = 0x20280\n 19253: i32 a1 = a1 + 0\n 19255: a0 = 0x1\n 19258: a2 = 0\n 19260: ecalli 7 // 'seal_return'\n 19262: jump @825\n      : @750 (gas: 6)\n 19265: a1 = 0x20280\n 19270: i32 a1 = a1 + 0\n 19272: a0 = 0x1\n 19275: a2 = 0\n 19277: ecalli 7 // 'seal_return'\n 19279: jump @825\n      : @751 (gas: 6)\n 19282: a1 = 0x20280\n 19287: i32 a1 = a1 + 0\n 19289: a0 = 0x1\n 19292: a2 = 0\n 19294: ecalli 7 // 'seal_return'\n 19296: jump @825\n      : @752 (gas: 6)\n 19299: a1 = 0x20280\n 19304: i32 a1 = a1 + 0\n 19306: a0 = 0x1\n 19309: a2 = 0\n 19311: ecalli 7 // 'seal_return'\n 19313: jump @825\n      : @753 (gas: 6)\n 19316: a1 = 0x20280\n 19321: i32 a1 = a1 + 0\n 19323: a0 = 0x1\n 19326: a2 = 0\n 19328: ecalli 7 // 'seal_return'\n 19330: jump @825\n      : @754 (gas: 8)\n 19333: u64 [s1 + 752] = 0\n 19337: u64 [s1 + 744] = 0\n 19341: u64 [s1 + 736] = 0\n 19345: a0 = 0xe602df0500000000\n 19355: a1 = s1 + 0x2e0\n 19359: u64 [s1 + 0x2f8] = a0\n 19363: a0 = 0\n 19365: ra = 706, jump @19\n      : @755 [@dyn 353] (gas: 7)\n 19371: u64 [s1 + 728] = 0\n 19375: u64 [s1 + 720] = 0\n 19379: u64 [s1 + 712] = 0\n 19383: a0 = 0x4\n 19386: a1 = s1 + 0x2c0\n 19390: u64 [s1 + 704] = 0\n 19394: ra = 708, jump @19\n      : @756 [@dyn 354] (gas: 2)\n 19400: a1 = i32 [0x2026c]\n 19405: jump @758 if a1 >u 63\n      : @757 (gas: 3)\n 19409: u32 [0x2026c] = 0x40\n 19415: a1 = 0x20280\n 19420: jump @776\n      : @758 (gas: 2)\n 19423: a1 = 0x20280\n 19428: jump @776\n      : @759 (gas: 8)\n 19431: u64 [s1 + 816] = 0\n 19435: u64 [s1 + 808] = 0\n 19439: u64 [s1 + 800] = 0\n 19443: a0 = 0x94280d6200000000\n 19453: a1 = s1 + 0x320\n 19457: u64 [s1 + 0x338] = a0\n 19461: a0 = 0\n 19463: ra = 710, jump @19\n      : @760 [@dyn 355] (gas: 7)\n 19469: u64 [s1 + 792] = 0\n 19473: u64 [s1 + 784] = 0\n 19477: u64 [s1 + 776] = 0\n 19481: a0 = 0x4\n 19484: a1 = s1 + 0x300\n 19488: u64 [s1 + 768] = 0\n 19492: ra = 712, jump @19\n      : @761 [@dyn 356] (gas: 2)\n 19498: a1 = i32 [0x2026c]\n 19503: jump @763 if a1 >u 63\n      : @762 (gas: 3)\n 19507: u32 [0x2026c] = 0x40\n 19513: a1 = 0x20280\n 19518: jump @776\n      : @763 (gas: 2)\n 19521: a1 = 0x20280\n 19526: jump @776\n      : @764 (gas: 6)\n 19529: u64 [s1 + 336] = 0\n 19533: u64 [s1 + 328] = 0\n 19537: u64 [s1 + 320] = 0\n 19541: t0 = 0x2ca\n 19545: a0 = 0x4e487b7100000000\n 19555: fallthrough\n      : @765 [@dyn 357] (gas: 4)\n 19556: a1 = s1 + 0x140\n 19560: u64 [s1 + 0x158] = a0\n 19564: a0 = 0\n 19566: ra = 716, jump @19\n      : @766 [@dyn 358] (gas: 7)\n 19572: u64 [s1 + 312] = 0\n 19576: u64 [s1 + 304] = 0\n 19580: u64 [s1 + 288] = 0x41\n 19585: a0 = 0x4\n 19588: a1 = s1 + 0x120\n 19592: u64 [s1 + 296] = 0\n 19596: ra = 718, jump @19\n      : @767 [@dyn 359] (gas: 2)\n 19602: a1 = i32 [0x2026c]\n 19607: jump @769 if a1 >u 63\n      : @768 (gas: 3)\n 19611: u32 [0x2026c] = 0x40\n 19617: a1 = 0x20280\n 19622: jump @776\n      : @769 (gas: 2)\n 19625: a1 = 0x20280\n 19630: jump @776\n      : @770 (gas: 9)\n 19632: a0 = s1 + 0x7ff\n 19636: a0 = a0 + 0x39\n 19639: u64 [a0 + 2008] = 0\n 19643: u64 [a0 + 2000] = 0\n 19647: u64 [a0 + 1992] = 0\n 19651: a2 = a0\n 19653: t0 = 0x2d0\n 19657: a0 = 0x4e487b7100000000\n 19667: fallthrough\n      : @771 [@dyn 360] (gas: 4)\n 19668: a1 = s1 + 0x1000\n 19672: u64 [a2 + 0x7e0] = a0\n 19676: a0 = 0\n 19678: ra = 722, jump @19\n      : @772 [@dyn 361] (gas: 11)\n 19684: a1 = s1 + 0x7ff\n 19688: a1 = a1 + 0x39\n 19691: u64 [a1 + 1984] = 0\n 19695: u64 [a1 + 1976] = 0\n 19699: u64 [a1 + 1960] = 0x41\n 19704: a2 = a1\n 19706: a0 = 0x4\n 19709: a1 = s1 + 0x7ff\n 19713: a1 = a1 + 0x7e1\n 19717: u64 [a2 + 1968] = 0\n 19721: ra = 724, jump @19\n      : @773 [@dyn 362] (gas: 2)\n 19727: a1 = i32 [0x2026c]\n 19732: jump @775 if a1 >u 63\n      : @774 (gas: 3)\n 19736: u32 [0x2026c] = 0x40\n 19742: a1 = 0x20280\n 19747: jump @776\n      : @775 (gas: 2)\n 19749: a1 = 0x20280\n 19754: fallthrough\n      : @776 (gas: 5)\n 19755: i32 a1 = a1 + 0\n 19757: a0 = 0x1\n 19760: a2 = 0x24\n 19763: ecalli 7 // 'seal_return'\n 19765: fallthrough\n      : @777 (gas: 7)\n 19766: u64 [s1 + 856] = 0\n 19770: u64 [s1 + 848] = 0\n 19774: u64 [s1 + 840] = 0\n 19778: a1 = s1 + 0x340\n 19782: u64 [s1 + 832] = 0x1\n 19787: u64 [s1 + 0xb8] = a0\n 19791: ra = 726, jump @19\n      : @778 [@dyn 363] (gas: 3)\n 19797: a1 = 0x20\n 19800: a0 = u64 [s1 + 0xb8]\n 19804: ra = 728, jump @33\n      : @779 [@dyn 364] (gas: 6)\n 19810: i32 a1 = a0 + 0\n 19812: a2 = 0x20\n 19815: a0 = 0\n 19817: ra = 0x2da\n 19821: ecalli 7 // 'seal_return'\n 19823: jump @781\n      : @780 (gas: 5)\n 19825: a2 = 0x20\n 19828: a0 = 0\n 19830: ra = 0x2da\n 19834: ecalli 7 // 'seal_return'\n 19836: fallthrough\n      : @781 [@dyn 365] (gas: 1)\n 19837: jump @787 if a0 != 33540519\n      : @782 (gas: 11)\n 19844: a0 = s1 + 0x1038\n 19848: u64 [a0 + 1312] = 0\n 19852: u64 [a0 + 1304] = 0\n 19856: u64 [a0 + 1296] = 0\n 19860: u64 [a0 + 1288] = 0\n 19864: a0 = s1 + 0x1000\n 19868: i32 a0 = a0 + 0x540\n 19872: ra = 0x2dc\n 19876: ecalli 10 // 'value_transferred'\n 19878: t0 = 0x2de\n 19882: jump @1398\n      : @783 [@dyn 366] (gas: 1)\n 19885: t0 = 734, jump @1398\n      : @784 [@dyn 367] (gas: 1)\n 19891: t0 = 736, jump @1362\n      : @785 [@dyn 368] (gas: 1)\n 19897: jump @799 if a0 == 0\n      : @786 (gas: 6)\n 19901: a1 = 0x20280\n 19906: i32 a1 = a1 + 0\n 19908: a0 = 0x1\n 19911: a2 = 0\n 19913: ecalli 7 // 'seal_return'\n 19915: jump @825\n      : @787 (gas: 1)\n 19918: jump @794 if a0 != 791671133\n      : @788 (gas: 11)\n 19926: a0 = s1 + 0x1038\n 19930: u64 [a0 + 1696] = 0\n 19934: u64 [a0 + 1688] = 0\n 19938: u64 [a0 + 1680] = 0\n 19942: u64 [a0 + 1672] = 0\n 19946: a0 = s1 + 0x1000\n 19950: i32 a0 = a0 + 0x6c0\n 19954: ra = 0x2e2\n 19958: ecalli 10 // 'value_transferred'\n 19960: t0 = 0x2e4\n 19964: jump @1354\n      : @789 [@dyn 369] (gas: 1)\n 19967: t0 = 740, jump @1354\n      : @790 [@dyn 370] (gas: 8)\n 19973: a0 = u64 [a4 + 0x98]\n 19977: a1 = u64 [a4 + 0xa0]\n 19981: a2 = u64 [a4 + 0x90]\n 19985: a3 = u64 [a4 + 0x88]\n 19989: a1 = a1 | a2\n 19992: a0 = a0 | a3\n 19995: a0 = a0 | a1\n 19998: jump @810 if a0 == 0\n      : @791 (gas: 6)\n 20002: a1 = 0x20280\n 20007: i32 a1 = a1 + 0\n 20009: a0 = 0x1\n 20012: a2 = 0\n 20014: ecalli 7 // 'seal_return'\n 20016: jump @825\n      : @792 (gas: 3)\n 20019: a0 = u64 [s1 + 0xb8]\n 20023: a0 = i32 [a0]\n 20025: jump @801 if a0 >u 67\n      : @793 (gas: 6)\n 20030: a1 = 0x20280\n 20035: i32 a1 = a1 + 0\n 20037: a0 = 0x1\n 20040: a2 = 0\n 20042: ecalli 7 // 'seal_return'\n 20044: jump @825\n      : @794 (gas: 1)\n 20047: jump @806 if a0 != 911641278\n      : @795 (gas: 11)\n 20055: a0 = s1 + 0x1038\n 20059: u64 [a0 + 1792] = 0\n 20063: u64 [a0 + 1784] = 0\n 20067: u64 [a0 + 1776] = 0\n 20071: u64 [a0 + 1768] = 0\n 20075: a0 = s1 + 0x1000\n 20079: i32 a0 = a0 + 0x720\n 20083: ra = 0x2e6\n 20087: ecalli 10 // 'value_transferred'\n 20089: t0 = 0x2e8\n 20093: jump @1354\n      : @796 [@dyn 371] (gas: 1)\n 20096: t0 = 744, jump @1354\n      : @797 [@dyn 372] (gas: 8)\n 20102: a0 = u64 [a4 + 0xf8]\n 20106: a1 = u64 [a3 + 0x700]\n 20110: a2 = u64 [a4 + 0xf0]\n 20114: a3 = u64 [a4 + 0xe8]\n 20118: a1 = a1 | a2\n 20121: a0 = a0 | a3\n 20124: a0 = a0 | a1\n 20127: jump @815 if a0 == 0\n      : @798 (gas: 6)\n 20131: a1 = 0x20280\n 20136: i32 a1 = a1 + 0\n 20138: a0 = 0x1\n 20141: a2 = 0\n 20143: ecalli 7 // 'seal_return'\n 20145: jump @825\n      : @799 (gas: 3)\n 20148: a0 = u64 [s1 + 0xb8]\n 20152: a0 = i32 [a0]\n 20154: jump @812 if a0 >u 35\n      : @800 (gas: 6)\n 20159: a1 = 0x20280\n 20164: i32 a1 = a1 + 0\n 20166: a0 = 0x1\n 20169: a2 = 0\n 20171: ecalli 7 // 'seal_return'\n 20173: jump @825\n      : @801 (gas: 18)\n 20176: a0 = s1 + 0x2000\n 20180: i32 a0 = a0 + 0xfffffffffffffb20\n 20184: a1 = 0x4\n 20187: ecalli 1 // 'call_data_load'\n 20189: a0 = s1 + 0x1838\n 20193: a2 = a0 + 0x200\n 20197: a1 = u64 [a2 + 0xe8]\n 20201: u64 [s1 + 0xb8] = a1\n 20205: a1 = u64 [a2 + 0xf0]\n 20209: u64 [s1 + 0xb0] = a1\n 20213: a1 = u64 [a2 + 0xf8]\n 20217: u64 [s1 + 0xa8] = a1\n 20221: a0 = u64 [a0 + 0x300]\n 20225: u64 [s1 + 0xa0] = a0\n 20229: a0 = s1 + 0x1380\n 20233: ra = 0x2ea\n 20237: t0 = 0x3fc\n 20241: jump @1397\n      : @802 [@dyn 373] (gas: 22)\n 20244: a1 = s1 + 0x1038\n 20248: a2 = a1 + 0x300\n 20252: a0 = u64 [a2 + 0x48]\n 20255: u64 [s1 + 0x98] = a0\n 20259: a0 = u64 [a2 + 0x50]\n 20262: u64 [s1 + 0x90] = a0\n 20266: a0 = u64 [a2 + 0x58]\n 20269: u64 [s1 + 0x88] = a0\n 20273: a0 = u64 [a2 + 0x60]\n 20276: u64 [s1 + 0x80] = a0\n 20280: a0 = u64 [s1 + 0xa0]\n 20284: u64 [a2 + 0x20] = a0\n 20287: a0 = u64 [s1 + 0xa8]\n 20291: u64 [a2 + 0x18] = a0\n 20294: a0 = u64 [s1 + 0xb0]\n 20298: u64 [a2 + 0x10] = a0\n 20301: a3 = a1\n 20303: a0 = s1 + 0x1360\n 20307: a1 = s1 + 0x1340\n 20311: a2 = u64 [s1 + 0xb8]\n 20315: u64 [a3 + 0x308] = a2\n 20319: ra = 748, jump @1024\n      : @803 [@dyn 374] (gas: 13)\n 20325: a4 = s1 + 0x1038\n 20329: a5 = a4 + 0x300\n 20333: a1 = u64 [a5 + 0x28]\n 20336: a0 = u64 [a5 + 0x30]\n 20339: a2 = u64 [a5 + 0x38]\n 20342: a3 = u64 [a5 + 0x40]\n 20345: u64 [a5] = a3\n 20347: a3 = a4 + 0x200\n 20351: u64 [a3 + 0xf8] = a2\n 20355: u64 [a3 + 0xf0] = a0\n 20359: a0 = s1 + 0x1320\n 20363: u64 [a3 + 0xe8] = a1\n 20367: ra = 750, jump @1160\n      : @804 [@dyn 375] (gas: 25)\n 20373: a0 = s1 + 0x1038\n 20377: a1 = u64 [s1 + 0x80]\n 20381: a2 = a0 + 0x200\n 20385: u64 [a2 + 0xa0] = a1\n 20389: a1 = u64 [s1 + 0x88]\n 20393: u64 [a2 + 0x98] = a1\n 20397: a1 = u64 [s1 + 0x90]\n 20401: u64 [a2 + 0x90] = a1\n 20405: a1 = u64 [s1 + 0x98]\n 20409: u64 [a2 + 0x88] = a1\n 20413: a1 = u64 [s1 + 0xa0]\n 20417: u64 [a2 + 0xc0] = a1\n 20421: a1 = u64 [s1 + 0xa8]\n 20425: u64 [a2 + 0xb8] = a1\n 20429: a1 = u64 [s1 + 0xb0]\n 20433: u64 [a2 + 0xb0] = a1\n 20437: a4 = a0\n 20439: a0 = s1 + 0x1300\n 20443: a1 = s1 + 0x12e0\n 20447: a2 = s1 + 0x12c0\n 20451: a3 = u64 [s1 + 0xb8]\n 20455: u64 [a4 + 0x2a8] = a3\n 20459: ra = 0x2f0\n 20463: t0 = 0x51a\n 20467: jump @1381\n      : @805 [@dyn 376] (gas: 2)\n 20470: a1 = 0x20280\n 20475: jump @576\n      : @806 (gas: 1)\n 20478: jump @817 if a0 != 1117154408\n      : @807 (gas: 9)\n 20486: a0 = s1 + 0x1838\n 20490: u64 [a0 + 96] = 0\n 20493: u64 [a0 + 88] = 0\n 20496: u64 [a0 + 80] = 0\n 20499: u64 [a0 + 72] = 0\n 20502: a0 = s1 + 0x2000\n 20506: i32 a0 = a0 + 0xfffffffffffff880\n 20510: ecalli 10 // 'value_transferred'\n 20512: fallthrough\n      : @808 (gas: 9)\n 20513: a3 = s1 + 0x1838\n 20517: a0 = u64 [a3 + 0x58]\n 20520: a1 = u64 [a3 + 0x60]\n 20523: a2 = u64 [a3 + 0x50]\n 20526: a3 = u64 [a3 + 0x48]\n 20529: a1 = a1 | a2\n 20532: a0 = a0 | a3\n 20535: a0 = a0 | a1\n 20538: jump @825 if a0 == 0\n      : @809 (gas: 6)\n 20542: a1 = 0x20280\n 20547: i32 a1 = a1 + 0\n 20549: a0 = 0x1\n 20552: a2 = 0\n 20554: ecalli 7 // 'seal_return'\n 20556: jump @825\n      : @810 (gas: 3)\n 20559: a0 = u64 [s1 + 0xb8]\n 20563: a0 = i32 [a0]\n 20565: jump @827 if a0 >u 67\n      : @811 (gas: 6)\n 20570: a1 = 0x20280\n 20575: i32 a1 = a1 + 0\n 20577: a0 = 0x1\n 20580: a2 = 0\n 20582: ecalli 7 // 'seal_return'\n 20584: jump @825\n      : @812 (gas: 7)\n 20587: a0 = s1 + 0x1000\n 20591: i32 a0 = a0 + 0x560\n 20595: a1 = 0x4\n 20598: ecalli 1 // 'call_data_load'\n 20600: t0 = 0x2f2\n 20604: a1 = s1 + 0x1038\n 20608: fallthrough\n      : @813 [@dyn 377] (gas: 11)\n 20609: a4 = a1 + 0x500\n 20613: a0 = u64 [a4 + 0x40]\n 20616: a2 = u64 [a4 + 0x38]\n 20619: a3 = u64 [a4 + 0x28]\n 20622: a1 = u64 [a4 + 0x30]\n 20625: a4 = a0 << 0x20\n 20628: a4 = a4 >> 0x20\n 20631: a2 = a2 | a3\n 20634: a4 = a4 | a1\n 20637: a4 = a4 | a2\n 20640: jump @832 if a4 == 0\n      : @814 (gas: 6)\n 20644: a1 = 0x20280\n 20649: i32 a1 = a1 + 0\n 20651: a0 = 0x1\n 20654: a2 = 0\n 20656: ecalli 7 // 'seal_return'\n 20658: jump @825\n      : @815 (gas: 4)\n 20661: a0 = u64 [s1 + 0xb8]\n 20665: a0 = i32 [a0]\n 20667: a1 = 0x43\n 20670: jump @836 if a1 <u a0\n      : @816 (gas: 6)\n 20674: a1 = 0x20280\n 20679: i32 a1 = a1 + 0\n 20681: a0 = 0x1\n 20684: a2 = 0\n 20686: ecalli 7 // 'seal_return'\n 20688: jump @825\n      : @817 (gas: 1)\n 20690: jump @823 if a0 != 2043438992\n      : @818 (gas: 11)\n 20697: a0 = s1 + 0x1838\n 20701: u64 [a0 + 288] = 0\n 20705: u64 [a0 + 280] = 0\n 20709: u64 [a0 + 272] = 0\n 20713: u64 [a0 + 264] = 0\n 20717: a0 = s1 + 0x2000\n 20721: i32 a0 = a0 + 0xfffffffffffff940\n 20725: ra = 0x2f4\n 20729: ecalli 10 // 'value_transferred'\n 20731: t0 = 0x2f6\n 20735: jump @1376\n      : @819 [@dyn 378] (gas: 1)\n 20738: t0 = 758, jump @1376\n      : @820 [@dyn 379] (gas: 1)\n 20744: t0 = 760, jump @1362\n      : @821 [@dyn 380] (gas: 1)\n 20750: jump @841 if a0 == 0\n      : @822 (gas: 6)\n 20754: a1 = 0x20280\n 20759: i32 a1 = a1 + 0\n 20761: a0 = 0x1\n 20764: a2 = 0\n 20766: ecalli 7 // 'seal_return'\n 20768: jump @825\n      : @823 (gas: 6)\n 20770: a1 = 0x20280\n 20775: i32 a1 = a1 + 0\n 20777: a0 = 0x1\n 20780: a2 = 0\n 20782: ecalli 7 // 'seal_return'\n 20784: jump @825\n      : @824 (gas: 5)\n 20786: i32 a1 = a1 + 0\n 20788: a0 = 0x1\n 20791: a2 = 0\n 20793: ecalli 7 // 'seal_return'\n 20795: fallthrough\n      : @825 (gas: 3)\n 20796: a0 = u64 [s1 + 0xb8]\n 20800: a0 = i32 [a0]\n 20802: jump @843 if a0 >u 35\n      : @826 (gas: 2)\n 20807: a1 = 0x20280\n 20812: jump @824\n      : @827 (gas: 18)\n 20814: a0 = s1 + 0x1000\n 20818: i32 a0 = a0 + 0x6e0\n 20822: a1 = 0x4\n 20825: ecalli 1 // 'call_data_load'\n 20827: a0 = s1 + 0x1038\n 20831: a2 = a0 + 0x600\n 20835: a1 = u64 [a2 + 0xa8]\n 20839: u64 [s1 + 0xb8] = a1\n 20843: a1 = u64 [a2 + 0xb0]\n 20847: u64 [s1 + 0xb0] = a1\n 20851: a1 = u64 [a2 + 0xb8]\n 20855: u64 [s1 + 0xa8] = a1\n 20859: a0 = u64 [a2 + 0xc0]\n 20863: u64 [s1 + 0xa0] = a0\n 20867: a0 = s1 + 0x7a0\n 20871: ra = 0x2fa\n 20875: t0 = 0x3fc\n 20879: jump @1397\n      : @828 [@dyn 381] (gas: 19)\n 20882: a0 = u64 [s1 + 0x7a0]\n 20886: u64 [s1 + 0x98] = a0\n 20890: a0 = u64 [s1 + 0x7a8]\n 20894: u64 [s1 + 0x90] = a0\n 20898: a0 = u64 [s1 + 0x7b0]\n 20902: u64 [s1 + 0x88] = a0\n 20906: a0 = u64 [s1 + 0x7b8]\n 20910: u64 [s1 + 0x80] = a0\n 20914: a0 = u64 [s1 + 0xa0]\n 20918: u64 [s1 + 0x778] = a0\n 20922: a0 = u64 [s1 + 0xa8]\n 20926: u64 [s1 + 0x770] = a0\n 20930: a0 = u64 [s1 + 0xb0]\n 20934: u64 [s1 + 0x768] = a0\n 20938: a0 = s1 + 0x780\n 20942: a1 = s1 + 0x760\n 20946: a2 = u64 [s1 + 0xb8]\n 20950: u64 [s1 + 0x760] = a2\n 20954: ra = 764, jump @1024\n      : @829 [@dyn 382] (gas: 10)\n 20960: a1 = u64 [s1 + 0x780]\n 20964: a0 = u64 [s1 + 0x788]\n 20968: a2 = u64 [s1 + 0x790]\n 20972: a3 = u64 [s1 + 0x798]\n 20976: u64 [s1 + 0x758] = a3\n 20980: u64 [s1 + 0x750] = a2\n 20984: u64 [s1 + 0x748] = a0\n 20988: a0 = s1 + 0x740\n 20992: u64 [s1 + 0x740] = a1\n 20996: ra = 766, jump @1160\n      : @830 [@dyn 383] (gas: 24)\n 21002: a0 = u64 [s1 + 0x80]\n 21006: a1 = s1 + 0x600\n 21010: u64 [a1 + 0xf8] = a0\n 21014: a0 = u64 [s1 + 0x88]\n 21018: u64 [a1 + 0xf0] = a0\n 21022: a0 = u64 [s1 + 0x90]\n 21026: u64 [a1 + 0xe8] = a0\n 21030: a0 = u64 [s1 + 0x98]\n 21034: u64 [a1 + 0xe0] = a0\n 21038: a0 = u64 [s1 + 0xa0]\n 21042: a4 = s1 + 0x700\n 21046: u64 [a4 + 0x18] = a0\n 21049: a0 = u64 [s1 + 0xa8]\n 21053: u64 [a4 + 0x10] = a0\n 21056: a0 = u64 [s1 + 0xb0]\n 21060: u64 [a4 + 0x8] = a0\n 21063: a0 = s1 + 0x720\n 21067: a1 = s1 + 0x700\n 21071: a2 = s1 + 0x6e0\n 21075: a3 = u64 [s1 + 0xb8]\n 21079: u64 [a4] = a3\n 21081: ra = 0x300\n 21085: t0 = 0x4d8\n 21089: jump @1381\n      : @831 [@dyn 384] (gas: 2)\n 21092: a1 = 0x20280\n 21097: jump @576\n      : @832 (gas: 18)\n 21100: a3 = 0x7965db0b00000000\n 21110: a3 = a3 ^ a0\n 21113: a3 = a3 | a1\n 21116: a3 = a3 | a2\n 21119: a3 = a3 <u 0x1\n 21122: a4 = 0x1ffc9a700000000\n 21132: a0 = a0 ^ a4\n 21135: a0 = a0 | a1\n 21138: a0 = a0 | a2\n 21141: a0 = a0 <u 0x1\n 21144: a0 = a0 | a3\n 21147: u64 [s1 + 216] = 0\n 21151: u64 [s1 + 208] = 0\n 21155: u64 [s1 + 0xc0] = a0\n 21159: a0 = 0x80\n 21163: a1 = s1 + 0xc0\n 21167: u64 [s1 + 200] = 0\n 21171: ra = 770, jump @19\n      : @833 [@dyn 385] (gas: 2)\n 21177: a1 = i32 [0x2026c]\n 21182: jump @835 if a1 >u 159\n      : @834 (gas: 4)\n 21187: u32 [0x2026c] = 0xa0\n 21194: a0 = 0x20280\n 21199: i32 a1 = a0 + 0x80\n 21203: jump @780\n      : @835 (gas: 3)\n 21206: a0 = 0x20280\n 21211: i32 a1 = a0 + 0x80\n 21215: jump @780\n      : @836 (gas: 5)\n 21218: a0 = s1 + 0x7ff\n 21222: a0 = a0 + 0x81\n 21226: ra = 0x304\n 21230: t0 = 0x3fc\n 21234: jump @1397\n      : @837 [@dyn 386] (gas: 15)\n 21237: a0 = s1 + 0x7ff\n 21241: a0 = a0 + 0x39\n 21244: a1 = u64 [a0 + 0x60]\n 21247: u64 [s1 + 0xa0] = a1\n 21251: a1 = u64 [a0 + 0x58]\n 21254: u64 [s1 + 0xa8] = a1\n 21258: a1 = u64 [a0 + 0x50]\n 21261: u64 [s1 + 0xb0] = a1\n 21265: a0 = u64 [a0 + 0x48]\n 21268: u64 [s1 + 0xb8] = a0\n 21272: a0 = 0x30280\n 21277: u64 [s1 + 0x98] = a0\n 21281: i32 a0 = a0 + 0\n 21283: ecalli 3 // 'caller'\n 21285: fallthrough\n      : @838 (gas: 25)\n 21286: a2 = u64 [s1 + 0x98]\n 21290: a0 = u64 [a2 + 0x8]\n 21293: a1 = u64 [a2]\n 21295: a2 = i32 [a2 + 0x10]\n 21298: a0 = reverse a0\n 21300: a3 = a0 >> 0x20\n 21303: a1 = reverse a1\n 21305: a4 = a1 << 0x20\n 21308: a3 = a3 | a4\n 21311: a0 = a0 << 0x20\n 21314: a2 = reverse a2\n 21316: a2 = a2 >> 0x20\n 21319: a0 = a0 | a2\n 21322: a1 = a1 >> 0x20\n 21325: a2 = u64 [s1 + 0xa8]\n 21329: a2 = a2 << 0x20\n 21332: a2 = a2 >> 0x20\n 21335: a1 = a1 ^ a2\n 21338: a2 = u64 [s1 + 0xb8]\n 21342: a0 = a0 ^ a2\n 21345: a0 = a0 | a1\n 21348: a1 = u64 [s1 + 0xb0]\n 21352: a1 = a1 ^ a3\n 21355: a0 = a0 | a1\n 21358: jump @847 if a0 != 0\n      : @839 (gas: 39)\n 21362: a0 = s1 + 0x1000\n 21366: i32 a0 = a0 + 0x740\n 21370: a1 = 0x4\n 21373: ecalli 1 // 'call_data_load'\n 21375: a2 = s1 + 0x1038\n 21379: a4 = a2 + 0x700\n 21383: a3 = u64 [a4 + 0x8]\n 21386: a0 = u64 [a4 + 0x10]\n 21389: a1 = u64 [a4 + 0x18]\n 21392: a2 = u64 [a4 + 0x20]\n 21395: a4 = u64 [s1 + 0xa0]\n 21399: a5 = s1 + 0x1000\n 21403: u64 [a5 + 0xfffffffffffff818] = a4\n 21407: a4 = u64 [s1 + 0xa8]\n 21411: a5 = s1 + 0x1000\n 21415: u64 [a5 + 0xfffffffffffff810] = a4\n 21419: a4 = u64 [s1 + 0xb0]\n 21423: a5 = s1 + 0x1000\n 21427: u64 [a5 + 0xfffffffffffff808] = a4\n 21431: a4 = u64 [s1 + 0xb8]\n 21435: a5 = s1 + 0x1000\n 21439: u64 [a5 + 0xfffffffffffff800] = a4\n 21443: a4 = s1 + 0x7ff\n 21447: a4 = a4 + 0x39\n 21450: u64 [a4] = a2\n 21452: u64 [a4 + 0xfffffffffffffff8] = a1\n 21455: a1 = s1 + 0x1000\n 21459: u64 [a1 + 0xfffffffffffff828] = a0\n 21463: a0 = s1 + 0x7ff\n 21467: a0 = a0 + 0x41\n 21470: a1 = s1 + 0x7ff\n 21474: a1 = a1 + 0x21\n 21477: a2 = s1 + 0x7ff\n 21481: a2 = a2 + 0x1\n 21484: a4 = s1 + 0x1000\n 21488: u64 [a4 + 0xfffffffffffff820] = a3\n 21492: ra = 0x306\n 21496: t0 = 0x51a\n 21500: jump @1381\n      : @840 [@dyn 387] (gas: 2)\n 21503: a1 = 0x20280\n 21508: jump @576\n      : @841 (gas: 4)\n 21511: a0 = u64 [s1 + 0xb8]\n 21515: a0 = i32 [a0]\n 21517: a1 = 0x43\n 21520: jump @851 if a1 <u a0\n      : @842 (gas: 2)\n 21524: a1 = 0x20280\n 21529: jump @824\n      : @843 (gas: 21)\n 21532: a0 = s1 + 0x2000\n 21536: i32 a0 = a0 + 0xfffffffffffff8a0\n 21540: a1 = 0x4\n 21543: ecalli 1 // 'call_data_load'\n 21545: a0 = s1 + 0x1838\n 21549: a1 = u64 [a0 + 0x68]\n 21552: u64 [s1 + 0xb8] = a1\n 21556: a1 = u64 [a0 + 0x70]\n 21559: u64 [s1 + 0xb0] = a1\n 21563: a1 = u64 [a0 + 0x78]\n 21566: u64 [s1 + 0xa8] = a1\n 21570: a0 = u64 [a0 + 0x80]\n 21574: u64 [s1 + 0xa0] = a0\n 21578: a0 = 0x30280\n 21583: u64 [s1 + 0x98] = a0\n 21587: i32 a0 = a0 + 0\n 21589: ra = 0x308\n 21593: ecalli 3 // 'caller'\n 21595: a2 = u64 [s1 + 0x98]\n 21599: t0 = 0x30a\n 21603: jump @1321\n      : @844 [@dyn 388] (gas: 2)\n 21606: a2 = u64 [s1 + 0x98]\n 21610: t0 = 778, jump @1321\n      : @845 [@dyn 389] (gas: 18)\n 21616: a4 = u64 [s1 + 0xa0]\n 21620: a5 = a2 + 0x300\n 21624: u64 [a5 + 0xe0] = a4\n 21628: a4 = u64 [s1 + 0xa8]\n 21632: u64 [a5 + 0xd8] = a4\n 21636: a4 = u64 [s1 + 0xb0]\n 21640: u64 [a5 + 0xd0] = a4\n 21644: a4 = u64 [s1 + 0xb8]\n 21648: u64 [a5 + 0xc8] = a4\n 21652: u64 [a2 + 1024] = 0\n 21656: u64 [a5 + 0xf8] = a1\n 21660: u64 [a5 + 0xf0] = a0\n 21664: a0 = s1 + 0x7ff\n 21668: a0 = a0 + 0x421\n 21672: a1 = s1 + 0x7ff\n 21676: a1 = a1 + 0x401\n 21680: u64 [a5 + 0xe8] = a3\n 21684: ra = 780, jump @1273\n      : @846 [@dyn 390] (gas: 2)\n 21690: a1 = 0x20280\n 21695: jump @576\n      : @847 (gas: 11)\n 21698: a2 = s1 + 0x7ff\n 21702: a2 = a2 + 0x39\n 21705: u64 [a2 + 56] = 0\n 21708: u64 [a2 + 48] = 0\n 21711: a0 = 0x6697b23200000000\n 21721: u64 [a2 + 0x40] = a0\n 21724: a1 = s1 + 0x7ff\n 21728: a1 = a1 + 0x61\n 21731: u64 [a2 + 40] = 0\n 21734: a0 = 0\n 21736: ra = 782, jump @19\n      : @848 [@dyn 391] (gas: 2)\n 21742: a1 = i32 [0x2026c]\n 21747: jump @850 if a1 >u 31\n      : @849 (gas: 3)\n 21751: u32 [0x2026c] = 0x20\n 21757: a1 = 0x20280\n 21762: jump @731\n      : @850 (gas: 2)\n 21765: a1 = 0x20280\n 21770: jump @731\n      : @851 (gas: 5)\n 21773: a0 = s1 + 0x7ff\n 21777: a0 = a0 + 0x601\n 21781: ra = 0x310\n 21785: t0 = 0x3f2\n 21789: jump @1397\n      : @852 [@dyn 392] (gas: 32)\n 21792: a1 = s1 + 0x7ff\n 21796: a1 = a1 + 0x39\n 21799: a2 = a1 + 0x500\n 21803: a0 = u64 [a2 + 0xc8]\n 21807: u64 [s1 + 0xb8] = a0\n 21811: a0 = u64 [a2 + 0xd0]\n 21815: u64 [s1 + 0xb0] = a0\n 21819: a0 = u64 [a2 + 0xd8]\n 21823: u64 [s1 + 0xa8] = a0\n 21827: a0 = u64 [a2 + 0xe0]\n 21831: u64 [s1 + 0xa0] = a0\n 21835: a0 = s1 + 0x2000\n 21839: i32 a0 = a0 + 0xfffffffffffff960\n 21843: a1 = 0x24\n 21846: ecalli 1 // 'call_data_load'\n 21848: a0 = s1 + 0x1838\n 21852: a2 = a0 + 0x100\n 21856: a1 = u64 [a2 + 0x28]\n 21859: u64 [s1 + 0x98] = a1\n 21863: a1 = u64 [a2 + 0x30]\n 21866: u64 [s1 + 0x90] = a1\n 21870: a1 = u64 [a2 + 0x38]\n 21873: u64 [s1 + 0x88] = a1\n 21877: a0 = u64 [a2 + 0x40]\n 21880: u64 [s1 + 0x80] = a0\n 21884: a0 = 0x30280\n 21889: u64 [s1 + 0x78] = a0\n 21892: i32 a0 = a0 + 0\n 21894: ra = 0x312\n 21898: ecalli 3 // 'caller'\n 21900: t0 = 0x314\n 21904: jump @1353\n      : @853 [@dyn 393] (gas: 1)\n 21907: t0 = 788, jump @1353\n      : @854 [@dyn 394] (gas: 31)\n 21913: a3 = s1 + 0x7ff\n 21917: a3 = a3 + 0x39\n 21920: a4 = u64 [s1 + 0x80]\n 21924: a5 = a3 + 0x500\n 21928: u64 [a5 + 0x80] = a4\n 21932: a4 = u64 [s1 + 0x88]\n 21936: u64 [a5 + 0x78] = a4\n 21939: a4 = u64 [s1 + 0x90]\n 21943: u64 [a5 + 0x70] = a4\n 21946: a4 = u64 [s1 + 0x98]\n 21950: u64 [a5 + 0x68] = a4\n 21953: u64 [a3 + 1440] = 0\n 21957: a4 = u64 [s1 + 0xa0]\n 21961: u64 [a5 + 0xc0] = a4\n 21965: a4 = u64 [s1 + 0xa8]\n 21969: u64 [a5 + 0xb8] = a4\n 21973: a4 = u64 [s1 + 0xb0]\n 21977: u64 [a5 + 0xb0] = a4\n 21981: u64 [a5 + 0x98] = a2\n 21985: u64 [a5 + 0x90] = a0\n 21989: u64 [a5 + 0x88] = a1\n 21993: a4 = a3\n 21995: a0 = s1 + 0x7ff\n 21999: a0 = a0 + 0x5e1\n 22003: a1 = s1 + 0x7ff\n 22007: a1 = a1 + 0x5c1\n 22011: a2 = s1 + 0x7ff\n 22015: a2 = a2 + 0x5a1\n 22019: a3 = u64 [s1 + 0xb8]\n 22023: u64 [a4 + 0x5a8] = a3\n 22027: ra = 790, jump @1032\n      : @855 [@dyn 395] (gas: 25)\n 22033: a0 = u64 [s1 + 0x80]\n 22037: a1 = s1 + 0x7ff\n 22041: a1 = a1 + 0x39\n 22044: a2 = a1 + 0x500\n 22048: u64 [a2 + 0x40] = a0\n 22051: a0 = u64 [s1 + 0x88]\n 22055: u64 [a2 + 0x38] = a0\n 22058: a0 = u64 [s1 + 0x90]\n 22062: u64 [a2 + 0x30] = a0\n 22065: a0 = u64 [s1 + 0x98]\n 22069: u64 [a2 + 0x28] = a0\n 22072: a0 = u64 [s1 + 0xa0]\n 22076: u64 [a2 + 0x60] = a0\n 22079: a0 = u64 [s1 + 0xa8]\n 22083: u64 [a2 + 0x58] = a0\n 22086: a0 = u64 [s1 + 0xb0]\n 22090: u64 [a2 + 0x50] = a0\n 22093: a3 = a1\n 22095: a0 = s1 + 0x7ff\n 22099: a0 = a0 + 0x581\n 22103: a1 = s1 + 0x7ff\n 22107: a1 = a1 + 0x561\n 22111: a2 = u64 [s1 + 0xb8]\n 22115: u64 [a3 + 0x548] = a2\n 22119: ra = 792, jump @1273\n      : @856 [@dyn 396] (gas: 2)\n 22125: a1 = 0x20280\n 22130: jump @576\n      : @857 (gas: 17)\n 22133: sp = sp + 0xffffffffffffff30\n 22137: u64 [sp + 0xc8] = ra\n 22141: u64 [sp + 0xc0] = s0\n 22145: u64 [sp + 0xb8] = s1\n 22149: s0 = sp + 0xd0\n 22153: sp = sp & 0xfffffffffffffff0\n 22156: a2 = u64 [a1 + 0x18]\n 22159: u64 [sp + 0x10] = a2\n 22162: a2 = u64 [a1 + 0x10]\n 22165: u64 [sp + 0x8] = a2\n 22168: a2 = u64 [a1 + 0x8]\n 22171: u64 [sp] = a2\n 22173: s1 = u64 [a1]\n 22175: u64 [sp + 0x28] = a0\n 22178: a0 = sp + 0x90\n 22182: a1 = 0x40\n 22185: ra = 794, jump @17\n      : @858 [@dyn 397] (gas: 39)\n 22191: a1 = u64 [sp + 0x98]\n 22195: a2 = u64 [sp + 0x90]\n 22199: a0 = s1 + 0x1f\n 22202: ra = a0 <u s1\n 22205: a3 = u64 [sp]\n 22207: a4 = a3 + ra\n 22210: a0 = a0 & 0xffffffffffffffe0\n 22213: t1 = a1 + a4\n 22216: t0 = a2 + a0\n 22219: u64 [sp + 0x20] = a2\n 22222: a5 = t0 <u a2\n 22225: t1 = t1 + a5\n 22228: s1 = t1 ^ a1\n 22231: u64 [sp + 0x18] = a1\n 22234: a2 = t1 <u a1\n 22237: a2 = a5 if s1 == 0\n 22240: t2 = u64 [sp + 0xa8]\n 22244: a4 = a4 <u a3\n 22247: s1 = u64 [sp + 0xa0]\n 22251: a4 = ra if ra == 0\n 22254: a0 = u64 [sp + 0x8]\n 22257: a4 = a4 + a0\n 22260: a5 = a4 <u a0\n 22263: a4 = a4 + s1\n 22266: a3 = a4 + a2\n 22269: a0 = u64 [sp + 0x10]\n 22272: a0 = a0 + t2\n 22275: a0 = a0 + a5\n 22278: a5 = a3 <u a4\n 22281: a4 = a4 <u s1\n 22284: a0 = a0 + a4\n 22287: a4 = a0 + a5\n 22290: a0 = a4 >u 0\n 22292: a5 = a3 >u 0\n 22294: a5 = a0 if a4 != 0\n 22297: a0 = a3 | a4\n 22300: a1 = t1 >u 0\n 22302: a1 = a5 if a0 != 0\n 22305: jump @862 if a1 != 0\n      : @859 (gas: 8)\n 22308: a0 = a3 <u s1\n 22311: a1 = a4 ^ t2\n 22314: a5 = a4 <u t2\n 22317: a5 = a0 if a1 == 0\n 22320: a0 = a3 ^ s1\n 22323: a0 = a0 | a1\n 22326: a2 = a5 if a0 != 0\n 22329: jump @862 if a2 != 0\n      : @860 (gas: 8)\n 22332: u64 [sp + 0x70] = t0\n 22335: u64 [sp + 0x78] = t1\n 22338: u64 [sp + 0x80] = a3\n 22342: a0 = 0x40\n 22345: a1 = sp + 0x70\n 22348: u64 [sp + 0x88] = a4\n 22352: u64 [sp + 0x10] = t2\n 22355: ra = 796, jump @19\n      : @861 [@dyn 398] (gas: 14)\n 22361: a0 = u64 [sp + 0x28]\n 22364: a1 = u64 [sp + 0x10]\n 22367: u64 [a0 + 0x18] = a1\n 22370: u64 [a0 + 0x10] = s1\n 22373: a1 = u64 [sp + 0x18]\n 22376: u64 [a0 + 0x8] = a1\n 22379: a1 = u64 [sp + 0x20]\n 22382: u64 [a0] = a1\n 22384: sp = s0 + 0xffffffffffffff30\n 22388: ra = u64 [sp + 0xc8]\n 22392: s0 = u64 [sp + 0xc0]\n 22396: s1 = u64 [sp + 0xb8]\n 22400: sp = sp + 0xd0\n 22404: ret\n      : @862 (gas: 6)\n 22406: u64 [sp + 96] = 0\n 22409: u64 [sp + 88] = 0\n 22412: u64 [sp + 80] = 0\n 22415: t0 = 0x31e\n 22419: a0 = 0x4e487b7100000000\n 22429: fallthrough\n      : @863 [@dyn 399] (gas: 4)\n 22430: a1 = sp + 0x50\n 22433: u64 [sp + 0x68] = a0\n 22436: a0 = 0\n 22438: ra = 800, jump @19\n      : @864 [@dyn 400] (gas: 7)\n 22444: u64 [sp + 72] = 0\n 22447: u64 [sp + 64] = 0\n 22450: u64 [sp + 48] = 0x41\n 22454: a0 = 0x4\n 22457: a1 = sp + 0x30\n 22460: u64 [sp + 56] = 0\n 22463: ra = 802, jump @19\n      : @865 [@dyn 401] (gas: 2)\n 22469: a1 = i32 [0x2026c]\n 22474: jump @867 if a1 >u 63\n      : @866 (gas: 2)\n 22478: u32 [0x2026c] = 0x40\n 22484: fallthrough\n      : @867 (gas: 7)\n 22485: a1 = 0x20280\n 22490: i32 a1 = a1 + 0\n 22492: a0 = 0x1\n 22495: a2 = 0x24\n 22498: ra = 0x324\n 22502: ecalli 7 // 'seal_return'\n 22504: fallthrough\n      : @868 [@dyn 402] (gas: 22)\n 22505: sp = sp + 0xfffffffffffffda0\n 22509: a2 = sp + 0x200\n 22513: u64 [a2 + 0x58] = ra\n 22516: u64 [a2 + 0x50] = s0\n 22519: u64 [a2 + 0x48] = s1\n 22522: s0 = sp + 0x260\n 22526: sp = sp & 0xffffffffffffffe0\n 22529: s1 = sp\n 22531: a2 = u64 [a1 + 0x10]\n 22534: u64 [s1 + 0x30] = a2\n 22537: a2 = u64 [a1 + 0x8]\n 22540: u64 [s1 + 0x50] = a2\n 22543: a1 = u64 [a1]\n 22545: u64 [s1 + 0x58] = a1\n 22548: u64 [s1 + 0x38] = a0\n 22551: u64 [s1 + 536] = 0\n 22555: u64 [s1 + 528] = 0\n 22559: u64 [s1 + 520] = 0\n 22563: a1 = s1 + 0x200\n 22567: u64 [s1 + 512] = 0\n 22571: a0 = 0\n 22573: ra = 806, jump @19\n      : @869 [@dyn 403] (gas: 7)\n 22579: u64 [s1 + 504] = 0\n 22583: u64 [s1 + 496] = 0\n 22587: u64 [s1 + 480] = 0x6\n 22592: a0 = 0x20\n 22595: a1 = s1 + 0x1e0\n 22599: u64 [s1 + 488] = 0\n 22603: ra = 808, jump @19\n      : @870 [@dyn 404] (gas: 3)\n 22609: a1 = 0x2026c\n 22614: a0 = i32 [0x2026c]\n 22619: jump @872 if a0 >u 63\n      : @871 (gas: 2)\n 22623: u32 [0x2026c] = 0x40\n 22629: fallthrough\n      : @872 (gas: 14)\n 22630: a0 = sp + 0xffffffffffffffe0\n 22633: a2 = a0 & 0xffffffffffffffe0\n 22636: u64 [s1 + 0x28] = a2\n 22639: sp = a2\n 22641: a0 = 0x20280\n 22646: i32 a0 = a0 + 0\n 22648: i32 a2 = a2 + 0\n 22650: u64 [s1 + 0x48] = a1\n 22653: a1 = 0x40\n 22656: u64 [s1 + 0x40] = a0\n 22659: ra = 0x32a\n 22663: ecalli 6 // 'hash_keccak_256'\n 22665: t0 = 0x32c\n 22669: jump @1326\n      : @873 [@dyn 405] (gas: 1)\n 22672: t0 = 812, jump @1326\n      : @874 [@dyn 406] (gas: 13)\n 22678: a0 = u64 [s1 + 0x30]\n 22681: a0 = a0 << 0x20\n 22684: a0 = a0 >> 0x20\n 22687: u64 [s1 + 472] = 0\n 22691: u64 [s1] = a0\n 22693: u64 [s1 + 0x1d0] = a0\n 22697: a0 = u64 [s1 + 0x50]\n 22700: u64 [s1 + 0x1c8] = a0\n 22704: a1 = s1 + 0x1c0\n 22708: a0 = u64 [s1 + 0x58]\n 22711: u64 [s1 + 0x1c0] = a0\n 22715: a0 = 0\n 22717: ra = 814, jump @19\n      : @875 [@dyn 407] (gas: 12)\n 22723: a0 = u64 [s1 + 0x8]\n 22726: a3 = s1 + 0x100\n 22730: u64 [a3 + 0xb8] = a0\n 22734: a0 = u64 [s1 + 0x10]\n 22737: u64 [a3 + 0xb0] = a0\n 22741: a0 = u64 [s1 + 0x18]\n 22744: u64 [a3 + 0xa8] = a0\n 22748: a0 = 0x20\n 22751: a1 = s1 + 0x1a0\n 22755: a2 = u64 [s1 + 0x20]\n 22758: u64 [a3 + 0xa0] = a2\n 22762: ra = 816, jump @19\n      : @876 [@dyn 408] (gas: 3)\n 22768: a1 = u64 [s1 + 0x48]\n 22771: a0 = i32 [a1]\n 22773: jump @878 if a0 >u 63\n      : @877 (gas: 3)\n 22777: u32 [a1 + 0] = 0x40\n 22780: t0 = 0x332\n 22784: jump @1391\n      : @878 (gas: 1)\n 22787: t0 = 818, jump @1391\n      : @879 [@dyn 409] (gas: 5)\n 22793: ra = 0x334\n 22797: ecalli 6 // 'hash_keccak_256'\n 22799: a3 = u64 [s1 + 0x30]\n 22802: t0 = 0x336\n 22806: jump @1338\n      : @880 [@dyn 410] (gas: 2)\n 22809: a3 = u64 [s1 + 0x30]\n 22812: t0 = 822, jump @1338\n      : @881 [@dyn 411] (gas: 2)\n 22818: a0 = s1 + 0x180\n 22822: ra = 824, jump @21\n      : @882 [@dyn 412] (gas: 2)\n 22828: a0 = u8 [s1 + 0x180]\n 22832: jump @884 if a0 == 0\n      : @883 (gas: 2)\n 22835: a1 = 0\n 22837: jump @904\n      : @884 (gas: 6)\n 22840: u64 [s1 + 376] = 0\n 22844: u64 [s1 + 368] = 0\n 22848: u64 [s1 + 360] = 0\n 22852: a1 = s1 + 0x160\n 22856: u64 [s1 + 352] = 0\n 22860: ra = 826, jump @19\n      : @885 [@dyn 413] (gas: 1)\n 22866: t0 = 828, jump @1347\n      : @886 [@dyn 414] (gas: 1)\n 22872: ra = 830, jump @19\n      : @887 [@dyn 415] (gas: 3)\n 22878: a1 = u64 [s1 + 0x48]\n 22881: a0 = i32 [a1]\n 22883: jump @889 if a0 >u 63\n      : @888 (gas: 3)\n 22887: u32 [a1 + 0] = 0x40\n 22890: t0 = 0x340\n 22894: jump @1391\n      : @889 (gas: 1)\n 22897: t0 = 832, jump @1391\n      : @890 [@dyn 416] (gas: 5)\n 22903: ra = 0x342\n 22907: ecalli 6 // 'hash_keccak_256'\n 22909: a3 = u64 [s1 + 0x30]\n 22912: t0 = 0x344\n 22916: jump @1383\n      : @891 [@dyn 417] (gas: 2)\n 22919: a3 = u64 [s1 + 0x30]\n 22922: t0 = 836, jump @1383\n      : @892 [@dyn 418] (gas: 21)\n 22928: u64 [s1 + 0x28] = a0\n 22931: a0 = reverse a1\n 22933: u64 [s1 + 0x20] = a0\n 22936: a0 = reverse a2\n 22938: u64 [s1 + 0x18] = a0\n 22941: a0 = reverse a3\n 22943: u64 [s1 + 0x10] = a0\n 22946: a0 = sp + 0xffffffffffffffe0\n 22949: a0 = a0 & 0xffffffffffffffe0\n 22952: u64 [s1 + 0x30] = a0\n 22955: sp = a0\n 22957: u64 [s1 + 312] = 0\n 22961: a0 = u64 [s1]\n 22963: u64 [s1 + 0x130] = a0\n 22967: a0 = u64 [s1 + 0x50]\n 22970: u64 [s1 + 0x128] = a0\n 22974: a1 = s1 + 0x120\n 22978: a0 = u64 [s1 + 0x58]\n 22981: u64 [s1 + 0x120] = a0\n 22985: a0 = 0\n 22987: ra = 838, jump @19\n      : @893 [@dyn 419] (gas: 12)\n 22993: a0 = u64 [s1 + 0x10]\n 22996: a3 = s1 + 0x100\n 23000: u64 [a3 + 0x18] = a0\n 23003: a0 = u64 [s1 + 0x18]\n 23006: u64 [a3 + 0x10] = a0\n 23009: a0 = u64 [s1 + 0x20]\n 23012: u64 [a3 + 0x8] = a0\n 23015: a0 = 0x20\n 23018: a1 = s1 + 0x100\n 23022: a2 = u64 [s1 + 0x28]\n 23025: u64 [a3] = a2\n 23027: ra = 840, jump @19\n      : @894 [@dyn 420] (gas: 3)\n 23033: a1 = u64 [s1 + 0x48]\n 23036: a0 = i32 [a1]\n 23038: jump @896 if a0 >u 63\n      : @895 (gas: 2)\n 23042: u32 [a1 + 0] = 0x40\n 23045: fallthrough\n      : @896 (gas: 12)\n 23046: a0 = sp + 0xffffffffffffffe0\n 23049: a0 = a0 & 0xffffffffffffffe0\n 23052: u64 [s1 + 0x48] = a0\n 23055: sp = a0\n 23057: i32 a2 = a0 + 0\n 23059: a1 = 0x40\n 23062: a0 = u64 [s1 + 0x40]\n 23065: ra = 0x34a\n 23069: ecalli 6 // 'hash_keccak_256'\n 23071: a3 = u64 [s1 + 0x48]\n 23074: t0 = 0x34c\n 23078: jump @1330\n      : @897 [@dyn 421] (gas: 2)\n 23081: a3 = u64 [s1 + 0x48]\n 23084: t0 = 844, jump @1330\n      : @898 [@dyn 422] (gas: 7)\n 23090: a1 = u64 [s1 + 0x30]\n 23093: u64 [a1 + 0x18] = a3\n 23096: u64 [a1 + 0x10] = a2\n 23099: u64 [a1 + 0x8] = a4\n 23102: u64 [a1] = a0\n 23104: a0 = s1 + 0xe0\n 23108: ra = 846, jump @21\n      : @899 [@dyn 423] (gas: 14)\n 23114: a0 = u64 [s1 + 0xe0]\n 23118: a1 = u64 [s1 + 0xe8]\n 23122: a2 = u64 [s1 + 0xf8]\n 23126: a3 = u64 [s1 + 0xf0]\n 23130: a0 = a0 & 0xffffffffffffff00\n 23134: a0 = a0 | 0x1\n 23137: a4 = s1 + 0x200\n 23141: u64 [a4 + 0x38] = a2\n 23144: u64 [a4 + 0x30] = a3\n 23147: u64 [a4 + 0x28] = a1\n 23150: u64 [a4 + 0x20] = a0\n 23153: a1 = s1 + 0x220\n 23157: a0 = u64 [s1 + 0x30]\n 23160: ra = 848, jump @24\n      : @900 [@dyn 424] (gas: 8)\n 23166: a0 = 0x30280\n 23171: u64 [s1 + 0x48] = a0\n 23174: i32 a0 = a0 + 0\n 23176: ra = 0x352\n 23180: ecalli 3 // 'caller'\n 23182: a2 = u64 [s1 + 0x48]\n 23185: t0 = 0x354\n 23189: jump @1325\n      : @901 [@dyn 425] (gas: 2)\n 23192: a2 = u64 [s1 + 0x48]\n 23195: t0 = 852, jump @1325\n      : @902 [@dyn 426] (gas: 36)\n 23201: t0 = a1 | a0\n 23204: a3 = a3 >> 0x20\n 23207: a2 = reverse a2\n 23209: a1 = a2 << 0x20\n 23212: a1 = a1 | a3\n 23215: a2 = a2 >> 0x20\n 23218: u64 [s1 + 120] = 0\n 23221: u64 [s1 + 152] = 0\n 23225: a0 = u64 [s1]\n 23227: u64 [s1 + 0x90] = a0\n 23231: a0 = u64 [s1 + 0x50]\n 23234: u64 [s1 + 0x88] = a0\n 23238: a0 = u64 [s1 + 0x58]\n 23241: u64 [s1 + 0x80] = a0\n 23245: u64 [s1 + 184] = 0\n 23249: u64 [s1 + 176] = 0\n 23253: u64 [s1 + 168] = 0\n 23257: u64 [s1 + 160] = 0\n 23261: a3 = u64 [0x20128]\n 23266: a4 = u64 [0x20130]\n 23271: a5 = u64 [0x20138]\n 23276: a0 = u64 [0x20140]\n 23281: u64 [s1 + 0xd8] = a3\n 23285: u64 [s1 + 0xd0] = a4\n 23289: u64 [s1 + 0xc8] = a5\n 23293: u64 [s1 + 0xc0] = a0\n 23297: u64 [s1 + 0x70] = a2\n 23300: u64 [s1 + 0x68] = a1\n 23303: a2 = s1 + 0xc0\n 23307: a3 = s1 + 0xa0\n 23311: a4 = s1 + 0x80\n 23315: a5 = s1 + 0x60\n 23318: u64 [s1 + 0x60] = t0\n 23321: a0 = 0\n 23323: a1 = 0\n 23325: ra = 854, jump @30\n      : @903 [@dyn 427] (gas: 2)\n 23331: a1 = 0x1\n 23334: fallthrough\n      : @904 (gas: 12)\n 23335: a2 = u64 [s1 + 0x38]\n 23338: u64 [a2] = a1\n 23340: u64 [a2 + 8] = 0\n 23343: u64 [a2 + 16] = 0\n 23346: u64 [a2 + 24] = 0\n 23349: sp = s0 + 0xfffffffffffffda0\n 23353: a0 = sp + 0x200\n 23357: ra = u64 [a0 + 0x58]\n 23360: s0 = u64 [a0 + 0x50]\n 23363: s1 = u64 [a0 + 0x48]\n 23366: sp = sp + 0x260\n 23370: ret\n      : @905 [@dyn 428] (gas: 7)\n 23372: a0 = u64 [0x20148]\n 23377: u64 [s1 + 0x20] = a0\n 23380: u64 [s1 + 0x238] = a0\n 23384: a1 = u64 [0x20150]\n 23389: a2 = u64 [0x20158]\n 23394: a0 = u64 [0x20160]\n 23399: t0 = 858, jump @1380\n      : @906 [@dyn 429] (gas: 1)\n 23405: ra = 860, jump @19\n      : @907 [@dyn 430] (gas: 1)\n 23411: t0 = 862, jump @1336\n      : @908 [@dyn 431] (gas: 1)\n 23417: ra = 864, jump @19\n      : @909 [@dyn 432] (gas: 3)\n 23423: a1 = 0x2026c\n 23428: a0 = i32 [0x2026c]\n 23433: jump @911 if a0 >u 63\n      : @910 (gas: 2)\n 23437: u32 [0x2026c] = 0x40\n 23443: fallthrough\n      : @911 (gas: 6)\n 23444: a0 = sp + 0xffffffffffffffe0\n 23447: a2 = a0 & 0xffffffffffffffe0\n 23450: u64 [s1 + 0x48] = a2\n 23453: sp = a2\n 23455: a0 = 0x20280\n 23460: t0 = 866, jump @1395\n      : @912 [@dyn 433] (gas: 4)\n 23466: ra = 0x364\n 23470: ecalli 6 // 'hash_keccak_256'\n 23472: t0 = 0x366\n 23476: jump @1322\n      : @913 [@dyn 434] (gas: 1)\n 23479: t0 = 870, jump @1322\n      : @914 [@dyn 435] (gas: 1)\n 23485: ra = 872, jump @19\n      : @915 [@dyn 436] (gas: 1)\n 23491: t0 = 874, jump @1346\n      : @916 [@dyn 437] (gas: 1)\n 23497: ra = 876, jump @19\n      : @917 [@dyn 438] (gas: 3)\n 23503: a1 = u64 [s1 + 0x68]\n 23506: a0 = i32 [a1]\n 23508: jump @919 if a0 >u 63\n      : @918 (gas: 3)\n 23512: u32 [a1 + 0] = 0x40\n 23515: t0 = 0x36e\n 23519: jump @1331\n      : @919 (gas: 1)\n 23522: t0 = 878, jump @1331\n      : @920 [@dyn 439] (gas: 4)\n 23528: ra = 0x370\n 23532: ecalli 6 // 'hash_keccak_256'\n 23534: t0 = 0x372\n 23538: jump @1329\n      : @921 [@dyn 440] (gas: 1)\n 23541: t0 = 882, jump @1329\n      : @922 [@dyn 441] (gas: 1)\n 23547: ra = 884, jump @21\n      : @923 [@dyn 442] (gas: 2)\n 23553: a0 = u8 [s1 + 0x1a0]\n 23557: jump @925 if a0 == 0\n      : @924 (gas: 5)\n 23560: a1 = 0\n 23562: a0 = 0\n 23564: a2 = u64 [s1 + 0x58]\n 23567: t0 = 0x39c\n 23571: jump @1334\n      : @925 (gas: 1)\n 23574: t0 = 886, jump @1365\n      : @926 [@dyn 443] (gas: 1)\n 23580: ra = 888, jump @19\n      : @927 [@dyn 444] (gas: 1)\n 23586: t0 = 890, jump @1335\n      : @928 [@dyn 445] (gas: 1)\n 23592: ra = 892, jump @19\n      : @929 [@dyn 446] (gas: 3)\n 23598: a1 = u64 [s1 + 0x68]\n 23601: a0 = i32 [a1]\n 23603: jump @931 if a0 >u 63\n      : @930 (gas: 3)\n 23607: u32 [a1 + 0] = 0x40\n 23610: t0 = 0x37e\n 23614: jump @1331\n      : @931 (gas: 1)\n 23617: t0 = 894, jump @1331\n      : @932 [@dyn 447] (gas: 4)\n 23623: ra = 0x380\n 23627: ecalli 6 // 'hash_keccak_256'\n 23629: t0 = 0x382\n 23633: jump @1323\n      : @933 [@dyn 448] (gas: 1)\n 23636: t0 = 898, jump @1323\n      : @934 [@dyn 449] (gas: 1)\n 23642: ra = 900, jump @19\n      : @935 [@dyn 450] (gas: 1)\n 23648: t0 = 902, jump @1345\n      : @936 [@dyn 451] (gas: 1)\n 23654: ra = 904, jump @19\n      : @937 [@dyn 452] (gas: 3)\n 23660: a1 = u64 [s1 + 0x68]\n 23663: a0 = i32 [a1]\n 23665: jump @939 if a0 >u 63\n      : @938 (gas: 2)\n 23669: u32 [a1 + 0] = 0x40\n 23672: fallthrough\n      : @939 (gas: 4)\n 23673: a0 = sp + 0xffffffffffffffe0\n 23676: a0 = a0 & 0xffffffffffffffe0\n 23679: u64 [s1 + 0x68] = a0\n 23682: t0 = 906, jump @1339\n      : @940 [@dyn 453] (gas: 4)\n 23688: ra = 0x38c\n 23692: ecalli 6 // 'hash_keccak_256'\n 23694: t0 = 0x38e\n 23698: jump @1328\n      : @941 [@dyn 454] (gas: 1)\n 23701: t0 = 910, jump @1328\n      : @942 [@dyn 455] (gas: 1)\n 23707: ra = 912, jump @21\n      : @943 [@dyn 456] (gas: 1)\n 23713: t0 = 914, jump @1333\n      : @944 [@dyn 457] (gas: 1)\n 23719: ra = 916, jump @24\n      : @945 [@dyn 458] (gas: 8)\n 23725: a0 = 0x30280\n 23730: u64 [s1 + 0x68] = a0\n 23733: i32 a0 = a0 + 0\n 23735: ra = 0x396\n 23739: ecalli 3 // 'caller'\n 23741: a2 = u64 [s1 + 0x68]\n 23744: t0 = 0x398\n 23748: jump @1325\n      : @946 [@dyn 459] (gas: 2)\n 23751: a2 = u64 [s1 + 0x68]\n 23754: t0 = 920, jump @1325\n      : @947 [@dyn 460] (gas: 40)\n 23760: t0 = a1 | a0\n 23763: a3 = a3 >> 0x20\n 23766: a2 = reverse a2\n 23768: a1 = a2 << 0x20\n 23771: a1 = a1 | a3\n 23774: a2 = a2 >> 0x20\n 23777: u64 [s1 + 152] = 0\n 23781: u64 [s1 + 184] = 0\n 23785: a0 = u64 [s1]\n 23787: u64 [s1 + 0xb0] = a0\n 23791: a0 = u64 [s1 + 0x70]\n 23794: u64 [s1 + 0xa8] = a0\n 23798: a0 = u64 [s1 + 0x78]\n 23801: u64 [s1 + 0xa0] = a0\n 23805: a0 = u64 [s1 + 0x20]\n 23808: u64 [s1 + 0xd8] = a0\n 23812: a0 = u64 [s1 + 0x18]\n 23815: u64 [s1 + 0xd0] = a0\n 23819: a0 = u64 [s1 + 0x10]\n 23822: u64 [s1 + 0xc8] = a0\n 23826: a0 = u64 [s1 + 0x8]\n 23829: u64 [s1 + 0xc0] = a0\n 23833: a3 = u64 [0x20168]\n 23838: a4 = u64 [0x20170]\n 23843: a5 = u64 [0x20178]\n 23848: a0 = u64 [0x20180]\n 23853: u64 [s1 + 0xf8] = a3\n 23857: u64 [s1 + 0xf0] = a4\n 23861: u64 [s1 + 0xe8] = a5\n 23865: u64 [s1 + 0xe0] = a0\n 23869: u64 [s1 + 0x90] = a2\n 23873: u64 [s1 + 0x88] = a1\n 23877: a2 = s1 + 0xe0\n 23881: a3 = s1 + 0xc0\n 23885: a4 = s1 + 0xa0\n 23889: a5 = s1 + 0x80\n 23893: u64 [s1 + 0x80] = t0\n 23897: a0 = 0\n 23899: a1 = 0\n 23901: ra = 922, jump @30\n      : @948 [@dyn 461] (gas: 4)\n 23907: a0 = 0\n 23909: a1 = 0x1\n 23912: a2 = u64 [s1 + 0x58]\n 23915: t0 = 924, jump @1334\n      : @949 [@dyn 462] (gas: 1)\n 23921: ret\n      : @950 [@dyn 463] (gas: 7)\n 23923: a0 = u64 [0x20188]\n 23928: u64 [s1 + 0x20] = a0\n 23931: u64 [s1 + 0x238] = a0\n 23935: a1 = u64 [0x20190]\n 23940: a2 = u64 [0x20198]\n 23945: a0 = u64 [0x201a0]\n 23950: t0 = 928, jump @1380\n      : @951 [@dyn 464] (gas: 1)\n 23956: ra = 930, jump @19\n      : @952 [@dyn 465] (gas: 1)\n 23962: t0 = 932, jump @1336\n      : @953 [@dyn 466] (gas: 1)\n 23968: ra = 934, jump @19\n      : @954 [@dyn 467] (gas: 3)\n 23974: a1 = 0x2026c\n 23979: a0 = i32 [0x2026c]\n 23984: jump @956 if a0 >u 63\n      : @955 (gas: 2)\n 23988: u32 [0x2026c] = 0x40\n 23994: fallthrough\n      : @956 (gas: 6)\n 23995: a0 = sp + 0xffffffffffffffe0\n 23998: a2 = a0 & 0xffffffffffffffe0\n 24001: u64 [s1 + 0x48] = a2\n 24004: sp = a2\n 24006: a0 = 0x20280\n 24011: t0 = 936, jump @1395\n      : @957 [@dyn 468] (gas: 4)\n 24017: ra = 0x3aa\n 24021: ecalli 6 // 'hash_keccak_256'\n 24023: t0 = 0x3ac\n 24027: jump @1322\n      : @958 [@dyn 469] (gas: 1)\n 24030: t0 = 940, jump @1322\n      : @959 [@dyn 470] (gas: 1)\n 24036: ra = 942, jump @19\n      : @960 [@dyn 471] (gas: 1)\n 24042: t0 = 944, jump @1346\n      : @961 [@dyn 472] (gas: 1)\n 24048: ra = 946, jump @19\n      : @962 [@dyn 473] (gas: 3)\n 24054: a1 = u64 [s1 + 0x68]\n 24057: a0 = i32 [a1]\n 24059: jump @964 if a0 >u 63\n      : @963 (gas: 3)\n 24063: u32 [a1 + 0] = 0x40\n 24066: t0 = 0x3b4\n 24070: jump @1331\n      : @964 (gas: 1)\n 24073: t0 = 948, jump @1331\n      : @965 [@dyn 474] (gas: 4)\n 24079: ra = 0x3b6\n 24083: ecalli 6 // 'hash_keccak_256'\n 24085: t0 = 0x3b8\n 24089: jump @1329\n      : @966 [@dyn 475] (gas: 1)\n 24092: t0 = 952, jump @1329\n      : @967 [@dyn 476] (gas: 1)\n 24098: ra = 954, jump @21\n      : @968 [@dyn 477] (gas: 2)\n 24104: a0 = u8 [s1 + 0x1a0]\n 24108: jump @970 if a0 == 0\n      : @969 (gas: 5)\n 24111: a1 = 0\n 24113: a0 = 0\n 24115: a2 = u64 [s1 + 0x58]\n 24118: t0 = 0x3e2\n 24122: jump @1334\n      : @970 (gas: 1)\n 24125: t0 = 956, jump @1365\n      : @971 [@dyn 478] (gas: 1)\n 24131: ra = 958, jump @19\n      : @972 [@dyn 479] (gas: 1)\n 24137: t0 = 960, jump @1335\n      : @973 [@dyn 480] (gas: 1)\n 24143: ra = 962, jump @19\n      : @974 [@dyn 481] (gas: 3)\n 24149: a1 = u64 [s1 + 0x68]\n 24152: a0 = i32 [a1]\n 24154: jump @976 if a0 >u 63\n      : @975 (gas: 3)\n 24158: u32 [a1 + 0] = 0x40\n 24161: t0 = 0x3c4\n 24165: jump @1331\n      : @976 (gas: 1)\n 24168: t0 = 964, jump @1331\n      : @977 [@dyn 482] (gas: 4)\n 24174: ra = 0x3c6\n 24178: ecalli 6 // 'hash_keccak_256'\n 24180: t0 = 0x3c8\n 24184: jump @1323\n      : @978 [@dyn 483] (gas: 1)\n 24187: t0 = 968, jump @1323\n      : @979 [@dyn 484] (gas: 1)\n 24193: ra = 970, jump @19\n      : @980 [@dyn 485] (gas: 1)\n 24199: t0 = 972, jump @1345\n      : @981 [@dyn 486] (gas: 1)\n 24205: ra = 974, jump @19\n      : @982 [@dyn 487] (gas: 3)\n 24211: a1 = u64 [s1 + 0x68]\n 24214: a0 = i32 [a1]\n 24216: jump @984 if a0 >u 63\n      : @983 (gas: 2)\n 24220: u32 [a1 + 0] = 0x40\n 24223: fallthrough\n      : @984 (gas: 4)\n 24224: a0 = sp + 0xffffffffffffffe0\n 24227: a0 = a0 & 0xffffffffffffffe0\n 24230: u64 [s1 + 0x68] = a0\n 24233: t0 = 976, jump @1339\n      : @985 [@dyn 488] (gas: 4)\n 24239: ra = 0x3d2\n 24243: ecalli 6 // 'hash_keccak_256'\n 24245: t0 = 0x3d4\n 24249: jump @1328\n      : @986 [@dyn 489] (gas: 1)\n 24252: t0 = 980, jump @1328\n      : @987 [@dyn 490] (gas: 1)\n 24258: ra = 982, jump @21\n      : @988 [@dyn 491] (gas: 1)\n 24264: t0 = 984, jump @1333\n      : @989 [@dyn 492] (gas: 1)\n 24270: ra = 986, jump @24\n      : @990 [@dyn 493] (gas: 8)\n 24276: a0 = 0x30280\n 24281: u64 [s1 + 0x68] = a0\n 24284: i32 a0 = a0 + 0\n 24286: ra = 0x3dc\n 24290: ecalli 3 // 'caller'\n 24292: a2 = u64 [s1 + 0x68]\n 24295: t0 = 0x3de\n 24299: jump @1325\n      : @991 [@dyn 494] (gas: 2)\n 24302: a2 = u64 [s1 + 0x68]\n 24305: t0 = 990, jump @1325\n      : @992 [@dyn 495] (gas: 40)\n 24311: t0 = a1 | a0\n 24314: a3 = a3 >> 0x20\n 24317: a2 = reverse a2\n 24319: a1 = a2 << 0x20\n 24322: a1 = a1 | a3\n 24325: a2 = a2 >> 0x20\n 24328: u64 [s1 + 152] = 0\n 24332: u64 [s1 + 184] = 0\n 24336: a0 = u64 [s1]\n 24338: u64 [s1 + 0xb0] = a0\n 24342: a0 = u64 [s1 + 0x70]\n 24345: u64 [s1 + 0xa8] = a0\n 24349: a0 = u64 [s1 + 0x78]\n 24352: u64 [s1 + 0xa0] = a0\n 24356: a0 = u64 [s1 + 0x20]\n 24359: u64 [s1 + 0xd8] = a0\n 24363: a0 = u64 [s1 + 0x18]\n 24366: u64 [s1 + 0xd0] = a0\n 24370: a0 = u64 [s1 + 0x10]\n 24373: u64 [s1 + 0xc8] = a0\n 24377: a0 = u64 [s1 + 0x8]\n 24380: u64 [s1 + 0xc0] = a0\n 24384: a3 = u64 [0x201a8]\n 24389: a4 = u64 [0x201b0]\n 24394: a5 = u64 [0x201b8]\n 24399: a0 = u64 [0x201c0]\n 24404: u64 [s1 + 0xf8] = a3\n 24408: u64 [s1 + 0xf0] = a4\n 24412: u64 [s1 + 0xe8] = a5\n 24416: u64 [s1 + 0xe0] = a0\n 24420: u64 [s1 + 0x90] = a2\n 24424: u64 [s1 + 0x88] = a1\n 24428: a2 = s1 + 0xe0\n 24432: a3 = s1 + 0xc0\n 24436: a4 = s1 + 0xa0\n 24440: a5 = s1 + 0x80\n 24444: u64 [s1 + 0x80] = t0\n 24448: a0 = 0\n 24450: a1 = 0\n 24452: ra = 992, jump @30\n      : @993 [@dyn 496] (gas: 4)\n 24458: a0 = 0\n 24460: a1 = 0x1\n 24463: a2 = u64 [s1 + 0x58]\n 24466: t0 = 994, jump @1334\n      : @994 [@dyn 497] (gas: 1)\n 24472: ret\n      : @995 (gas: 22)\n 24474: sp = sp + 0xfffffffffffffee0\n 24478: u64 [sp + 0x118] = ra\n 24482: u64 [sp + 0x110] = s0\n 24486: u64 [sp + 0x108] = s1\n 24490: s0 = sp + 0x120\n 24494: sp = sp & 0xfffffffffffffff0\n 24497: a4 = u64 [a1 + 0x10]\n 24500: a3 = u64 [a1 + 0x18]\n 24503: a5 = u64 [a1 + 0x8]\n 24506: t0 = u64 [a1]\n 24508: u64 [sp + 0x68] = a3\n 24511: u64 [sp + 0x78] = a5\n 24514: a1 = a5 | a3\n 24517: a3 = t0 | a4\n 24520: a3 = a3 | a1\n 24523: a3 = a3 >> 0x20\n 24526: u64 [sp + 0x70] = a4\n 24529: a1 = a1 | a4\n 24532: a1 = a1 << 0x20\n 24535: a1 = a1 | a3\n 24538: u64 [sp + 0x8] = a0\n 24541: jump @1010 if a1 != 0\n      : @996 (gas: 15)\n 24545: a0 = u64 [a2 + 0x18]\n 24548: u64 [sp + 0x48] = a0\n 24551: s1 = u64 [a2 + 0x10]\n 24554: a0 = u64 [a2 + 0x8]\n 24557: u64 [sp + 0x50] = a0\n 24560: a0 = u64 [a2]\n 24562: u64 [sp + 0x58] = a0\n 24565: u64 [sp + 248] = 0\n 24569: u64 [sp + 240] = 0\n 24573: u64 [sp + 232] = 0\n 24577: a1 = sp + 0xe0\n 24581: u64 [sp + 224] = 0x20\n 24586: a0 = t0\n 24588: u64 [sp + 0x60] = t0\n 24591: ra = 996, jump @19\n      : @997 [@dyn 498] (gas: 12)\n 24597: a1 = u64 [sp + 0x58]\n 24600: a0 = a1 | s1\n 24603: a2 = u64 [sp + 0x48]\n 24606: a3 = u64 [sp + 0x50]\n 24609: a2 = a2 | a3\n 24612: a0 = a0 | a2\n 24615: a0 = a0 >> 0x20\n 24618: u64 [sp + 0x20] = s1\n 24621: a2 = a2 | s1\n 24624: a2 = a2 << 0x20\n 24627: a0 = a0 | a2\n 24630: jump @1010 if a0 != 0\n      : @998 (gas: 2)\n 24634: a0 = sp + 0xc0\n 24638: ra = 998, jump @17\n      : @999 [@dyn 499] (gas: 13)\n 24644: a0 = u64 [sp + 0x70]\n 24647: a1 = u64 [sp + 0x68]\n 24650: a1 = a1 | a0\n 24653: a0 = 0x100000000\n 24663: u64 [sp + 0x10] = a0\n 24666: a0 = 0xffffffe0\n 24676: a2 = u64 [sp + 0x60]\n 24679: a0 = a2 <u a0\n 24682: a3 = u64 [sp + 0x78]\n 24685: a0 = 0 if a3 != 0\n 24687: u64 [sp + 0x18] = a1\n 24690: a0 = 0 if a1 != 0\n 24692: jump @1010 if a0 == 0\n      : @1000 (gas: 16)\n 24696: a3 = u64 [sp + 0xd8]\n 24700: a4 = u64 [sp + 0xd0]\n 24704: a5 = u64 [sp + 0xc8]\n 24708: a1 = u64 [sp + 0xc0]\n 24712: i32 a0 = a2 + 0x20\n 24715: u64 [sp + 0x28] = a1\n 24718: u64 [sp + 0xa0] = a1\n 24722: u64 [sp + 0x30] = a5\n 24725: u64 [sp + 0xa8] = a5\n 24729: u64 [sp + 0x38] = a4\n 24732: u64 [sp + 0xb0] = a4\n 24736: a1 = sp + 0xa0\n 24740: u64 [sp + 0x40] = a3\n 24743: u64 [sp + 0xb8] = a3\n 24747: s1 = a2\n 24749: ra = 1000, jump @19\n      : @1001 [@dyn 500] (gas: 8)\n 24755: a0 = u64 [sp + 0x10]\n 24758: a0 = a0 + 0xffffffffffffffc0\n 24761: a0 = s1 <u a0\n 24764: a1 = u64 [sp + 0x78]\n 24767: a0 = 0 if a1 != 0\n 24769: a1 = u64 [sp + 0x18]\n 24772: a0 = 0 if a1 != 0\n 24774: jump @1010 if a0 == 0\n      : @1002 (gas: 10)\n 24778: a0 = u64 [sp + 0x48]\n 24781: a1 = u64 [sp + 0x20]\n 24784: a0 = a0 | a1\n 24787: a1 = 0xffffffe0\n 24797: a3 = u64 [sp + 0x58]\n 24800: a1 = a3 <u a1\n 24803: a4 = u64 [sp + 0x50]\n 24806: a1 = 0 if a4 != 0\n 24808: a1 = 0 if a0 != 0\n 24810: jump @1010 if a1 == 0\n      : @1003 (gas: 13)\n 24814: a2 = s1\n 24816: a1 = u64 [sp + 0x28]\n 24819: a5 = u64 [sp + 0x38]\n 24822: a0 = a1 | a5\n 24825: a4 = u64 [sp + 0x40]\n 24828: s1 = u64 [sp + 0x30]\n 24831: a4 = a4 | s1\n 24834: a0 = a0 | a4\n 24837: a0 = a0 >> 0x20\n 24840: a4 = a4 | a5\n 24843: a4 = a4 << 0x20\n 24846: a0 = a0 | a4\n 24849: jump @1010 if a0 != 0\n      : @1004 (gas: 5)\n 24853: i32 a0 = a2 + 0x40\n 24856: i32 a3 = a3 + 0x20\n 24859: u64 [sp + 0x58] = a3\n 24862: s1 = a1\n 24864: ra = 1002, jump @33\n      : @1005 [@dyn 501] (gas: 4)\n 24870: u64 [sp + 0x50] = a0\n 24873: a0 = u64 [sp + 0x58]\n 24876: a1 = s1\n 24878: ra = 1004, jump @33\n      : @1006 [@dyn 502] (gas: 4)\n 24884: a1 = a0\n 24886: a0 = u64 [sp + 0x50]\n 24889: a2 = s1\n 24891: ra = 1006, jump @0\n      : @1007 [@dyn 503] (gas: 27)\n 24897: a0 = u64 [sp + 0x60]\n 24900: a0 = a0 + s1\n 24903: a1 = a0 <u s1\n 24906: a2 = u64 [sp + 0x78]\n 24909: a4 = u64 [sp + 0x30]\n 24912: a2 = a2 + a4\n 24915: a2 = a2 + a1\n 24918: a3 = a2 ^ a4\n 24921: a4 = a2 <u a4\n 24924: a4 = a1 if a3 == 0\n 24927: a1 = u64 [sp + 0x70]\n 24930: a3 = u64 [sp + 0x38]\n 24933: a1 = a1 + a3\n 24936: a3 = a1 <u a3\n 24939: a5 = u64 [sp + 0x68]\n 24942: s1 = u64 [sp + 0x40]\n 24945: a5 = a5 + s1\n 24948: a3 = a3 + a5\n 24951: a4 = a4 + a1\n 24954: a1 = a4 <u a1\n 24957: a1 = a1 + a3\n 24960: a1 = a1 | a4\n 24963: a3 = 0xffffffc0\n 24973: a3 = a0 <u a3\n 24976: a3 = 0 if a2 != 0\n 24978: a3 = 0 if a1 != 0\n 24980: jump @1010 if a3 == 0\n      : @1008 (gas: 7)\n 24984: i32 a0 = a0 + 0x40\n 24987: u64 [sp + 152] = 0\n 24991: u64 [sp + 144] = 0\n 24995: u64 [sp + 136] = 0\n 24999: a1 = sp + 0x80\n 25003: u64 [sp + 128] = 0\n 25007: ra = 1008, jump @19\n      : @1009 [@dyn 504] (gas: 35)\n 25013: s1 = u64 [sp + 0x28]\n 25016: s1 = s1 + 0x1f\n 25019: a0 = 0x1ffffffe0\n 25029: a0 = a0 & s1\n 25032: a1 = u64 [sp + 0x60]\n 25035: a0 = a0 + a1\n 25038: a1 = a0 <u a1\n 25041: a3 = u64 [sp + 0x78]\n 25044: a2 = a3 + a1\n 25047: a3 = a2 <u a3\n 25050: a3 = a1 if a1 == 0\n 25053: a1 = u64 [sp + 0x70]\n 25056: a3 = a3 + a1\n 25059: a1 = a3 <u a1\n 25062: a4 = u64 [sp + 0x68]\n 25065: a1 = a1 + a4\n 25068: a4 = a0 + 0x40\n 25071: a0 = a4 <u a0\n 25074: a5 = a2 + a0\n 25077: a2 = a5 <u a2\n 25080: a2 = a0 if a0 == 0\n 25083: a2 = a2 + a3\n 25086: a0 = a2 <u a3\n 25089: a0 = a0 + a1\n 25092: a1 = u64 [sp + 0x8]\n 25095: u64 [a1] = a4\n 25097: u64 [a1 + 0x8] = a5\n 25100: u64 [a1 + 0x10] = a2\n 25103: u64 [a1 + 0x18] = a0\n 25106: sp = s0 + 0xfffffffffffffee0\n 25110: ra = u64 [sp + 0x118]\n 25114: s0 = u64 [sp + 0x110]\n 25118: s1 = u64 [sp + 0x108]\n 25122: sp = sp + 0x120\n 25126: ret\n      : @1010 (gas: 1)\n 25128: trap\n      : @1011 [@dyn 505] (gas: 5)\n 25129: a1 = 0x4\n 25132: ra = 0x3f4\n 25136: ecalli 1 // 'call_data_load'\n 25138: t0 = 0x3f6\n 25142: jump @1370\n      : @1012 [@dyn 506] (gas: 1)\n 25145: t0 = 1014, jump @1370\n      : @1013 [@dyn 507] (gas: 1)\n 25151: jump @1016 if a3 == 0\n      : @1014 (gas: 1)\n 25154: t0 = 1016, jump @1382\n      : @1015 [@dyn 508] (gas: 1)\n 25160: ret\n      : @1016 (gas: 8)\n 25162: a1 = 0x20280\n 25167: i32 a1 = a1 + 0\n 25169: a0 = 0x1\n 25172: a2 = 0\n 25174: ra = 0x3fa\n 25178: ecalli 7 // 'seal_return'\n 25180: t0 = 0x3fc\n 25184: jump @1397\n      : @1017 [@dyn 509] (gas: 1)\n 25187: t0 = 1020, jump @1397\n      : @1018 [@dyn 510] (gas: 5)\n 25193: a1 = 0x24\n 25196: ra = 0x3fe\n 25200: ecalli 1 // 'call_data_load'\n 25202: t0 = 0x400\n 25206: jump @1370\n      : @1019 [@dyn 511] (gas: 1)\n 25209: t0 = 1024, jump @1370\n      : @1020 [@dyn 512] (gas: 1)\n 25215: jump @1023 if a3 == 0\n      : @1021 (gas: 1)\n 25218: t0 = 1026, jump @1382\n      : @1022 [@dyn 513] (gas: 1)\n 25224: ret\n      : @1023 (gas: 7)\n 25226: a1 = 0x20280\n 25231: i32 a1 = a1 + 0\n 25233: a0 = 0x1\n 25236: a2 = 0\n 25238: ra = 0x404\n 25242: ecalli 7 // 'seal_return'\n 25244: fallthrough\n      : @1024 [@dyn 514] (gas: 19)\n 25245: sp = sp + 0xffffffffffffff40\n 25249: u64 [sp + 0xb8] = ra\n 25253: u64 [sp + 0xb0] = s0\n 25257: u64 [sp + 0xa8] = s1\n 25261: s0 = sp + 0xc0\n 25265: sp = sp & 0xffffffffffffffe0\n 25268: s1 = sp\n 25270: a2 = u64 [a1]\n 25272: a3 = u64 [a1 + 0x8]\n 25275: a4 = u64 [a1 + 0x10]\n 25278: a1 = u64 [a1 + 0x18]\n 25281: u64 [s1 + 0x18] = a0\n 25284: u64 [s1 + 0x78] = a1\n 25287: u64 [s1 + 0x70] = a4\n 25290: u64 [s1 + 0x68] = a3\n 25293: a1 = s1 + 0x60\n 25296: u64 [s1 + 0x60] = a2\n 25299: a0 = 0\n 25301: ra = 1030, jump @19\n      : @1025 [@dyn 515] (gas: 7)\n 25307: u64 [s1 + 88] = 0\n 25310: u64 [s1 + 80] = 0\n 25313: u64 [s1 + 64] = 0x6\n 25317: a0 = 0x20\n 25320: a1 = s1 + 0x40\n 25323: u64 [s1 + 72] = 0\n 25326: ra = 1032, jump @19\n      : @1026 [@dyn 516] (gas: 2)\n 25332: a1 = i32 [0x2026c]\n 25337: jump @1028 if a1 >u 63\n      : @1027 (gas: 2)\n 25341: u32 [0x2026c] = 0x40\n 25347: fallthrough\n      : @1028 (gas: 11)\n 25348: a0 = sp + 0xffffffffffffffe0\n 25351: a2 = a0 & 0xffffffffffffffe0\n 25354: u64 [s1 + 0x10] = a2\n 25357: sp = a2\n 25359: a0 = 0x20280\n 25364: i32 a0 = a0 + 0\n 25366: i32 a2 = a2 + 0\n 25368: a1 = 0x40\n 25371: ra = 0x40a\n 25375: ecalli 6 // 'hash_keccak_256'\n 25377: fallthrough\n      : @1029 [@dyn 517] (gas: 6)\n 25378: a3 = u64 [s1 + 0x10]\n 25381: a0 = u64 [a3]\n 25383: a1 = u64 [a3 + 0x8]\n 25386: a2 = u64 [a3 + 0x10]\n 25389: a3 = u64 [a3 + 0x18]\n 25392: t0 = 1036, jump @1351\n      : @1030 [@dyn 518] (gas: 15)\n 25398: a3 = a3 + 0x1\n 25401: a4 = a3 <u 0x1\n 25404: a2 = a2 + a4\n 25407: a4 = a3 | a2\n 25410: a4 = a4 <u 0x1\n 25413: a4 = a4 + a1\n 25416: a1 = a4 <u a1\n 25419: a0 = a0 + a1\n 25422: u64 [s1 + 0x80] = a3\n 25426: u64 [s1 + 0x88] = a2\n 25430: u64 [s1 + 0x90] = a4\n 25434: u64 [s1 + 0x98] = a0\n 25438: a0 = s1 + 0x20\n 25441: a1 = s1 + 0x80\n 25445: ra = 1038, jump @21\n      : @1031 [@dyn 519] (gas: 15)\n 25451: a0 = u64 [s1 + 0x30]\n 25454: a1 = u64 [s1 + 0x38]\n 25457: a2 = u64 [s1 + 0x20]\n 25460: a3 = u64 [s1 + 0x28]\n 25463: a4 = u64 [s1 + 0x18]\n 25466: u64 [a4 + 0x10] = a0\n 25469: u64 [a4 + 0x18] = a1\n 25472: u64 [a4] = a2\n 25474: u64 [a4 + 0x8] = a3\n 25477: sp = s0 + 0xffffffffffffff40\n 25481: ra = u64 [sp + 0xb8]\n 25485: s0 = u64 [sp + 0xb0]\n 25489: s1 = u64 [sp + 0xa8]\n 25493: sp = sp + 0xc0\n 25497: ret\n      : @1032 (gas: 37)\n 25499: sp = sp + 0xfffffffffffffce0\n 25503: a3 = sp + 0x300\n 25507: u64 [a3 + 0x18] = ra\n 25510: u64 [a3 + 0x10] = s0\n 25513: u64 [a3 + 0x8] = s1\n 25516: s0 = sp + 0x320\n 25520: sp = sp & 0xffffffffffffffe0\n 25523: s1 = sp\n 25525: a3 = u64 [a2 + 0x18]\n 25528: u64 [s1 + 0x98] = a3\n 25532: a3 = u64 [a2 + 0x10]\n 25535: u64 [s1 + 0x90] = a3\n 25539: a3 = u64 [a2 + 0x8]\n 25542: u64 [s1 + 0xa0] = a3\n 25546: a2 = u64 [a2]\n 25548: u64 [s1 + 0xa8] = a2\n 25552: a2 = u64 [a1 + 0x10]\n 25555: u64 [s1 + 0x88] = a2\n 25559: a2 = u64 [a1 + 0x8]\n 25562: u64 [s1 + 0x80] = a2\n 25566: a1 = u64 [a1]\n 25568: u64 [s1 + 0x78] = a1\n 25571: a2 = u64 [a0]\n 25573: a1 = u64 [a0 + 0x8]\n 25576: a0 = u32 [a0 + 0x10]\n 25579: a3 = 0xffffffff\n 25589: u64 [s1 + 0x70] = a3\n 25592: u64 [s1 + 728] = 0\n 25596: u64 [s1 + 0x40] = a0\n 25599: u64 [s1 + 0x2d0] = a0\n 25603: u64 [s1 + 0x30] = a1\n 25606: u64 [s1 + 0x2c8] = a1\n 25610: a1 = s1 + 0x2c0\n 25614: u64 [s1 + 0x38] = a2\n 25617: u64 [s1 + 0x2c0] = a2\n 25621: a0 = 0\n 25623: ra = 1040, jump @19\n      : @1033 [@dyn 520] (gas: 7)\n 25629: u64 [s1 + 696] = 0\n 25633: u64 [s1 + 688] = 0\n 25637: u64 [s1 + 672] = 0x1\n 25642: a0 = 0x20\n 25645: a1 = s1 + 0x2a0\n 25649: u64 [s1 + 680] = 0\n 25653: ra = 1042, jump @19\n      : @1034 [@dyn 521] (gas: 3)\n 25659: a1 = 0x2026c\n 25664: a0 = i32 [0x2026c]\n 25669: jump @1036 if a0 >u 63\n      : @1035 (gas: 2)\n 25673: u32 [0x2026c] = 0x40\n 25679: fallthrough\n      : @1036 (gas: 15)\n 25680: a0 = sp + 0xffffffffffffffe0\n 25683: a2 = a0 & 0xffffffffffffffe0\n 25686: u64 [s1 + 0x68] = a2\n 25689: sp = a2\n 25691: a0 = 0x20280\n 25696: i32 a0 = a0 + 0\n 25698: i32 a2 = a2 + 0\n 25700: u64 [s1 + 0xb0] = a1\n 25704: a1 = 0x40\n 25707: u64 [s1 + 0xb8] = a0\n 25711: ra = 0x414\n 25715: ecalli 6 // 'hash_keccak_256'\n 25717: a3 = u64 [s1 + 0x68]\n 25720: t0 = 0x416\n 25724: jump @1349\n      : @1037 [@dyn 522] (gas: 2)\n 25727: a3 = u64 [s1 + 0x68]\n 25730: t0 = 1046, jump @1349\n      : @1038 [@dyn 523] (gas: 17)\n 25736: a0 = u64 [s1 + 0x78]\n 25739: a0 = a0 & 0xffffffffffffffff\n 25742: a1 = u64 [s1 + 0x80]\n 25746: a1 = a1 & 0xffffffffffffffff\n 25749: a2 = u64 [s1 + 0x88]\n 25753: a3 = u64 [s1 + 0x70]\n 25756: a2 = a2 & a3\n 25759: u64 [s1 + 664] = 0\n 25763: u64 [s1 + 0x78] = a2\n 25766: u64 [s1 + 0x290] = a2\n 25770: u64 [s1 + 0x80] = a1\n 25774: u64 [s1 + 0x288] = a1\n 25778: a1 = s1 + 0x280\n 25782: u64 [s1 + 0x88] = a0\n 25786: u64 [s1 + 0x280] = a0\n 25790: a0 = 0\n 25792: ra = 1048, jump @19\n      : @1039 [@dyn 524] (gas: 12)\n 25798: a0 = u64 [s1 + 0x48]\n 25801: a3 = s1 + 0x200\n 25805: u64 [a3 + 0x78] = a0\n 25808: a0 = u64 [s1 + 0x50]\n 25811: u64 [a3 + 0x70] = a0\n 25814: a0 = u64 [s1 + 0x58]\n 25817: u64 [a3 + 0x68] = a0\n 25820: a0 = 0x20\n 25823: a1 = s1 + 0x260\n 25827: a2 = u64 [s1 + 0x60]\n 25830: u64 [a3 + 0x60] = a2\n 25833: ra = 1050, jump @19\n      : @1040 [@dyn 525] (gas: 3)\n 25839: a1 = u64 [s1 + 0xb0]\n 25843: a0 = i32 [a1]\n 25845: jump @1042 if a0 >u 63\n      : @1041 (gas: 2)\n 25849: u32 [a1 + 0] = 0x40\n 25852: fallthrough\n      : @1042 (gas: 4)\n 25853: a0 = sp + 0xffffffffffffffe0\n 25856: a0 = a0 & 0xffffffffffffffe0\n 25859: u64 [s1 + 0x70] = a0\n 25862: t0 = 1052, jump @1385\n      : @1043 [@dyn 526] (gas: 5)\n 25868: ra = 0x41e\n 25872: ecalli 6 // 'hash_keccak_256'\n 25874: a3 = u64 [s1 + 0x70]\n 25877: t0 = 0x420\n 25881: jump @1359\n      : @1044 [@dyn 527] (gas: 2)\n 25884: a3 = u64 [s1 + 0x70]\n 25887: t0 = 1056, jump @1359\n      : @1045 [@dyn 528] (gas: 2)\n 25893: a0 = s1 + 0x240\n 25897: ra = 1058, jump @21\n      : @1046 [@dyn 529] (gas: 9)\n 25903: ra = u64 [s1 + 0x258]\n 25907: t1 = u64 [s1 + 0x250]\n 25911: a4 = u64 [s1 + 0x248]\n 25915: t0 = u64 [s1 + 0x240]\n 25919: a0 = a4 & ra\n 25922: a1 = t0 & t1\n 25925: a0 = a0 & a1\n 25928: a1 = 0xffffffffffffffff\n 25931: jump @1063 if a0 == a1\n      : @1047 (gas: 23)\n 25935: a0 = u64 [s1 + 0xa8]\n 25939: a2 = t0 <u a0\n 25942: a1 = u64 [s1 + 0xa0]\n 25946: a0 = a4 ^ a1\n 25949: a5 = a4 <u a1\n 25952: u64 [s1 + 0x50] = a2\n 25955: a5 = a2 if a0 == 0\n 25958: a2 = u64 [s1 + 0x90]\n 25962: a3 = t1 <u a2\n 25965: a1 = u64 [s1 + 0x98]\n 25969: a0 = ra ^ a1\n 25972: a1 = ra <u a1\n 25975: u64 [s1 + 0x28] = a3\n 25978: a1 = a3 if a0 == 0\n 25981: a2 = t1 ^ a2\n 25984: a0 = a0 | a2\n 25987: u64 [s1 + 0x48] = a5\n 25990: a1 = a5 if a0 == 0\n 25993: u64 [s1 + 0x70] = t0\n 25996: u64 [s1 + 0x68] = a4\n 25999: u64 [s1 + 0x60] = ra\n 26002: u64 [s1 + 0x58] = t1\n 26005: jump @1064 if a1 != 0\n      : @1048 (gas: 6)\n 26009: a3 = u64 [s1 + 0x40]\n 26012: a2 = u64 [s1 + 0x38]\n 26015: a0 = a2 | a3\n 26018: t2 = u64 [s1 + 0x30]\n 26021: a0 = a0 | t2\n 26024: jump @1071 if a0 == 0\n      : @1049 (gas: 6)\n 26028: a0 = u64 [s1 + 0x88]\n 26032: a1 = u64 [s1 + 0x78]\n 26035: a0 = a0 | a1\n 26038: a1 = u64 [s1 + 0x80]\n 26042: a0 = a0 | a1\n 26045: jump @1073 if a0 == 0\n      : @1050 (gas: 7)\n 26049: u64 [s1 + 568] = 0\n 26053: u64 [s1 + 0x220] = a2\n 26057: u64 [s1 + 0x228] = t2\n 26061: a1 = s1 + 0x220\n 26065: u64 [s1 + 0x230] = a3\n 26069: a0 = 0\n 26071: ra = 1060, jump @19\n      : @1051 [@dyn 530] (gas: 7)\n 26077: u64 [s1 + 536] = 0\n 26081: u64 [s1 + 528] = 0\n 26085: u64 [s1 + 512] = 0x1\n 26090: a0 = 0x20\n 26093: a1 = s1 + 0x200\n 26097: u64 [s1 + 520] = 0\n 26101: ra = 1062, jump @19\n      : @1052 [@dyn 531] (gas: 3)\n 26107: a1 = u64 [s1 + 0xb0]\n 26111: a0 = i32 [a1]\n 26113: jump @1054 if a0 >u 63\n      : @1053 (gas: 2)\n 26117: u32 [a1 + 0] = 0x40\n 26120: fallthrough\n      : @1054 (gas: 4)\n 26121: a0 = sp + 0xffffffffffffffe0\n 26124: a0 = a0 & 0xffffffffffffffe0\n 26127: u64 [s1 + 0x40] = a0\n 26130: t0 = 1064, jump @1385\n      : @1055 [@dyn 532] (gas: 5)\n 26136: ra = 0x42a\n 26140: ecalli 6 // 'hash_keccak_256'\n 26142: a3 = u64 [s1 + 0x40]\n 26145: t0 = 0x42c\n 26149: jump @1383\n      : @1056 [@dyn 533] (gas: 2)\n 26152: a3 = u64 [s1 + 0x40]\n 26155: t0 = 1068, jump @1383\n      : @1057 [@dyn 534] (gas: 21)\n 26161: u64 [s1 + 0x38] = a0\n 26164: a0 = reverse a1\n 26166: u64 [s1 + 0x30] = a0\n 26169: a0 = reverse a2\n 26171: u64 [s1 + 0x20] = a0\n 26174: a0 = reverse a3\n 26176: u64 [s1 + 0x18] = a0\n 26179: a0 = sp + 0xffffffffffffffe0\n 26182: a0 = a0 & 0xffffffffffffffe0\n 26185: u64 [s1 + 0x40] = a0\n 26188: sp = a0\n 26190: u64 [s1 + 504] = 0\n 26194: a0 = u64 [s1 + 0x78]\n 26197: u64 [s1 + 0x1f0] = a0\n 26201: a0 = u64 [s1 + 0x80]\n 26205: u64 [s1 + 0x1e8] = a0\n 26209: a1 = s1 + 0x1e0\n 26213: a0 = u64 [s1 + 0x88]\n 26217: u64 [s1 + 0x1e0] = a0\n 26221: a0 = 0\n 26223: ra = 1070, jump @19\n      : @1058 [@dyn 535] (gas: 12)\n 26229: a0 = u64 [s1 + 0x18]\n 26232: a3 = s1 + 0x100\n 26236: u64 [a3 + 0xd8] = a0\n 26240: a0 = u64 [s1 + 0x20]\n 26243: u64 [a3 + 0xd0] = a0\n 26247: a0 = u64 [s1 + 0x30]\n 26250: u64 [a3 + 0xc8] = a0\n 26254: a0 = 0x20\n 26257: a1 = s1 + 0x1c0\n 26261: a2 = u64 [s1 + 0x38]\n 26264: u64 [a3 + 0xc0] = a2\n 26268: ra = 1072, jump @19\n      : @1059 [@dyn 536] (gas: 3)\n 26274: a1 = u64 [s1 + 0xb0]\n 26278: a0 = i32 [a1]\n 26280: jump @1061 if a0 >u 63\n      : @1060 (gas: 2)\n 26284: u32 [a1 + 0] = 0x40\n 26287: fallthrough\n      : @1061 (gas: 4)\n 26288: a0 = sp + 0xffffffffffffffe0\n 26291: a0 = a0 & 0xffffffffffffffe0\n 26294: u64 [s1 + 0xb0] = a0\n 26298: t0 = 1074, jump @1385\n      : @1062 [@dyn 537] (gas: 43)\n 26304: ecalli 6 // 'hash_keccak_256'\n 26306: a2 = u64 [s1 + 0xb0]\n 26310: a0 = u64 [a2]\n 26312: a0 = reverse a0\n 26314: a1 = u64 [a2 + 0x8]\n 26317: a5 = u64 [s1 + 0x40]\n 26320: u64 [a5 + 0x18] = a0\n 26323: a0 = u64 [a2 + 0x10]\n 26326: a2 = u64 [a2 + 0x18]\n 26329: a1 = reverse a1\n 26331: u64 [a5 + 0x10] = a1\n 26334: a0 = reverse a0\n 26336: u64 [a5 + 0x8] = a0\n 26339: a0 = reverse a2\n 26341: u64 [a5] = a0\n 26343: a0 = u64 [s1 + 0x90]\n 26347: a1 = u64 [s1 + 0x58]\n 26350: a0 = a1 - a0\n 26353: a2 = u64 [s1 + 0x48]\n 26356: a1 = a0 - a2\n 26359: a0 = a0 <u a2\n 26362: a2 = u64 [s1 + 0x98]\n 26366: a3 = u64 [s1 + 0x60]\n 26369: a2 = a3 - a2\n 26372: a3 = u64 [s1 + 0x28]\n 26375: a2 = a2 - a3\n 26378: a2 = a2 - a0\n 26381: a0 = u64 [s1 + 0xa0]\n 26385: a3 = u64 [s1 + 0x68]\n 26388: a0 = a3 - a0\n 26391: a3 = u64 [s1 + 0x50]\n 26394: a0 = a0 - a3\n 26397: a3 = u64 [s1 + 0xa8]\n 26401: a4 = u64 [s1 + 0x70]\n 26404: a3 = a4 - a3\n 26407: a4 = s1 + 0x200\n 26411: u64 [a4 + 0xf8] = a2\n 26415: u64 [a4 + 0xf0] = a1\n 26419: u64 [a4 + 0xe8] = a0\n 26423: u64 [a4 + 0xe0] = a3\n 26427: a1 = s1 + 0x2e0\n 26431: a0 = a5\n 26433: ra = 1076, jump @24\n      : @1063 [@dyn 538] (gas: 7)\n 26439: sp = s0 + 0xfffffffffffffce0\n 26443: a0 = sp + 0x300\n 26447: ra = u64 [a0 + 0x18]\n 26450: s0 = u64 [a0 + 0x10]\n 26453: s1 = u64 [a0 + 0x8]\n 26456: sp = sp + 0x320\n 26460: ret\n      : @1064 (gas: 8)\n 26462: u64 [s1 + 304] = 0\n 26466: u64 [s1 + 296] = 0\n 26470: u64 [s1 + 288] = 0\n 26474: a0 = 0xfb8f41b200000000\n 26484: a1 = s1 + 0x120\n 26488: u64 [s1 + 0x138] = a0\n 26492: a0 = 0\n 26494: ra = 1078, jump @19\n      : @1065 [@dyn 539] (gas: 11)\n 26500: u64 [s1 + 280] = 0\n 26504: a0 = u64 [s1 + 0x78]\n 26507: a3 = s1 + 0x100\n 26511: u64 [a3 + 0x10] = a0\n 26514: a0 = u64 [s1 + 0x80]\n 26518: u64 [a3 + 0x8] = a0\n 26521: a0 = 0x4\n 26524: a1 = s1 + 0x100\n 26528: a2 = u64 [s1 + 0x88]\n 26532: u64 [a3] = a2\n 26534: ra = 1080, jump @19\n      : @1066 [@dyn 540] (gas: 11)\n 26540: a0 = u64 [s1 + 0x60]\n 26543: u64 [s1 + 0xf8] = a0\n 26547: a0 = u64 [s1 + 0x58]\n 26550: u64 [s1 + 0xf0] = a0\n 26554: a0 = u64 [s1 + 0x68]\n 26557: u64 [s1 + 0xe8] = a0\n 26561: a0 = 0x24\n 26564: a1 = s1 + 0xe0\n 26568: a2 = u64 [s1 + 0x70]\n 26571: u64 [s1 + 0xe0] = a2\n 26575: ra = 1082, jump @19\n      : @1067 [@dyn 541] (gas: 11)\n 26581: a0 = u64 [s1 + 0x98]\n 26585: u64 [s1 + 0xd8] = a0\n 26589: a0 = u64 [s1 + 0x90]\n 26593: u64 [s1 + 0xd0] = a0\n 26597: a0 = u64 [s1 + 0xa0]\n 26601: u64 [s1 + 0xc8] = a0\n 26605: a0 = 0x44\n 26608: a1 = s1 + 0xc0\n 26612: a2 = u64 [s1 + 0xa8]\n 26616: u64 [s1 + 0xc0] = a2\n 26620: ra = 1084, jump @19\n      : @1068 [@dyn 542] (gas: 3)\n 26626: a0 = u64 [s1 + 0xb0]\n 26630: a0 = i32 [a0]\n 26632: jump @1070 if a0 >u 127\n      : @1069 (gas: 5)\n 26636: a1 = u64 [s1 + 0xb0]\n 26640: u32 [a1 + 0] = 0x80\n 26644: a0 = 0x1\n 26647: a2 = 0x64\n 26650: jump @1078\n      : @1070 (gas: 6)\n 26653: a0 = 0x1\n 26656: a2 = 0x64\n 26659: a1 = u64 [s1 + 0xb8]\n 26663: ra = 0x444\n 26667: ecalli 7 // 'seal_return'\n 26669: jump @1079\n      : @1071 (gas: 8)\n 26672: u64 [s1 + 368] = 0\n 26676: u64 [s1 + 360] = 0\n 26680: u64 [s1 + 352] = 0\n 26684: a0 = 0xe602df0500000000\n 26694: a1 = s1 + 0x160\n 26698: u64 [s1 + 0x178] = a0\n 26702: a0 = 0\n 26704: ra = 1086, jump @19\n      : @1072 [@dyn 543] (gas: 8)\n 26710: u64 [s1 + 344] = 0\n 26714: u64 [s1 + 336] = 0\n 26718: u64 [s1 + 328] = 0\n 26722: a0 = 0x4\n 26725: a1 = s1 + 0x140\n 26729: u64 [s1 + 320] = 0\n 26733: ra = 0x442\n 26737: jump @19\n      : @1073 (gas: 8)\n 26740: u64 [s1 + 432] = 0\n 26744: u64 [s1 + 424] = 0\n 26748: u64 [s1 + 416] = 0\n 26752: a0 = 0x94280d6200000000\n 26762: a1 = s1 + 0x1a0\n 26766: u64 [s1 + 0x1b8] = a0\n 26770: a0 = 0\n 26772: ra = 1088, jump @19\n      : @1074 [@dyn 544] (gas: 7)\n 26778: u64 [s1 + 408] = 0\n 26782: u64 [s1 + 400] = 0\n 26786: u64 [s1 + 392] = 0\n 26790: a0 = 0x4\n 26793: a1 = s1 + 0x180\n 26797: u64 [s1 + 384] = 0\n 26801: ra = 1090, jump @19\n      : @1075 [@dyn 545] (gas: 3)\n 26807: a0 = u64 [s1 + 0xb0]\n 26811: a0 = i32 [a0]\n 26813: jump @1077 if a0 >u 63\n      : @1076 (gas: 5)\n 26817: a1 = u64 [s1 + 0xb0]\n 26821: u32 [a1 + 0] = 0x40\n 26824: a0 = 0x1\n 26827: a2 = 0x24\n 26830: jump @1078\n      : @1077 (gas: 6)\n 26832: a0 = 0x1\n 26835: a2 = 0x24\n 26838: a1 = u64 [s1 + 0xb8]\n 26842: ra = 0x444\n 26846: ecalli 7 // 'seal_return'\n 26848: jump @1079\n      : @1078 (gas: 4)\n 26850: a1 = u64 [s1 + 0xb8]\n 26854: ra = 0x444\n 26858: ecalli 7 // 'seal_return'\n 26860: fallthrough\n      : @1079 [@dyn 546] (gas: 17)\n 26861: sp = sp + 0xfffffffffffffc20\n 26865: a3 = sp + 0x300\n 26869: u64 [a3 + 0xd8] = ra\n 26873: u64 [a3 + 0xd0] = s0\n 26877: u64 [a3 + 0xc8] = s1\n 26881: s0 = sp + 0x3e0\n 26885: sp = sp & 0xffffffffffffffe0\n 26888: s1 = sp\n 26890: a5 = u32 [a0 + 0x10]\n 26893: a3 = u64 [a0]\n 26895: a4 = u64 [a0 + 0x8]\n 26898: u64 [s1 + 0x78] = a3\n 26901: u64 [s1 + 0x68] = a5\n 26904: a0 = a3 | a5\n 26907: u64 [s1 + 0x70] = a4\n 26910: a0 = a0 | a4\n 26913: jump @1113 if a0 == 0\n      : @1080 (gas: 14)\n 26917: a0 = u64 [a1 + 0x10]\n 26920: a3 = u64 [a1 + 0x8]\n 26923: a1 = u64 [a1]\n 26925: a4 = 0xffffffffffffffff\n 26928: a5 = 0xffffffff\n 26938: a3 = a3 & a4\n 26941: a1 = a1 & a4\n 26944: a0 = a0 & a5\n 26947: u64 [s1 + 0x48] = a1\n 26950: u64 [s1 + 0x38] = a0\n 26953: a0 = a0 | a1\n 26956: u64 [s1 + 0x40] = a3\n 26959: a0 = a0 | a3\n 26962: jump @1118 if a0 == 0\n      : @1081 (gas: 9)\n 26966: a0 = u64 [a2 + 0x18]\n 26969: u64 [s1 + 0x98] = a0\n 26973: a0 = u64 [a2 + 0x10]\n 26976: u64 [s1 + 0x88] = a0\n 26980: a0 = u64 [a2 + 0x8]\n 26983: u64 [s1 + 0x80] = a0\n 26987: a0 = u64 [a2]\n 26989: u64 [s1 + 0x90] = a0\n 26993: ra = 1094, jump @1312\n      : @1082 [@dyn 547] (gas: 11)\n 26999: u64 [s1 + 824] = 0\n 27003: a0 = u64 [s1 + 0x68]\n 27006: a2 = s1 + 0x300\n 27010: u64 [a2 + 0x30] = a0\n 27013: a0 = u64 [s1 + 0x70]\n 27016: u64 [a2 + 0x28] = a0\n 27019: a1 = s1 + 0x320\n 27023: a0 = u64 [s1 + 0x78]\n 27026: u64 [a2 + 0x20] = a0\n 27029: a0 = 0\n 27031: ra = 1096, jump @19\n      : @1083 [@dyn 548] (gas: 7)\n 27037: u64 [s1 + 792] = 0\n 27041: u64 [s1 + 784] = 0\n 27045: u64 [s1 + 776] = 0\n 27049: a0 = 0x20\n 27052: a1 = s1 + 0x300\n 27056: u64 [s1 + 768] = 0\n 27060: ra = 1098, jump @19\n      : @1084 [@dyn 549] (gas: 3)\n 27066: a2 = 0x2026c\n 27071: a0 = i32 [0x2026c]\n 27076: jump @1086 if a0 >u 63\n      : @1085 (gas: 2)\n 27080: u32 [0x2026c] = 0x40\n 27086: fallthrough\n      : @1086 (gas: 15)\n 27087: u64 [s1 + 0x58] = a2\n 27090: a0 = sp + 0xffffffffffffffe0\n 27093: a2 = a0 & 0xffffffffffffffe0\n 27096: u64 [s1 + 0x50] = a2\n 27099: sp = a2\n 27101: a0 = 0x20280\n 27106: i32 a0 = a0 + 0\n 27108: i32 a2 = a2 + 0\n 27110: a1 = 0x40\n 27113: u64 [s1 + 0x60] = a0\n 27116: ra = 0x44c\n 27120: ecalli 6 // 'hash_keccak_256'\n 27122: a3 = u64 [s1 + 0x50]\n 27125: t0 = 0x44e\n 27129: jump @1373\n      : @1087 [@dyn 550] (gas: 2)\n 27132: a3 = u64 [s1 + 0x50]\n 27135: t0 = 1102, jump @1373\n      : @1088 [@dyn 551] (gas: 7)\n 27141: u64 [a4 + 0x58] = a3\n 27144: u64 [a4 + 0x50] = a2\n 27147: u64 [a4 + 0x48] = a1\n 27150: u64 [a4 + 0x40] = a0\n 27153: a0 = s1 + 0x2e0\n 27157: a1 = s1 + 0x340\n 27161: ra = 1104, jump @21\n      : @1089 [@dyn 552] (gas: 28)\n 27167: a1 = s1 + 0x200\n 27171: a2 = u64 [a1 + 0xf8]\n 27175: a0 = u64 [a1 + 0xf0]\n 27179: a5 = u64 [a1 + 0xe8]\n 27183: a4 = u64 [a1 + 0xe0]\n 27187: a1 = u64 [s1 + 0x98]\n 27191: t1 = a2 ^ a1\n 27194: u64 [s1 + 0x28] = a2\n 27197: a1 = a2 <u a1\n 27200: a2 = u64 [s1 + 0x88]\n 27204: a3 = a0 <u a2\n 27207: u64 [s1 + 0x10] = a3\n 27210: a1 = a3 if t1 == 0\n 27213: a3 = u64 [s1 + 0x80]\n 27217: t0 = a5 ^ a3\n 27220: u64 [s1 + 0x30] = a5\n 27223: a5 = a5 <u a3\n 27226: a3 = u64 [s1 + 0x90]\n 27230: u64 [s1 + 0x50] = a4\n 27233: a3 = a4 <u a3\n 27236: u64 [s1 + 0x18] = a3\n 27239: a5 = a3 if t0 == 0\n 27242: u64 [s1 + 0x20] = a0\n 27245: a2 = a2 ^ a0\n 27248: a0 = a2 | t1\n 27251: u64 [s1 + 0x8] = a5\n 27254: a1 = a5 if a0 == 0\n 27257: jump @1124 if a1 != 0\n      : @1090 (gas: 11)\n 27261: u64 [s1 + 728] = 0\n 27265: a0 = u64 [s1 + 0x78]\n 27268: a2 = s1 + 0x200\n 27272: u64 [a2 + 0xc0] = a0\n 27276: a0 = u64 [s1 + 0x70]\n 27279: u64 [a2 + 0xc8] = a0\n 27283: a1 = s1 + 0x2c0\n 27287: a0 = u64 [s1 + 0x68]\n 27290: u64 [a2 + 0xd0] = a0\n 27294: a0 = 0\n 27296: ra = 1106, jump @19\n      : @1091 [@dyn 553] (gas: 7)\n 27302: u64 [s1 + 696] = 0\n 27306: u64 [s1 + 688] = 0\n 27310: u64 [s1 + 680] = 0\n 27314: a0 = 0x20\n 27317: a1 = s1 + 0x2a0\n 27321: u64 [s1 + 672] = 0\n 27325: ra = 1108, jump @19\n      : @1092 [@dyn 554] (gas: 28)\n 27331: a0 = u64 [s1 + 0x88]\n 27335: a1 = u64 [s1 + 0x20]\n 27338: a0 = a1 - a0\n 27341: a2 = u64 [s1 + 0x8]\n 27344: a1 = a0 - a2\n 27347: u64 [s1 + 0x20] = a1\n 27350: a0 = a0 <u a2\n 27353: a1 = u64 [s1 + 0x98]\n 27357: a2 = u64 [s1 + 0x28]\n 27360: a1 = a2 - a1\n 27363: a2 = u64 [s1 + 0x10]\n 27366: a1 = a1 - a2\n 27369: a1 = a1 - a0\n 27372: u64 [s1 + 0x28] = a1\n 27375: a2 = u64 [s1 + 0x58]\n 27378: a0 = i32 [a2]\n 27380: a1 = u64 [s1 + 0x80]\n 27384: a3 = u64 [s1 + 0x30]\n 27387: a1 = a3 - a1\n 27390: a3 = u64 [s1 + 0x18]\n 27393: a1 = a1 - a3\n 27396: u64 [s1 + 0x30] = a1\n 27399: a4 = 0x3f\n 27402: a1 = u64 [s1 + 0x90]\n 27406: a3 = u64 [s1 + 0x50]\n 27409: a3 = a3 - a1\n 27412: u64 [s1 + 0x50] = a3\n 27415: jump @1094 if a4 <u a0\n      : @1093 (gas: 2)\n 27418: u32 [a2 + 0] = 0x40\n 27421: fallthrough\n      : @1094 (gas: 4)\n 27422: a0 = sp + 0xffffffffffffffe0\n 27425: a0 = a0 & 0xffffffffffffffe0\n 27428: u64 [s1 + 0x18] = a0\n 27431: t0 = 1110, jump @1339\n      : @1095 [@dyn 555] (gas: 5)\n 27437: ra = 0x458\n 27441: ecalli 6 // 'hash_keccak_256'\n 27443: a3 = u64 [s1 + 0x18]\n 27446: t0 = 0x45a\n 27450: jump @1373\n      : @1096 [@dyn 556] (gas: 2)\n 27453: a3 = u64 [s1 + 0x18]\n 27456: t0 = 1114, jump @1373\n      : @1097 [@dyn 557] (gas: 15)\n 27462: u64 [a4 + 0x78] = a3\n 27465: u64 [a4 + 0x70] = a2\n 27468: u64 [a4 + 0x68] = a1\n 27471: u64 [a4 + 0x60] = a0\n 27474: a0 = u64 [s1 + 0x28]\n 27477: u64 [a4 + 0x98] = a0\n 27481: a0 = u64 [s1 + 0x20]\n 27484: u64 [a4 + 0x90] = a0\n 27488: a0 = u64 [s1 + 0x30]\n 27491: u64 [a4 + 0x88] = a0\n 27495: a0 = u64 [s1 + 0x50]\n 27498: u64 [a4 + 0x80] = a0\n 27502: a0 = s1 + 0x360\n 27506: a1 = s1 + 0x380\n 27510: ra = 1116, jump @24\n      : @1098 [@dyn 558] (gas: 11)\n 27516: u64 [s1 + 664] = 0\n 27520: a0 = u64 [s1 + 0x38]\n 27523: a2 = s1 + 0x200\n 27527: u64 [a2 + 0x90] = a0\n 27531: a0 = u64 [s1 + 0x40]\n 27534: u64 [a2 + 0x88] = a0\n 27538: a1 = s1 + 0x280\n 27542: a0 = u64 [s1 + 0x48]\n 27545: u64 [a2 + 0x80] = a0\n 27549: a0 = 0\n 27551: ra = 1118, jump @19\n      : @1099 [@dyn 559] (gas: 1)\n 27557: t0 = 1120, jump @1377\n      : @1100 [@dyn 560] (gas: 1)\n 27563: ra = 1122, jump @19\n      : @1101 [@dyn 561] (gas: 7)\n 27569: a1 = u64 [s1 + 0x58]\n 27572: a0 = sp + 0xffffffffffffffe0\n 27575: a0 = a0 & 0xffffffffffffffe0\n 27578: u64 [s1 + 0x50] = a0\n 27581: sp = a0\n 27583: a0 = i32 [a1]\n 27585: jump @1103 if a0 >u 63\n      : @1102 (gas: 2)\n 27589: u32 [a1 + 0] = 0x40\n 27592: fallthrough\n      : @1103 (gas: 4)\n 27593: a0 = sp + 0xffffffffffffffe0\n 27596: a0 = a0 & 0xffffffffffffffe0\n 27599: u64 [s1 + 0x58] = a0\n 27602: t0 = 1124, jump @1339\n      : @1104 [@dyn 562] (gas: 17)\n 27608: ecalli 6 // 'hash_keccak_256'\n 27610: a3 = u64 [s1 + 0x58]\n 27613: a0 = u64 [a3 + 0x18]\n 27616: a1 = u64 [a3 + 0x10]\n 27619: a2 = u64 [a3 + 0x8]\n 27622: a3 = u64 [a3]\n 27624: a0 = reverse a0\n 27626: a4 = reverse a1\n 27628: a2 = reverse a2\n 27630: a3 = reverse a3\n 27632: a1 = u64 [s1 + 0x50]\n 27635: u64 [a1 + 0x18] = a3\n 27638: u64 [a1 + 0x10] = a2\n 27641: u64 [a1 + 0x8] = a4\n 27644: u64 [a1] = a0\n 27646: a0 = s1 + 0x240\n 27650: ra = 1126, jump @21\n      : @1105 [@dyn 563] (gas: 30)\n 27656: a0 = u64 [s1 + 0x248]\n 27660: a1 = u64 [s1 + 0x240]\n 27664: t0 = u64 [s1 + 0x258]\n 27668: a3 = u64 [s1 + 0x250]\n 27672: a4 = u64 [s1 + 0x80]\n 27676: a4 = a4 + a0\n 27679: a5 = u64 [s1 + 0x90]\n 27683: a5 = a5 + a1\n 27686: a1 = a5 <u a1\n 27689: a4 = a4 + a1\n 27692: a2 = a4 ^ a0\n 27695: a0 = a4 <u a0\n 27698: a0 = a1 if a2 == 0\n 27701: a1 = u64 [s1 + 0x88]\n 27705: a1 = a1 + a3\n 27708: a2 = u64 [s1 + 0x98]\n 27712: t0 = t0 + a2\n 27715: a2 = a1 <u a3\n 27718: a2 = a2 + t0\n 27721: a0 = a0 + a1\n 27724: a1 = a0 <u a1\n 27727: a1 = a1 + a2\n 27730: a2 = s1 + 0x300\n 27734: u64 [a2 + 0xa0] = a5\n 27738: u64 [a2 + 0xa8] = a4\n 27742: u64 [a2 + 0xb0] = a0\n 27746: u64 [a2 + 0xb8] = a1\n 27750: a1 = s1 + 0x3a0\n 27754: a0 = u64 [s1 + 0x50]\n 27757: ra = 1128, jump @24\n      : @1106 [@dyn 564] (gas: 3)\n 27763: a0 = s1 + 0x220\n 27767: a1 = 0x40\n 27770: ra = 1130, jump @17\n      : @1107 [@dyn 565] (gas: 6)\n 27776: a4 = s1 + 0x200\n 27780: a3 = u64 [a4 + 0x38]\n 27783: a1 = u64 [a4 + 0x30]\n 27786: a2 = u64 [a4 + 0x28]\n 27789: a0 = u64 [a4 + 0x20]\n 27792: t0 = 1132, jump @1332\n      : @1108 [@dyn 566] (gas: 1)\n 27798: jump @1112 if a1 != 0\n      : @1109 (gas: 12)\n 27802: a1 = u64 [s1 + 0x90]\n 27806: a3 = s1 + 0x200\n 27810: u64 [a3] = a1\n 27812: a1 = u64 [s1 + 0x80]\n 27816: u64 [a3 + 0x8] = a1\n 27819: a1 = u64 [s1 + 0x88]\n 27823: u64 [a3 + 0x10] = a1\n 27826: a1 = s1 + 0x200\n 27830: a2 = u64 [s1 + 0x98]\n 27834: u64 [a3 + 0x18] = a2\n 27837: u64 [s1 + 0x98] = a0\n 27841: ra = 1134, jump @19\n      : @1110 [@dyn 567] (gas: 29)\n 27847: u64 [s1 + 440] = 0\n 27851: a0 = u64 [s1 + 0x38]\n 27854: a5 = s1 + 0x100\n 27858: u64 [a5 + 0xb0] = a0\n 27862: a0 = u64 [s1 + 0x40]\n 27865: u64 [a5 + 0xa8] = a0\n 27869: a0 = u64 [s1 + 0x48]\n 27872: u64 [a5 + 0xa0] = a0\n 27876: u64 [s1 + 472] = 0\n 27880: a0 = u64 [s1 + 0x68]\n 27883: u64 [a5 + 0xd0] = a0\n 27887: a0 = u64 [s1 + 0x70]\n 27890: u64 [a5 + 0xc8] = a0\n 27894: a0 = u64 [0x201c8]\n 27899: a1 = u64 [0x201d0]\n 27904: a2 = u64 [0x201d8]\n 27909: a3 = u64 [s1 + 0x78]\n 27912: u64 [a5 + 0xc0] = a3\n 27916: u64 [a5 + 0xf8] = a0\n 27920: u64 [a5 + 0xf0] = a1\n 27924: u64 [a5 + 0xe8] = a2\n 27928: a0 = u64 [0x201e0]\n 27933: a1 = 0x20\n 27936: a2 = s1 + 0x1e0\n 27940: a3 = s1 + 0x1c0\n 27944: a4 = s1 + 0x1a0\n 27948: u64 [a5 + 0xe0] = a0\n 27952: a0 = u64 [s1 + 0x98]\n 27956: ra = 1136, jump @27\n      : @1111 [@dyn 568] (gas: 7)\n 27962: sp = s0 + 0xfffffffffffffc20\n 27966: a0 = sp + 0x300\n 27970: ra = u64 [a0 + 0xd8]\n 27974: s0 = u64 [a0 + 0xd0]\n 27978: s1 = u64 [a0 + 0xc8]\n 27982: sp = sp + 0x3e0\n 27986: ret\n      : @1112 (gas: 1)\n 27988: trap\n      : @1113 (gas: 8)\n 27989: u64 [s1 + 208] = 0\n 27993: u64 [s1 + 200] = 0\n 27997: u64 [s1 + 192] = 0\n 28001: a0 = 0x96c6fd1e00000000\n 28011: a1 = s1 + 0xc0\n 28015: u64 [s1 + 0xd8] = a0\n 28019: a0 = 0\n 28021: ra = 1138, jump @19\n      : @1114 [@dyn 569] (gas: 7)\n 28027: u64 [s1 + 184] = 0\n 28031: u64 [s1 + 176] = 0\n 28035: u64 [s1 + 168] = 0\n 28039: a0 = 0x4\n 28042: a1 = s1 + 0xa0\n 28046: u64 [s1 + 160] = 0\n 28050: ra = 1140, jump @19\n      : @1115 [@dyn 570] (gas: 2)\n 28056: a1 = i32 [0x2026c]\n 28061: jump @1117 if a1 >u 63\n      : @1116 (gas: 3)\n 28065: u32 [0x2026c] = 0x40\n 28071: a1 = 0x20280\n 28076: jump @1123\n      : @1117 (gas: 2)\n 28078: a1 = 0x20280\n 28083: jump @1123\n      : @1118 (gas: 8)\n 28085: u64 [s1 + 272] = 0\n 28089: u64 [s1 + 264] = 0\n 28093: u64 [s1 + 256] = 0\n 28097: a0 = 0xec442f0500000000\n 28107: a1 = s1 + 0x100\n 28111: u64 [s1 + 0x118] = a0\n 28115: a0 = 0\n 28117: ra = 1142, jump @19\n      : @1119 [@dyn 571] (gas: 7)\n 28123: u64 [s1 + 248] = 0\n 28127: u64 [s1 + 240] = 0\n 28131: u64 [s1 + 232] = 0\n 28135: a0 = 0x4\n 28138: a1 = s1 + 0xe0\n 28142: u64 [s1 + 224] = 0\n 28146: ra = 1144, jump @19\n      : @1120 [@dyn 572] (gas: 2)\n 28152: a1 = i32 [0x2026c]\n 28157: jump @1122 if a1 >u 63\n      : @1121 (gas: 3)\n 28161: u32 [0x2026c] = 0x40\n 28167: a1 = 0x20280\n 28172: jump @1123\n      : @1122 (gas: 2)\n 28174: a1 = 0x20280\n 28179: fallthrough\n      : @1123 (gas: 5)\n 28180: i32 a1 = a1 + 0\n 28182: a0 = 0x1\n 28185: a2 = 0x24\n 28188: ecalli 7 // 'seal_return'\n 28190: fallthrough\n      : @1124 (gas: 8)\n 28191: u64 [s1 + 400] = 0\n 28195: u64 [s1 + 392] = 0\n 28199: u64 [s1 + 384] = 0\n 28203: a0 = 0xe450d38c00000000\n 28213: a1 = s1 + 0x180\n 28217: u64 [s1 + 0x198] = a0\n 28221: a0 = 0\n 28223: ra = 1146, jump @19\n      : @1125 [@dyn 573] (gas: 10)\n 28229: u64 [s1 + 376] = 0\n 28233: a0 = u64 [s1 + 0x68]\n 28236: u64 [s1 + 0x170] = a0\n 28240: a0 = u64 [s1 + 0x70]\n 28243: u64 [s1 + 0x168] = a0\n 28247: a0 = 0x4\n 28250: a1 = s1 + 0x160\n 28254: a2 = u64 [s1 + 0x78]\n 28257: u64 [s1 + 0x160] = a2\n 28261: ra = 1148, jump @19\n      : @1126 [@dyn 574] (gas: 11)\n 28267: a0 = u64 [s1 + 0x28]\n 28270: u64 [s1 + 0x158] = a0\n 28274: a0 = u64 [s1 + 0x20]\n 28277: u64 [s1 + 0x150] = a0\n 28281: a0 = u64 [s1 + 0x30]\n 28284: u64 [s1 + 0x148] = a0\n 28288: a0 = 0x24\n 28291: a1 = s1 + 0x140\n 28295: a2 = u64 [s1 + 0x50]\n 28298: u64 [s1 + 0x140] = a2\n 28302: ra = 1150, jump @19\n      : @1127 [@dyn 575] (gas: 12)\n 28308: a0 = u64 [s1 + 0x98]\n 28312: a3 = s1 + 0x100\n 28316: u64 [a3 + 0x38] = a0\n 28319: a0 = u64 [s1 + 0x88]\n 28323: u64 [a3 + 0x30] = a0\n 28326: a0 = u64 [s1 + 0x80]\n 28330: u64 [a3 + 0x28] = a0\n 28333: a0 = 0x44\n 28336: a1 = s1 + 0x120\n 28340: a2 = u64 [s1 + 0x90]\n 28344: u64 [a3 + 0x20] = a2\n 28347: ra = 1152, jump @19\n      : @1128 [@dyn 576] (gas: 3)\n 28353: a0 = u64 [s1 + 0x58]\n 28356: a0 = i32 [a0]\n 28358: jump @1130 if a0 >u 127\n      : @1129 (gas: 3)\n 28362: a1 = u64 [s1 + 0x58]\n 28365: u32 [a1 + 0] = 0x80\n 28369: fallthrough\n      : @1130 (gas: 6)\n 28370: a0 = 0x1\n 28373: a2 = 0x64\n 28376: a1 = u64 [s1 + 0x60]\n 28379: ra = 0x482\n 28383: ecalli 7 // 'seal_return'\n 28385: fallthrough\n      : @1131 [@dyn 577] (gas: 22)\n 28386: sp = sp + 0xfffffffffffffe60\n 28390: u64 [sp + 0x198] = ra\n 28394: u64 [sp + 0x190] = s0\n 28398: u64 [sp + 0x188] = s1\n 28402: s0 = sp + 0x1a0\n 28406: sp = sp & 0xffffffffffffffe0\n 28409: s1 = sp\n 28411: a0 = u64 [0x201e8]\n 28416: u64 [s1 + 0x38] = a0\n 28419: u64 [s1 + 0x178] = a0\n 28423: a1 = u64 [0x201f0]\n 28428: a2 = u64 [0x201f8]\n 28433: a0 = u64 [0x20200]\n 28438: u64 [s1 + 0x28] = a1\n 28441: u64 [s1 + 0x170] = a1\n 28445: u64 [s1 + 0x20] = a2\n 28448: u64 [s1 + 0x168] = a2\n 28452: a1 = s1 + 0x160\n 28456: u64 [s1 + 0x30] = a0\n 28459: u64 [s1 + 0x160] = a0\n 28463: a0 = 0\n 28465: ra = 1156, jump @19\n      : @1132 [@dyn 578] (gas: 1)\n 28471: t0 = 1158, jump @1347\n      : @1133 [@dyn 579] (gas: 1)\n 28477: ra = 1160, jump @19\n      : @1134 [@dyn 580] (gas: 3)\n 28483: a1 = 0x2026c\n 28488: a0 = i32 [0x2026c]\n 28493: jump @1136 if a0 >u 63\n      : @1135 (gas: 2)\n 28497: u32 [0x2026c] = 0x40\n 28503: fallthrough\n      : @1136 (gas: 14)\n 28504: a0 = sp + 0xffffffffffffffe0\n 28507: a2 = a0 & 0xffffffffffffffe0\n 28510: u64 [s1 + 0x68] = a2\n 28513: sp = a2\n 28515: a0 = 0x20280\n 28520: i32 a0 = a0 + 0\n 28522: i32 a2 = a2 + 0\n 28524: u64 [s1 + 0x78] = a1\n 28527: a1 = 0x40\n 28530: u64 [s1 + 0x70] = a0\n 28533: ra = 0x48a\n 28537: ecalli 6 // 'hash_keccak_256'\n 28539: t0 = 0x48c\n 28543: jump @1348\n      : @1137 [@dyn 581] (gas: 1)\n 28546: t0 = 1164, jump @1348\n      : @1138 [@dyn 582] (gas: 8)\n 28552: a0 = 0x30280\n 28557: u64 [s1 + 0x68] = a0\n 28560: i32 a0 = a0 + 0\n 28562: u64 [s1 + 0x18] = a0\n 28565: ra = 0x48e\n 28569: ecalli 3 // 'caller'\n 28571: t0 = 0x490\n 28575: jump @1337\n      : @1139 [@dyn 583] (gas: 1)\n 28578: t0 = 1168, jump @1337\n      : @1140 [@dyn 584] (gas: 1)\n 28584: ra = 1170, jump @19\n      : @1141 [@dyn 585] (gas: 1)\n 28590: t0 = 1172, jump @1369\n      : @1142 [@dyn 586] (gas: 1)\n 28596: ra = 1174, jump @19\n      : @1143 [@dyn 587] (gas: 3)\n 28602: a1 = u64 [s1 + 0x78]\n 28605: a0 = i32 [a1]\n 28607: jump @1145 if a0 >u 63\n      : @1144 (gas: 3)\n 28611: u32 [a1 + 0] = 0x40\n 28614: t0 = 0x498\n 28618: jump @1390\n      : @1145 (gas: 1)\n 28621: t0 = 1176, jump @1390\n      : @1146 [@dyn 588] (gas: 4)\n 28627: ra = 0x49a\n 28631: ecalli 6 // 'hash_keccak_256'\n 28633: t0 = 0x49c\n 28637: jump @1350\n      : @1147 [@dyn 589] (gas: 1)\n 28640: t0 = 1180, jump @1350\n      : @1148 [@dyn 590] (gas: 1)\n 28646: ra = 1182, jump @21\n      : @1149 [@dyn 591] (gas: 2)\n 28652: a0 = u8 [s1 + 0xe0]\n 28656: jump @1151 if a0 == 0\n      : @1150 (gas: 6)\n 28659: sp = s0 + 0xfffffffffffffe60\n 28663: ra = u64 [sp + 0x198]\n 28667: s0 = u64 [sp + 0x190]\n 28671: s1 = u64 [sp + 0x188]\n 28675: sp = sp + 0x1a0\n 28679: ret\n      : @1151 (gas: 1)\n 28681: t0 = 1184, jump @1363\n      : @1152 [@dyn 592] (gas: 1)\n 28687: ra = 1186, jump @19\n      : @1153 [@dyn 593] (gas: 5)\n 28693: a0 = u64 [s1 + 0x18]\n 28696: ra = 0x4a4\n 28700: ecalli 3 // 'caller'\n 28702: t0 = 0x4a6\n 28706: jump @1343\n      : @1154 [@dyn 594] (gas: 1)\n 28709: t0 = 1190, jump @1343\n      : @1155 [@dyn 595] (gas: 1)\n 28715: ra = 1192, jump @19\n      : @1156 [@dyn 596] (gas: 11)\n 28721: a0 = u64 [s1 + 0x38]\n 28724: u64 [s1 + 0x98] = a0\n 28728: a0 = u64 [s1 + 0x28]\n 28731: u64 [s1 + 0x90] = a0\n 28735: a0 = u64 [s1 + 0x20]\n 28738: u64 [s1 + 0x88] = a0\n 28742: a0 = 0x24\n 28745: a1 = s1 + 0x80\n 28749: a2 = u64 [s1 + 0x30]\n 28752: u64 [s1 + 0x80] = a2\n 28756: ra = 1194, jump @19\n      : @1157 [@dyn 597] (gas: 3)\n 28762: a0 = u64 [s1 + 0x78]\n 28765: a0 = i32 [a0]\n 28767: jump @1159 if a0 >u 95\n      : @1158 (gas: 3)\n 28771: a1 = u64 [s1 + 0x78]\n 28774: u32 [a1 + 0] = 0x60\n 28777: fallthrough\n      : @1159 (gas: 6)\n 28778: a0 = 0x1\n 28781: a2 = 0x44\n 28784: a1 = u64 [s1 + 0x70]\n 28787: ra = 0x4ac\n 28791: ecalli 7 // 'seal_return'\n 28793: fallthrough\n      : @1160 [@dyn 598] (gas: 22)\n 28794: sp = sp + 0xfffffffffffffe60\n 28798: u64 [sp + 0x198] = ra\n 28802: u64 [sp + 0x190] = s0\n 28806: u64 [sp + 0x188] = s1\n 28810: s0 = sp + 0x1a0\n 28814: sp = sp & 0xffffffffffffffe0\n 28817: s1 = sp\n 28819: a2 = u64 [a0]\n 28821: a1 = u64 [a0 + 0x8]\n 28824: a3 = u64 [a0 + 0x10]\n 28827: a0 = u64 [a0 + 0x18]\n 28830: u64 [s1 + 0x20] = a0\n 28833: u64 [s1 + 0x178] = a0\n 28837: u64 [s1 + 0x28] = a3\n 28840: u64 [s1 + 0x170] = a3\n 28844: u64 [s1 + 0x30] = a1\n 28847: u64 [s1 + 0x168] = a1\n 28851: a1 = s1 + 0x160\n 28855: u64 [s1 + 0x38] = a2\n 28858: u64 [s1 + 0x160] = a2\n 28862: a0 = 0\n 28864: ra = 1198, jump @19\n      : @1161 [@dyn 599] (gas: 1)\n 28870: t0 = 1200, jump @1347\n      : @1162 [@dyn 600] (gas: 1)\n 28876: ra = 1202, jump @19\n      : @1163 [@dyn 601] (gas: 3)\n 28882: a1 = 0x2026c\n 28887: a0 = i32 [0x2026c]\n 28892: jump @1165 if a0 >u 63\n      : @1164 (gas: 2)\n 28896: u32 [0x2026c] = 0x40\n 28902: fallthrough\n      : @1165 (gas: 14)\n 28903: a0 = sp + 0xffffffffffffffe0\n 28906: a2 = a0 & 0xffffffffffffffe0\n 28909: u64 [s1 + 0x68] = a2\n 28912: sp = a2\n 28914: a0 = 0x20280\n 28919: i32 a0 = a0 + 0\n 28921: i32 a2 = a2 + 0\n 28923: u64 [s1 + 0x78] = a1\n 28926: a1 = 0x40\n 28929: u64 [s1 + 0x70] = a0\n 28932: ra = 0x4b4\n 28936: ecalli 6 // 'hash_keccak_256'\n 28938: t0 = 0x4b6\n 28942: jump @1348\n      : @1166 [@dyn 602] (gas: 1)\n 28945: t0 = 1206, jump @1348\n      : @1167 [@dyn 603] (gas: 8)\n 28951: a0 = 0x30280\n 28956: u64 [s1 + 0x68] = a0\n 28959: i32 a0 = a0 + 0\n 28961: u64 [s1 + 0x18] = a0\n 28964: ra = 0x4b8\n 28968: ecalli 3 // 'caller'\n 28970: t0 = 0x4ba\n 28974: jump @1337\n      : @1168 [@dyn 604] (gas: 1)\n 28977: t0 = 1210, jump @1337\n      : @1169 [@dyn 605] (gas: 1)\n 28983: ra = 1212, jump @19\n      : @1170 [@dyn 606] (gas: 1)\n 28989: t0 = 1214, jump @1369\n      : @1171 [@dyn 607] (gas: 1)\n 28995: ra = 1216, jump @19\n      : @1172 [@dyn 608] (gas: 3)\n 29001: a1 = u64 [s1 + 0x78]\n 29004: a0 = i32 [a1]\n 29006: jump @1174 if a0 >u 63\n      : @1173 (gas: 3)\n 29010: u32 [a1 + 0] = 0x40\n 29013: t0 = 0x4c2\n 29017: jump @1390\n      : @1174 (gas: 1)\n 29020: t0 = 1218, jump @1390\n      : @1175 [@dyn 609] (gas: 4)\n 29026: ra = 0x4c4\n 29030: ecalli 6 // 'hash_keccak_256'\n 29032: t0 = 0x4c6\n 29036: jump @1350\n      : @1176 [@dyn 610] (gas: 1)\n 29039: t0 = 1222, jump @1350\n      : @1177 [@dyn 611] (gas: 1)\n 29045: ra = 1224, jump @21\n      : @1178 [@dyn 612] (gas: 2)\n 29051: a0 = u8 [s1 + 0xe0]\n 29055: jump @1180 if a0 == 0\n      : @1179 (gas: 6)\n 29058: sp = s0 + 0xfffffffffffffe60\n 29062: ra = u64 [sp + 0x198]\n 29066: s0 = u64 [sp + 0x190]\n 29070: s1 = u64 [sp + 0x188]\n 29074: sp = sp + 0x1a0\n 29078: ret\n      : @1180 (gas: 1)\n 29080: t0 = 1226, jump @1363\n      : @1181 [@dyn 613] (gas: 1)\n 29086: ra = 1228, jump @19\n      : @1182 [@dyn 614] (gas: 5)\n 29092: a0 = u64 [s1 + 0x18]\n 29095: ra = 0x4ce\n 29099: ecalli 3 // 'caller'\n 29101: t0 = 0x4d0\n 29105: jump @1343\n      : @1183 [@dyn 615] (gas: 1)\n 29108: t0 = 1232, jump @1343\n      : @1184 [@dyn 616] (gas: 1)\n 29114: ra = 1234, jump @19\n      : @1185 [@dyn 617] (gas: 11)\n 29120: a0 = u64 [s1 + 0x20]\n 29123: u64 [s1 + 0x98] = a0\n 29127: a0 = u64 [s1 + 0x28]\n 29130: u64 [s1 + 0x90] = a0\n 29134: a0 = u64 [s1 + 0x30]\n 29137: u64 [s1 + 0x88] = a0\n 29141: a0 = 0x24\n 29144: a1 = s1 + 0x80\n 29148: a2 = u64 [s1 + 0x38]\n 29151: u64 [s1 + 0x80] = a2\n 29155: ra = 1236, jump @19\n      : @1186 [@dyn 618] (gas: 3)\n 29161: a0 = u64 [s1 + 0x78]\n 29164: a0 = i32 [a0]\n 29166: jump @1188 if a0 >u 95\n      : @1187 (gas: 3)\n 29170: a1 = u64 [s1 + 0x78]\n 29173: u32 [a1 + 0] = 0x60\n 29176: fallthrough\n      : @1188 (gas: 7)\n 29177: a0 = 0x1\n 29180: a2 = 0x44\n 29183: a1 = u64 [s1 + 0x70]\n 29186: ra = 0x4d6\n 29190: ecalli 7 // 'seal_return'\n 29192: t0 = 0x4d8\n 29196: jump @1381\n      : @1189 [@dyn 619] (gas: 1)\n 29199: t0 = 1240, jump @1381\n      : @1190 [@dyn 620] (gas: 21)\n 29205: u64 [s1 + 0x50] = a3\n 29208: a3 = u64 [a2 + 0x8]\n 29211: u64 [s1 + 0x70] = a3\n 29214: a2 = u64 [a2]\n 29216: u64 [s1 + 0x78] = a2\n 29219: a2 = u64 [a1]\n 29221: a3 = u64 [a1 + 0x8]\n 29224: a4 = u64 [a1 + 0x10]\n 29227: a1 = u64 [a1 + 0x18]\n 29230: u64 [s1 + 0x58] = a0\n 29233: u64 [s1 + 0x8] = a1\n 29236: u64 [s1 + 0x238] = a1\n 29240: u64 [s1 + 0x10] = a4\n 29243: u64 [s1 + 0x230] = a4\n 29247: u64 [s1 + 0x18] = a3\n 29250: u64 [s1 + 0x228] = a3\n 29254: a1 = s1 + 0x220\n 29258: u64 [s1 + 0x20] = a2\n 29261: u64 [s1 + 0x220] = a2\n 29265: a0 = 0\n 29267: ra = 1242, jump @19\n      : @1191 [@dyn 621] (gas: 1)\n 29273: t0 = 1244, jump @1336\n      : @1192 [@dyn 622] (gas: 1)\n 29279: ra = 1246, jump @19\n      : @1193 [@dyn 623] (gas: 3)\n 29285: a1 = 0x2026c\n 29290: a0 = i32 [0x2026c]\n 29295: jump @1195 if a0 >u 63\n      : @1194 (gas: 2)\n 29299: u32 [0x2026c] = 0x40\n 29305: fallthrough\n      : @1195 (gas: 6)\n 29306: a0 = sp + 0xffffffffffffffe0\n 29309: a2 = a0 & 0xffffffffffffffe0\n 29312: u64 [s1 + 0x48] = a2\n 29315: sp = a2\n 29317: a0 = 0x20280\n 29322: t0 = 1248, jump @1395\n      : @1196 [@dyn 624] (gas: 4)\n 29328: ra = 0x4e2\n 29332: ecalli 6 // 'hash_keccak_256'\n 29334: t0 = 0x4e4\n 29338: jump @1322\n      : @1197 [@dyn 625] (gas: 1)\n 29341: t0 = 1252, jump @1322\n      : @1198 [@dyn 626] (gas: 1)\n 29347: ra = 1254, jump @19\n      : @1199 [@dyn 627] (gas: 1)\n 29353: t0 = 1256, jump @1346\n      : @1200 [@dyn 628] (gas: 1)\n 29359: ra = 1258, jump @19\n      : @1201 [@dyn 629] (gas: 3)\n 29365: a1 = u64 [s1 + 0x68]\n 29368: a0 = i32 [a1]\n 29370: jump @1203 if a0 >u 63\n      : @1202 (gas: 3)\n 29374: u32 [a1 + 0] = 0x40\n 29377: t0 = 0x4ec\n 29381: jump @1331\n      : @1203 (gas: 1)\n 29384: t0 = 1260, jump @1331\n      : @1204 [@dyn 630] (gas: 4)\n 29390: ra = 0x4ee\n 29394: ecalli 6 // 'hash_keccak_256'\n 29396: t0 = 0x4f0\n 29400: jump @1329\n      : @1205 [@dyn 631] (gas: 1)\n 29403: t0 = 1264, jump @1329\n      : @1206 [@dyn 632] (gas: 1)\n 29409: ra = 1266, jump @21\n      : @1207 [@dyn 633] (gas: 2)\n 29415: a0 = u8 [s1 + 0x1a0]\n 29419: jump @1209 if a0 == 0\n      : @1208 (gas: 5)\n 29422: a1 = 0\n 29424: a0 = 0\n 29426: a2 = u64 [s1 + 0x58]\n 29429: t0 = 0x518\n 29433: jump @1334\n      : @1209 (gas: 11)\n 29436: a0 = u64 [s1 + 0x20]\n 29439: u64 [s1 + 0x180] = a0\n 29443: a0 = u64 [s1 + 0x18]\n 29446: u64 [s1 + 0x188] = a0\n 29450: a0 = u64 [s1 + 0x10]\n 29453: u64 [s1 + 0x190] = a0\n 29457: a1 = s1 + 0x180\n 29461: a0 = u64 [s1 + 0x8]\n 29464: u64 [s1 + 0x198] = a0\n 29468: a0 = 0\n 29470: ra = 1268, jump @19\n      : @1210 [@dyn 634] (gas: 1)\n 29476: t0 = 1270, jump @1335\n      : @1211 [@dyn 635] (gas: 1)\n 29482: ra = 1272, jump @19\n      : @1212 [@dyn 636] (gas: 3)\n 29488: a1 = u64 [s1 + 0x68]\n 29491: a0 = i32 [a1]\n 29493: jump @1214 if a0 >u 63\n      : @1213 (gas: 3)\n 29497: u32 [a1 + 0] = 0x40\n 29500: t0 = 0x4fa\n 29504: jump @1331\n      : @1214 (gas: 1)\n 29507: t0 = 1274, jump @1331\n      : @1215 [@dyn 637] (gas: 4)\n 29513: ra = 0x4fc\n 29517: ecalli 6 // 'hash_keccak_256'\n 29519: t0 = 0x4fe\n 29523: jump @1323\n      : @1216 [@dyn 638] (gas: 1)\n 29526: t0 = 1278, jump @1323\n      : @1217 [@dyn 639] (gas: 1)\n 29532: ra = 1280, jump @19\n      : @1218 [@dyn 640] (gas: 1)\n 29538: t0 = 1282, jump @1345\n      : @1219 [@dyn 641] (gas: 1)\n 29544: ra = 1284, jump @19\n      : @1220 [@dyn 642] (gas: 3)\n 29550: a1 = u64 [s1 + 0x68]\n 29553: a0 = i32 [a1]\n 29555: jump @1222 if a0 >u 63\n      : @1221 (gas: 2)\n 29559: u32 [a1 + 0] = 0x40\n 29562: fallthrough\n      : @1222 (gas: 4)\n 29563: a0 = sp + 0xffffffffffffffe0\n 29566: a0 = a0 & 0xffffffffffffffe0\n 29569: u64 [s1 + 0x68] = a0\n 29572: t0 = 1286, jump @1339\n      : @1223 [@dyn 643] (gas: 4)\n 29578: ra = 0x508\n 29582: ecalli 6 // 'hash_keccak_256'\n 29584: t0 = 0x50a\n 29588: jump @1328\n      : @1224 [@dyn 644] (gas: 1)\n 29591: t0 = 1290, jump @1328\n      : @1225 [@dyn 645] (gas: 1)\n 29597: ra = 1292, jump @21\n      : @1226 [@dyn 646] (gas: 1)\n 29603: t0 = 1294, jump @1333\n      : @1227 [@dyn 647] (gas: 1)\n 29609: ra = 1296, jump @24\n      : @1228 [@dyn 648] (gas: 8)\n 29615: a0 = 0x30280\n 29620: u64 [s1 + 0x68] = a0\n 29623: i32 a0 = a0 + 0\n 29625: ra = 0x512\n 29629: ecalli 3 // 'caller'\n 29631: a2 = u64 [s1 + 0x68]\n 29634: t0 = 0x514\n 29638: jump @1325\n      : @1229 [@dyn 649] (gas: 2)\n 29641: a2 = u64 [s1 + 0x68]\n 29644: t0 = 1300, jump @1325\n      : @1230 [@dyn 650] (gas: 40)\n 29650: t0 = a1 | a0\n 29653: a3 = a3 >> 0x20\n 29656: a2 = reverse a2\n 29658: a1 = a2 << 0x20\n 29661: a1 = a1 | a3\n 29664: a2 = a2 >> 0x20\n 29667: u64 [s1 + 152] = 0\n 29671: u64 [s1 + 184] = 0\n 29675: a0 = u64 [s1]\n 29677: u64 [s1 + 0xb0] = a0\n 29681: a0 = u64 [s1 + 0x70]\n 29684: u64 [s1 + 0xa8] = a0\n 29688: a0 = u64 [s1 + 0x78]\n 29691: u64 [s1 + 0xa0] = a0\n 29695: a0 = u64 [s1 + 0x8]\n 29698: u64 [s1 + 0xd8] = a0\n 29702: a0 = u64 [s1 + 0x10]\n 29705: u64 [s1 + 0xd0] = a0\n 29709: a0 = u64 [s1 + 0x18]\n 29712: u64 [s1 + 0xc8] = a0\n 29716: a0 = u64 [s1 + 0x20]\n 29719: u64 [s1 + 0xc0] = a0\n 29723: a3 = u64 [0x20208]\n 29728: a4 = u64 [0x20210]\n 29733: a5 = u64 [0x20218]\n 29738: a0 = u64 [0x20220]\n 29743: u64 [s1 + 0xf8] = a3\n 29747: u64 [s1 + 0xf0] = a4\n 29751: u64 [s1 + 0xe8] = a5\n 29755: u64 [s1 + 0xe0] = a0\n 29759: u64 [s1 + 0x90] = a2\n 29763: u64 [s1 + 0x88] = a1\n 29767: a2 = s1 + 0xe0\n 29771: a3 = s1 + 0xc0\n 29775: a4 = s1 + 0xa0\n 29779: a5 = s1 + 0x80\n 29783: u64 [s1 + 0x80] = t0\n 29787: a0 = 0\n 29789: a1 = 0\n 29791: ra = 1302, jump @30\n      : @1231 [@dyn 651] (gas: 4)\n 29797: a0 = 0\n 29799: a1 = 0x1\n 29802: a2 = u64 [s1 + 0x58]\n 29805: t0 = 1304, jump @1334\n      : @1232 [@dyn 652] (gas: 1)\n 29811: ret\n      : @1233 [@dyn 653] (gas: 21)\n 29813: u64 [s1 + 0x38] = a3\n 29816: a3 = u64 [a2 + 0x8]\n 29819: u64 [s1 + 0x70] = a3\n 29822: a2 = u64 [a2]\n 29824: u64 [s1 + 0x78] = a2\n 29827: a2 = u64 [a1]\n 29829: a3 = u64 [a1 + 0x8]\n 29832: a4 = u64 [a1 + 0x10]\n 29835: a1 = u64 [a1 + 0x18]\n 29838: u64 [s1 + 0x30] = a0\n 29841: u64 [s1 + 0x40] = a1\n 29844: u64 [s1 + 0x238] = a1\n 29848: u64 [s1 + 0x48] = a4\n 29851: u64 [s1 + 0x230] = a4\n 29855: u64 [s1 + 0x50] = a3\n 29858: u64 [s1 + 0x228] = a3\n 29862: a1 = s1 + 0x220\n 29866: u64 [s1 + 0x58] = a2\n 29869: u64 [s1 + 0x220] = a2\n 29873: a0 = 0\n 29875: ra = 1308, jump @19\n      : @1234 [@dyn 654] (gas: 1)\n 29881: t0 = 1310, jump @1336\n      : @1235 [@dyn 655] (gas: 1)\n 29887: ra = 1312, jump @19\n      : @1236 [@dyn 656] (gas: 3)\n 29893: a1 = 0x2026c\n 29898: a0 = i32 [0x2026c]\n 29903: jump @1238 if a0 >u 63\n      : @1237 (gas: 2)\n 29907: u32 [0x2026c] = 0x40\n 29913: fallthrough\n      : @1238 (gas: 6)\n 29914: a0 = sp + 0xffffffffffffffe0\n 29917: a2 = a0 & 0xffffffffffffffe0\n 29920: u64 [s1 + 0x28] = a2\n 29923: sp = a2\n 29925: a0 = 0x20280\n 29930: t0 = 1314, jump @1395\n      : @1239 [@dyn 657] (gas: 4)\n 29936: ra = 0x524\n 29940: ecalli 6 // 'hash_keccak_256'\n 29942: t0 = 0x526\n 29946: jump @1326\n      : @1240 [@dyn 658] (gas: 1)\n 29949: t0 = 1318, jump @1326\n      : @1241 [@dyn 659] (gas: 13)\n 29955: a0 = u64 [s1 + 0x38]\n 29958: a0 = a0 << 0x20\n 29961: a0 = a0 >> 0x20\n 29964: u64 [s1 + 504] = 0\n 29968: u64 [s1 + 0x38] = a0\n 29971: u64 [s1 + 0x1f0] = a0\n 29975: a0 = u64 [s1 + 0x70]\n 29978: u64 [s1 + 0x1e8] = a0\n 29982: a1 = s1 + 0x1e0\n 29986: a0 = u64 [s1 + 0x78]\n 29989: u64 [s1 + 0x1e0] = a0\n 29993: a0 = 0\n 29995: ra = 1320, jump @19\n      : @1242 [@dyn 660] (gas: 12)\n 30001: a0 = u64 [s1 + 0x8]\n 30004: a3 = s1 + 0x100\n 30008: u64 [a3 + 0xd8] = a0\n 30012: a0 = u64 [s1 + 0x10]\n 30015: u64 [a3 + 0xd0] = a0\n 30019: a0 = u64 [s1 + 0x18]\n 30022: u64 [a3 + 0xc8] = a0\n 30026: a0 = 0x20\n 30029: a1 = s1 + 0x1c0\n 30033: a2 = u64 [s1 + 0x20]\n 30036: u64 [a3 + 0xc0] = a2\n 30040: ra = 1322, jump @19\n      : @1243 [@dyn 661] (gas: 3)\n 30046: a1 = u64 [s1 + 0x68]\n 30049: a0 = i32 [a1]\n 30051: jump @1245 if a0 >u 63\n      : @1244 (gas: 2)\n 30055: u32 [a1 + 0] = 0x40\n 30058: fallthrough\n      : @1245 (gas: 4)\n 30059: a0 = sp + 0xffffffffffffffe0\n 30062: a0 = a0 & 0xffffffffffffffe0\n 30065: u64 [s1 + 0x20] = a0\n 30068: t0 = 1324, jump @1339\n      : @1246 [@dyn 662] (gas: 5)\n 30074: ra = 0x52e\n 30078: ecalli 6 // 'hash_keccak_256'\n 30080: a3 = u64 [s1 + 0x20]\n 30083: t0 = 0x530\n 30087: jump @1338\n      : @1247 [@dyn 663] (gas: 2)\n 30090: a3 = u64 [s1 + 0x20]\n 30093: t0 = 1328, jump @1338\n      : @1248 [@dyn 664] (gas: 2)\n 30099: a0 = s1 + 0x1a0\n 30103: ra = 1330, jump @21\n      : @1249 [@dyn 665] (gas: 2)\n 30109: a0 = u8 [s1 + 0x1a0]\n 30113: jump @1271 if a0 == 0\n      : @1250 (gas: 11)\n 30117: a0 = u64 [s1 + 0x58]\n 30120: u64 [s1 + 0x180] = a0\n 30124: a0 = u64 [s1 + 0x50]\n 30127: u64 [s1 + 0x188] = a0\n 30131: a0 = u64 [s1 + 0x48]\n 30134: u64 [s1 + 0x190] = a0\n 30138: a1 = s1 + 0x180\n 30142: a0 = u64 [s1 + 0x40]\n 30145: u64 [s1 + 0x198] = a0\n 30149: a0 = 0\n 30151: ra = 1332, jump @19\n      : @1251 [@dyn 666] (gas: 1)\n 30157: t0 = 1334, jump @1335\n      : @1252 [@dyn 667] (gas: 1)\n 30163: ra = 1336, jump @19\n      : @1253 [@dyn 668] (gas: 3)\n 30169: a1 = u64 [s1 + 0x68]\n 30172: a0 = i32 [a1]\n 30174: jump @1255 if a0 >u 63\n      : @1254 (gas: 2)\n 30178: u32 [a1 + 0] = 0x40\n 30181: fallthrough\n      : @1255 (gas: 4)\n 30182: a0 = sp + 0xffffffffffffffe0\n 30185: a0 = a0 & 0xffffffffffffffe0\n 30188: u64 [s1 + 0x28] = a0\n 30191: t0 = 1338, jump @1339\n      : @1256 [@dyn 669] (gas: 4)\n 30197: ra = 0x53c\n 30201: ecalli 6 // 'hash_keccak_256'\n 30203: t0 = 0x53e\n 30207: jump @1326\n      : @1257 [@dyn 670] (gas: 1)\n 30210: t0 = 1342, jump @1326\n      : @1258 [@dyn 671] (gas: 10)\n 30216: u64 [s1 + 344] = 0\n 30220: a0 = u64 [s1 + 0x38]\n 30223: u64 [s1 + 0x150] = a0\n 30227: a0 = u64 [s1 + 0x70]\n 30230: u64 [s1 + 0x148] = a0\n 30234: a1 = s1 + 0x140\n 30238: a0 = u64 [s1 + 0x78]\n 30241: u64 [s1 + 0x140] = a0\n 30245: a0 = 0\n 30247: ra = 1344, jump @19\n      : @1259 [@dyn 672] (gas: 12)\n 30253: a0 = u64 [s1 + 0x8]\n 30256: a3 = s1 + 0x100\n 30260: u64 [a3 + 0x38] = a0\n 30263: a0 = u64 [s1 + 0x10]\n 30266: u64 [a3 + 0x30] = a0\n 30269: a0 = u64 [s1 + 0x18]\n 30272: u64 [a3 + 0x28] = a0\n 30275: a0 = 0x20\n 30278: a1 = s1 + 0x120\n 30282: a2 = u64 [s1 + 0x20]\n 30285: u64 [a3 + 0x20] = a2\n 30288: ra = 1346, jump @19\n      : @1260 [@dyn 673] (gas: 3)\n 30294: a1 = u64 [s1 + 0x68]\n 30297: a0 = i32 [a1]\n 30299: jump @1262 if a0 >u 63\n      : @1261 (gas: 2)\n 30303: u32 [a1 + 0] = 0x40\n 30306: fallthrough\n      : @1262 (gas: 4)\n 30307: a0 = sp + 0xffffffffffffffe0\n 30310: a0 = a0 & 0xffffffffffffffe0\n 30313: u64 [s1 + 0x68] = a0\n 30316: t0 = 1348, jump @1339\n      : @1263 [@dyn 674] (gas: 5)\n 30322: ra = 0x546\n 30326: ecalli 6 // 'hash_keccak_256'\n 30328: a3 = u64 [s1 + 0x68]\n 30331: t0 = 0x548\n 30335: jump @1338\n      : @1264 [@dyn 675] (gas: 2)\n 30338: a3 = u64 [s1 + 0x68]\n 30341: t0 = 1352, jump @1338\n      : @1265 [@dyn 676] (gas: 2)\n 30347: a0 = s1 + 0x100\n 30351: ra = 1354, jump @21\n      : @1266 [@dyn 677] (gas: 14)\n 30357: a4 = s1 + 0x100\n 30361: a0 = u64 [a4]\n 30363: a1 = u64 [a4 + 0x18]\n 30366: a2 = u64 [a4 + 0x10]\n 30369: a3 = u64 [a4 + 0x8]\n 30372: a0 = a0 & 0xffffffffffffff00\n 30376: a4 = s1 + 0x200\n 30380: u64 [a4 + 0x58] = a1\n 30383: u64 [a4 + 0x50] = a2\n 30386: u64 [a4 + 0x48] = a3\n 30389: u64 [a4 + 0x40] = a0\n 30392: a1 = s1 + 0x240\n 30396: a0 = u64 [s1 + 0x28]\n 30399: ra = 1356, jump @24\n      : @1267 [@dyn 678] (gas: 8)\n 30405: a0 = 0x30280\n 30410: u64 [s1 + 0x68] = a0\n 30413: i32 a0 = a0 + 0\n 30415: ra = 0x54e\n 30419: ecalli 3 // 'caller'\n 30421: a2 = u64 [s1 + 0x68]\n 30424: t0 = 0x550\n 30428: jump @1325\n      : @1268 [@dyn 679] (gas: 2)\n 30431: a2 = u64 [s1 + 0x68]\n 30434: t0 = 1360, jump @1325\n      : @1269 [@dyn 680] (gas: 40)\n 30440: t0 = a1 | a0\n 30443: a3 = a3 >> 0x20\n 30446: a2 = reverse a2\n 30448: a1 = a2 << 0x20\n 30451: a1 = a1 | a3\n 30454: a2 = a2 >> 0x20\n 30457: u64 [s1 + 152] = 0\n 30461: u64 [s1 + 184] = 0\n 30465: a0 = u64 [s1 + 0x38]\n 30468: u64 [s1 + 0xb0] = a0\n 30472: a0 = u64 [s1 + 0x70]\n 30475: u64 [s1 + 0xa8] = a0\n 30479: a0 = u64 [s1 + 0x78]\n 30482: u64 [s1 + 0xa0] = a0\n 30486: a0 = u64 [s1 + 0x40]\n 30489: u64 [s1 + 0xd8] = a0\n 30493: a0 = u64 [s1 + 0x48]\n 30496: u64 [s1 + 0xd0] = a0\n 30500: a0 = u64 [s1 + 0x50]\n 30503: u64 [s1 + 0xc8] = a0\n 30507: a0 = u64 [s1 + 0x58]\n 30510: u64 [s1 + 0xc0] = a0\n 30514: a3 = u64 [0x20228]\n 30519: a4 = u64 [0x20230]\n 30524: a5 = u64 [0x20238]\n 30529: a0 = u64 [0x20240]\n 30534: u64 [s1 + 0xf8] = a3\n 30538: u64 [s1 + 0xf0] = a4\n 30542: u64 [s1 + 0xe8] = a5\n 30546: u64 [s1 + 0xe0] = a0\n 30550: u64 [s1 + 0x90] = a2\n 30554: u64 [s1 + 0x88] = a1\n 30558: a2 = s1 + 0xe0\n 30562: a3 = s1 + 0xc0\n 30566: a4 = s1 + 0xa0\n 30570: a5 = s1 + 0x80\n 30574: u64 [s1 + 0x80] = t0\n 30578: a0 = 0\n 30580: a1 = 0\n 30582: ra = 1362, jump @30\n      : @1270 [@dyn 681] (gas: 5)\n 30588: a0 = 0\n 30590: a1 = 0x1\n 30593: a2 = u64 [s1 + 0x30]\n 30596: t0 = 0x554\n 30600: jump @1334\n      : @1271 (gas: 3)\n 30603: a1 = 0\n 30605: a2 = u64 [s1 + 0x30]\n 30608: t0 = 1364, jump @1334\n      : @1272 [@dyn 682] (gas: 1)\n 30614: ret\n      : @1273 (gas: 17)\n 30616: sp = sp + 0xfffffffffffffc80\n 30620: a2 = sp + 0x300\n 30624: u64 [a2 + 0x78] = ra\n 30627: u64 [a2 + 0x70] = s0\n 30630: u64 [a2 + 0x68] = s1\n 30633: s0 = sp + 0x380\n 30637: sp = sp & 0xffffffffffffffe0\n 30640: s1 = sp\n 30642: a3 = u32 [a0 + 0x10]\n 30645: a2 = u64 [a0]\n 30647: a4 = u64 [a0 + 0x8]\n 30650: u64 [s1 + 0x58] = a2\n 30653: u64 [s1 + 0x48] = a3\n 30656: a0 = a2 | a3\n 30659: u64 [s1 + 0x50] = a4\n 30662: a0 = a0 | a4\n 30665: jump @1300 if a0 == 0\n      : @1274 (gas: 9)\n 30669: a0 = u64 [a1 + 0x18]\n 30672: u64 [s1 + 0x78] = a0\n 30675: a0 = u64 [a1 + 0x10]\n 30678: u64 [s1 + 0x68] = a0\n 30681: a0 = u64 [a1 + 0x8]\n 30684: u64 [s1 + 0x60] = a0\n 30687: a0 = u64 [a1]\n 30689: u64 [s1 + 0x70] = a0\n 30692: ra = 1366, jump @1312\n      : @1275 [@dyn 683] (gas: 11)\n 30698: u64 [s1 + 664] = 0\n 30702: a0 = u64 [s1 + 0x48]\n 30705: a2 = s1 + 0x200\n 30709: u64 [a2 + 0x90] = a0\n 30713: a0 = u64 [s1 + 0x50]\n 30716: u64 [a2 + 0x88] = a0\n 30720: a1 = s1 + 0x280\n 30724: a0 = u64 [s1 + 0x58]\n 30727: u64 [a2 + 0x80] = a0\n 30731: a0 = 0\n 30733: ra = 1368, jump @19\n      : @1276 [@dyn 684] (gas: 1)\n 30739: t0 = 1370, jump @1377\n      : @1277 [@dyn 685] (gas: 1)\n 30745: ra = 1372, jump @19\n      : @1278 [@dyn 686] (gas: 3)\n 30751: a2 = 0x2026c\n 30756: a0 = i32 [0x2026c]\n 30761: jump @1280 if a0 >u 63\n      : @1279 (gas: 2)\n 30765: u32 [0x2026c] = 0x40\n 30771: fallthrough\n      : @1280 (gas: 13)\n 30772: u64 [s1 + 0x38] = a2\n 30775: a0 = sp + 0xffffffffffffffe0\n 30778: a2 = a0 & 0xffffffffffffffe0\n 30781: u64 [s1 + 0x30] = a2\n 30784: sp = a2\n 30786: a0 = 0x20280\n 30791: i32 a0 = a0 + 0\n 30793: i32 a2 = a2 + 0\n 30795: a1 = 0x40\n 30798: u64 [s1 + 0x40] = a0\n 30801: ra = 0x55e\n 30805: ecalli 6 // 'hash_keccak_256'\n 30807: fallthrough\n      : @1281 [@dyn 687] (gas: 6)\n 30808: a3 = u64 [s1 + 0x30]\n 30811: a0 = u64 [a3 + 0x18]\n 30814: a1 = u64 [a3 + 0x10]\n 30817: a2 = u64 [a3 + 0x8]\n 30820: a3 = u64 [a3]\n 30822: t0 = 1376, jump @1351\n      : @1282 [@dyn 688] (gas: 7)\n 30828: u64 [s1 + 0x2b8] = a3\n 30832: u64 [s1 + 0x2b0] = a2\n 30836: u64 [s1 + 0x2a8] = a1\n 30840: u64 [s1 + 0x2a0] = a0\n 30844: a0 = s1 + 0x240\n 30848: a1 = s1 + 0x2a0\n 30852: ra = 1378, jump @21\n      : @1283 [@dyn 689] (gas: 28)\n 30858: a1 = s1 + 0x200\n 30862: a2 = u64 [a1 + 0x58]\n 30865: a0 = u64 [a1 + 0x50]\n 30868: a5 = u64 [a1 + 0x48]\n 30871: a4 = u64 [a1 + 0x40]\n 30874: a1 = u64 [s1 + 0x78]\n 30877: t1 = a2 ^ a1\n 30880: u64 [s1 + 0x20] = a2\n 30883: a1 = a2 <u a1\n 30886: a2 = u64 [s1 + 0x68]\n 30889: a3 = a0 <u a2\n 30892: u64 [s1 + 0x8] = a3\n 30895: a1 = a3 if t1 == 0\n 30898: a3 = u64 [s1 + 0x60]\n 30901: t0 = a5 ^ a3\n 30904: u64 [s1 + 0x28] = a5\n 30907: a5 = a5 <u a3\n 30910: a3 = u64 [s1 + 0x70]\n 30913: u64 [s1 + 0x30] = a4\n 30916: a3 = a4 <u a3\n 30919: u64 [s1 + 0x10] = a3\n 30922: a5 = a3 if t0 == 0\n 30925: u64 [s1 + 0x18] = a0\n 30928: a2 = a2 ^ a0\n 30931: a0 = a2 | t1\n 30934: u64 [s1] = a5\n 30936: a1 = a5 if a0 == 0\n 30939: jump @1305 if a1 != 0\n      : @1284 (gas: 11)\n 30943: u64 [s1 + 568] = 0\n 30947: a0 = u64 [s1 + 0x58]\n 30950: a2 = s1 + 0x200\n 30954: u64 [a2 + 0x20] = a0\n 30957: a0 = u64 [s1 + 0x50]\n 30960: u64 [a2 + 0x28] = a0\n 30963: a1 = s1 + 0x220\n 30967: a0 = u64 [s1 + 0x48]\n 30970: u64 [a2 + 0x30] = a0\n 30973: a0 = 0\n 30975: ra = 1380, jump @19\n      : @1285 [@dyn 690] (gas: 7)\n 30981: u64 [s1 + 536] = 0\n 30985: u64 [s1 + 528] = 0\n 30989: u64 [s1 + 520] = 0\n 30993: a0 = 0x20\n 30996: a1 = s1 + 0x200\n 31000: u64 [s1 + 512] = 0\n 31004: ra = 1382, jump @19\n      : @1286 [@dyn 691] (gas: 27)\n 31010: a0 = u64 [s1 + 0x68]\n 31013: a1 = u64 [s1 + 0x18]\n 31016: a0 = a1 - a0\n 31019: a2 = u64 [s1]\n 31021: a1 = a0 - a2\n 31024: u64 [s1 + 0x18] = a1\n 31027: a0 = a0 <u a2\n 31030: a1 = u64 [s1 + 0x78]\n 31033: a2 = u64 [s1 + 0x20]\n 31036: a1 = a2 - a1\n 31039: a2 = u64 [s1 + 0x8]\n 31042: a1 = a1 - a2\n 31045: a1 = a1 - a0\n 31048: u64 [s1 + 0x20] = a1\n 31051: a2 = u64 [s1 + 0x38]\n 31054: a0 = i32 [a2]\n 31056: a1 = u64 [s1 + 0x60]\n 31059: a3 = u64 [s1 + 0x28]\n 31062: a1 = a3 - a1\n 31065: a3 = u64 [s1 + 0x10]\n 31068: a1 = a1 - a3\n 31071: u64 [s1 + 0x28] = a1\n 31074: a3 = u64 [s1 + 0x70]\n 31077: a4 = u64 [s1 + 0x30]\n 31080: a4 = a4 - a3\n 31083: u64 [s1 + 0x30] = a4\n 31086: jump @1288 if a0 >u 63\n      : @1287 (gas: 2)\n 31090: u32 [a2 + 0] = 0x40\n 31093: fallthrough\n      : @1288 (gas: 10)\n 31094: a0 = sp + 0xffffffffffffffe0\n 31097: a0 = a0 & 0xffffffffffffffe0\n 31100: u64 [s1 + 0x38] = a0\n 31103: sp = a0\n 31105: i32 a2 = a0 + 0\n 31107: a1 = 0x40\n 31110: a0 = u64 [s1 + 0x40]\n 31113: ra = 0x568\n 31117: ecalli 6 // 'hash_keccak_256'\n 31119: fallthrough\n      : @1289 [@dyn 692] (gas: 6)\n 31120: a3 = u64 [s1 + 0x38]\n 31123: a0 = u64 [a3 + 0x18]\n 31126: a1 = u64 [a3 + 0x10]\n 31129: a2 = u64 [a3 + 0x8]\n 31132: a3 = u64 [a3]\n 31134: t0 = 1386, jump @1351\n      : @1290 [@dyn 693] (gas: 16)\n 31140: a4 = s1 + 0x200\n 31144: u64 [a4 + 0xd8] = a3\n 31148: u64 [a4 + 0xd0] = a2\n 31152: u64 [a4 + 0xc8] = a1\n 31156: u64 [a4 + 0xc0] = a0\n 31160: a0 = u64 [s1 + 0x20]\n 31163: u64 [a4 + 0xf8] = a0\n 31167: a0 = u64 [s1 + 0x18]\n 31170: u64 [a4 + 0xf0] = a0\n 31174: a0 = u64 [s1 + 0x28]\n 31177: u64 [a4 + 0xe8] = a0\n 31181: a0 = u64 [s1 + 0x30]\n 31184: u64 [a4 + 0xe0] = a0\n 31188: a0 = s1 + 0x2c0\n 31192: a1 = s1 + 0x2e0\n 31196: ra = 1388, jump @24\n      : @1291 [@dyn 694] (gas: 7)\n 31202: u64 [s1 + 792] = 0\n 31206: u64 [s1 + 784] = 0\n 31210: u64 [s1 + 776] = 0\n 31214: u64 [s1 + 768] = 0x2\n 31219: a0 = s1 + 0x1e0\n 31223: a1 = s1 + 0x300\n 31227: ra = 1390, jump @21\n      : @1292 [@dyn 695] (gas: 34)\n 31233: a1 = u64 [s1 + 0x1e8]\n 31237: t0 = u64 [s1 + 0x1f8]\n 31241: t1 = u64 [s1 + 0x1e0]\n 31245: a3 = u64 [s1 + 0x1f0]\n 31249: a4 = u64 [s1 + 0x60]\n 31252: a0 = a1 ^ a4\n 31255: a5 = a1 <u a4\n 31258: ra = u64 [s1 + 0x70]\n 31261: t2 = t1 <u ra\n 31264: a5 = t2 if a0 == 0\n 31267: a0 = u64 [s1 + 0x68]\n 31270: a2 = a3 - a0\n 31273: a3 = a3 <u a0\n 31276: a0 = u64 [s1 + 0x78]\n 31279: a0 = t0 - a0\n 31282: a0 = a0 - a3\n 31285: a3 = a2 <u a5\n 31288: a0 = a0 - a3\n 31291: a3 = a2 - a5\n 31294: a1 = a1 - a4\n 31297: a1 = a1 - t2\n 31300: a4 = s1 + 0x300\n 31304: u64 [a4 + 32] = 0x2\n 31308: a2 = t1 - ra\n 31311: u64 [a4 + 0x40] = a2\n 31314: u64 [a4 + 0x48] = a1\n 31317: u64 [a4 + 0x50] = a3\n 31320: u64 [a4 + 0x58] = a0\n 31323: u64 [s1 + 824] = 0\n 31327: u64 [s1 + 816] = 0\n 31331: u64 [s1 + 808] = 0\n 31335: a0 = s1 + 0x320\n 31339: a1 = s1 + 0x340\n 31343: ra = 1392, jump @24\n      : @1293 [@dyn 696] (gas: 3)\n 31349: a0 = s1 + 0x1c0\n 31353: a1 = 0x40\n 31356: ra = 1394, jump @17\n      : @1294 [@dyn 697] (gas: 6)\n 31362: a4 = s1 + 0x100\n 31366: a3 = u64 [a4 + 0xd8]\n 31370: a1 = u64 [a4 + 0xd0]\n 31374: a2 = u64 [a4 + 0xc8]\n 31378: a0 = u64 [a4 + 0xc0]\n 31382: t0 = 1396, jump @1332\n      : @1295 [@dyn 698] (gas: 1)\n 31388: jump @1299 if a1 != 0\n      : @1296 (gas: 11)\n 31392: a1 = u64 [s1 + 0x70]\n 31395: u64 [s1 + 0x1a0] = a1\n 31399: a1 = u64 [s1 + 0x60]\n 31402: u64 [s1 + 0x1a8] = a1\n 31406: a1 = u64 [s1 + 0x68]\n 31409: u64 [s1 + 0x1b0] = a1\n 31413: a1 = s1 + 0x1a0\n 31417: a2 = u64 [s1 + 0x78]\n 31420: u64 [s1 + 0x1b8] = a2\n 31424: u64 [s1 + 0x78] = a0\n 31427: ra = 1398, jump @19\n      : @1297 [@dyn 699] (gas: 26)\n 31433: u64 [s1 + 344] = 0\n 31437: u64 [s1 + 336] = 0\n 31441: u64 [s1 + 328] = 0\n 31445: u64 [s1 + 320] = 0\n 31449: u64 [s1 + 376] = 0\n 31453: a0 = u64 [s1 + 0x48]\n 31456: a5 = s1 + 0x100\n 31460: u64 [a5 + 0x70] = a0\n 31463: a0 = u64 [s1 + 0x50]\n 31466: u64 [a5 + 0x68] = a0\n 31469: a0 = u64 [0x20248]\n 31474: a1 = u64 [0x20250]\n 31479: a2 = u64 [0x20258]\n 31484: a3 = u64 [s1 + 0x58]\n 31487: u64 [a5 + 0x60] = a3\n 31490: u64 [a5 + 0x98] = a0\n 31494: u64 [a5 + 0x90] = a1\n 31498: u64 [a5 + 0x88] = a2\n 31502: a0 = u64 [0x20260]\n 31507: a1 = 0x20\n 31510: a2 = s1 + 0x180\n 31514: a3 = s1 + 0x160\n 31518: a4 = s1 + 0x140\n 31522: u64 [a5 + 0x80] = a0\n 31526: a0 = u64 [s1 + 0x78]\n 31529: ra = 1400, jump @27\n      : @1298 [@dyn 700] (gas: 7)\n 31535: sp = s0 + 0xfffffffffffffc80\n 31539: a0 = sp + 0x300\n 31543: ra = u64 [a0 + 0x78]\n 31546: s0 = u64 [a0 + 0x70]\n 31549: s1 = u64 [a0 + 0x68]\n 31552: sp = sp + 0x380\n 31556: ret\n      : @1299 (gas: 1)\n 31558: trap\n      : @1300 (gas: 8)\n 31559: u64 [s1 + 176] = 0\n 31563: u64 [s1 + 168] = 0\n 31567: u64 [s1 + 160] = 0\n 31571: a0 = 0x96c6fd1e00000000\n 31581: a1 = s1 + 0xa0\n 31585: u64 [s1 + 0xb8] = a0\n 31589: a0 = 0\n 31591: ra = 1402, jump @19\n      : @1301 [@dyn 701] (gas: 7)\n 31597: u64 [s1 + 152] = 0\n 31601: u64 [s1 + 144] = 0\n 31605: u64 [s1 + 136] = 0\n 31609: a0 = 0x4\n 31612: a1 = s1 + 0x80\n 31616: u64 [s1 + 128] = 0\n 31620: ra = 1404, jump @19\n      : @1302 [@dyn 702] (gas: 2)\n 31626: a1 = i32 [0x2026c]\n 31631: jump @1304 if a1 >u 63\n      : @1303 (gas: 2)\n 31635: u32 [0x2026c] = 0x40\n 31641: fallthrough\n      : @1304 (gas: 6)\n 31642: a1 = 0x20280\n 31647: i32 a1 = a1 + 0\n 31649: a0 = 0x1\n 31652: a2 = 0x24\n 31655: ecalli 7 // 'seal_return'\n 31657: fallthrough\n      : @1305 (gas: 8)\n 31658: u64 [s1 + 304] = 0\n 31662: u64 [s1 + 296] = 0\n 31666: u64 [s1 + 288] = 0\n 31670: a0 = 0xe450d38c00000000\n 31680: a1 = s1 + 0x120\n 31684: u64 [s1 + 0x138] = a0\n 31688: a0 = 0\n 31690: ra = 1406, jump @19\n      : @1306 [@dyn 703] (gas: 11)\n 31696: u64 [s1 + 280] = 0\n 31700: a0 = u64 [s1 + 0x48]\n 31703: a3 = s1 + 0x100\n 31707: u64 [a3 + 0x10] = a0\n 31710: a0 = u64 [s1 + 0x50]\n 31713: u64 [a3 + 0x8] = a0\n 31716: a0 = 0x4\n 31719: a1 = s1 + 0x100\n 31723: a2 = u64 [s1 + 0x58]\n 31726: u64 [a3] = a2\n 31728: ra = 1408, jump @19\n      : @1307 [@dyn 704] (gas: 11)\n 31734: a0 = u64 [s1 + 0x20]\n 31737: u64 [s1 + 0xf8] = a0\n 31741: a0 = u64 [s1 + 0x18]\n 31744: u64 [s1 + 0xf0] = a0\n 31748: a0 = u64 [s1 + 0x28]\n 31751: u64 [s1 + 0xe8] = a0\n 31755: a0 = 0x24\n 31758: a1 = s1 + 0xe0\n 31762: a2 = u64 [s1 + 0x30]\n 31765: u64 [s1 + 0xe0] = a2\n 31769: ra = 1410, jump @19\n      : @1308 [@dyn 705] (gas: 11)\n 31775: a0 = u64 [s1 + 0x78]\n 31778: u64 [s1 + 0xd8] = a0\n 31782: a0 = u64 [s1 + 0x68]\n 31785: u64 [s1 + 0xd0] = a0\n 31789: a0 = u64 [s1 + 0x60]\n 31792: u64 [s1 + 0xc8] = a0\n 31796: a0 = 0x44\n 31799: a1 = s1 + 0xc0\n 31803: a2 = u64 [s1 + 0x70]\n 31806: u64 [s1 + 0xc0] = a2\n 31810: ra = 1412, jump @19\n      : @1309 [@dyn 706] (gas: 3)\n 31816: a0 = u64 [s1 + 0x38]\n 31819: a0 = i32 [a0]\n 31821: jump @1311 if a0 >u 127\n      : @1310 (gas: 3)\n 31825: a1 = u64 [s1 + 0x38]\n 31828: u32 [a1 + 0] = 0x80\n 31832: fallthrough\n      : @1311 (gas: 6)\n 31833: a0 = 0x1\n 31836: a2 = 0x64\n 31839: a1 = u64 [s1 + 0x40]\n 31842: ra = 0x586\n 31846: ecalli 7 // 'seal_return'\n 31848: fallthrough\n      : @1312 [@dyn 707] (gas: 12)\n 31849: sp = sp + 0xffffffffffffff80\n 31852: u64 [sp + 0x78] = ra\n 31855: u64 [sp + 0x70] = s0\n 31858: s0 = sp + 0x80\n 31862: sp = sp & 0xffffffffffffffe0\n 31865: u64 [sp + 88] = 0\n 31868: u64 [sp + 80] = 0\n 31871: u64 [sp + 72] = 0\n 31874: u64 [sp + 64] = 0x5\n 31878: a0 = sp + 0x20\n 31881: a1 = sp + 0x40\n 31884: ra = 1416, jump @21\n      : @1313 [@dyn 708] (gas: 2)\n 31890: a0 = u8 [sp + 0x20]\n 31893: jump @1315 if a0 != 0\n      : @1314 (gas: 5)\n 31896: sp = s0 + 0xffffffffffffff80\n 31899: ra = u64 [sp + 0x78]\n 31902: s0 = u64 [sp + 0x70]\n 31905: sp = sp + 0x80\n 31909: ret\n      : @1315 (gas: 8)\n 31911: u64 [sp + 16] = 0\n 31914: u64 [sp + 8] = 0\n 31917: u64 [sp + 0] = 0\n 31919: a0 = 0xd93c066500000000\n 31929: a1 = sp\n 31931: u64 [sp + 0x18] = a0\n 31934: a0 = 0\n 31936: ra = 1418, jump @19\n      : @1316 [@dyn 709] (gas: 2)\n 31942: a1 = i32 [0x2026c]\n 31947: jump @1318 if a1 >u 31\n      : @1317 (gas: 2)\n 31951: u32 [0x2026c] = 0x20\n 31957: fallthrough\n      : @1318 (gas: 8)\n 31958: a1 = 0x20280\n 31963: i32 a1 = a1 + 0\n 31965: a0 = 0x1\n 31968: a2 = 0x4\n 31971: ecalli 7 // 'seal_return'\n 31973: a0 = 0\n 31975: ra = 0x58c\n 31979: jump @39\n      : @1319 [export #0: 'call'] (gas: 2)\n 31982: a0 = 0\n 31984: ra = 1420, jump @39\n      : @1320 [@dyn 710] [export #1: 'deploy'] (gas: 2)\n 31990: a0 = 0x1\n 31993: ra = 1422, jump @39\n      : @1321 [@dyn 711] (gas: 16)\n 31999: a0 = u64 [a2 + 0x8]\n 32002: a1 = i32 [a2 + 0x10]\n 32005: a2 = u64 [a2]\n 32007: a0 = reverse a0\n 32009: a3 = a0 << 0x20\n 32012: a1 = reverse a1\n 32014: a1 = a1 >> 0x20\n 32017: a3 = a3 | a1\n 32020: a0 = a0 >> 0x20\n 32023: a1 = reverse a2\n 32025: a2 = a1 << 0x20\n 32028: a0 = a0 | a2\n 32031: a1 = a1 >> 0x20\n 32034: a2 = s1 + 0x7ff\n 32038: a2 = a2 + 0x39\n 32041: jump [t0]\n      : @1322 (gas: 30)\n 32043: a3 = u64 [s1 + 0x48]\n 32046: a0 = u64 [a3 + 0x18]\n 32049: a1 = u64 [a3 + 0x10]\n 32052: a2 = u64 [a3 + 0x8]\n 32055: a3 = u64 [a3]\n 32057: a0 = reverse a0\n 32059: u64 [s1 + 0x40] = a0\n 32062: a0 = reverse a1\n 32064: u64 [s1 + 0x38] = a0\n 32067: a0 = reverse a2\n 32069: u64 [s1 + 0x30] = a0\n 32072: a0 = reverse a3\n 32074: u64 [s1 + 0x28] = a0\n 32077: a0 = sp + 0xffffffffffffffe0\n 32080: a0 = a0 & 0xffffffffffffffe0\n 32083: u64 [s1 + 0x48] = a0\n 32086: sp = a0\n 32088: a0 = u64 [s1 + 0x50]\n 32091: a0 = a0 << 0x20\n 32094: a0 = a0 >> 0x20\n 32097: u64 [s1 + 504] = 0\n 32101: u64 [s1] = a0\n 32103: u64 [s1 + 0x1f0] = a0\n 32107: a0 = u64 [s1 + 0x70]\n 32110: u64 [s1 + 0x1e8] = a0\n 32114: a1 = s1 + 0x1e0\n 32118: a0 = u64 [s1 + 0x78]\n 32121: u64 [s1 + 0x1e0] = a0\n 32125: a0 = 0\n 32127: jump [t0]\n      : @1323 (gas: 27)\n 32129: a3 = u64 [s1 + 0x50]\n 32132: a0 = u64 [a3 + 0x18]\n 32135: a1 = u64 [a3 + 0x10]\n 32138: a2 = u64 [a3 + 0x8]\n 32141: a3 = u64 [a3]\n 32143: a0 = reverse a0\n 32145: u64 [s1 + 0x48] = a0\n 32148: a0 = reverse a1\n 32150: u64 [s1 + 0x40] = a0\n 32153: a0 = reverse a2\n 32155: u64 [s1 + 0x38] = a0\n 32158: a0 = reverse a3\n 32160: u64 [s1 + 0x30] = a0\n 32163: a0 = sp + 0xffffffffffffffe0\n 32166: a0 = a0 & 0xffffffffffffffe0\n 32169: u64 [s1 + 0x50] = a0\n 32172: sp = a0\n 32174: u64 [s1 + 344] = 0\n 32178: a0 = u64 [s1]\n 32180: u64 [s1 + 0x150] = a0\n 32184: a0 = u64 [s1 + 0x70]\n 32187: u64 [s1 + 0x148] = a0\n 32191: a1 = s1 + 0x140\n 32195: a0 = u64 [s1 + 0x78]\n 32198: u64 [s1 + 0x140] = a0\n 32202: a0 = 0\n 32204: jump [t0]\n      : @1324 (gas: 15)\n 32206: a2 = u64 [s1 + 0x138]\n 32210: a0 = u64 [a2 + 0x8]\n 32213: a1 = i32 [a2 + 0x10]\n 32216: a2 = u64 [a2]\n 32218: a0 = reverse a0\n 32220: a3 = a0 << 0x20\n 32223: a1 = reverse a1\n 32225: a1 = a1 >> 0x20\n 32228: a3 = a3 | a1\n 32231: a0 = a0 >> 0x20\n 32234: a1 = reverse a2\n 32236: a2 = a1 << 0x20\n 32239: a0 = a0 | a2\n 32242: a1 = a1 >> 0x20\n 32245: jump [t0]\n      : @1325 (gas: 8)\n 32247: a0 = u64 [a2 + 0x8]\n 32250: a1 = i32 [a2 + 0x10]\n 32253: a2 = u64 [a2]\n 32255: a3 = reverse a0\n 32257: a0 = a3 << 0x20\n 32260: a1 = reverse a1\n 32262: a1 = a1 >> 0x20\n 32265: jump [t0]\n      : @1326 (gas: 18)\n 32267: a3 = u64 [s1 + 0x28]\n 32270: a0 = u64 [a3 + 0x18]\n 32273: a1 = u64 [a3 + 0x10]\n 32276: a2 = u64 [a3 + 0x8]\n 32279: a3 = u64 [a3]\n 32281: a0 = reverse a0\n 32283: u64 [s1 + 0x20] = a0\n 32286: a0 = reverse a1\n 32288: u64 [s1 + 0x18] = a0\n 32291: a0 = reverse a2\n 32293: u64 [s1 + 0x10] = a0\n 32296: a0 = reverse a3\n 32298: u64 [s1 + 0x8] = a0\n 32301: a0 = sp + 0xffffffffffffffe0\n 32304: a0 = a0 & 0xffffffffffffffe0\n 32307: u64 [s1 + 0x28] = a0\n 32310: sp = a0\n 32312: jump [t0]\n      : @1327 (gas: 26)\n 32314: a3 = u64 [s1 + 0x80]\n 32318: a3 = a3 + 0x1\n 32321: a0 = a3 <u 0x1\n 32324: ra = u64 [s1 + 0x88]\n 32328: ra = ra + a0\n 32331: a0 = a3 | ra\n 32334: a0 = a0 <u 0x1\n 32337: a1 = u64 [s1 + 0x78]\n 32340: t2 = a1 + a0\n 32343: a1 = t2 <u a1\n 32346: a0 = u64 [s1 + 0x90]\n 32350: a0 = a0 + a1\n 32353: a1 = u64 [s1 + 0xb8]\n 32357: t1 = a1 + 0x20\n 32360: a2 = t1 <u a1\n 32363: a4 = u64 [s1 + 0xa0]\n 32367: a1 = a4 + a2\n 32370: a4 = a1 <u a4\n 32373: a4 = a2 if a2 == 0\n 32376: a2 = u64 [s1 + 0xa8]\n 32380: a4 = a4 + a2\n 32383: a2 = a4 <u a2\n 32386: a5 = u64 [s1 + 0xb0]\n 32390: a5 = a5 + a2\n 32393: u64 [s1 + 0xb0] = a5\n 32397: jump [t0]\n      : @1328 (gas: 16)\n 32399: a3 = u64 [s1 + 0x68]\n 32402: a0 = u64 [a3 + 0x18]\n 32405: a1 = u64 [a3 + 0x10]\n 32408: a2 = u64 [a3 + 0x8]\n 32411: a3 = u64 [a3]\n 32413: a0 = reverse a0\n 32415: a4 = reverse a1\n 32417: a2 = reverse a2\n 32419: a3 = reverse a3\n 32421: a1 = u64 [s1 + 0x50]\n 32424: u64 [a1 + 0x18] = a3\n 32427: u64 [a1 + 0x10] = a2\n 32430: u64 [a1 + 0x8] = a4\n 32433: u64 [a1] = a0\n 32435: a0 = s1 + 0x100\n 32439: jump [t0]\n      : @1329 (gas: 16)\n 32441: a3 = u64 [s1 + 0x50]\n 32444: a0 = u64 [a3 + 0x18]\n 32447: a1 = u64 [a3 + 0x10]\n 32450: a2 = u64 [a3 + 0x8]\n 32453: a3 = u64 [a3]\n 32455: a0 = reverse a0\n 32457: a4 = reverse a1\n 32459: a2 = reverse a2\n 32461: a3 = reverse a3\n 32463: a1 = u64 [s1 + 0x48]\n 32466: u64 [a1 + 0x18] = a3\n 32469: u64 [a1 + 0x10] = a2\n 32472: u64 [a1 + 0x8] = a4\n 32475: u64 [a1] = a0\n 32477: a0 = s1 + 0x1a0\n 32481: jump [t0]\n      : @1330 (gas: 9)\n 32483: a0 = u64 [a3 + 0x18]\n 32486: a1 = u64 [a3 + 0x10]\n 32489: a2 = u64 [a3 + 0x8]\n 32492: a3 = u64 [a3]\n 32494: a0 = reverse a0\n 32496: a4 = reverse a1\n 32498: a2 = reverse a2\n 32500: a3 = reverse a3\n 32502: jump [t0]\n      : @1331 (gas: 8)\n 32504: a0 = sp + 0xffffffffffffffe0\n 32507: a0 = a0 & 0xffffffffffffffe0\n 32510: u64 [s1 + 0x50] = a0\n 32513: sp = a0\n 32515: i32 a2 = a0 + 0\n 32517: a1 = 0x40\n 32520: a0 = u64 [s1 + 0x60]\n 32523: jump [t0]\n      : @1332 (gas: 8)\n 32525: a3 = a3 | a2\n 32528: a2 = a0 | a1\n 32531: a2 = a2 | a3\n 32534: a2 = a2 >> 0x20\n 32537: a1 = a1 | a3\n 32540: a1 = a1 << 0x20\n 32543: a1 = a1 | a2\n 32546: jump [t0]\n      : @1333 (gas: 15)\n 32548: a4 = s1 + 0x100\n 32552: a0 = u64 [a4]\n 32554: a1 = u64 [a4 + 0x8]\n 32557: a2 = u64 [a4 + 0x18]\n 32560: a3 = u64 [a4 + 0x10]\n 32563: a0 = a0 & 0xffffffffffffff00\n 32567: a0 = a0 | 0x1\n 32570: a4 = s1 + 0x200\n 32574: u64 [a4 + 0x58] = a2\n 32577: u64 [a4 + 0x50] = a3\n 32580: u64 [a4 + 0x48] = a1\n 32583: u64 [a4 + 0x40] = a0\n 32586: a1 = s1 + 0x240\n 32590: a0 = u64 [s1 + 0x50]\n 32593: jump [t0]\n      : @1334 (gas: 11)\n 32595: u64 [a2] = a1\n 32597: u64 [a2 + 0x8] = a0\n 32600: u64 [a2 + 0x10] = a0\n 32603: u64 [a2 + 0x18] = a0\n 32606: sp = s0 + 0xfffffffffffffd80\n 32610: a0 = sp + 0x200\n 32614: ra = u64 [a0 + 0x78]\n 32617: s0 = u64 [a0 + 0x70]\n 32620: s1 = u64 [a0 + 0x68]\n 32623: sp = sp + 0x280\n 32627: jump [t0]\n      : @1335 (gas: 7)\n 32629: u64 [s1 + 376] = 0\n 32633: u64 [s1 + 368] = 0\n 32637: u64 [s1 + 352] = 0x6\n 32642: a0 = 0x20\n 32645: a1 = s1 + 0x160\n 32649: u64 [s1 + 360] = 0\n 32653: jump [t0]\n      : @1336 (gas: 7)\n 32655: u64 [s1 + 536] = 0\n 32659: u64 [s1 + 528] = 0\n 32663: u64 [s1 + 512] = 0x6\n 32668: a0 = 0x20\n 32671: a1 = s1 + 0x200\n 32675: u64 [s1 + 520] = 0\n 32679: jump [t0]\n      : @1337 (gas: 21)\n 32681: a2 = u64 [s1 + 0x68]\n 32684: a0 = u64 [a2 + 0x8]\n 32687: a1 = i32 [a2 + 0x10]\n 32690: a2 = u64 [a2]\n 32692: a0 = reverse a0\n 32694: a3 = a0 << 0x20\n 32697: a1 = reverse a1\n 32699: a1 = a1 >> 0x20\n 32702: a3 = a3 | a1\n 32705: a0 = a0 >> 0x20\n 32708: a1 = reverse a2\n 32710: a2 = a1 << 0x20\n 32713: a0 = a0 | a2\n 32716: a1 = a1 >> 0x20\n 32719: u64 [s1 + 312] = 0\n 32723: u64 [s1 + 0x130] = a1\n 32727: u64 [s1 + 0x128] = a0\n 32731: a1 = s1 + 0x120\n 32735: u64 [s1 + 0x120] = a3\n 32739: a0 = 0\n 32741: jump [t0]\n      : @1338 (gas: 14)\n 32743: a0 = u64 [a3 + 0x18]\n 32746: a1 = u64 [a3 + 0x10]\n 32749: a2 = u64 [a3 + 0x8]\n 32752: a3 = u64 [a3]\n 32754: a0 = reverse a0\n 32756: a4 = reverse a1\n 32758: a2 = reverse a2\n 32760: a3 = reverse a3\n 32762: a1 = u64 [s1 + 0x28]\n 32765: u64 [a1 + 0x18] = a3\n 32768: u64 [a1 + 0x10] = a2\n 32771: u64 [a1 + 0x8] = a4\n 32774: u64 [a1] = a0\n 32776: jump [t0]\n      : @1339 (gas: 5)\n 32778: sp = a0\n 32780: i32 a2 = a0 + 0\n 32782: a1 = 0x40\n 32785: a0 = u64 [s1 + 0x60]\n 32788: jump [t0]\n      : @1340 (gas: 19)\n 32790: u64 [s1 + 0x90] = ra\n 32794: a0 = u64 [s1 + 0x70]\n 32797: a1 = u64 [s1 + 0xb8]\n 32801: a0 = a1 <u a0\n 32804: a2 = u64 [s1 + 0x60]\n 32807: a1 = t2 ^ a2\n 32810: a2 = t2 <u a2\n 32813: a2 = a0 if a1 == 0\n 32816: a4 = u64 [s1 + 0x68]\n 32819: a0 = t1 <u a4\n 32822: a3 = u64 [s1 + 0x58]\n 32825: a1 = u64 [s1 + 0xb0]\n 32829: a5 = a1 ^ a3\n 32832: a3 = a1 <u a3\n 32835: a3 = a0 if a5 == 0\n 32838: a0 = t1 ^ a4\n 32841: a0 = a0 | a5\n 32844: a3 = a2 if a0 == 0\n 32847: jump [t0]\n      : @1341 (gas: 8)\n 32849: a4 = a4 | a2\n 32852: a2 = a0 | a1\n 32855: a2 = a2 | a4\n 32858: a2 = a2 >> 0x20\n 32861: a1 = a1 | a4\n 32864: a1 = a1 << 0x20\n 32867: a1 = a1 | a2\n 32870: jump [t0]\n      : @1342 (gas: 16)\n 32872: a4 = u64 [s1 + 0x138]\n 32876: a2 = a4 <u 0x80\n 32880: a3 = u64 [s1 + 0xf0]\n 32884: a1 = a3 if a2 != 0\n 32887: a5 = u64 [s1 + 0xf8]\n 32891: a3 = u64 [s1 + 0x108]\n 32895: a3 = a3 | a5\n 32898: a3 = a0 if a2 == 0\n 32901: a1 = 0xffffffffffffffff if a4 == 0\n 32904: a3 = 0xffffffffffffffff if a4 == 0\n 32907: a4 = u64 [s1 + 0x100]\n 32911: a4 = 0 if a2 == 0\n 32913: a5 = 0 if a2 == 0\n 32915: a0 = u64 [s1 + 0x110]\n 32919: a0 = a0 & ~a3\n 32922: jump [t0]\n      : @1343 (gas: 21)\n 32924: a2 = u64 [s1 + 0x68]\n 32927: a0 = u64 [a2 + 0x8]\n 32930: a1 = i32 [a2 + 0x10]\n 32933: a2 = u64 [a2]\n 32935: a0 = reverse a0\n 32937: a3 = a0 << 0x20\n 32940: a1 = reverse a1\n 32942: a1 = a1 >> 0x20\n 32945: a3 = a3 | a1\n 32948: a0 = a0 >> 0x20\n 32951: a1 = reverse a2\n 32953: a2 = a1 << 0x20\n 32956: a0 = a0 | a2\n 32959: a1 = a1 >> 0x20\n 32962: u64 [s1 + 184] = 0\n 32966: u64 [s1 + 0xb0] = a1\n 32970: u64 [s1 + 0xa8] = a0\n 32974: a0 = 0x4\n 32977: a1 = s1 + 0xa0\n 32981: u64 [s1 + 0xa0] = a3\n 32985: jump [t0]\n      : @1344 (gas: 15)\n 32987: t2 = u64 [s1 + 0xb8]\n 32991: t1 = u64 [s1 + 0xa0]\n 32995: ra = u64 [s1 + 0xa8]\n 32999: a1 = u64 [s1 + 0x50]\n 33002: a0 = a1 + t2\n 33005: a1 = a0 <u a1\n 33008: a4 = u64 [s1 + 0x48]\n 33011: a2 = a4 + t1\n 33014: a2 = a2 + a1\n 33017: a5 = a2 ^ a4\n 33020: a4 = a2 <u a4\n 33023: a4 = a1 if a5 == 0\n 33026: a5 = u64 [s1 + 0x40]\n 33029: a1 = a5 + ra\n 33032: jump [t0]\n      : @1345 (gas: 12)\n 33034: a0 = u64 [s1 + 0x30]\n 33037: a3 = s1 + 0x100\n 33041: u64 [a3 + 0x38] = a0\n 33044: a0 = u64 [s1 + 0x38]\n 33047: u64 [a3 + 0x30] = a0\n 33050: a0 = u64 [s1 + 0x40]\n 33053: u64 [a3 + 0x28] = a0\n 33056: a0 = 0x20\n 33059: a1 = s1 + 0x120\n 33063: a2 = u64 [s1 + 0x48]\n 33066: u64 [a3 + 0x20] = a2\n 33069: jump [t0]\n      : @1346 (gas: 12)\n 33071: a0 = u64 [s1 + 0x28]\n 33074: a3 = s1 + 0x100\n 33078: u64 [a3 + 0xd8] = a0\n 33082: a0 = u64 [s1 + 0x30]\n 33085: u64 [a3 + 0xd0] = a0\n 33089: a0 = u64 [s1 + 0x38]\n 33092: u64 [a3 + 0xc8] = a0\n 33096: a0 = 0x20\n 33099: a1 = s1 + 0x1c0\n 33103: a2 = u64 [s1 + 0x40]\n 33106: u64 [a3 + 0xc0] = a2\n 33110: jump [t0]\n      : @1347 (gas: 7)\n 33112: u64 [s1 + 344] = 0\n 33116: u64 [s1 + 336] = 0\n 33120: u64 [s1 + 320] = 0x6\n 33125: a0 = 0x20\n 33128: a1 = s1 + 0x140\n 33132: u64 [s1 + 328] = 0\n 33136: jump [t0]\n      : @1348 (gas: 18)\n 33138: a3 = u64 [s1 + 0x68]\n 33141: a0 = u64 [a3 + 0x18]\n 33144: a1 = u64 [a3 + 0x10]\n 33147: a2 = u64 [a3 + 0x8]\n 33150: a3 = u64 [a3]\n 33152: a0 = reverse a0\n 33154: u64 [s1 + 0x58] = a0\n 33157: a0 = reverse a1\n 33159: u64 [s1 + 0x50] = a0\n 33162: a0 = reverse a2\n 33164: u64 [s1 + 0x48] = a0\n 33167: a0 = reverse a3\n 33169: u64 [s1 + 0x40] = a0\n 33172: a0 = sp + 0xffffffffffffffe0\n 33175: a0 = a0 & 0xffffffffffffffe0\n 33178: u64 [s1 + 0x60] = a0\n 33181: sp = a0\n 33183: jump [t0]\n      : @1349 (gas: 17)\n 33185: a0 = u64 [a3 + 0x18]\n 33188: a1 = u64 [a3 + 0x10]\n 33191: a2 = u64 [a3 + 0x8]\n 33194: a3 = u64 [a3]\n 33196: a0 = reverse a0\n 33198: u64 [s1 + 0x60] = a0\n 33201: a0 = reverse a1\n 33203: u64 [s1 + 0x58] = a0\n 33206: a0 = reverse a2\n 33208: u64 [s1 + 0x50] = a0\n 33211: a0 = reverse a3\n 33213: u64 [s1 + 0x48] = a0\n 33216: a0 = sp + 0xffffffffffffffe0\n 33219: a0 = a0 & 0xffffffffffffffe0\n 33222: u64 [s1 + 0x68] = a0\n 33225: sp = a0\n 33227: jump [t0]\n      : @1350 (gas: 16)\n 33229: a3 = u64 [s1 + 0x58]\n 33232: a0 = u64 [a3 + 0x18]\n 33235: a1 = u64 [a3 + 0x10]\n 33238: a2 = u64 [a3 + 0x8]\n 33241: a3 = u64 [a3]\n 33243: a0 = reverse a0\n 33245: a4 = reverse a1\n 33247: a2 = reverse a2\n 33249: a3 = reverse a3\n 33251: a1 = u64 [s1 + 0x60]\n 33254: u64 [a1 + 0x18] = a3\n 33257: u64 [a1 + 0x10] = a2\n 33260: u64 [a1 + 0x8] = a4\n 33263: u64 [a1] = a0\n 33265: a0 = s1 + 0xe0\n 33269: jump [t0]\n      : @1351 (gas: 5)\n 33271: a0 = reverse a0\n 33273: a1 = reverse a1\n 33275: a2 = reverse a2\n 33277: a3 = reverse a3\n 33279: jump [t0]\n      : @1352 (gas: 14)\n 33281: a3 = a3 + a4\n 33284: u64 [s1 + 0x108] = a3\n 33288: a3 = a3 << 0x3b\n 33291: a4 = a2 >> 0x5\n 33294: a4 = a4 | a3\n 33297: a0 = u64 [s1 + 0x128]\n 33301: t1 = u64 [a0 + 0x18]\n 33304: a2 = a2 << 0x3b\n 33307: a3 = u64 [a0 + 0x10]\n 33310: a1 = a1 >> 0x5\n 33313: a0 = a1 | a2\n 33316: t2 = reverse t1\n 33318: a2 = reverse a3\n 33320: jump [t0]\n      : @1353 (gas: 15)\n 33322: a2 = u64 [s1 + 0x78]\n 33325: a0 = u64 [a2 + 0x8]\n 33328: a1 = i32 [a2 + 0x10]\n 33331: a2 = u64 [a2]\n 33333: a0 = reverse a0\n 33335: a3 = a0 << 0x20\n 33338: a1 = reverse a1\n 33340: a1 = a1 >> 0x20\n 33343: a1 = a1 | a3\n 33346: a0 = a0 >> 0x20\n 33349: a2 = reverse a2\n 33351: a3 = a2 << 0x20\n 33354: a0 = a0 | a3\n 33357: a2 = a2 >> 0x20\n 33360: jump [t0]\n      : @1354 (gas: 4)\n 33362: a0 = 0x1038\n 33366: a3 = s1 + a0\n 33369: a4 = a3 + 0x600\n 33373: jump [t0]\n      : @1355 (gas: 14)\n 33375: a5 = a5 + a2\n 33378: a4 = a5 <u a2\n 33381: a0 = u64 [s1 + 0x130]\n 33385: a2 = a2 <u a0\n 33388: a0 = t2 + a2\n 33391: a0 = a0 + a4\n 33394: a2 = a1 | a5\n 33397: a0 = a0 | a3\n 33400: a2 = a2 | a0\n 33403: a2 = a2 >> 0x20\n 33406: a0 = a0 | a5\n 33409: a0 = a0 << 0x20\n 33412: a0 = a0 | a2\n 33415: jump [t0]\n      : @1356 (gas: 10)\n 33417: a4 = 0 if a2 == 0\n 33419: a1 = u64 [s1 + 0x118]\n 33423: a1 = a1 & ~a3\n 33426: a2 = u64 [s1 + 0x120]\n 33430: a0 = a2 & ~a0\n 33433: a2 = u64 [s1 + 0x128]\n 33437: a2 = a2 & ~a4\n 33440: a3 = u64 [s1 + 0x130]\n 33444: a3 = a3 & ~a5\n 33447: jump [t0]\n      : @1357 (gas: 13)\n 33449: a4 = a0 << 0x3f\n 33452: a5 = a1 >> 0x1\n 33455: t1 = a5 | a4\n 33458: a5 = a3 << 0x3f\n 33461: a0 = a0 >> 0x1\n 33464: a0 = a0 | a5\n 33467: a1 = a1 << 0x3f\n 33470: a5 = a2 >> 0x1\n 33473: a1 = a1 | a5\n 33476: a3 = a3 >> 0x1\n 33479: a2 = a2 & 0x1\n 33482: a5 = -a2\n 33484: jump [t0]\n      : @1358 (gas: 16)\n 33486: sp = sp + 0xfffffffffffffd80\n 33490: a2 = sp + 0x200\n 33494: u64 [a2 + 0x78] = ra\n 33497: u64 [a2 + 0x70] = s0\n 33500: u64 [a2 + 0x68] = s1\n 33503: s0 = sp + 0x280\n 33507: sp = sp & 0xffffffffffffffe0\n 33510: s1 = sp\n 33512: a2 = u64 [a1 + 0x10]\n 33515: u64 [s1 + 0x50] = a2\n 33518: a2 = u64 [a1 + 0x8]\n 33521: u64 [s1 + 0x70] = a2\n 33524: a1 = u64 [a1]\n 33526: u64 [s1 + 0x78] = a1\n 33529: u64 [s1 + 0x58] = a0\n 33532: jump [t0]\n      : @1359 (gas: 14)\n 33534: a0 = u64 [a3 + 0x18]\n 33537: a1 = u64 [a3 + 0x10]\n 33540: a2 = u64 [a3 + 0x8]\n 33543: a3 = u64 [a3]\n 33545: a0 = reverse a0\n 33547: a4 = reverse a1\n 33549: a2 = reverse a2\n 33551: a3 = reverse a3\n 33553: a1 = u64 [s1 + 0x68]\n 33556: u64 [a1 + 0x18] = a3\n 33559: u64 [a1 + 0x10] = a2\n 33562: u64 [a1 + 0x8] = a4\n 33565: u64 [a1] = a0\n 33567: jump [t0]\n      : @1360 (gas: 13)\n 33569: a5 = a5 + a2\n 33572: a3 = a5 <u a2\n 33575: a2 = a2 <u t2\n 33578: a0 = t1 + a2\n 33581: a0 = a0 + a3\n 33584: a2 = a1 | a5\n 33587: a0 = a0 | a4\n 33590: a2 = a2 | a0\n 33593: a2 = a2 >> 0x20\n 33596: a0 = a0 | a5\n 33599: a0 = a0 << 0x20\n 33602: a0 = a0 | a2\n 33605: jump [t0]\n      : @1361 (gas: 4)\n 33607: a0 = 0x1838\n 33611: a3 = s1 + a0\n 33614: a4 = a3 + 0x200\n 33618: jump [t0]\n      : @1362 (gas: 8)\n 33620: a0 = u64 [a4 + 0x18]\n 33623: a1 = u64 [a4 + 0x20]\n 33626: a2 = u64 [a4 + 0x10]\n 33629: a3 = u64 [a4 + 0x8]\n 33632: a1 = a1 | a2\n 33635: a0 = a0 | a3\n 33638: a0 = a0 | a1\n 33641: jump [t0]\n      : @1363 (gas: 8)\n 33643: u64 [s1 + 208] = 0\n 33647: u64 [s1 + 200] = 0\n 33651: u64 [s1 + 192] = 0\n 33655: a0 = 0xe2517d3f00000000\n 33665: a1 = s1 + 0xc0\n 33669: u64 [s1 + 0xd8] = a0\n 33673: a0 = 0\n 33675: jump [t0]\n      : @1364 (gas: 10)\n 33677: a2 = a0 if a1 == 0\n 33680: a0 = u64 [s1 + 0x28]\n 33683: t2 = a4 <u a0\n 33686: a1 = a5 ^ t1\n 33689: a3 = a5 <u t1\n 33692: a3 = t2 if a1 == 0\n 33695: a0 = a0 ^ a4\n 33698: a0 = a0 | a1\n 33701: a3 = a2 if a0 == 0\n 33704: jump [t0]\n      : @1365 (gas: 11)\n 33706: a0 = u64 [s1 + 0x20]\n 33709: u64 [s1 + 0x198] = a0\n 33713: a0 = u64 [s1 + 0x18]\n 33716: u64 [s1 + 0x190] = a0\n 33720: a0 = u64 [s1 + 0x10]\n 33723: u64 [s1 + 0x188] = a0\n 33727: a1 = s1 + 0x180\n 33731: a0 = u64 [s1 + 0x8]\n 33734: u64 [s1 + 0x180] = a0\n 33738: a0 = 0\n 33740: jump [t0]\n      : @1366 (gas: 10)\n 33742: a1 = u64 [s1 + 0xb8]\n 33746: a0 = a1 + 0x3f\n 33749: a1 = a0 <u a1\n 33752: a2 = t2 + a1\n 33755: a0 = a0 & 0xffffffffffffffe0\n 33758: ra = u64 [s1 + 0x30]\n 33761: ra = ra + a0\n 33764: u64 [s1 + 0xb8] = ra\n 33768: a0 = ra <u a0\n 33771: jump [t0]\n      : @1367 (gas: 16)\n 33773: a4 = u64 [a3]\n 33775: u64 [sp + 0x18] = a4\n 33778: a4 = u64 [a3 + 0x8]\n 33781: u64 [sp + 0x20] = a4\n 33784: a4 = u64 [a3 + 0x10]\n 33787: u64 [sp + 0x28] = a4\n 33790: a3 = u64 [a3 + 0x18]\n 33793: u64 [sp + 0x30] = a3\n 33796: s1 = u64 [a2]\n 33798: a3 = u64 [a2 + 0x8]\n 33801: u64 [sp] = a3\n 33803: a3 = u64 [a2 + 0x10]\n 33806: u64 [sp + 0x8] = a3\n 33809: a2 = u64 [a2 + 0x18]\n 33812: u64 [sp + 0x10] = a2\n 33815: jump [t0]\n      : @1368 (gas: 8)\n 33817: a2 = a4 >u 0\n 33819: a1 = a1 ^ 0x1\n 33822: a1 = a2 if a4 != 0\n 33825: a2 = t2 >u 0\n 33827: a3 = a5 >u 0\n 33829: a3 = a2 if a5 == 0\n 33832: a3 = a1 if a0 == 0\n 33835: jump [t0]\n      : @1369 (gas: 12)\n 33837: a0 = u64 [s1 + 0x40]\n 33840: a3 = s1 + 0x100\n 33844: u64 [a3 + 0x18] = a0\n 33847: a0 = u64 [s1 + 0x48]\n 33850: u64 [a3 + 0x10] = a0\n 33853: a0 = u64 [s1 + 0x50]\n 33856: u64 [a3 + 0x8] = a0\n 33859: a0 = 0x20\n 33862: a1 = s1 + 0x100\n 33866: a2 = u64 [s1 + 0x58]\n 33869: u64 [a3] = a2\n 33871: jump [t0]\n      : @1370 (gas: 10)\n 33873: a0 = u64 [sp + 0x10]\n 33876: a1 = u64 [sp + 0x18]\n 33879: a2 = 0x100000000\n 33889: a2 = a2 ^ a0\n 33892: a2 = a2 | a1\n 33895: a3 = a0 >> 0x20\n 33898: a3 = a3 <u 0x1\n 33901: a3 = 0 if a1 != 0\n 33903: a3 = 0 if a2 == 0\n 33905: jump [t0]\n      : @1371 (gas: 8)\n 33907: a1 = a2 & ~a1\n 33910: a2 = u64 [s1 + 0x128]\n 33914: a2 = a2 & ~a5\n 33917: a3 = u64 [s1 + 0x130]\n 33921: a3 = a3 & ~a4\n 33924: a4 = s1 + 0x7ff\n 33928: a4 = a4 + 0xb9\n 33932: jump [t0]\n      : @1372 (gas: 10)\n 33934: a0 = u64 [s1 + 0x28]\n 33937: a1 = u64 [s1 + 0x18]\n 33940: a0 = a0 | a1\n 33943: a1 = 0xffffffe0\n 33953: a3 = u64 [s1 + 0x30]\n 33956: a1 = a3 <u a1\n 33959: a2 = u64 [s1 + 0x20]\n 33962: a1 = 0 if a2 != 0\n 33964: a1 = 0 if a0 != 0\n 33966: jump [t0]\n      : @1373 (gas: 10)\n 33968: a0 = u64 [a3 + 0x18]\n 33971: a1 = u64 [a3 + 0x10]\n 33974: a2 = u64 [a3 + 0x8]\n 33977: a3 = u64 [a3]\n 33979: a0 = reverse a0\n 33981: a1 = reverse a1\n 33983: a2 = reverse a2\n 33985: a3 = reverse a3\n 33987: a4 = s1 + 0x300\n 33991: jump [t0]\n      : @1374 (gas: 8)\n 33993: a0 = u64 [a4 + 0x58]\n 33996: a1 = u64 [a4 + 0x60]\n 33999: a2 = u64 [a4 + 0x50]\n 34002: a3 = u64 [a4 + 0x48]\n 34005: a1 = a1 | a2\n 34008: a0 = a0 | a3\n 34011: a0 = a0 | a1\n 34014: jump [t0]\n      : @1375 (gas: 8)\n 34016: a4 = a2 + a0\n 34019: a4 = a4 + a3\n 34022: a3 = a4 ^ a2\n 34025: u64 [s1 + 0x110] = a4\n 34029: a2 = a4 <u a2\n 34032: a2 = a0 if a3 == 0\n 34035: a4 = u64 [s1 + 0x108]\n 34039: jump [t0]\n      : @1376 (gas: 4)\n 34041: a0 = 0x1838\n 34045: a3 = s1 + a0\n 34048: a4 = a3 + 0x100\n 34052: jump [t0]\n      : @1377 (gas: 7)\n 34054: u64 [s1 + 632] = 0\n 34058: u64 [s1 + 624] = 0\n 34062: u64 [s1 + 616] = 0\n 34066: a0 = 0x20\n 34069: a1 = s1 + 0x260\n 34073: u64 [s1 + 608] = 0\n 34077: jump [t0]\n      : @1378 (gas: 11)\n 34079: a4 = a4 + a1\n 34082: a1 = a4 <u a1\n 34085: a1 = a1 + a5\n 34088: a1 = a1 | a2\n 34091: a2 = a0 | a4\n 34094: a2 = a2 | a1\n 34097: a1 = a1 | a4\n 34100: a2 = a2 >> 0x20\n 34103: a1 = a1 << 0x20\n 34106: a1 = a1 | a2\n 34109: jump [t0]\n      : @1379 (gas: 10)\n 34111: u64 [s1 + 0xf8] = a0\n 34115: u64 [s1 + 0x100] = a1\n 34119: a0 = u64 [s1 + 0xf0]\n 34123: a0 = a0 | a1\n 34126: u64 [s1 + 0xf0] = a0\n 34130: a0 = u64 [s1 + 0x138]\n 34134: a2 = a0 + 0xffffffffffffff80\n 34137: a0 = 0xffffffffffffffff\n 34140: a1 = 0xffffffffffffffff\n 34143: jump [t0]\n      : @1380 (gas: 9)\n 34145: u64 [s1 + 0x18] = a1\n 34148: u64 [s1 + 0x230] = a1\n 34152: u64 [s1 + 0x10] = a2\n 34155: u64 [s1 + 0x228] = a2\n 34159: a1 = s1 + 0x220\n 34163: u64 [s1 + 0x8] = a0\n 34166: u64 [s1 + 0x220] = a0\n 34170: a0 = 0\n 34172: jump [t0]\n      : @1381 (gas: 10)\n 34174: sp = sp + 0xfffffffffffffd80\n 34178: a3 = sp + 0x200\n 34182: u64 [a3 + 0x78] = ra\n 34185: u64 [a3 + 0x70] = s0\n 34188: u64 [a3 + 0x68] = s1\n 34191: s0 = sp + 0x280\n 34195: sp = sp & 0xffffffffffffffe0\n 34198: s1 = sp\n 34200: a3 = u64 [a2 + 0x10]\n 34203: jump [t0]\n      : @1382 (gas: 12)\n 34205: a2 = u64 [sp]\n 34207: a3 = u64 [sp + 0x8]\n 34210: u64 [s1] = a2\n 34212: u64 [s1 + 0x8] = a3\n 34215: u64 [s1 + 0x10] = a0\n 34218: u64 [s1 + 0x18] = a1\n 34221: sp = s0 + 0xffffffffffffffc0\n 34224: ra = u64 [sp + 0x38]\n 34227: s0 = u64 [sp + 0x30]\n 34230: s1 = u64 [sp + 0x28]\n 34233: sp = sp + 0x40\n 34236: jump [t0]\n      : @1383 (gas: 6)\n 34238: a0 = u64 [a3 + 0x18]\n 34241: a1 = u64 [a3 + 0x10]\n 34244: a2 = u64 [a3 + 0x8]\n 34247: a3 = u64 [a3]\n 34249: a0 = reverse a0\n 34251: jump [t0]\n      : @1384 (gas: 8)\n 34253: a0 = a0 | a2\n 34256: a2 = a3 | a1\n 34259: a2 = a2 | a0\n 34262: a2 = a2 >> 0x20\n 34265: a0 = a0 | a1\n 34268: a0 = a0 << 0x20\n 34271: a0 = a0 | a2\n 34274: jump [t0]\n      : @1385 (gas: 5)\n 34276: sp = a0\n 34278: i32 a2 = a0 + 0\n 34280: a1 = 0x40\n 34283: a0 = u64 [s1 + 0xb8]\n 34287: jump [t0]\n      : @1386 (gas: 12)\n 34289: a0 = u64 [a5 + 0xa0]\n 34293: a1 = u64 [a5 + 0x98]\n 34297: a2 = u64 [a5 + 0x90]\n 34301: a4 = u64 [a5 + 0x88]\n 34305: a0 = a0 | a2\n 34308: a2 = a4 | a1\n 34311: a2 = a2 | a0\n 34314: a2 = a2 >> 0x20\n 34317: a0 = a0 | a1\n 34320: a0 = a0 << 0x20\n 34323: a0 = a0 | a2\n 34326: jump [t0]\n      : @1387 (gas: 13)\n 34328: a0 = u64 [s1 + 0xb0]\n 34332: a1 = u64 [s1 + 0xa0]\n 34336: a0 = a0 | a1\n 34339: a1 = u64 [s1 + 0xb8]\n 34343: a4 = a1\n 34345: a2 = u64 [s1 + 0xa8]\n 34349: a1 = a1 | a2\n 34352: a1 = a1 | a0\n 34355: a1 = a1 >> 0x20\n 34358: a0 = a0 | a2\n 34361: a0 = a0 << 0x20\n 34364: a0 = a0 | a1\n 34367: jump [t0]\n      : @1388 (gas: 7)\n 34369: a0 = a0 << 0x3b\n 34372: a1 = a0 >> 0x38\n 34375: u64 [s1 + 0x138] = a1\n 34379: a2 = 0x80 - a1\n 34383: a0 = 0xffffffffffffffff\n 34386: a1 = 0xffffffffffffffff\n 34389: jump [t0]\n      : @1389 (gas: 9)\n 34391: a0 = sp + 0xffffffffffffffe0\n 34394: a4 = a0 & 0xffffffffffffffe0\n 34397: sp = a4\n 34399: a0 = 0\n 34401: u64 [s1 + 184] = 0\n 34405: t2 = 0\n 34407: t1 = 0\n 34409: u64 [s1 + 176] = 0\n 34413: jump [t0]\n      : @1390 (gas: 8)\n 34415: a0 = sp + 0xffffffffffffffe0\n 34418: a0 = a0 & 0xffffffffffffffe0\n 34421: u64 [s1 + 0x58] = a0\n 34424: sp = a0\n 34426: i32 a2 = a0 + 0\n 34428: a1 = 0x40\n 34431: a0 = u64 [s1 + 0x70]\n 34434: jump [t0]\n      : @1391 (gas: 8)\n 34436: a0 = sp + 0xffffffffffffffe0\n 34439: a0 = a0 & 0xffffffffffffffe0\n 34442: u64 [s1 + 0x30] = a0\n 34445: sp = a0\n 34447: i32 a2 = a0 + 0\n 34449: a1 = 0x40\n 34452: a0 = u64 [s1 + 0x40]\n 34455: jump [t0]\n      : @1392 (gas: 8)\n 34457: a0 = u64 [a4 + 0xd8]\n 34461: a1 = u64 [a4 + 0xe0]\n 34465: a2 = u64 [a4 + 0xd0]\n 34469: a3 = u64 [a4 + 0xc8]\n 34473: a1 = a1 | a2\n 34476: a0 = a0 | a3\n 34479: a0 = a0 | a1\n 34482: jump [t0]\n      : @1393 (gas: 8)\n 34484: a0 = a0 + a4\n 34487: a3 = a3 + a1\n 34490: a5 = a3 <u a1\n 34493: a0 = a0 + a5\n 34496: ra = u64 [s1 + 0x100]\n 34500: ra = ra + a3\n 34503: a3 = ra <u a3\n 34506: jump [t0]\n      : @1394 (gas: 6)\n 34508: a1 = a3 << 0x3\n 34511: u64 [s1 + 0x138] = a1\n 34515: i32 a2 = 0x80 - a1\n 34519: a0 = 0xffffffffffffffff\n 34522: a1 = 0xffffffffffffffff\n 34525: jump [t0]\n      : @1395 (gas: 6)\n 34527: i32 a0 = a0 + 0\n 34529: i32 a2 = a2 + 0\n 34531: u64 [s1 + 0x68] = a1\n 34534: a1 = 0x40\n 34537: u64 [s1 + 0x60] = a0\n 34540: jump [t0]\n      : @1396 (gas: 7)\n 34542: a3 = a3 | a5\n 34545: a3 = a1 if a2 == 0\n 34548: a1 = 0xffffffffffffffff\n 34551: a0 = a1 if a4 == 0\n 34554: a3 = a1 if a4 == 0\n 34557: a5 = 0 if a2 == 0\n 34559: jump [t0]\n      : @1397 (gas: 9)\n 34561: sp = sp + 0xffffffffffffffc0\n 34564: u64 [sp + 0x38] = ra\n 34567: u64 [sp + 0x30] = s0\n 34570: u64 [sp + 0x28] = s1\n 34573: s0 = sp + 0x40\n 34576: sp = sp & 0xffffffffffffffe0\n 34579: s1 = a0\n 34581: i32 a0 = sp + 0\n 34583: jump [t0]\n      : @1398 (gas: 4)\n 34585: a0 = 0x1038\n 34589: a3 = s1 + a0\n 34592: a4 = a3 + 0x500\n 34596: jump [t0]\n      : @1399 (gas: 2)\n 34598: a3 = a2 & 0x40\n 34601: jump @1403 if a3 != 0\n      : @1400 (gas: 1)\n 34604: jump @1402 if a2 == 0\n      : @1401 (gas: 6)\n 34607: i32 a3 = 0x40 - a2\n 34610: a3 = a1 << a3\n 34613: a1 = a1 >> a2\n 34616: a0 = a0 >> a2\n 34619: a0 = a0 | a3\n 34622: ret\n      : @1402 (gas: 1)\n 34624: ret\n      : @1403 (gas: 4)\n 34626: a0 = a2 + 0xffffffffffffffc0\n 34629: a0 = a1 >> a0\n 34632: a1 = 0\n 34634: ret\n      : @1404 (gas: 2)\n 34636: a3 = a2 & 0x40\n 34639: jump @1408 if a3 != 0\n      : @1405 (gas: 1)\n 34642: jump @1407 if a2 == 0\n      : @1406 (gas: 6)\n 34645: i32 a3 = 0x40 - a2\n 34648: a3 = a0 >> a3\n 34651: a0 = a0 << a2\n 34654: a1 = a1 << a2\n 34657: a1 = a1 | a3\n 34660: ret\n      : @1407 (gas: 1)\n 34662: ret\n      : @1408 (gas: 4)\n 34664: a1 = a2 + 0xffffffffffffffc0\n 34667: a1 = a0 << a1\n 34670: a0 = 0\n 34672: ret\n",
            "bytecode": {
              "object": "50564d000050a1000000000000010700c1a002c00080038268006e656b6f54794d9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5287ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f34876c7d2fef02d9fd08c50cca46058de4caba1b8b8858c81a656891c988defee1af85fc1fbac358af209d74f347dae39c6658caab400868e9bd16be37ffe4bb620e3be01ea8ce76274eab57002424ecd5447f7c9b0110d0058a2054b54fcdbeb9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af528e6f25b490aeeb95da41b4c83a7919cff534eaae8a544d2fdaa73b0e4ea8ad37b5b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b003c599e0e5a57c228db122fc9f859f9d002053b5a39c3695bf8716f4416255e1dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045307ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f31dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045304876c7d2fef02d9fd08c50cca46058de4caba1b8b8858c81a656891c988defee1dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045309bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5287ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f31dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045309dc6d9325c1f39f67429440b67ea472a64fdc7edd13539b51b1739a847e021eb9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5280480bd0b000000000e0000001c0000002a000000300000003d000000480000005700000062000000740000007f00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235367365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c0ee7c0463616c6cc0f67c066465706c6f7906c0f59d82c702c072879b00e30106031703cb033a04420413051b051a065e06b006330758076b078d07c807230872089008e7083a094709ba09d309fc09360a640a820af00a1f0be80b970cad0c820d990dd70df50e040f2b0f300f470f4c0f510f560f5f0f7c0fe80f38103d1056107b109710a010f610031170118911b011eb1119123912a712d8129a1314142b14061514154e1571167f16a916af16c716cd16d316d916e31605178417ed17f3170e18341851185b18ba18d618dc18fa180b191119341945194b197219ba19ed199b1aac1ab21ace1aeb1a301b3a1b531bc41bd11beb1b1a1c2f1c391ca71cb41cc91c081d181d361d701d801d9e1dd81de81d061e401e501e6e1eb31ed01e151f501f601f7e1fb91fcf1fda1f00201a213a215721af21b521bb21e3211b22212258228322c922d32230236c23a023aa23c723e7230824602466246c248c24a724ef24fd242f255a256325a425ad25cd2513261d267926ad26e126eb26042739274727a427aa27b027d027ea2739283f2878289328f128f728fd281d295c29242a342a6f2a912afc2a2f2b7d2b272cc92cf42c382d412d5e2d672d882dbf2ddc2dec2df52d032e3a2e5c2efa2e302f5a2f832f942f9e2fba2f2c303d305b309330123148314e3154317431b73187329732cf32f1325c339133e3337e34e034073563357435b335b935c735e7352936a736d336ed369437cb37f537243839385f389b38ac380f3915391b3934393a396139b639c739063a0c3a1a3a3b3a7d3abd3ac33ac93af43afa3a253b523b6c3bca3bd03b0a3c7a3c803ceb3cf83c163d5f3d653d6b3d8b3dba3d9a3e083f153f2b3fa73fc53f25402b4064405d417b41bf41c8410d4236428a429742ac42dc42f142fb42754382439843ba43c0432b4447444d44634490449644dc44e2444d4569456f458545bb45c145ef46ff461d4788479b47a447c647fd475f48bd48e84869499449fc49764a7c4a824aab4bc84b0d4c2a4c644c744c924cd44ce44c0f4d554d624d7d4dad4db34db94dff4d054e804e864e144f654f954ff64f8150025108510e519251e0510a526452b952f552ff5366547054ba54ee5420559355995511566d56af5659579e57ac57c557e9573358515890589658c358f0580959195922592c59525958595e59775987599059d159f959295a325a4a5a7e5a985aa15a235b4c5b6d5b735b795b7f5baa5bb75bbd5bc35bc95bcf5be85bf55bfb5b015c1c5c225c285c2e5c475c545c5a5c605c665c6c5c885c955c9b5ca15ca75cad5cc75cd05c635d715d735d945d9a5da05da65dd15dde5de45dea5df05df65d0f5e1c5e225e285e435e495e4f5e555e6e5e7b5e815e875e8d5e935eaf5ebc5ec25ec85ece5ed45eee5ef75e8a5f985f15604460b360266134614161b561296239623f6248626362696279627f6288629d62db62f462226336636b631d643b647f648864c664ef640c651c6525652f65dd65fb651866286631667566a266c06647678467ac67d567026856689a68b768ed6877699d69ba69fc69056a1f6aa66ac36a2d6b3d6b466b7c6ba56bab6bb16bd86b086c736c806c966cc76c3a6d7b6d986ddb6df86d456e6b6e946ec16ee26e376f3d6f436f826f886fa26fa86fae6fb46fba6fd36fe06fe66fec6f0f70157025702b7031705a707a70c670cc70d27011711771317137713d714371497162716f7175717b719e71a471b471ba71c071e9710f72157259725f72657290729d72a372a972af72b572ce72db72e172e77224732a733073497356735c73627368736e738a7397739d73a373a973af73c973d273657473747574b974bf74c574f074fd74037531755e757a758a7593759d75cd75d375d975f575027608762d765676727682768b769576c576df76e8767c779677ea77137819781f7858786c788a78057922799079a479e279017a757a827a9c7ac97a2f7b6d7b8a7bd07bf67b1f7c487c697c927cc67cf67cff7caa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f03200390870020251084e1f3307a0020383770a0828411f9511f07b10087b1564896475330820649750100235057c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004ed036f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33073300060a0501821738821830821928821a20501208e57e7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a099551a082105882155095116032009511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b19648650100a050282186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a049551a08210588215508216489511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5850120cb87f7b183850100e8e016f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a04955120ff8210d8008215d0008216c8009511e00032009511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b50501210df7e7b1858501012b5006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e0008379811a58831780003308040a049551e0fe8210180182151001821608019511200132008b7910520931c8780883881f8488e056380000012533096c0202390a6c0202ae8a093d086c02020133088002028377c887073200009511f07b10087b158475010a02013d0768020251050750101448330016951110fe7b10e8017b15e0017b16d8019515f001951150e68411e06416956938104929e0044929d8044929c8048000330740956800154929d004330012012864fb951108f8951700077b70f0007b75e8007b76e0009515f8079511f8fc8411e0641695670010492738f895670010492730f895680010492820f880003307409568ff0795882195690010492928f850101814fb95670010492758f895670010492750f895670010492748f895670010492740f895670010837740f80a0a0195670010827750f895680010828858f895690010829948f8956a001082aa40f8d49808d4a707d4870751070628c71538096802024926f8074926f0074926e8079567ff079577019568e0077b6938017b69e00750101a474f95670010827a18f895670010827810f895670010827908f895670010827700f850121cba775108062872157b6730018268380150101e65fe83778168380133090a018268380156181f072861159567c00782683001501020fdf88267d8077b6780008267d0077b67788267c8077b67708267c0077b6768492698074926900749268007409567a0079568800749268807501022b24e956800078289b800828ab000828ba8008287a000d49b0cd4a708d4c808988820d4ac0c97cc20d4c80851080628d914492678074926700749266807330c07956860077b6c60077b69c8007b6ac0007b6bb8007b67d000501024a1f9826ad0008267c8008268c000d487071408e0ffffff00000000d88a088269b8009498947852080628831483a720492650073a090000024926480749264007956840077b6958077b67f00050102652f949261807492610074926000740956720079568000749260807501028ea4d95680007828c38828930828a28828720d4ca0bd49708d4b808988820d49b0b97bb20d4b8085108062815144926f8064926f0064926e806330b039568e0067b6be0067b6998007b6a90007b67a0007b6c880050102addf8826aa0008267980082688800d487071408e0ffffff00000000d88a08826990009498947852080628bf1383a7204926d0064926c8064926c006140900000000004b544d9568c0067b69d8067b671850102c8af89567a0068268d00050102e43f795670006827ab8008278b0008279a8008ea78e8bdba70b7b69e8008e977b68587b6ae000d4a8087b67507b6ba8007b68d800db8b07510706286e138267a0067b676095670010492778f895670010492770f895670010492768f895680010492860f803956780069568ff07958861501030fcf8956b000682b7900082b8880082b9800082ba9800501232db7888920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479aa9206286113501234227a8267608877207b67b000510a13027b6b10017b6018017b6c20017b64300149267806492670064926680695686006492660060333075010368ef739086c020256181f0b20036c020220019517e08479e07b69280164913307800202837783993308203300380a060182676095781fd87807826ce800c87c09d8c90ada770a826b5850123a84778268b00094c8826ad80094a8948b9487c87402d84207c8790cc8cb0b7b6b3801d39b0cd89b0adac70a7b6a00018267180195701fd8700b826a1001c8ba07d8a70cdabb0c82633001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b671801d84707642450123cf579826758d87b07826ae000c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b50123e9a7bc8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a7395670010492798f895670010492790f895670010492788f895670010492780f89568ff079588810064377b6430017b6b38017b6228017b60200150104050f78263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c8820264702854ff8267b000857701826be800826850dbb8078268a8008269d800db98078263e000d43b087b68b00082685898843f97330198bc3f978201826a6098a03f97bb0197a9017b69487b63407b60387b6c307b6250510727027b6b287b642084aae07b6aa80049263806492630064926280695682006492620060333075010422df59517e08477e07b6718016471330820330750104423f99518e08488e07b6810016481837783893308200a06492638012033024926300149262801330b330c330049262001826a100182a71882a81082a90882a36f776f886f9a6f336434826918017b93187b6af0007b9a107b6810017b9808647a7b97017b64080164a38267a8007b6b0001d87b07857b017b6cf80094cb01956c000182c720d47007947b018268d00082c738c87808826ab800c82a0a8269c00082c730c879098267c80082642801c874048267b000520b5e0182673801d8780bc8ba0a6427d32a027b67e000d87a0cda2b0c501246e2747b63e80051070628440f9567c0017b60d800501048f1f28267d8018268d0018269c801826ac001956bff0795bbb9007bb77bb8f8956700107b79a8f8956700107b7aa0f89568ff079588a1008267180150104a61f58264e80095440188470182621001c87202d424078877018268f000c87803d8830882670801c88707826838019589207b690801d8890a8268e000c8a8097b69e800d8890bdaaa0b82683001c8b800d8800b82682801c8b8087b68280182680001958b20d88b0c8269f800c8c908d89809dacc09826ad800c8a909d8a90c826a2001c8ca0a7b6a20017b621001826c18017bc208644a7bc47bc31064747bc7187b63f000826708017b6738018262e8007b603001648c64902880fed48a078268b000d4870752073a0149262001492618014926280149263001826340826238826830826c502863016420826360826ba800d33b0b826c58d4cb0bd47b0b826228826c50510baa0082673801d8780bc8ba0ad30a02d80a0cda2b0c50124c6f7351070628d50d9567000650104e86f1956800068287187b6730018287107b6728018287087b67200182877b6710018267605012501b7750105221787b6708017b68f0003307ff3308ff82693801501054e477501256f875501058da7750125a17718269200150125c19757bba207bb9187bb8107bb7089568ff079588c1008267180150105ebcf3826c5082622801826720826840d48707826830d4c808826938d49209826a4895aa01956cff0795ccb900491c40491c38491c30491c28037bca487bc9507bc8587bc7609567ff079577e1009568ff079588010133006e2861f3956740068268f0007b64207b6b28501060a2f0826c50826b28826830826238826340826420826a60956900068297587b6730018297507b6728018297487b6718018297407b67200101d48c077b671001d443077b670801d42b077b670001501262997650106414777b67e0007b68f8008267608a79033307ff3308ff501066d5767b67f0007b68e8008268e000d487077b67e000826738018379803307ff3308ff501068b076826b380188b98000826ae000db9a07826ce800826af80050126a5c76826bf00050126cee71826b48d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956cff0795ccb900491c68037bc998007bcaa0007bc890007bc78800492c8000491c78491c709567ff07957721019568ff079588410150106e42f29567e0058268a00050107087ef95670005827af8008279f0008278e8008ea78e9bdba70b7b68b8008e877b69b0007b6aa800d4a9097b67d8007b6be0007b69f000db9b075207830c8267e0057b67c0009568ff079588b9004928c0004928b8004928b0004928a800049567c0059568ff079588610150107246f1956b000582b7d00082b8c80082b9c00082bad800501274257188920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479ab927e0c5012766e728267c0008877207b67e800510a10027b6b10017b6018017b6c20017b6430014926b8054926b0054926a8059568a0054926a005043307501078d9ef39086c020256181f0b20036c020220019517e08479e07b692801649133078002028377839933082033007a0a06018267c00095781fd87807826cb800c87c09d8c90ada770a826bb00050127ccd6f8268e80094c8826af00094a8948b9487c87402d84207c8790cc8cb0b7b6b3801d39b0cd89b0adac70a7b6a00018267180195701fd8700b826a1001c8ba07d8a70cdabb0c82633001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b671801d84707642450127e3e728267b000d87b07826aa800c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b50228000e273c8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a6c9567ff079577b9004927e0004927d8004927d0004927c8009568ff079588810164377b6430017b6b38017b6228017b602001502082009fef8263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c882026470285bff8267e8008577018269b8008268d800db98078268e000826af000dba80751071c028267c0008477e07b67c800492678054926700549266805956860054926600504330750208400b1ed9517e08477e07b6720016471330820330750208600a6f19518e08488e07b6818016481837783893308200a064926380120330c4926280149263001330b330a330933038267180182721882781082700882777b6710016f277b6718016f846f02826710016f786480826720017b781864287b68d8007b78107b6408017b7408826818017b78017b6000018267c8007b6bf000d87b07857b017b6ae80094ab017b6310017b69f800d43907947b018267a00082683801c87808826a90007b6ce000c8ca028264980082692801c8490982638800826c3001c8c303520b4301d87800c8020bd3ab02d8ab0cda200c50228800216e5207c7079567600250208a0077eb956b000282b77882b87082b96882ba60956bff0795bbb9007bb700017bb8f8007bb9f0007bbae8009568ff079588a1018267200150208c00ebed82601801950001880701826a0801c87a0ad4a0078877018268d800c88707d8870882620001c88202826838019589207b690001d889088269e000c8890b7b6bd000d89b0bda880b82682801c8b804d8840b82683001c8b8087b6830018268f000958b20d88b0c8269e800c8c908d89809dacc09826cf800c8c909d8c90c82631001c8c3037b6a0801826c20017bca087b6018017bc07bc71064207bc2187b67d800826700017b673801826cd0007b642801648a2899fe826ac000826bb000d4ba07826ca800d4c908d4870752075e0149262001492618014926280149263001288c01826bc800826cc000d3cb0b8260b000d40b0b7b6b3801826cb800826ba800d4bc0c826b3801d4cb0b510bb200d87800c8020bd3ab02d8ab0cda200c50228e00b66c52075c0695674005502090000cea956800058287587b6730018287507b6728018287487b6718018287407b6710018267c000502292009e6f50209400a3707b6708017b68f0003307ff3308ff8269380150209600657050229800786e50209a00597050229c0095698269180150229e00966d95bc00017bca207bc9187bc8107bc7089568ff079588c101826720015020a00034ec8260b0000198073f8268a800978801d48707826ab80098a83f970901d49808826bc00098b93f97aa01d4a90997ba0195aa01956cff0795ccb900492c4001492c3801492c3001492c28010495cb00017bba487bb9507bb8587bb7609567ff079577e1019568ff07958801023300b00028bfeb956780058268185020a20007e9826ca800826bb0008269b800826ac00095680005828798007b673001828790007b672801828788007b671801828780007b6720010198973f97b801d487077b67100198b73f97c801d487077b67080198a73f979801d487077b67000197a7017b67f8005022a400e56e5020a6005f6f7b67d8007b68f0008267c0008a79033307ff3308ff5020a8001e6f7b67e8007b68e0008268d800d487077b67d800826738018379803307ff3308ff5020aa00f86e826b380188b98000826ad800db9a07826ce000826af0005022ac00a36e826be8005022ae00346a826bf800d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956cff0795ccb900492c68010495cb00017bb998007bbaa0007bb890007bb78800492c8001492c7801492c70019567ff07957721029568ff07958841025020b0007fea33078002037b67380183777b6730013300b2000a033302b40028fb645022b400f86449261805956900057b98107b970895672005956800057b9a5020b600f53e826730013300b8000a033302ba0028c6645022ba00c3644926d8047b68d0047b67c8049567e0049568c0047b6ac0043300bc0033025803289d69826730013300be000a033302c000288c645022c000896449269804956900047b9890007b9788009567a004956880047b9a80003300c20033029e03285f69826730010a0301826938018097108298829908d48707d49707510702059568ff079588b9004928c0014928b8014928b0014928a80105956760049568ff07958861025020c400fde87c676004520731059567ff079577b9004927e0014927d8014927d0014927c80102956720049568ff07958881025020c600cae88264380482633004826020047b602801826c28049518e08488e06481826970c8c90b826768c87000d87007c87b0bd39b0ad89b09daa709826278c83207826a8000c84a0ad82702c82a0ac87909d87907c87a02d3bc07d8cb0c826a2801d8a00adb7c0ad83907d3240cd84204dac704d39307d4c707db740a7b89107b8b087b807b8218520ac5049567ff079577b900492700024927f8014927f0014927e801029567ff079577a1025020c8009ee8826730013300ca000a033302cc002825635022cc00226349261804956900047b98107b9708956800047b9a33075020ce00f7e64926f8034926f0034926e8033307209568e0034926e0035020d000dae69517e08477e07b672801647139086c020256183f0b20036c020240019517e08479e07b69200164913307800202837783993308403300d2000a06826a20013302d40028b663826a20015022d400af63826828017b8a187b89107b8b087b879567c0035020d60064e78267c8038268c0038262d803826ad003826b70c87b0b826c68c88c0cd88c08c88b0bd37b09d87b07da9807826878c8a80882698000c89202d8a809c82909c88707d88708c898089569ff079599b900959a00027bac087bab107ba7187ba8209568ff079588c102826728015020d80075e79567a0033308405020da00bae4956b000382bab80082b8b00082b9a80082b7a0005022dc0028635208e2008268687b6880038268707b6888038268787b68900395688003826980007b6998037b6728015020de00abe5826730013300e0000a03826938013302e20028cb61826938015022e200c461d4780298aa206f99979820d4a80898992049263803492658034926500349264803492640033a0a0800023a0b1000023a0c1800023a072000027b6a78037b6b70037b6c68037b6760037b6930037b68280333082095696003956a4003956b20037b622003826728015020e40066e7956700033308405020e600d7e3956b000382ba1882b81082b90882b75022e8004a625108e602003308800202838833070133090a0728113308800202838833070133090a07014926700149266801492660013302ea00140700000000717b484e01956860017b67780133075020ec00ade44926580149265001492640014133070495684001492648015020ee008fe439086c020256183f1220036c020240330880020228500233088002022848024926b0014926a8014926a0013302f000140700000000717b484e019568a0017b67b80133075020f20045e44926980149269001492680012233070495688001492688015020f40027e439086c020256183f1220036c020240330880020228e801330880020228e0014926100249260802492600023302f600140700000000717b484e01956800027b67180233075020f800dde34926f8014926f0014926e001413307049568e0014926e8015020fa00bfe339086c020256183f1220036c020240330880020228800133088002022878014926500249264802492640023302fc00140700000000717b484e01956840027b67580233075020fe0075e34926380249263002492620022233070495682002492628025020000157e339086c020256183f1220036c020240330880020228180133088002022810014926b0024926a8024926a002140700000000052f44ec9568a0027b67b80233075020020112e3492698024926900249268802330704956880024926800250200401f5e239086c020256183f1220036c020240330880020228b600330880020228ae0049265004492648044926400414070000000065063cd9956840047b675804330750200601b0e239086c020256181f0b20036c02022001330880020283883307013309040a07014926f0024926e8024926e00233020801140700000000717b484e019568e0027b67f802330750200a0165e24926d8024926d0024926c002113307049568c0024926c80250200c0147e239086c020256183f1120036c0202403308800202280833088002020183883307013309240a077b67380133000e01281fe67b67380150200e0118e68377330833090a28b0e08267380133085020100102e68378330733090a072816fd33076802027b67b80039076802025517040728363195670010837720053308330014010a01019569381081970405524759cb56840a28d71851475448d19174015247419bd8950a28fe105147dffd17a213045247bb9c05a90a286e1b5147931339d5da0751473eed62dd8e045247e9b13ae60a28021f514703defd067c085247b3a75e090a28a11f5247dd0d16180a28d0155247dd72b8230a28c71c5247a39c8a240a281b1a514767e53c31ff0652473aa84b3f0a2800145147190fc140310b5147bb5a975c0a288516956738184927a000492798004927900049278800956700208377c0f80a0a01956a381882a7980082a8a00082a9900082aa8800d49808d4a707d487075107062803258267b800817756170307280725956838184928c0004928b8004928b0004928a800059567ff07957781049568e018502016019de19567ff07957739827748047b67b8009567ff07957761043308405020180151df956aff0795aa3995ac000482cb4082c83882c93082c72850221a01005f5108062842227c68b8008e88492a2004492a18047ba808049568ff0795884104492a10047b67b8003300d602283ce0956738184927e0014927d8014927d0014927c80195670020837700fa33001c010a0a33021e01284d6350221e014a6350222001e464510706284a248267b8008177330843ac7806284c249567ff0795778107330022013302fc032821659568ff07958839958900078297587b67a8008297507b67b0008297487b67b80095670020837720fa330804330024010a013302260128e16250222601de6282b7e80082b8f00082b9f80082aa0002956bff0795bb3995bc00077bca407bc9387bc8309568ff07958861077bc7283307502028016ddf9568ff079588394928200749281807492808070664893307209568ff07958841074929100750202a0142df33086c020239076c020256173f0b20036c020240019517e08479e07b69900064913307800202837783997b68a0003308407b67980033002c010a06826a900033022e0128f862826a900050222e01f1627b6788006f877b6780006f977b67786fa77b67709517e08477e07b67900064718267a8009777209877209569ff0795993949290007959a00067ba7f8008267b0007ba7f0009568ff07958821078267b8007ba7e80033075020300195de8267709568ff07958839958900067b97e0008267787b97d800826780007b97d000648a3307209568ff0795880107826988007ba9c8065020320159de8268a000818756173f08480840019517e08477e07b67b8006471837933084082679800330034010a06826ab8003302360128465b826ab800502236013f5b826890007b8a187b89107b8b087b879567ff079577e10650203801f0de9567ff079577398277a8067b67b8009567ff079577c10633084050203a01a4dc956aff0795aa3995ac000682cba00082c8980082c9900082c7880050223c014f5c51080628911f7c68b8008e88492a8006492a78067ba868069568ff079588a106492a70067b67b8003300d602288bdd956738184927600249275802492750024927480295670020837780fa33003e010a0a3302400128ea5e50224001e75e50224201636051070628bb218267b80081775617030728bf219567a01133084050204401ffdb956a381095ac000182cb800082c87882c97082c76850224601b05b51080628f21e492a6001492a5801492a500195688011492a48017b67b8003300d60228f6dc956738184927200349271803492710034927080395670020837740fb330048010a0a01956a381895ab000350224a015d5e510706284c218267b8008177330843ac7806284e211407ffffffff000000007b67b8009567a01433004c013302f20328d56195683810828768047b67b000828770047b679000808778047b6788009567801433004e013302fc0328aa61330250019568381001958900048297587b67a8008297507b67a0008297487b67980049284004826788007b9738826790007b97306489956860148267b0007b97280433075020520121dc330254019568381001492820044928180449280804016489330720956840144929100450205601f8db33086c020239076c020256173f0b20036c020240019517e08479e07b69880064913307800202837783997b68b0003308407b679000330058010a06826a880033025a0128ae5f826a880050225a01a75f7b6780006f877b67786f977b67706fa77b67689517e08477e07b6788006471826798008477ff8269a0008498ff8269b800826aa800d2a909956a3810492a000495ab00037bb9f8007bb8f000956820147bb7e800330750205c014cdb82676895683810958900037b97e0008267707b97d8008267787b97d000648a33072095680014826980007ba9c80350205e0118db8268b000818756173f08480840019517e08477e07b67b8006471837933084082679000330060010a06826ab80033026201280558826ab80050226201fe57826888007b8a187b89107b8b087b879567e01350206401b3db95683810958900038297c0007b67b8008297b8007b67b0008297b0007b67a8008297a8007b67a0009567c0133308405020660152d9956a381095ac000350226801b05e51070628521c8267a00095a900037b97688267a8007b97708267b0007b97789568a0138267b8007b97800064b77b6bb8003300d6022843da4929e0064929d8064929d0064929c806956700108377000733006a010a0a33026c0128b15a50226c01ae5a50226e01ef5e51070628bb1e8267b80081775617030728bf1e9567e00733084050207001bbd8956b000782baf80082b8f00082b9e80082b7e00050227201295751080628af1b4926d8074926d0074926c8079568c0074926c007127b67b8003300d60228b2d9956738184927c0024927b8024927b0024927a802956700208377e0fa330074010a0a3302760128115b502276010e5b82b7b80082b8c00082b9b00082baa800d49808d4a707d4870751070628351e8267b80081775617030728391e9567a0123308405020780113d8956a381095ac000282cb800082c87882c97082c76850227a01c45751080628061b3a0848000295ac00027bc8603a0b5000023a085800023a096000027bcb587bc850956880127bc9487b67b8003300d60228f6d849296005492958054929500549294805956700108377800533007c010a0a33027e01282b5e50227e01285e50228001d25b51070628b21d8267b80081775617030728b61d9567a002330840502082016ed78267b8027b67188267b0027b67288267a8027b67208267a0027b6730956738104927800549277805492770054927680503956780029568a015502084015bd9826990028264880282629802826c800297973f984801d4870797283f7b69b000989901d4980897493f98ca01d49a0b9829017b6ca80084cc019acad2a808d27a03d2a90984b07fdac00b7b6b7088b7207b636094377b68687b6958d4980894877b6cb80088c801aa7806280e1d826928826b30d49b07826818826a20d4a808d48707987720d49808978820d4780851080628af1964b77b6090007b6498007b62a000826870956a00027ba8608268607ba8688268687ba870956860028269587ba97850208601a1d78267b80051070628721950228801605a5208062865198268a800848800ff83a720826a9800956900017b9ae8007b98e0008268b0007b98f0009568e001826aa0007b9af80050208a0156d7330433034926b000826790008e779777057b67b80033028c0128465950228c014359826220c8290ac87a00d3900ad8900bdaa70bd84907da8807c83707d83708826928c87909c89b0bd87907d89b09826318826ab000c83a0ac8a808c88707c8970c8ec78eb8dbc708d4cb078e09db78095109062866218267308268b800d87807d32008d8200950228e019758510a06284a218267b8007b67c0017b60c8017b6bd0013307409568c0017b6cd8017b60a8007b6ba0007b6cb0005020900196d6826718956b00017bb7788267287bb7708267207bb7688267307bb7608267b0007bb798008267a0007bb790008267a8007bb788009567a0019568800195696001826ab8007bba80005020920123348269a000826ba8008262b800d492078268b000d4b808d48707987720d49808978820d4870751070628f717956c000182c7a80082c8b8007b6898008263a00182cab0002865084929c0074929b8074929b0074929a807956700108377e0070a0a01956a381095ab000782b7b80082b8c00082b9b00082baa800d49808d4a707d48707510706283a1b8267b8008177330843ac7806283c1b9567ff079577e103330094013302f20328dd5a9568ff07958839958900038297b8007b67788297b0007b67a8008297a8007b67b00095670020837700f83308240a0195673810957900078298e0007b68a0008298d8007b6890008298d0007b6888008297c8007b6780003a074800027b6740956aff0795aa3995ab00037bb7a0003a085000023a095800023a076000027b68307bb898007b69287bb990009568ff079588c1037b67387bb78800330750209601fcd49568ff079588394928800349287803492868030664893307209568ff079588a1034929700350209801d1d433086c020239076c020256173f0b20036c020240019517e08479e07b69706491330780020283777b68980083993308407b67b80033009a010a06826a7033029c01286c54826a7050229c01665433078002037b677083777b672033009e010a038269703302a00128a44f8269705022a0019e4f49296003959b00037bb8587bb7509568ff07958881037bba4833075020a2013dd48267489568ff07958839958900037b97408267507b97388267587b9730648a3307209568ff07958861038269607ba928035020a40106d482689800818756173f08480840019517e08477e07b67605022a6010e583300a8010a06826a603302aa01281555826a605022aa010f559567ff07957741035020ac01b4d49569ff079599397c970803520706284d198267789777209879208267b0008268a800d487077b6970d4970752070628fb195020ae01354e9567381849074917f84917f04917e8029567ff0795772103956820185020b0015bd49568ff0795883982840003958900028297f800829be800829cf0009518e08488e06481826a8800c8ca0a82628000c8b202d8b20bc8ba0ad3ca03d8ca09da3b09826b9000c87b0bc89b0cd8bc038260a000c84000d87b0bc80b0bc83b00d87c03d3040bd84004dab304d3c707d4b707da79047b8c107b8a087b827b801851040628ae199567381849172049171849171049170802956740185020b2013fd49569ff079599394929e002826770959a00027ba7d8008267a8007ba7d0009568ff07958801038267b0007ba7c80033075020b40195d29567ff079577394927c0024927b8024927b00264793307209568ff079588e1024929a8025020b6016bd29517e08477e07b6778647182699800819756173f08480940019517e08477e07b6798005022b80167563300ba010a06826a98003302bc0128524f826a98005022bc014b4f8268787b8a187b89107b8b087b879567ff079577c1025020be01fdd29569ff07959939959b000282b7900082b888008292a00282ba9800826b8800c87b0b826c8000c88c0cd88c08c88b0bd37b09d87b07da980782689000c8a8088269a000c89202d8a809c82909c88707d88708c89808956938187b9c287b9b307b97387b9840956860188267785020c0010dd39567ff079577a1023308405020c2014ed0956aff0795aa3995ac000282cb800082c87882c97082c7685022c401fc4f510806283e138268800095ab00027bb848826888007bb850826890007bb8589568ff07958881028269a0007bb9607b67a0005020c60132d1956cff0795cc39492c000282677095c800017b87f8008267a8007b87f0008267b0007b87e800492c2002492c1802492c10023a07a800023a08b000023a09b800023a0ac0000295cb00027bb7407bb8387bb9307bba283308209569ff0795996102956aff0795aa4102956bff0795bb2102492c08028267a0005020c801fbd233078268b80033090a07282020956738184927200249271802492710024927080295670020837740fa3300ca010a0a3302cc012802525022cc01ff515022ce01065251070628bd178267b80081775617030728c117956760113308405020d00117cf95683810958900018297407b67188297387b67288297307b67208297287b6730956838184928400249283802492830024928280204956740119568601a5020d20100d195673810827418018270100182732001827b080197473f980801d4870797383f984901d4980897093f98ba01d49a0c9839017b6bb00084bb019abad2a808d27a02d2a90984c77f7b67a800dab70c7b6c7088c7207b626094277b68687b6958d4980894877b6bb80088b801aa7806281117826928826a30d49a07826820826b18d4b808d48707987720d49808978820d4780851080628501164a77b6090007b6498007b63a000826870956a38107ba8e8008268607ba8f0008268687ba8f800956820118269587ba900015020d4013ecf8267b800510706282d125022d601fd515208062802118268b000848800ff83a72095693810826a90007b9a707b9868826898007b98789568a010826aa0007b9a80005020d801f6ce330433034926b0008267a8008e779777057b67b8003302da0128e6505022da01e350826220c8290ac87a00d3900ad8900bdaa70bd84907da8807c83707d83708826928c87909c89b0bd87907d89b09826318826ab000c83a0ac8a808c88707c8970c8ec78eb8dbc708d4cb078e09db7809510906286d198267308268b800d87807d32008d820095022dc013750510a06285119956938108267b8007b9748640a7b9a507b9b58330740956880107b9c607b6aa8007b6ba0007b6cb0005020de0134ce956838108267187b87826728958900ff7b97f8008267207b97f0008267307b97e8008267b0007b87208267a0007b87188267a8007b8710648b956760109568401095692010826ab8007bba085020e001bd2b826aa000826ba8008262b800d4a2078268b000d4b808d48707987720d4a808978820d4870751070628910f956838108287308289407b69980064a9828328828a3801d3b704d8b70cd82300da400cc99a08c9c804d8c808d89a0a82699800c9a90a8269b000c99a0ac98a0ac9b707c90707c92308d4a707d44809d47909d44707989920977720d49707510706282d0f64277b68b8005020e20153d183788169b80033073300da020a0728f1184929400749293807492930074929280795670010837760070a0a01956a381095ab000782b73882b84082b93082ba28d49808d4a707d4870751070628e9148267b80081775617030728ed145020e401083a9567381049276007492758074927500749274807059567ff0795772101956880175020e601b0cd956aff0795aa3982a7e8008478ff0052080628bc1482a8000182a9f80082aaf000847700ff956b3810492b8007492b7807492b7007492b68070595bc00077bca90007bc788007bc998007bc8a0009567a0179568c0175020e801d6cd9567ff07957701013308405020ea0117cb9567ff079577398278e0007b68b0008278d8007b68a8008278d0007b68a0008277c8007b67b80033078002037b67980083773300ec010a033302ee012868505022ee0165505207e30d826998005022f0013e474929c0007b98b8007b97b0009568ff079588e1007b9aa80064b75020f201decb3a07c800023a08d000029569ff079599397b97a0003a07d800027b9898003a0ae000027b97900064973308209569ff079599c1007b7a88008267b8005020f40179cd33088002028388330733090a0728061b4929e0054929d8054929d0054929c80595670010837700060a0a01956b381095bc000582c7d80082c8e00082c9d00082cac800d49808d4a707d4870751070628ab138267b80081775617030728af13492b0006492bf805492bf005492be8050295670005956820165020f60110cc956800058287187b67b8008287107b67b0008287087b67a80082877b67a0009567e0043308405020f801b8c9956b000482b7f80082b8f00082b9e80082bae0005022fa01e64e5207af0c8267a000956900047b97c0008267a8007b97c8008267b0007b97d0009568c0048267b8007b97d80064a77b6ab8003300d602289cca9569381851473182a0700a2814134929e0004929d8004929d0004929c80095670020837700f90a0a01956a381882a7d80082a8e00082a9d00082aac800d49808d4a707d487075107062828138267b8008177330823ac7806282a139567ff07957741053300fc013302f20328704f956aff0795aa3982a7080582a8100580a91805492a000595ab00047bb9f8007bb8f0009568ff07958821057bb7e80033075020fe01fac99567ff079577394927e0044927d8044927d00464793307209568ff07958801054929c80450200002d0c939086c020256183f0b20036c020240019517e08479e07b69b8006491330780020283778399330840330002020a0601826ab80082a71882a81082a90882aa50220402c449956b38187bba00017bb9f8007bb8f0007bb7e8009567ff079577e104956820195020060258ca9568ff07958839958900048297c0007b67b8008297b8007b67b0008297b0007b67a8008297a8007b67a0009567ff079577c10433084050200802f0c7956aff0795aa3995ac000450220a024b4d5207f00a8267a00095a900047b97688267a8007b97708267b0007b97789568ff079588a1048267b8007b97800064b77b6bb8003300d60228dcc8956738184927600149275801492750014927480195670020837780f933000c020a0a33020e0228ed4b50220e02ea4b50221002b44b510706289b118267b800817756170307289f1150201202b4355020140235439568381849288001492878014928700149286801059567ff07957781069568a0195020160256c9956aff0795aa3995ab000682b74882b85082b95882ba60847700ff867701956b3818492ba001492b9801492b9001492b88010595bc00017bcac0007bc9b8007bc8b0007bc7a8009567c0199568e0195020180283c99567ff079577610633084050201a02c4c69567ff07957739957900068298407b68b0008298387b68a8008298307b68a0008297287b67b80033078002037b679800837733001c020a0333021e0228154c50221e02124c520790098269980050222002eb4249292006959c00067bc8187bc7109568ff07958841067bca0864b7502022028ac73a078800023a089000029569ff079599397b9700063a079800027b98f8053a0aa000027b97f00564973308209569ff07959921067b7ae8058267b8005020240225c933088002028388330733090a0728b2168388330733090a0728a716492960064929580649295006492948069567001083778006330026020a0a3302280228984750222802954750222a02064a510706280f108267b800817756172307281310956700108377a00633080433002c020a0133022e0228614750222e025e4782b96882b77082b87882ba80007b6ab8067b68b0067b67a8069567c0069568a0067b69a006502030027e278267d8067b67b8008267d0067b67b0008267c8067b67a8008267c0067b67a000956780063308405020320239c5956b000682b7980082b8900082b9880082ba800050223402674a520730088267a000956900067b97608267a8007b97688267b0007b9770956860068267b8007b977864a77b6ab8003300d6022821c69567381849278002492778024927700249276802956700208377a0fa330036020a0a33023802288047502238027d4782b77882b8800082b97082ba68d49808d4a707d4870751070628140f8267b8008177330843ac780628160f9567601233003a023302f20328fa4a95683810958900028297287b67b8008297307b67b0008297387b67a8008297407b67a000956700208377c0fa3308240a019567381895790002829888007b689800829890007b689000829898007b6888008297a0007b67800033078002037b6778837733003c020a0333023e0228b34550223e02b045956a3810826b800095ac00017bcbe000826b88007bcbd800826b90007bcbd000826b98007bcbc800826ba0007bab0002826ba8007bcbf800826bb0007bcbf000826bb8007bcbe80095ab00027bb9187bb7107bb808956740129568201295690012492a200250204002082c9567e0113308405020420293c3956a381095ac000182cbc00082c8b80082c9b00082c7a80050224402414352088606492aa001492a9801492a8801019568c011492a90017b67b8003300d6022888c4492920064929180649291006492908069567001083774006330046020a0a3302480228f64450224802f34450224a02ef455207b40d8267b8008177330863ae78b80d9567400633004c023302f203287949826740067b67b800826748067b67b000826750067b67a800826758067b67a0009567200633004e023302fc03284a49826720067b6778826728067b6770826730067b6768826738067b676095670010837760063308440a0195673810957900068298287b6898008298307b6890008298387b6888008297407b67800033078002037b675883770a0382695882970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820826980007b69d805826988007b69d005826990007b69c805826998007b69c0054926f8058269a000956b00067bb9188269a8007bb9108269b0007bb9088269b8007bb97b68f0057b67e805956700069568e0059569c0057b6ae005502050020725826780007b677805826788007b677005826790007b676805826798007b6760058267607b6798058267687b6790058267707b6788058267787b6780058267a0007b67b8058267a8007b67b0058267b0007b67a8059567a0059568800595696005826ab8007b6aa00550205202eb29956740053308405020540276c1956b000582ba5882b85082b94882b74050225602e83f520871044926380549263005492628059568200549262005017b67b8003300d6022873c2956738184927400349273803492730034927280395670020837760fb0a0a01956a381895ab000382b73882b84082b93082ba28d49808d4a707d487075207b60b8267b8008177541703bd0b9567e01433084050205802e4c0956a381095ac000482cbc00082c8b80082c9b00082c7a80050225a0292405208d7033a0828000295ac00047bc8a0003a0b3000023a083800023a094000027bcb98007bc890009568c0147bc988007b67b8003300d60228c2c14929a005492998054929900549298805956700108377c00533005c020a0a33025e0228f74650225e02f44682b7980082b8a00082b9900082ba8800d49808d4a707d4870752071f0b8267b8008177330843ae78230b9567a004330060023302f20328a046956800048287b0007b6798008287a8007b67b0008287a0007b67b8009517e08477e07b67a0006471956700108377e0053308240a0195673810957b000582b8c00082b9b80082bab00082b7a8007b6850826ba0007bb8187b69487bb9107b6a407bba087b67387bb733078002037b67a80083777b6790000a03018269a8008097108298829908d48707d497075107950a826798009777209878208267b0008269b800d497077b689800d487075107d70a826790000a038269a80082970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820492698047b6890047b678804956880047b6a800433075020620268c0492678044926700449266004013307209568600449266804502064024ac033086c020239076c020256173f0b20036c020240019517e08479e07b697864913307800202837783997b6888003308407b678000330066020a06826a7833026802280244826a7850226802fc437b67706f877b67686f977b67606fa77b67589517e08477e07b6778647149265804826798007b6750048267b0007b674804956840048267b8007b674004330750206a02b8bf826758956a00047ba7388267607ba7308267687ba728330720956820048269707ba92050206c028fbf82688800818756173f08480840019517e08477e07b67880064718379330840826780000a06826a880082a71882a81082a90882aa6f7b6f886f996faa8267787b7a187b79107b78087b7b8268a00050206e02afc09567000433084050207002f4bd956b000482b71882b81082b90882ba5022720227435207f0008267387b67e0038267407b67e8038267487b67f0039568e0038267507b67f80364a77b6aa00050207402e9be82679000330076020a038269a8003302780228093b8269a80050227802023bd4780298aa206f99979820d4a80898992049269803826798007b6790038267b0007b6788038267b8007b6780034926b8033a0ae800023a0bf000023a0cf800023a070001027b6ad8037b6bd0037b6cc8037b67c0037b69b0037b68a8033308209569c003956aa003956b80037b62a0038267a00050207a0298c09567600333084050207c0209bd956b000382ba7882b87082b96882b76050227e027b3b51089e09004926580249265002492648029568400249264002033307502080020bbe502282029d423a020801023a0a1001028268309587207b6750d88707826820c878097b6948d88908da77083a0c1801023a0720010264207bb2187b6a787bba1064c27bbc087b6b980064797bb7826728c878087b6840d87807826818c887077b6738017b6980007b62880050228402f13b520a06285de695672002826898007b63a8007b64a0005020860270be50228802943cd8c802826cb000826a38c8ac0cc82c0c50228a02c240520839ff956a000282a93882a83082ac2882ab207bab7bac087ba810956800027ba9187b64b80050208c0235bd50228e02aa396402826c98007bc00864a97bca644a7bca1064707bc7187b6a787b63b800648464b32865ff956938104929e0004929d8004929d000956800114929c80004330750209002e9bc502292027b413a026800023a0a7000028268309587207b6750d88707826820c878097b6948d88908da77083a0c7800023a0780000264207bb2187b6a787bba1064c27bbc087b6b980064797bb7826728c878087b6840d87807826818c887077b6738017b6980007b62880050229402cf3a520a06289bed9567e010826898007b63a8007b64a000502096024ebd50229802723bd8c802826cb000826a38c8ac0cc82c0c50229a02a03f520817fe956c381082c2c00082c8b80082c9b00082cba8007bcb88007bc990007bc898009568c0107bc2a0007b64b80050209c020abc50229e027f386402826c98007bc00864a97bca644a7bca1064707bc7187b6a787b63b800648464b3285cff3308800202838833070133090a0728480b3308800202838833070133090a0728370b3308800202838833070133090a0728260b3308800202838833070133090a0728150b3308800202838833070133090a0728040b3308800202838833070133090a0728f30a3308800202838833070133090a0728e20a3308800202838833070133090a0728d10a3308800202838833070133090a0728c00a3308800202838833070133090a0728af0a3308800202838833070133090a07289e0a3308800202838833070133090a07288d0a3308800202838833070133090a07287c0a3308800202838833070133090a07286b0a4926100149260801492600013302a002140700000000717b484e01956800017b67180133075020a202c6ba4926f8004926f0004926e000223307049568e0004926e8005020a402a8ba39086c020256183f1220036c020240330880020228fa05330880020228f2053308800202838833070133090a0728f2093308800202838833070133090a0728e1094929580149295001492948011407000000003f7d51e29568ff07958881017b97600133075020a6023dba8267203300a8020a038269703302aa022867358269705022aa02613549294001959b00017bb8387bb7303307049568ff07958861017bba285020ac02ffb98267409568ff07958839958900017b97208267307b97188267287b9710648a3307249568ff07958841018269387ba908015020ae02c8b982679800817756175f1a826898004808603307013309448268b8000a0728fa003307013309448268b8000a0728eb009567ff079577394927980149279001492788016479140700000000052f44ec9568ff079588c1017b97a00133075020b00266b99567ff0795773949278001492778014927700164793307049568ff079588a101492968013300b4022838b99567ff079577394927d8014927d0014927c8016479140700000000717b484e9568ff07958801027b97e00133075020b20208b99568ff079588394928c0014928b8014928a8011164893307049568ff079588e1014929b0015020b402ddb882679800817756173f19826898004808403307013309248268b8000a07280f3307013309248268b8000a07013308800202838833070133090a07281a083308800202838833070133090a072809089567ff079577394927980749279007492788076479140700000000717b484e9568ff079588c1077b97a00733075020b6025cb89568ff079588394928800749287807492868072264893307049568ff079588a107492970075020b80231b839086c020256183f1220036c02024033088002022883033308800202287b033308800202838833070133090a07287b073308800202838833070133090a07286a07491a78491a701407000000002b20fc8d7ba780009568ff079588a100491a6833075020ba02c9b739086c020256181f1120036c0202203308800202280833088002020183883307013309040a07013308800202838833070133090a07280b073308800202838833070133090a0728fa0652471f7447d53803956738184927e0024927d8024927d0024927c80295670020837700fb3300bc020a0a3302be0228d4385022be02d1385022c0021d3c5107b1033308800202838833070133090a0728a8063308800202838833070133090a072897063308800202838833070133090a072886063308800202838833070133090a072875063308800202838833070133090a072864063308800202838833070133090a072853063308800202838833070133090a072842063308800202838833070133090a072831063308800202838833070133090a072820063308800202838833070133090a07280f063308800202838833070133090a0728fe053308800202838833070133090a0728ed053308800202838833070133090a0728dc053308800202838833070133090a0728cb053308800202838833070133090a0728ba054926f0024926e8024926e00214070000000005df02e69568e0027b67f80233075020c2021ab64926d8024926d0024926c8023307049568c0024926c0025020c402fdb539086c020256183f1220036c0202403308800202284f013308800202284701492630034926280349262003140700000000620d2894956820037b67380333075020c602b8b549261803492610034926080333070495680003492600035020c8029bb539086c020256183f1220036c020240330880020228ed00330880020228e5004926500149264801492640013302ca02140700000000717b484e01956840017b67580133075020cc0251b54926380149263001492620014133070495682001492628015020ce0233b539086c020256183f1220036c02024033088002022885003308800202287d9567ff079577394927d8074927d0074927c80764793302d002140700000000717b484e01956800107b97e00733075020d202e1b49568ff079588394928c0074928b8074928a8074164893307049568ff079588e1074929b0075020d402b6b439086c020256183f1120036c0202403308800202280833088002020183883307013309240a07014926580349265003492648039568400349264003017b67b8005020d60270b43308208267b8005020d8026fb8837833092033073300da020a07280e33092033073300da020a07015247a7c9ff0151956738104927200549271805492710054927080595670010837740053300dc020a0a3302de02286f395022de026c395022e002a1355107fb003308800202838833070133090a0728710352475df12f2f8100956738104927a006492798064927900649278806956700108377c0063300e2020a0a3302e4022856345022e402533482b7980082b8a00082b9900082ba8800d49808d4a707d48707510731023308800202838833070133090a07280c038267b800817756174397003308800202838833070133090a0728f0025247be8a5636af0195673810492700074927f8064927f0064927e80695670010837720073300e6020a0a3302e80228d5335022e802d23382b7f80082a8000782b9f00082bae800d49808d4a707d48707510716023308800202838833070133090a07288b028267b8008177561723b1013308800202838833070133090a07286f0295670020837720fb3308040a0195673818957900028298e8007b68b8008298f0007b68b0008298f8007b68a800827700037b67a000956780133300ea023302fc0328f03795683810958900038297487b6798008297507b6790008297587b6788008297607b6780008267a0007b97208267a8007b97188267b0007b9710648a95676013956840138269b8007ba908035020ec023e13956b381095bc000382c82882c73082c93882ca407bca95ba00027ba9f8007ba7f000956720137ba8e8005020ee02eb209567381082688000957900027b98a000826888007b989800826890007b989000826898007b9888008268a0007b98c0008268a8007b98b8008268b0007b98b000647b956700139568e0129569c012826ab8007bbaa8023300f00233021a05288b3533088002022892ea5247686c9642d4009567381849176049175849175049174895670020837780f80a0a01956a381882a75882a86082a95082aa48d49808d4a707d48707510702013308800202838833070133090a0728f0008267b8008177561743f9003308800202838833070133090a0728d40095670010837760053308040a013302f2029568381001958b000582b74082b93882ba2882b830977b2098bb20d4a909d48b0bd49b0b510bcc013308800202838833070133090a07288a008267b8008177330843ac7824023308800202838833070133090a07286c52479067cc7950956738184927200149271801492710014927080195670020837740f93300f4020a0a3302f60228fa335022f602f7335022f8024c325107f9023308800202838833070133090a07281c3308800202838833070133090a07280c838833070133090a07018267b8008177561723da02330880020228e6956700108377e0063308040a0195673810957900068298a8007b68b8008298b0007b68b0008298b8007b68a8008297c0007b67a0009567a0073300fa023302fc032872358267a0077b6798008267a8077b6790008267b0077b6788008267b8077b6780008267a0007b6778078267a8007b6770078267b0007b67680795678007956860078269b8007b6960075020fc02c310826880078267880782699007826a98077b6a58077b6950077b674807956740077b6840075020fe02761e82678000956800067b87f800826788007b87f000826790007b87e800826798007b87e0008267a000956b00077bb7188267a8007bb7108267b0007bb70895672007956800079569e006826ab8007bba330000033302d804281d3333088002022824e8140a000000000bdb6579d37a0ad48a0ad49a0a88aa01140b00000000a7c9ff01d3b707d48707d49707887701d4a7074926d8004926d0007b67c000330780009568c0004926c800502002030caf39086c020256289f001820036c0202a000330780020283788000289efa3307800202837880002892fa9567ff0795778100330004033302fc03280f349567ff079577398278607b68a0008278587b68a8008278507b68b0008277487b67b80033078002037b67980083770a03018269980082970882988199106f77987a206f88978b20d4ba0a9777206f99989920d497079888208269a800979920989920d398088269b800d39707d487078268b000d3a808d487075207540195670010837740073308040a0195693810959b000782ba0882b71082b81882b920826ba000956c00107bcb18f8826ba800956c00107bcb10f8826bb000956c00107bcb08f8826bb800956c00107bcb00f8956bff0795bb397bb97bb8f8956800107b8728f89567ff079577419568ff079588219569ff07959901956b00107bba20f83300060333021a0528823133088002022889e68267b8008177330843ac78fd0033088002022819fd956700208377a0f83308040a01956738188278687b68b8008278707b68b0008278787b68a800827780007b67a00033078002037b6798008377330008030a038269980033020a03289c288269980050220a039528826ba000959c00037bcbe000826ba8007bcbd800826bb0007bcbd000826bb8007bcbc800492900047bc8f8007bc7f0009567ff07957721049568ff07958801047bcae80050200c03e422330880020228cee59569ff0795993949193849193014070000000032b297667b97409568ff07958861491928330750200e03d7ac39086c020256181f1220036c02022033088002022816f53308800202280ef59567ff0795770106330010033302f20328e4319568ff07958839958900058297c8007b67b8008297d0007b67b0008297d8007b67a8008297e0007b67a00095670020837760f93308240a0195673818957900018298287b6898008298307b6890008298387b6888008297407b67800033078002037b67788377330012030a0333021403289a2c50221403972c956aff0795aa39826b800095ac00057bcb8000826b88007bcb78826b90007bcb70826b98007bcb68492aa005826ba0007bcbc000826ba8007bcbb800826bb0007bcbb0007bc998007bc790007bc8880064ab9567ff079577e1059568ff079588c1059569ff079599a105826ab8007bbaa80550201603900d826780009568ff07958839958900057b9740826788007b9738826790007b9730826798007b97288267a0007b97608267a8007b97588267b0007b9750648a9567ff07957781059568ff07958861058269b8007ba948055020180331213308800202281be4951130ff7b10c8007b15c0007b16b8009515d0008411f08289187b19108289107b19088289087b1982867b17289517900033084050201a03dca9821898008219900095671fd86700821ac80a0b8477e0c8b803c879027b1920d8920cc8c303d383067b1818d88309da6c098214a800d8ab0b8216a000da000b821708c87b0bd87b0cc86b0bc89b0a821710c84707c8c707d8ba0cd86b0bc8b707c8c70b8eb78eacdbb70cd4ba078e38db7c08520865d86a07d34b08d84b0cda870cd36a07d48707db7c0952094d7b12707b13787b1a80003307409518707b1b88007b141050201c036caa8217288218107b78187b76108218187b78088218207b78955130ff8210c8008215c0008216b8009511d000320049116049115849115033021e03140700000000717b484e019518507b176833075020200319aa491148491140491130413307049518304911385020220300aa39086c020256183f0b20036c0202400133088002028388330701330924330024030a07019511a0fd951900027b90587b95507b9648951560028411e064168289107b69308289087b695082887b68587b6738492618024926100249260802956800024926000233075020260392a94926f8014926f0014926e001063307209568e0014926e8015020280374a933086c020239076c020256173f0b20036c020240019517e08479e07b692864913307800202837783997b68483308407b674033002a030a0633022c03287e2550222c037b258267309777209877204926d8017b677b67d0018267507b67c8019568c0018267587b67c001330750202e0302a9826708956a00017ba7b8008267107ba7b0008267187ba7a8003307209568a0018269207ba9a00050203003d5a8826848818756173f0e4808403302320328842d50223203812d330034030a06826a303302360328d126826a3050223603cb2695678001502038038ba97c678001510708330828f201492678014926700149266801956860014926600150203a0373a850223c03062850203e0367a8826848818756173f0e4808403302400328162d50224003132d330042030a06826a3033024403283a2c826a3050224403342c7b67286f877b67206f977b67186fa77b67109517e08477e07b673064714926380182677b6730018267507b672801956820018267587b672001330750204603f4a7826710956a00017ba7188267187ba7108267207ba708330720956800018269287ba950204803cca7826848818756173f08480840019517e08477e07b67486471837933084082674033004a030a06826a4833024c0328bd24826a4850224c03b7248268307b8a187b89107b8b087b879567e00050204e036da88267e0008268e8008269f800826af000847700ff867701956b00027bb9387bba307bb8287bb7209568200282673050205003bba833078002037b67488377330052030a0382694833025403286223826948502254035c23d4780298aa206f99979820d4a8089899204916784926980082677b6790008267507b6788008267587b6780004926b8004926b0004926a8004926a0003a0a2801023a0b3001023a0c3801023a074001027b6ad8007b6bd0007b6cc8007b67c0007b69707b68689569c000956aa000956b8000956c607b62603307330850205603aca9330801018269387b984919084919104919189551a0fd951700028270588275508276489511600232003a074801027b67207b6738023a085001023a095801023a0760010250225a03fa2950205c0352a650225e031c245020600346a633086c020239076c020256173f0b20036c020240019517e08479e07b694864913307800202502262033b2b330064030a06330266032877215022660374215020680302a650226a036c2550206c03f6a5826868818756173f0e48084033026e0328192350226e031623330070030a063302720328c72250227203c42250207403b6a67c67a0015107113308330782695833029c0328402350227603942750207803a3a550227a03532350207c0397a5826868818756173f0e48084033027e0328ba2250227e03b722330080030a0633028203283021502282032d215020840365a550228603aa245020880359a5826868818756173f08480840019517e08477e07b676850228a03882333008c030a0633028e0328fd2150228e03fa215020900316a6502292038322502094038ca633078002037b67688377330096030a0382696833029803283321826968502298032d21d4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0a6801023a0b7001023a0c7801023a078001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850209a036ca7330733080182695850229c03e82132003a078801027b67207b6738023a089001023a099801023a07a001025022a003d3275020a2032ba45022a403f5215020a6031fa433086c020239076c020256173f0b20036c020240019517e08479e07b6948649133078002025022a80314293300aa030a063302ac0328501f5022ac034d1f5020ae03dba35022b00345235020b203cfa3826868818756173f0e4808403302b40328f2205022b403ef203300b6030a063302b80328a0205022b8039d205020ba038fa47c67a001510711330833078269583302e2032819215022bc036d255020be037ca35022c0032c215020c20370a3826868818756173f0e4808403302c4032893205022c40390203300c6030a063302c80328091f5022c803061f5020ca033ea35022cc0383225020ce0332a3826868818756173f08480840019517e08477e07b67685022d00361213300d2030a063302d40328d61f5022d403d31f5020d603efa35022d8035c205020da0365a433078002037b676883773300dc030a038269683302de03280c1f8269685022de03061fd4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0aa801023a0bb001023a0cb801023a07c001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b628000330733085020e00345a533073308018269585022e203c11f32009511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b12605020e403b0a1821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c0005020e60347a0821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab80064965020e80312a18217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a5864865020ea03aba47b175082175864685020ec039da4647882175064695020ee03c59e821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a940083774049219800492190004921880095188000492180005020f00310a082162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe821018018215100182160801951120013200003308043300f4030a013302f603281b225022f6031822510a0b5022f8035b2332003308800202838833070133093300fa030a073302fc0328a1245022fc039e243308243300fe030a013302000428db2150220004d821510a0b502202041b233200330880020283883307013309330004040a0701951140ff7b10b8007b15b0007b16a8009515c0008411e064168289828a08828b108288187b67187b68787b6b707b6a689568607b6960330750200604ea9e4916584916504916400633072095684049164850200804d19e39086c020256183f0b20036c020240019517e08479e07b6910649133078002028377839933084033000a040a0601826a1082a782a80882a91082aa1850220c04c71e95aa0188ab01c8b909d49a0b88bb01c88b0bd88b08c887077b6a80007b6988007b6b90007b6798009567209568800050200e044c9f826730826838826920826a28826b187bb7107bb8187bb97bba08955140ff8210b8008215b0008216a8009511c00032009511e0fc951a00037ba0187ba5107ba608951520038411e06416829a187b6a9800829a107b6a9000829a087b6aa00082997b69a8008289107b6988008289087b69800082887b68788279827808807710140affffffff000000007b6a704926d8027b67407b67d0027b68307b68c8029568c0027b69387b69c002330750201004a89d4926b8024926b0024926a002013307209568a0024926a802502012048a9d33086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68b0003308407b67b800330014040a06826a683302160428251d826a68502216041f1d8267788477ff826880008488ff82698800826a70d2a909492698027b69787b6990027b6880007b688802956880027b6788007b678002330750201804ff9c826748956a00027ba7788267507ba7708267587ba768330720956860028269607ba96050201a04d69c8268b000818756173f08480840019517e08477e07b677050221c04de2033001e040a06826a703302200428e51d826a7050222004df1d9567400250202204889d8260580282635002826b480282624002d20b07d23208d287073308ffaa87fc018267a800d872098268a000d38b07d88b0c7b6950da790c82699000d8930a82689800d38007d880087b6a28da7a08d39309d497077b6c48da7c087b62707b6b687b60607b63585208c901826a40826938d4a907826430d447075107880282678800826878d4870782688000d487075107b702492638027b6920027b642802956820027b6a3002330750202404e89b49261802492610024926000201330720956800024926080250202604ca9b8268b000818756173f08480840019517e08477e07b674050222804d21f33002a040a06826a4033022c0428991f826a4050222c04931f7b67386f877b67306f977b67206fa77b67189517e08477e07b674064714926f8018267787b67f001826780007b67e8019568e001826788007b67e001330750202e04509b826718956a00017ba7d8008267207ba7d0008267307ba7c8003307209568c0018269387ba9c00050203004239b8268b000818756173f08480840019517e08477e07b67b000502232042a1f0a068269b00082976f77829808826c407bc7188297108299186f887bc8106f777bc7086f977bc782679000826858c97807826948c99708d8970782699800826a60c99a09826a28c9a909c979098267a000826a68c97a07826a50c9a707826aa800826b70c9ab0a956b00027bb9f8007bb8f0007bb7e8007bbae0009568e00264c750203404f29b9551e0fc95170003827018827510827608951120033200492630014926280149262001140700000000b2418ffb956820017b673801330750203604419a49261801826778956a00017ba710826780007ba70833070495680001826988007ba950203804199a8267607b67f8008267587b67f0008267687b67e8003307249568e0008269707b69e00050203a04f099826798007b67d800826790007b67d0008267a0007b67c8003307449568c0008269a8007b69c00050203c04c3998267b000817756177f158268b0004808800033070133096428c8003307013309648268b800330044040a0728c00049267001492668014926600114070000000005df02e6956860017b677801330750203e046f99492658014926500149264801330704956840014926400133004204284e994926b0014926a8014926a001140700000000620d28949568a0017b67b8013307502040042b994926980149269001492688013307049568800149268001502042040e998267b000817756173f138268b00048084033070133092428143307013309248268b800330044040a07280d8268b800330044040a0701951120fc951a00037ba0d8007ba5d0007ba6c8009515e0038411e06416807c10827a827b087b6a787b6c68d4ca077b6b70d4b70751073404828710828a088288330bff140cffffffff00000000d2ba0ad2b808d2c7077b68487b6738d487077b6a40d4a707510763048297187b6798008297107b6788008297087b67800082977b67900050204604f81249263803826768956900037b97308267707b9728956820038267787b97203307502048042898492618034926100349260803330720956800034926000350204a040b9833096c020239076c020256173f0b20036c020240017b69589517e08479e07b695064913307800202837783993308407b676033004c040a06826a5033024e0428b71a826a5050224e04b11a7bba587bb9507bb8487bb7409567e00295684003502050049898956800028289f8008287f000828ce800828be00082689800d389037b6928d8890882698800d8970a7b6a10da3a08826a8000d3ac027b6c30d8ac0c826a90007b6b50d8ab0a7b6a18da2a0c7b6720d37909d439077b6c08da7c085208a6034926d802826778956900027b97c0008267707b97c8009568c0028267687b97d0003307502052041f974926b8024926b0024926a8023307209568a0024926a00250205404029782678800826820c97807826908c997087b6820d8970782689800826928c98908826910c99808c978087b6828826958819782688000826a30c98a08826a18c9a8087b6830330b3f82689000826a50c98a0a7b6a50ac7b07480940019517e08477e07b671850225604e314330058040a06826a1833025a04287619826a1850225a0470197bba787bb9707bb8687bb7608267287bb798008267207bb790008267307bb788008267507bb78000956760039568800350205c04bd9749269802826738956900027b9790008267407b978800956880028267487b978000330750205e0420965022600461195020620414968268589517e08477e07b67506471818756173f08480840019517e08477e07b67585022640438140a06826a5882a71882a81082a90882aa6f776f8b6f996faa8268507b8a187b89107b8b087b879567400250206604af96826748028268400282625802826a5002826b8000c87b0b826c9000c88c0cd88c08c88b0bd37b09d87b07da980782688800c8a80882699800c89202d8a809c82909c88707d88708c89808956900037b9ca0007b9ba8007b97b0007b98b8009568a00382675050206804c6969567200233084050206a040b94956b000282ba3882b83082b92882b72050226c047d125208be0082689000956a00027ba8826880007ba808826888007ba81095680002826998007ba9187b67980050206e04fe944926b801826738956c00017bc7b0008267407bc7a8008267487bc7a0004926d8018267687bc7d0008267707bc7c8003a07c801023a08d001023a09d80102826a787bcac0007bc7f8007bc8f0007bc9e8003a07e001023308209569e001956ac001956ba0017bc7e0008267980050207004d396955120fc951700038270d8008275d0008276c8009511e0033200004926d0004926c8004926c0001407000000001efdc6969568c0007b67d8003307502072044a944926b8004926b0004926a8003307049568a0004926a000502074042d9439086c020256183f1120036c0202403308800202286833088002022861492610014926080149260001140700000000052f44ec956800017b671801330750207604ea934926f8004926f0004926e8003307049568e0004926e00050207804cd9339086c020256183f1120036c0202403308800202280833088002020183883307013309240a07014926900149268801492680011407000000008cd350e4956880017b679801330750207a048093492678018267687b6770018267707b676801330704956860018269787b69600150207c045a938267287b6758018267207b6750018267307b674801330724956840018269507b69400150207e04319382679800956a00017ba738826788007ba730826780007ba72833074495682001826990007ba920502080040493826758817756177f0c8268584808800001330701330964826860330082040a0701951160fe7b1098017b1590017b1688019515a0018411e064163a07e801027b67387b6778013a08f001023a09f801023a070002027b68287b6870017b69207b696801956860017b67307b6760013307502084048e9250228604211250208804829233086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68783308407b677033008a040a0633028c0428f31150228c04f01133078002037b676883777b671833008e040a0333029004280a10502290040710502092041792502294047f14502096040b92826878818756173f0e4808403302980428a51650229804a21633009a040a0633029c0428f01150229c04ed1150209e04cb927c67e000510719955160fe8210980182159001821688019511a00132005022a00462135020a204b0918267183300a4040a033302a604287a105022a60477105020a80494918267387b6798008267287b6790008267207b678800330724956880008269307b6980005020aa046b91826778817756175f0b826878480860013307013309448268703300ac040a0701951160fe7b1098017b1590017b1688019515a0018411e064168279827808827a108277187b67207b6778017b6a287b6a70017b68307b686801956860017b69387b69600133075020ae04ff905022b00492105020b204f39033086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68783308407b67703300b4040a063302b6042864105022b604611033078002037b676883777b67183300b8040a033302ba04287b0e5022ba04780e5020bc0488905022be04f0125020c0047c90826878818756173f0e4808403302c2042816155022c20413153300c4040a063302c6042861105022c6045e105020c8043c917c67e000510719955160fe8210980182159001821688019511a00132005022ca04d3115020cc0421908267183300ce040a033302d00428eb0e5022d004e80e5020d20405908267207b6798008267287b6790008267307b678800330724956880008269387b6980005020d404dc8f826778817756175f0b826878480860013307013309448268703300d6040a073302d8042872135022d8046f137b6a50829a087b6a7082997b69788289828a08828b108288187b67587b68087b6838027b6b107b6b30027b6a187b6a2802956820027b69207b69200233075020da046c8f5022dc04360d5020de04608f33086c020239076c020256173f0b20036c020240019517e08479e07b6948649133078002025022e00455143300e2040a063302e40428910a5022e4048e0a5020e6041c8f5022e804860e5020ea04108f826868818756173f0e4808403302ec0428330c5022ec04300c3300ee040a063302f00428e10b5022f004de0b5020f204d08f7c67a0015107113308330782695833021805285a0c8267207b6780018267187b6788018267107b679001956880018267087b67980133075020f404a18e5022f604510c5020f804958e826868818756173f0e4808403302fa0428b80b5022fa04b50b3300fc040a063302fe04282e0a5022fe042b0a50200005638e50220205a80d50200405578e826868818756173f08480840019517e08477e07b676850220605860c330008050a0633020a0528fb0a50220a05f80a50200c05148f50220e05810b502010058a8f33078002037b67688377330012050a038269683302140528310a826968502214052b0ad4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267087b67d8008267107b67d0008267187b67c8008267207b67c0003a0a0802023a0b1002023a0c1802023a072002027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b62800033073308502016056a90330733080182695850221805e60a32007b6a38829a087b6a7082997b69788289828a08828b108288187b67307b68407b6838027b6b487b6b30027b6a507b6a2802956820027b69587b692002330750201c050c8d50221e05d60a50202005008d33086c020239076c020256173f0b20036c020240019517e08479e07b69286491330780020250222205f511330024050a0633022605281109502226050e098267389777209877204926f8017b67387b67f0018267707b67e8019568e0018267787b67e001330750202805948c826708956a00017ba7d8008267107ba7d0008267187ba7c8003307209568c0018269207ba9c00050202a05678c826868818756173f08480840019517e08477e07b672050222c05960a33002e050a06826a203302300528600a826a20502230055a0a9567a001502032051a8d7c67a0015107ea018267587b6780018267507b6788018267487b679001956880018267407b679801330750203405f88b50223605a80950203805ec8b826868818756173f08480840019517e08477e07b672850223a051b0a33003c050a0633023e05280c0850223e050908492658018267387b6750018267707b674801956840018267787b674001330750204005988b826708956a00017ba7388267107ba7308267187ba728330720956820018269207ba920502042056f8b826868818756173f08480840019517e08477e07b6768502244059e09330046050a06826a6833024805286809826a685022480562099567000150204a05228c956b000182b782b81882b91082ba08847700ff956b00027bb8587bb9507bba487bb7409568400282672850204c05748c33078002037b6768837733004e050a0382696833025005281b07826968502250051507d4780298aa206f99979820d4a808989920492698004926b8008267387b67b0008267707b67a8008267787b67a0008267407b67d8008267487b67d0008267507b67c8008267587b67c0003a0a2802023a0b3002023a0c3802023a074002027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850205205538d33073308018269303302540528cb07330882693050225405c3073200951180fc951900037b90787b95707b9668951580038411e06416807a108279827b087b69587b6a48d4a9077b6b50d4b70751077e038287187b67788287107b67688287087b676082877b677050205605850449269802826748956900027b9790008267507b978800956880028267587b978000330750205805b28950225a05f30c50205c05a68933096c020239076c020256173f0b20036c020240017b69389517e08479e07b693064913307800202837783993308407b674033005e050a0601826a3082a71882a81082a90882aa5022600591097b6ab8027b69b0027b68a8027b67a002956740029568a002502062052d8a95680002828958828750828c48828b40826878d389037b6920d88908826968d8970a7b6a08da3a08826a60d3ac027b6c28d8ac0c826a707b6b30d8ab0a7b6a10da2a0c7b6718d37909d439077b6cda7c085208cf0249263802826758956900027b97208267507b9728956820028267487b9730330750206405c088492618024926100249260802330720956800024926000250206605a388826768826818c978078269c997087b6818d89707826878826920c98908826908c99808c978087b68208269388197826860826a28c98a08826a10c9a8087b6828826a70826b30c9ab0b7b6b3056173f08480940019517e08477e07b673864718379330840826740330068050a0601826a3882a71882a81082a90882aa50226a055908956b00027bbad8007bb9d0007bb8c8007bb7c0008267207bb7f8008267187bb7f0008267287bb7e8008267307bb7e0009567c0029568e00250206c05578949261803492610034926080349260003029567e0019568000350206e05b6888268e8018262f8018263e001826af001826b60d3b807d8b80c826070d80304da740c826768c97a09d87a0a826778c97207c9a707d8c90ac9a707c9c90ac9b808c94808956b0003491b2002c903097bb9407bb8487bba507bb758492638034926300349262803956720039568400350207005c4889567c001330840502072050986956b000182bad80082b8d00082b9c80082b7c0005022740577045208aa008268707b68a0018268607b68a8018268687b68b0019568a0018269787b69b8017b677850207605fc864926580149265001492648014926400149267801826748956c00017bc7708267507bc7683a074802023a085002023a09580202826a587bca607bc798007bc890007bc988003a0760020233082095698001956a6001956b40017bc7800082677850207805de88955180fc95170003827078827570827668951180033200004926b0004926a8004926a0001407000000001efdc6969568a0007b67b800330750207a055886492698004926900049268800330704956880004926800050207c053b8639086c020256183f0b20036c02024001330880020283883307013309240a07014926300149262801492620011407000000008cd350e4956820017b673801330750207e05f58549261801826748956a00017ba7108267507ba708330704956800018269587ba950208005cf858267207b67f8008267187b67f0008267287b67e8003307249568e0008269307b69e00050208205a6858267787b67d8008267687b67d0008267607b67c8003307449568c0008269707b69c000502084057d85826738817756177f0c8268384808800001330701330964826840330086050a07019511807b10787b1570951580008411e0491158491150491148491140059517209518405020880525867c1720520712955180821078821570951180003200491110491108490114070000000065063cd964187b1718330750208a05ff8439086c020256181f0b20036c02022001330880020283883307013309040a07330733008c05281589330750208c05108933070150208e05078982970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888209569ff079599393202826a4882a71882a81082a90882aa6f777b67406f877b67386f977b67306fa77b67289517e08477e07b674864718267509777209877204926f8017b677b67f0018267707b67e8019568e0018267787b67e00133073202826a5082a71882a81082a90882aa6f777b67486f877b67406f977b67386fa77b67309517e08477e07b675064714926580182677b6750018267707b674801956840018267787b674001330732028269380182970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820320282970881981082996f7a97a7206f889888203202826a2882a71882a81082a90882aa6f777b67206f877b67186f977b67106fa77b67089517e08477e07b672864713202826a800095aa0188a70182608800c87000d40a07887701826878c87804d8840882679000c887078268b800958320d88309826ba000c89b08d8b80bda990b8269a800c89b0bd89b09826cb000c89c0c7b6cb0003202826a6882a71882a81082a90882aa6f776f8b6f996faa8268507b8a187b89107b8b087b87956700013202826a5082a71882a81082a90882aa6f776f8b6f996faa8268487b8a187b89107b8b087b879567a001320282a71882a81082a90882aa6f776f8b6f996faa32029517e08477e07b6750647183793308408267603202d49a0ad48709d4a909989920d4a808978820d498083202956b000182b782b80882b91882ba10847700ff867701956b00027bb9587bba507bb8487bb7409568400282675032027b987b97087b97107b9718955180fd951700028270788275708276689511800232024926780149267001492660010633072095686001492668013202492618024926100249260002063307209568000249260802320282696882970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820492638017b6830017b672801956820017b6a20013307320282a71882a81082a90882aa6f776f8b6f996faa8268287b8a187b89107b8b087b8732026471837933084082676032027b6090008267708268b800d87807826960d39408d89409da8709826b68d8b307826a588268b000d3a80cd8a80adac70ad3b307d4c707da790a3202d49b0bd48709d4b909989920d4b808978820d498083202826b380188b98000826af000db9a08826cf800826a0801d4ca0ada970a93b8ff93baff826b0001939b939c82671001e0a707320282696882970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888204926b8007b68b0007b67a8003307049568a0007b6aa00032028264b8008263a0008260a800826850c84807d88708826b48c83b09c88909d3b90cd8b90bdac80b826c40c80c083202826730956a00017ba7388267387ba7308267407ba728330720956820018269487ba9203202826728956a00017ba7d8008267307ba7d0008267387ba7c8003307209568c0018269407ba9c00032024926580149265001492640010633072095684001492648013202826a6882a71882a81082a90882aa6f777b67586f877b67506f977b67486fa77b67409517e08477e07b67606471320282a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b676864713202826a5882a71882a81082a90882aa6f776f8b6f996faa8268607b8a187b89107b8b087b879567e00032026f776f886f996faa3202c8ba0a7b6a080197aa3b989b05d4ab0b8267280182731897993b827a10988805d498076f346fa9320282697882970881981082996f77977a206f88988820d4a8089877206f99979a20d4a707989920320233073810c8760a95ab00063202c89c0cd89c0b82673001d87909c89407c8b707d4c809d4a707d47909989920d4c707977720d497073202939b82681801e0a80882692001e0790782692801e0b909826a3001e0ca0a3202977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c3202951180fd951900027b90787b95707b9668951580028411e064168289107b69508289087b697082887b68787b6758320282a71882a81082a90882aa6f776f8b6f996faa8268687b8a187b89107b8b087b873202c89c0cd89c0ad84909c89307c8a707d4c809d4b707d47909989920d4c707977720d49707320233073818c8760a95ab0002320282b71882b82082b91082ba08d49808d4a707d4870732024926d0004926c8004926c0001407000000003f7d51e29568c0007b67d80033073202da8709826728d87b04d33c08d83c0ada840ad3b707d48707da790a32028267207b6798018267187b6790018267107b678801956880018267087b678001330732028268b80095873fd88708c884098477e0826030c870007b60b800d87007320282ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032028eb9858801dbb9088e498ecadac90ada780a3202826740956a00017ba7188267487ba7108267507ba708330720956800018269587ba9320282171082181814090000000001000000d37909d48909987a2088aa01948a939a3202e0890882692801e0c909826a3001e0ba0a956bff0795bbb9003202826728826818d487071408e0ffffff00000000826a30d88a0882692094989478320282a71882a81082a90882aa6f776f886f996faa956b0003320282b75882b86082b95082ba48d49808d4a707d487073202c8790bc8ab0bd39b0a7b6b1001d89b09daa709826b0801320233073818c8760a95ab0001320249267802492670024926680233072095686002492660023202c88b0bd88b08c8c808d49808d4b709d48909d4b808989920978820d4980832027b67f8007b6800018267f000d487077b67f000826738019579803307ff3308ff32027b68187b6830027b69107b692802956820027b67087b67200233073202951180fd951a00027ba0787ba5707ba668951580028411e06416829a1032028219821a087b697b6a087b67107b68189551c0821038821530821628951140320282a71882a81082a90882aa6f773202d49707d48a09d47909989920d48707977720d497073202647183793308408267b800320282c7a00082c8980082c9900082cb8800d49707d48b09d47909989920d48707977720d4970732028267b0008268a000d487078268b800648b8269a800d49808d47808988820d49707977720d48707320297773b9878387b6838019a8980003307ff3308ff32029517e0847be064b133074926b800330433034926b00032029517e08477e07b67586471837933084082677032029517e08477e07b673064718379330840826740320282b7d80082b8e00082b9d00082bac800d49808d4a707d487073202c8b707c88a0ad88a0cc8c70782600001c8a000d8a00a320297a8037b6838018d8980003307ff3308ff3202837783997b68683308407b67603202d4ca0ada980a3308ffdab807dab80a939c32029511c07b10387b15307b16289515408411e064768317320233073810c8760a95ab00053202849a40520a195109148d9a40cfa80ad09808d09707d4a707320032009597c0d0780733083200849a40520a195109148d9a40d0a70acf9707cf9808d4a808320032009598c0cf87083307320049922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a9228496992842425494a9294a4245555494a92925492942449499254a8945292545292a488884849922424944a4a4a8a142952a448912245498a888822222225499292244948282a52a4489122458a142952a4489122458a122922224a920421240ca5496948242222224544908848444444a488880812890811111111118d8888884892848888444488888888084944283a22112122128944848808111191244992884844444488880490a82411222222448488089124499224898844444484884800894a1211014424448488884a944822924422222222442444444448922495929044444444448442886012854a9a249224445125492489482249244992440a492449945485442249924892242929462249249224294922222222228a880811114992485222914424124992244992449288880885244a21892a8522aa8824551589446a14914422492491482212114989244412112222224a44444484482249249148241249249188249244128988544a4444541289888824498924492292242189108944a24808114984104284248988904c92244944924892888824220949922412894462229108212249424424224988884484084994248988888848222242448888a84411898844444444848808111111922449a5089188888888885008114ca2504923892411a2a89224924424912492244922854824499454058944922491244952528c449248244952924444444414111144442449224989442422118988885090442948a24aa188aa485214151529128946441289482212918844249224414410491211111111412491249248241289249248441249228944244a8988881291482222221189444422912409228248241289088288248220082288248988202692481249928888089124111191481011111111111193449248128920888824414424224910118908228844499288101111111111118428a24810914414441409222222221251248888888888442325898888081111444444448888202222929224499244922449244992242911111121228828124424514144242248a210c1240a95282211449222888848922449124992444492444410092222228844221111114414910892924444440821444444242222824810490a622855283522228011051121114188202424222280110511211141882024242222801105112111418820242422228011051121114188202424220288288888440421829090880820a2204430943422228011051121114188201496149108aa8982aa84089188a21181040412104840402001810412482001810404121111118d888824491489880811114422221244224982248a8888884844444444912048a2241111894422918848140922222291242205918850222208218249142a1251442288a294248a24121111111105894424224a4444104526518928221144922282484444824844440449141111119188888888224190449148101149822422222212111111d188208992041011918888888888448c4422119148115110312294882084082651a848441189204a2949148944242222220a121189448988208a4ca21251442288244510111111111109228224229148441491888888281204491489041111112411112122111111114582888824491489041191244842248490442212111111458220892291201289442222424410119124912449a42449929214499224499224454422491249104990442422222222828a28110992244992244922492a29492249904444242222824492248988888888882022124992241111118988886844444492244a121191484422222252444444444448242284904844240a2211a1444410420493148a12512209424a94488288242205894492a44424822832491025922022884492242249124449444410898888a448244912492249922449529248121144221111111105918828111124298a4c2288221241921411442222221249924422499248924810912012912448221289444422884422222222228410224912111111111495888888882241904491481091244912111122828888489224492225492449498a244992244992222211894424824882242211492422828a28110992244992244922492a294922499044a424918808222522918844224544248888449224492451324992241249922449921441519488888846244992248a04111121228248441211111111222222228848108988888808511409228288888882102211224489880842552222221a1111912489221111228248241245248888882022222222228a4804121111d188884892444922221289888888882888444489882044308942251a490a22222222824844444444442488441011894422228a4844444444912048a24810444484880822912491888810111111414482482412894488a24810114424112908211221429488882054a52a111111512408922812912812248988888820222222221244444410118944225244222222228a04892449122589884424128944448a8888888808298a0411111111111111111191242222880411111141448488884444444491208828111189888888888844229148448a48241289904a522949492222222222229148141111114444444424128944444444444404912092248888881091888888684492248928448288888820424408212222221111115124888848125122221211111149149122222212499214a268a424114944221145522949492222a220222422082182490a158928910429a52429222222a2209124492441149944258a24552549114482485210894422124510514422484a12111111114208111111898888201244920431222214042124499224849294a8244932224822228220912488489292480441912a255189888850108490244992104a52a29224c9882089880882449220222222222222088a5429894a2895502aa15442a9845209a5124a25944a2895502aa15442a9845209a5121111c0888288908820441012124a25944a44041011058912491091242241229124291189208a481225891289880288888248449488884422a20022a22012114a4404514492a8241a4a25944a24220a20220a2211a144441022080909a5124a250920225210220885250da5124a2520222222a24810442895502aa15442a9845209a5124a25944a2895502aa15442a9845209a5124a25220288288888440421829090880820a22022121184084242222202185110111211840842429188280218511089082522821041282c69444488201194a252341011111151240822944a404444444491202222498452894228958088888888224144449208a51285502a112922222222222212914824129148a488882022498a88882022222222222222a288888848484024494423499244289528845289481123499224114a254a845205222222228a044184528552951a8550448a88888888888844444444444444444404111111111144444444444422918888221212409204902489888808420884488844442492482412216aa4949294249244124944a48824898888888888889488482412119190281112912291484484288a480411111111111111111184449200124941882024242222918888888888481189442211521409221111894422222222228a8888880822128944229148a4888888202422229224a9448288a4244992249148922449925452922449924412099224491111519208605290449220443094442392444a9292888828880889084288609242258922419228129128484422914804291209a2441244102911111104418a448228910429a524298a44240a124992440a5264924aa2441224491144444422492241485122099292248a44222222841022229288482ac89424224914122184200882102298a41044912008821489045124082295481004418a448228120441902293045124088220a42891044949228a442291482442082122222222222a28090a89104210044108114c5208a2481004418a4482281204914a240882204522411409822048914982281204411052944882a4241145229148241221841011111111111594044544449294244992249224252222942049922449449024800490a4141111492412912848925224092049454992244922494152500a922449922449922409201589888820092049922449922449929244444413458204855214091245820485523422225249922429482249102298a45089a624419224494444224892242522228a4812299148148944290920914844a220222422082182490a15892891044924924844444441224992488228324910259220828888248948244924922449922492241149242222a22022242288229304512209524a4952242222a2201189442211449149044525494aa94892449224922492888888828824514404105110894412519048241289202222221111441191248928111140444144242212110144144444228228224949444534222222a524492229012449924422912882482489a4202212118410c124295412259220492282888888249124924492244922129188444144242288244922499214499244926492204a244192241289444410894844a2200892a4229304254955495204111191489224124992444444248804912441441489442482484422118944082111112111111144444434220288288888440421825028220288288888440421825058d2880820a220128944224824128944109148241109522426894644440a8910422211898220082182490a95248a0421258a044110a448248822411089888882205124081289442211a44826894644442a492291884441108410c124854a1245829012458220085224124491208844444441902812048944229108522493449120492949128944240a822084082629045124088220452241140982482592482422511004291209a2481004418a4c12449120088290a244122425892812894422910821848888888888a8a02428492949128944240a82208408262904512448128944240a1291482412418a4c12448924882022914844a22008526492208a04914844a22091244924418a4c1244892488204a1291249120a428910449492212894422914884104244444444445450122941114922a52449224992124422129128088210229824854aa24952101111114492244992244992244989482489a4202212112429499224494992244964924aa2495210111189442211114444880822229224499224491291248988882012444444108944221209222222912484904444484444828824d1880820a2202212118408869246440011059148924841229148248244229148042912934493449244122449a2a4004a41886028a9484182a4529292444a924a29254949a24844a292a4524a49521489485424959294a4a4524a924a29254945124992442289249144a224a92a498a92a4aa24294a5255492a2949921425894492442a494492282224a288908892544a52928888a82455254955522492244922499292244911918824898a94a45292924444228a882449922425922489a444241289441121112549a59492a492544a29492a49aa4a92a2aa124922495225a994a42445a224922449928a442291922449925444924849525292aa92a492244992a4489424498a8800222a4992242512894854244912a92449524a924a2a29912449a4920092a44a2412519200925449aa8a92244949228922514424a2244992a48848449212894854449248a994244952922a49925489222292244911892249929288a4a4a2a2249594a4922222929424919488a44a5292a49224a922519224492595244952490100"
            },
            "deployedBytecode": {
              "object": "50564d000050a1000000000000010700c1a002c00080038268006e656b6f54794d9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5287ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f34876c7d2fef02d9fd08c50cca46058de4caba1b8b8858c81a656891c988defee1af85fc1fbac358af209d74f347dae39c6658caab400868e9bd16be37ffe4bb620e3be01ea8ce76274eab57002424ecd5447f7c9b0110d0058a2054b54fcdbeb9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af528e6f25b490aeeb95da41b4c83a7919cff534eaae8a544d2fdaa73b0e4ea8ad37b5b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b003c599e0e5a57c228db122fc9f859f9d002053b5a39c3695bf8716f4416255e1dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045307ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f31dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045304876c7d2fef02d9fd08c50cca46058de4caba1b8b8858c81a656891c988defee1dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045309bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5287ab365328ea2d765b32165339f927464b96c3f931b68c1322a860d44736637f31dff7e7e1188872fd1014979ec26e982400927504a02787c0d6f6533a74045309dc6d9325c1f39f67429440b67ea472a64fdc7edd13539b51b1739a847e021eb9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5280480bd0b000000000e0000001c0000002a000000300000003d000000480000005700000062000000740000007f00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235367365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c0ee7c0463616c6cc0f67c066465706c6f7906c0f59d82c702c072879b00e30106031703cb033a04420413051b051a065e06b006330758076b078d07c807230872089008e7083a094709ba09d309fc09360a640a820af00a1f0be80b970cad0c820d990dd70df50e040f2b0f300f470f4c0f510f560f5f0f7c0fe80f38103d1056107b109710a010f610031170118911b011eb1119123912a712d8129a1314142b14061514154e1571167f16a916af16c716cd16d316d916e31605178417ed17f3170e18341851185b18ba18d618dc18fa180b191119341945194b197219ba19ed199b1aac1ab21ace1aeb1a301b3a1b531bc41bd11beb1b1a1c2f1c391ca71cb41cc91c081d181d361d701d801d9e1dd81de81d061e401e501e6e1eb31ed01e151f501f601f7e1fb91fcf1fda1f00201a213a215721af21b521bb21e3211b22212258228322c922d32230236c23a023aa23c723e7230824602466246c248c24a724ef24fd242f255a256325a425ad25cd2513261d267926ad26e126eb26042739274727a427aa27b027d027ea2739283f2878289328f128f728fd281d295c29242a342a6f2a912afc2a2f2b7d2b272cc92cf42c382d412d5e2d672d882dbf2ddc2dec2df52d032e3a2e5c2efa2e302f5a2f832f942f9e2fba2f2c303d305b309330123148314e3154317431b73187329732cf32f1325c339133e3337e34e034073563357435b335b935c735e7352936a736d336ed369437cb37f537243839385f389b38ac380f3915391b3934393a396139b639c739063a0c3a1a3a3b3a7d3abd3ac33ac93af43afa3a253b523b6c3bca3bd03b0a3c7a3c803ceb3cf83c163d5f3d653d6b3d8b3dba3d9a3e083f153f2b3fa73fc53f25402b4064405d417b41bf41c8410d4236428a429742ac42dc42f142fb42754382439843ba43c0432b4447444d44634490449644dc44e2444d4569456f458545bb45c145ef46ff461d4788479b47a447c647fd475f48bd48e84869499449fc49764a7c4a824aab4bc84b0d4c2a4c644c744c924cd44ce44c0f4d554d624d7d4dad4db34db94dff4d054e804e864e144f654f954ff64f8150025108510e519251e0510a526452b952f552ff5366547054ba54ee5420559355995511566d56af5659579e57ac57c557e9573358515890589658c358f0580959195922592c59525958595e59775987599059d159f959295a325a4a5a7e5a985aa15a235b4c5b6d5b735b795b7f5baa5bb75bbd5bc35bc95bcf5be85bf55bfb5b015c1c5c225c285c2e5c475c545c5a5c605c665c6c5c885c955c9b5ca15ca75cad5cc75cd05c635d715d735d945d9a5da05da65dd15dde5de45dea5df05df65d0f5e1c5e225e285e435e495e4f5e555e6e5e7b5e815e875e8d5e935eaf5ebc5ec25ec85ece5ed45eee5ef75e8a5f985f15604460b360266134614161b561296239623f6248626362696279627f6288629d62db62f462226336636b631d643b647f648864c664ef640c651c6525652f65dd65fb651866286631667566a266c06647678467ac67d567026856689a68b768ed6877699d69ba69fc69056a1f6aa66ac36a2d6b3d6b466b7c6ba56bab6bb16bd86b086c736c806c966cc76c3a6d7b6d986ddb6df86d456e6b6e946ec16ee26e376f3d6f436f826f886fa26fa86fae6fb46fba6fd36fe06fe66fec6f0f70157025702b7031705a707a70c670cc70d27011711771317137713d714371497162716f7175717b719e71a471b471ba71c071e9710f72157259725f72657290729d72a372a972af72b572ce72db72e172e77224732a733073497356735c73627368736e738a7397739d73a373a973af73c973d273657473747574b974bf74c574f074fd74037531755e757a758a7593759d75cd75d375d975f575027608762d765676727682768b769576c576df76e8767c779677ea77137819781f7858786c788a78057922799079a479e279017a757a827a9c7ac97a2f7b6d7b8a7bd07bf67b1f7c487c697c927cc67cf67cff7caa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f03200390870020251084e1f3307a0020383770a0828411f9511f07b10087b1564896475330820649750100235057c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004ed036f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33073300060a0501821738821830821928821a20501208e57e7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a099551a082105882155095116032009511a07b10587b15507b16489515608411e0829a7b1a18829a087b1a10829a107b1a088299187b19648650100a050282186f888219086f99821a106faa821b186fbb7b1b387b1a307b19287b18208379836a8317203308010a049551a08210588215508216489511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5850120cb87f7b183850100e8e016f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a04955120ff8210d8008215d0008216c8009511e00032009511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b50501210df7e7b1858501012b5006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e0008379811a58831780003308040a049551e0fe8210180182151001821608019511200132008b7910520931c8780883881f8488e056380000012533096c0202390a6c0202ae8a093d086c02020133088002028377c887073200009511f07b10087b158475010a02013d0768020251050750101448330016951110fe7b10e8017b15e0017b16d8019515f001951150e68411e06416956938104929e0044929d8044929c8048000330740956800154929d004330012012864fb951108f8951700077b70f0007b75e8007b76e0009515f8079511f8fc8411e0641695670010492738f895670010492730f895680010492820f880003307409568ff0795882195690010492928f850101814fb95670010492758f895670010492750f895670010492748f895670010492740f895670010837740f80a0a0195670010827750f895680010828858f895690010829948f8956a001082aa40f8d49808d4a707d4870751070628c71538096802024926f8074926f0074926e8079567ff079577019568e0077b6938017b69e00750101a474f95670010827a18f895670010827810f895670010827908f895670010827700f850121cba775108062872157b6730018268380150101e65fe83778168380133090a018268380156181f072861159567c00782683001501020fdf88267d8077b6780008267d0077b67788267c8077b67708267c0077b6768492698074926900749268007409567a0079568800749268807501022b24e956800078289b800828ab000828ba8008287a000d49b0cd4a708d4c808988820d4ac0c97cc20d4c80851080628d914492678074926700749266807330c07956860077b6c60077b69c8007b6ac0007b6bb8007b67d000501024a1f9826ad0008267c8008268c000d487071408e0ffffff00000000d88a088269b8009498947852080628831483a720492650073a090000024926480749264007956840077b6958077b67f00050102652f949261807492610074926000740956720079568000749260807501028ea4d95680007828c38828930828a28828720d4ca0bd49708d4b808988820d49b0b97bb20d4b8085108062815144926f8064926f0064926e806330b039568e0067b6be0067b6998007b6a90007b67a0007b6c880050102addf8826aa0008267980082688800d487071408e0ffffff00000000d88a08826990009498947852080628bf1383a7204926d0064926c8064926c006140900000000004b544d9568c0067b69d8067b671850102c8af89567a0068268d00050102e43f795670006827ab8008278b0008279a8008ea78e8bdba70b7b69e8008e977b68587b6ae000d4a8087b67507b6ba8007b68d800db8b07510706286e138267a0067b676095670010492778f895670010492770f895670010492768f895680010492860f803956780069568ff07958861501030fcf8956b000682b7900082b8880082b9800082ba9800501232db7888920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479aa9206286113501234227a8267608877207b67b000510a13027b6b10017b6018017b6c20017b64300149267806492670064926680695686006492660060333075010368ef739086c020256181f0b20036c020220019517e08479e07b69280164913307800202837783993308203300380a060182676095781fd87807826ce800c87c09d8c90ada770a826b5850123a84778268b00094c8826ad80094a8948b9487c87402d84207c8790cc8cb0b7b6b3801d39b0cd89b0adac70a7b6a00018267180195701fd8700b826a1001c8ba07d8a70cdabb0c82633001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b671801d84707642450123cf579826758d87b07826ae000c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b50123e9a7bc8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a7395670010492798f895670010492790f895670010492788f895670010492780f89568ff079588810064377b6430017b6b38017b6228017b60200150104050f78263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c8820264702854ff8267b000857701826be800826850dbb8078268a8008269d800db98078263e000d43b087b68b00082685898843f97330198bc3f978201826a6098a03f97bb0197a9017b69487b63407b60387b6c307b6250510727027b6b287b642084aae07b6aa80049263806492630064926280695682006492620060333075010422df59517e08477e07b6718016471330820330750104423f99518e08488e07b6810016481837783893308200a06492638012033024926300149262801330b330c330049262001826a100182a71882a81082a90882a36f776f886f9a6f336434826918017b93187b6af0007b9a107b6810017b9808647a7b97017b64080164a38267a8007b6b0001d87b07857b017b6cf80094cb01956c000182c720d47007947b018268d00082c738c87808826ab800c82a0a8269c00082c730c879098267c80082642801c874048267b000520b5e0182673801d8780bc8ba0a6427d32a027b67e000d87a0cda2b0c501246e2747b63e80051070628440f9567c0017b60d800501048f1f28267d8018268d0018269c801826ac001956bff0795bbb9007bb77bb8f8956700107b79a8f8956700107b7aa0f89568ff079588a1008267180150104a61f58264e80095440188470182621001c87202d424078877018268f000c87803d8830882670801c88707826838019589207b690801d8890a8268e000c8a8097b69e800d8890bdaaa0b82683001c8b800d8800b82682801c8b8087b68280182680001958b20d88b0c8269f800c8c908d89809dacc09826ad800c8a909d8a90c826a2001c8ca0a7b6a20017b621001826c18017bc208644a7bc47bc31064747bc7187b63f000826708017b6738018262e8007b603001648c64902880fed48a078268b000d4870752073a0149262001492618014926280149263001826340826238826830826c502863016420826360826ba800d33b0b826c58d4cb0bd47b0b826228826c50510baa0082673801d8780bc8ba0ad30a02d80a0cda2b0c50124c6f7351070628d50d9567000650104e86f1956800068287187b6730018287107b6728018287087b67200182877b6710018267605012501b7750105221787b6708017b68f0003307ff3308ff82693801501054e477501256f875501058da7750125a17718269200150125c19757bba207bb9187bb8107bb7089568ff079588c1008267180150105ebcf3826c5082622801826720826840d48707826830d4c808826938d49209826a4895aa01956cff0795ccb900491c40491c38491c30491c28037bca487bc9507bc8587bc7609567ff079577e1009568ff079588010133006e2861f3956740068268f0007b64207b6b28501060a2f0826c50826b28826830826238826340826420826a60956900068297587b6730018297507b6728018297487b6718018297407b67200101d48c077b671001d443077b670801d42b077b670001501262997650106414777b67e0007b68f8008267608a79033307ff3308ff501066d5767b67f0007b68e8008268e000d487077b67e000826738018379803307ff3308ff501068b076826b380188b98000826ae000db9a07826ce800826af80050126a5c76826bf00050126cee71826b48d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956cff0795ccb900491c68037bc998007bcaa0007bc890007bc78800492c8000491c78491c709567ff07957721019568ff079588410150106e42f29567e0058268a00050107087ef95670005827af8008279f0008278e8008ea78e9bdba70b7b68b8008e877b69b0007b6aa800d4a9097b67d8007b6be0007b69f000db9b075207830c8267e0057b67c0009568ff079588b9004928c0004928b8004928b0004928a800049567c0059568ff079588610150107246f1956b000582b7d00082b8c80082b9c00082bad800501274257188920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479ab927e0c5012766e728267c0008877207b67e800510a10027b6b10017b6018017b6c20017b6430014926b8054926b0054926a8059568a0054926a005043307501078d9ef39086c020256181f0b20036c020220019517e08479e07b692801649133078002028377839933082033007a0a06018267c00095781fd87807826cb800c87c09d8c90ada770a826bb00050127ccd6f8268e80094c8826af00094a8948b9487c87402d84207c8790cc8cb0b7b6b3801d39b0cd89b0adac70a7b6a00018267180195701fd8700b826a1001c8ba07d8a70cdabb0c82633001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b671801d84707642450127e3e728267b000d87b07826aa800c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b50228000e273c8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a6c9567ff079577b9004927e0004927d8004927d0004927c8009568ff079588810164377b6430017b6b38017b6228017b602001502082009fef8263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c882026470285bff8267e8008577018269b8008268d800db98078268e000826af000dba80751071c028267c0008477e07b67c800492678054926700549266805956860054926600504330750208400b1ed9517e08477e07b6720016471330820330750208600a6f19518e08488e07b6818016481837783893308200a064926380120330c4926280149263001330b330a330933038267180182721882781082700882777b6710016f277b6718016f846f02826710016f786480826720017b781864287b68d8007b78107b6408017b7408826818017b78017b6000018267c8007b6bf000d87b07857b017b6ae80094ab017b6310017b69f800d43907947b018267a00082683801c87808826a90007b6ce000c8ca028264980082692801c8490982638800826c3001c8c303520b4301d87800c8020bd3ab02d8ab0cda200c50228800216e5207c7079567600250208a0077eb956b000282b77882b87082b96882ba60956bff0795bbb9007bb700017bb8f8007bb9f0007bbae8009568ff079588a1018267200150208c00ebed82601801950001880701826a0801c87a0ad4a0078877018268d800c88707d8870882620001c88202826838019589207b690001d889088269e000c8890b7b6bd000d89b0bda880b82682801c8b804d8840b82683001c8b8087b6830018268f000958b20d88b0c8269e800c8c908d89809dacc09826cf800c8c909d8c90c82631001c8c3037b6a0801826c20017bca087b6018017bc07bc71064207bc2187b67d800826700017b673801826cd0007b642801648a2899fe826ac000826bb000d4ba07826ca800d4c908d4870752075e0149262001492618014926280149263001288c01826bc800826cc000d3cb0b8260b000d40b0b7b6b3801826cb800826ba800d4bc0c826b3801d4cb0b510bb200d87800c8020bd3ab02d8ab0cda200c50228e00b66c52075c0695674005502090000cea956800058287587b6730018287507b6728018287487b6718018287407b6710018267c000502292009e6f50209400a3707b6708017b68f0003307ff3308ff8269380150209600657050229800786e50209a00597050229c0095698269180150229e00966d95bc00017bca207bc9187bc8107bc7089568ff079588c101826720015020a00034ec8260b0000198073f8268a800978801d48707826ab80098a83f970901d49808826bc00098b93f97aa01d4a90997ba0195aa01956cff0795ccb900492c4001492c3801492c3001492c28010495cb00017bba487bb9507bb8587bb7609567ff079577e1019568ff07958801023300b00028bfeb956780058268185020a20007e9826ca800826bb0008269b800826ac00095680005828798007b673001828790007b672801828788007b671801828780007b6720010198973f97b801d487077b67100198b73f97c801d487077b67080198a73f979801d487077b67000197a7017b67f8005022a400e56e5020a6005f6f7b67d8007b68f0008267c0008a79033307ff3308ff5020a8001e6f7b67e8007b68e0008268d800d487077b67d800826738018379803307ff3308ff5020aa00f86e826b380188b98000826ad800db9a07826ce000826af0005022ac00a36e826be8005022ae00346a826bf800d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956cff0795ccb900492c68010495cb00017bb998007bbaa0007bb890007bb78800492c8001492c7801492c70019567ff07957721029568ff07958841025020b0007fea33078002037b67380183777b6730013300b2000a033302b40028fb645022b400f86449261805956900057b98107b970895672005956800057b9a5020b600f53e826730013300b8000a033302ba0028c6645022ba00c3644926d8047b68d0047b67c8049567e0049568c0047b6ac0043300bc0033025803289d69826730013300be000a033302c000288c645022c000896449269804956900047b9890007b9788009567a004956880047b9a80003300c20033029e03285f69826730010a0301826938018097108298829908d48707d49707510702059568ff079588b9004928c0014928b8014928b0014928a80105956760049568ff07958861025020c400fde87c676004520731059567ff079577b9004927e0014927d8014927d0014927c80102956720049568ff07958881025020c600cae88264380482633004826020047b602801826c28049518e08488e06481826970c8c90b826768c87000d87007c87b0bd39b0ad89b09daa709826278c83207826a8000c84a0ad82702c82a0ac87909d87907c87a02d3bc07d8cb0c826a2801d8a00adb7c0ad83907d3240cd84204dac704d39307d4c707db740a7b89107b8b087b807b8218520ac5049567ff079577b900492700024927f8014927f0014927e801029567ff079577a1025020c8009ee8826730013300ca000a033302cc002825635022cc00226349261804956900047b98107b9708956800047b9a33075020ce00f7e64926f8034926f0034926e8033307209568e0034926e0035020d000dae69517e08477e07b672801647139086c020256183f0b20036c020240019517e08479e07b69200164913307800202837783993308403300d2000a06826a20013302d40028b663826a20015022d400af63826828017b8a187b89107b8b087b879567c0035020d60064e78267c8038268c0038262d803826ad003826b70c87b0b826c68c88c0cd88c08c88b0bd37b09d87b07da9807826878c8a80882698000c89202d8a809c82909c88707d88708c898089569ff079599b900959a00027bac087bab107ba7187ba8209568ff079588c102826728015020d80075e79567a0033308405020da00bae4956b000382bab80082b8b00082b9a80082b7a0005022dc0028635208e2008268687b6880038268707b6888038268787b68900395688003826980007b6998037b6728015020de00abe5826730013300e0000a03826938013302e20028cb61826938015022e200c461d4780298aa206f99979820d4a80898992049263803492658034926500349264803492640033a0a0800023a0b1000023a0c1800023a072000027b6a78037b6b70037b6c68037b6760037b6930037b68280333082095696003956a4003956b20037b622003826728015020e40066e7956700033308405020e600d7e3956b000382ba1882b81082b90882b75022e8004a625108e602003308800202838833070133090a0728113308800202838833070133090a07014926700149266801492660013302ea00140700000000717b484e01956860017b67780133075020ec00ade44926580149265001492640014133070495684001492648015020ee008fe439086c020256183f1220036c020240330880020228500233088002022848024926b0014926a8014926a0013302f000140700000000717b484e019568a0017b67b80133075020f20045e44926980149269001492680012233070495688001492688015020f40027e439086c020256183f1220036c020240330880020228e801330880020228e0014926100249260802492600023302f600140700000000717b484e01956800027b67180233075020f800dde34926f8014926f0014926e001413307049568e0014926e8015020fa00bfe339086c020256183f1220036c020240330880020228800133088002022878014926500249264802492640023302fc00140700000000717b484e01956840027b67580233075020fe0075e34926380249263002492620022233070495682002492628025020000157e339086c020256183f1220036c020240330880020228180133088002022810014926b0024926a8024926a002140700000000052f44ec9568a0027b67b80233075020020112e3492698024926900249268802330704956880024926800250200401f5e239086c020256183f1220036c020240330880020228b600330880020228ae0049265004492648044926400414070000000065063cd9956840047b675804330750200601b0e239086c020256181f0b20036c02022001330880020283883307013309040a07014926f0024926e8024926e00233020801140700000000717b484e019568e0027b67f802330750200a0165e24926d8024926d0024926c002113307049568c0024926c80250200c0147e239086c020256183f1120036c0202403308800202280833088002020183883307013309240a077b67380133000e01281fe67b67380150200e0118e68377330833090a28b0e08267380133085020100102e68378330733090a072816fd33076802027b67b80039076802025517040728363195670010837720053308330014010a01019569381081970405524759cb56840a28d71851475448d19174015247419bd8950a28fe105147dffd17a213045247bb9c05a90a286e1b5147931339d5da0751473eed62dd8e045247e9b13ae60a28021f514703defd067c085247b3a75e090a28a11f5247dd0d16180a28d0155247dd72b8230a28c71c5247a39c8a240a281b1a514767e53c31ff0652473aa84b3f0a2800145147190fc140310b5147bb5a975c0a288516956738184927a000492798004927900049278800956700208377c0f80a0a01956a381882a7980082a8a00082a9900082aa8800d49808d4a707d487075107062803258267b800817756170307280725956838184928c0004928b8004928b0004928a800059567ff07957781049568e018502016019de19567ff07957739827748047b67b8009567ff07957761043308405020180151df956aff0795aa3995ac000482cb4082c83882c93082c72850221a01005f5108062842227c68b8008e88492a2004492a18047ba808049568ff0795884104492a10047b67b8003300d602283ce0956738184927e0014927d8014927d0014927c80195670020837700fa33001c010a0a33021e01284d6350221e014a6350222001e464510706284a248267b8008177330843ac7806284c249567ff0795778107330022013302fc032821659568ff07958839958900078297587b67a8008297507b67b0008297487b67b80095670020837720fa330804330024010a013302260128e16250222601de6282b7e80082b8f00082b9f80082aa0002956bff0795bb3995bc00077bca407bc9387bc8309568ff07958861077bc7283307502028016ddf9568ff079588394928200749281807492808070664893307209568ff07958841074929100750202a0142df33086c020239076c020256173f0b20036c020240019517e08479e07b69900064913307800202837783997b68a0003308407b67980033002c010a06826a900033022e0128f862826a900050222e01f1627b6788006f877b6780006f977b67786fa77b67709517e08477e07b67900064718267a8009777209877209569ff0795993949290007959a00067ba7f8008267b0007ba7f0009568ff07958821078267b8007ba7e80033075020300195de8267709568ff07958839958900067b97e0008267787b97d800826780007b97d000648a3307209568ff0795880107826988007ba9c8065020320159de8268a000818756173f08480840019517e08477e07b67b8006471837933084082679800330034010a06826ab8003302360128465b826ab800502236013f5b826890007b8a187b89107b8b087b879567ff079577e10650203801f0de9567ff079577398277a8067b67b8009567ff079577c10633084050203a01a4dc956aff0795aa3995ac000682cba00082c8980082c9900082c7880050223c014f5c51080628911f7c68b8008e88492a8006492a78067ba868069568ff079588a106492a70067b67b8003300d602288bdd956738184927600249275802492750024927480295670020837780fa33003e010a0a3302400128ea5e50224001e75e50224201636051070628bb218267b80081775617030728bf219567a01133084050204401ffdb956a381095ac000182cb800082c87882c97082c76850224601b05b51080628f21e492a6001492a5801492a500195688011492a48017b67b8003300d60228f6dc956738184927200349271803492710034927080395670020837740fb330048010a0a01956a381895ab000350224a015d5e510706284c218267b8008177330843ac7806284e211407ffffffff000000007b67b8009567a01433004c013302f20328d56195683810828768047b67b000828770047b679000808778047b6788009567801433004e013302fc0328aa61330250019568381001958900048297587b67a8008297507b67a0008297487b67980049284004826788007b9738826790007b97306489956860148267b0007b97280433075020520121dc330254019568381001492820044928180449280804016489330720956840144929100450205601f8db33086c020239076c020256173f0b20036c020240019517e08479e07b69880064913307800202837783997b68b0003308407b679000330058010a06826a880033025a0128ae5f826a880050225a01a75f7b6780006f877b67786f977b67706fa77b67689517e08477e07b6788006471826798008477ff8269a0008498ff8269b800826aa800d2a909956a3810492a000495ab00037bb9f8007bb8f000956820147bb7e800330750205c014cdb82676895683810958900037b97e0008267707b97d8008267787b97d000648a33072095680014826980007ba9c80350205e0118db8268b000818756173f08480840019517e08477e07b67b8006471837933084082679000330060010a06826ab80033026201280558826ab80050226201fe57826888007b8a187b89107b8b087b879567e01350206401b3db95683810958900038297c0007b67b8008297b8007b67b0008297b0007b67a8008297a8007b67a0009567c0133308405020660152d9956a381095ac000350226801b05e51070628521c8267a00095a900037b97688267a8007b97708267b0007b97789568a0138267b8007b97800064b77b6bb8003300d6022843da4929e0064929d8064929d0064929c806956700108377000733006a010a0a33026c0128b15a50226c01ae5a50226e01ef5e51070628bb1e8267b80081775617030728bf1e9567e00733084050207001bbd8956b000782baf80082b8f00082b9e80082b7e00050227201295751080628af1b4926d8074926d0074926c8079568c0074926c007127b67b8003300d60228b2d9956738184927c0024927b8024927b0024927a802956700208377e0fa330074010a0a3302760128115b502276010e5b82b7b80082b8c00082b9b00082baa800d49808d4a707d4870751070628351e8267b80081775617030728391e9567a0123308405020780113d8956a381095ac000282cb800082c87882c97082c76850227a01c45751080628061b3a0848000295ac00027bc8603a0b5000023a085800023a096000027bcb587bc850956880127bc9487b67b8003300d60228f6d849296005492958054929500549294805956700108377800533007c010a0a33027e01282b5e50227e01285e50228001d25b51070628b21d8267b80081775617030728b61d9567a002330840502082016ed78267b8027b67188267b0027b67288267a8027b67208267a0027b6730956738104927800549277805492770054927680503956780029568a015502084015bd9826990028264880282629802826c800297973f984801d4870797283f7b69b000989901d4980897493f98ca01d49a0b9829017b6ca80084cc019acad2a808d27a03d2a90984b07fdac00b7b6b7088b7207b636094377b68687b6958d4980894877b6cb80088c801aa7806280e1d826928826b30d49b07826818826a20d4a808d48707987720d49808978820d4780851080628af1964b77b6090007b6498007b62a000826870956a00027ba8608268607ba8688268687ba870956860028269587ba97850208601a1d78267b80051070628721950228801605a5208062865198268a800848800ff83a720826a9800956900017b9ae8007b98e0008268b0007b98f0009568e001826aa0007b9af80050208a0156d7330433034926b000826790008e779777057b67b80033028c0128465950228c014359826220c8290ac87a00d3900ad8900bdaa70bd84907da8807c83707d83708826928c87909c89b0bd87907d89b09826318826ab000c83a0ac8a808c88707c8970c8ec78eb8dbc708d4cb078e09db78095109062866218267308268b800d87807d32008d8200950228e019758510a06284a218267b8007b67c0017b60c8017b6bd0013307409568c0017b6cd8017b60a8007b6ba0007b6cb0005020900196d6826718956b00017bb7788267287bb7708267207bb7688267307bb7608267b0007bb798008267a0007bb790008267a8007bb788009567a0019568800195696001826ab8007bba80005020920123348269a000826ba8008262b800d492078268b000d4b808d48707987720d49808978820d4870751070628f717956c000182c7a80082c8b8007b6898008263a00182cab0002865084929c0074929b8074929b0074929a807956700108377e0070a0a01956a381095ab000782b7b80082b8c00082b9b00082baa800d49808d4a707d48707510706283a1b8267b8008177330843ac7806283c1b9567ff079577e103330094013302f20328dd5a9568ff07958839958900038297b8007b67788297b0007b67a8008297a8007b67b00095670020837700f83308240a0195673810957900078298e0007b68a0008298d8007b6890008298d0007b6888008297c8007b6780003a074800027b6740956aff0795aa3995ab00037bb7a0003a085000023a095800023a076000027b68307bb898007b69287bb990009568ff079588c1037b67387bb78800330750209601fcd49568ff079588394928800349287803492868030664893307209568ff079588a1034929700350209801d1d433086c020239076c020256173f0b20036c020240019517e08479e07b69706491330780020283777b68980083993308407b67b80033009a010a06826a7033029c01286c54826a7050229c01665433078002037b677083777b672033009e010a038269703302a00128a44f8269705022a0019e4f49296003959b00037bb8587bb7509568ff07958881037bba4833075020a2013dd48267489568ff07958839958900037b97408267507b97388267587b9730648a3307209568ff07958861038269607ba928035020a40106d482689800818756173f08480840019517e08477e07b67605022a6010e583300a8010a06826a603302aa01281555826a605022aa010f559567ff07957741035020ac01b4d49569ff079599397c970803520706284d198267789777209879208267b0008268a800d487077b6970d4970752070628fb195020ae01354e9567381849074917f84917f04917e8029567ff0795772103956820185020b0015bd49568ff0795883982840003958900028297f800829be800829cf0009518e08488e06481826a8800c8ca0a82628000c8b202d8b20bc8ba0ad3ca03d8ca09da3b09826b9000c87b0bc89b0cd8bc038260a000c84000d87b0bc80b0bc83b00d87c03d3040bd84004dab304d3c707d4b707da79047b8c107b8a087b827b801851040628ae199567381849172049171849171049170802956740185020b2013fd49569ff079599394929e002826770959a00027ba7d8008267a8007ba7d0009568ff07958801038267b0007ba7c80033075020b40195d29567ff079577394927c0024927b8024927b00264793307209568ff079588e1024929a8025020b6016bd29517e08477e07b6778647182699800819756173f08480940019517e08477e07b6798005022b80167563300ba010a06826a98003302bc0128524f826a98005022bc014b4f8268787b8a187b89107b8b087b879567ff079577c1025020be01fdd29569ff07959939959b000282b7900082b888008292a00282ba9800826b8800c87b0b826c8000c88c0cd88c08c88b0bd37b09d87b07da980782689000c8a8088269a000c89202d8a809c82909c88707d88708c89808956938187b9c287b9b307b97387b9840956860188267785020c0010dd39567ff079577a1023308405020c2014ed0956aff0795aa3995ac000282cb800082c87882c97082c7685022c401fc4f510806283e138268800095ab00027bb848826888007bb850826890007bb8589568ff07958881028269a0007bb9607b67a0005020c60132d1956cff0795cc39492c000282677095c800017b87f8008267a8007b87f0008267b0007b87e800492c2002492c1802492c10023a07a800023a08b000023a09b800023a0ac0000295cb00027bb7407bb8387bb9307bba283308209569ff0795996102956aff0795aa4102956bff0795bb2102492c08028267a0005020c801fbd233078268b80033090a07282020956738184927200249271802492710024927080295670020837740fa3300ca010a0a3302cc012802525022cc01ff515022ce01065251070628bd178267b80081775617030728c117956760113308405020d00117cf95683810958900018297407b67188297387b67288297307b67208297287b6730956838184928400249283802492830024928280204956740119568601a5020d20100d195673810827418018270100182732001827b080197473f980801d4870797383f984901d4980897093f98ba01d49a0c9839017b6bb00084bb019abad2a808d27a02d2a90984c77f7b67a800dab70c7b6c7088c7207b626094277b68687b6958d4980894877b6bb80088b801aa7806281117826928826a30d49a07826820826b18d4b808d48707987720d49808978820d4780851080628501164a77b6090007b6498007b63a000826870956a38107ba8e8008268607ba8f0008268687ba8f800956820118269587ba900015020d4013ecf8267b800510706282d125022d601fd515208062802118268b000848800ff83a72095693810826a90007b9a707b9868826898007b98789568a010826aa0007b9a80005020d801f6ce330433034926b0008267a8008e779777057b67b8003302da0128e6505022da01e350826220c8290ac87a00d3900ad8900bdaa70bd84907da8807c83707d83708826928c87909c89b0bd87907d89b09826318826ab000c83a0ac8a808c88707c8970c8ec78eb8dbc708d4cb078e09db7809510906286d198267308268b800d87807d32008d820095022dc013750510a06285119956938108267b8007b9748640a7b9a507b9b58330740956880107b9c607b6aa8007b6ba0007b6cb0005020de0134ce956838108267187b87826728958900ff7b97f8008267207b97f0008267307b97e8008267b0007b87208267a0007b87188267a8007b8710648b956760109568401095692010826ab8007bba085020e001bd2b826aa000826ba8008262b800d4a2078268b000d4b808d48707987720d4a808978820d4870751070628910f956838108287308289407b69980064a9828328828a3801d3b704d8b70cd82300da400cc99a08c9c804d8c808d89a0a82699800c9a90a8269b000c99a0ac98a0ac9b707c90707c92308d4a707d44809d47909d44707989920977720d49707510706282d0f64277b68b8005020e20153d183788169b80033073300da020a0728f1184929400749293807492930074929280795670010837760070a0a01956a381095ab000782b73882b84082b93082ba28d49808d4a707d4870751070628e9148267b80081775617030728ed145020e401083a9567381049276007492758074927500749274807059567ff0795772101956880175020e601b0cd956aff0795aa3982a7e8008478ff0052080628bc1482a8000182a9f80082aaf000847700ff956b3810492b8007492b7807492b7007492b68070595bc00077bca90007bc788007bc998007bc8a0009567a0179568c0175020e801d6cd9567ff07957701013308405020ea0117cb9567ff079577398278e0007b68b0008278d8007b68a8008278d0007b68a0008277c8007b67b80033078002037b67980083773300ec010a033302ee012868505022ee0165505207e30d826998005022f0013e474929c0007b98b8007b97b0009568ff079588e1007b9aa80064b75020f201decb3a07c800023a08d000029569ff079599397b97a0003a07d800027b9898003a0ae000027b97900064973308209569ff079599c1007b7a88008267b8005020f40179cd33088002028388330733090a0728061b4929e0054929d8054929d0054929c80595670010837700060a0a01956b381095bc000582c7d80082c8e00082c9d00082cac800d49808d4a707d4870751070628ab138267b80081775617030728af13492b0006492bf805492bf005492be8050295670005956820165020f60110cc956800058287187b67b8008287107b67b0008287087b67a80082877b67a0009567e0043308405020f801b8c9956b000482b7f80082b8f00082b9e80082bae0005022fa01e64e5207af0c8267a000956900047b97c0008267a8007b97c8008267b0007b97d0009568c0048267b8007b97d80064a77b6ab8003300d602289cca9569381851473182a0700a2814134929e0004929d8004929d0004929c80095670020837700f90a0a01956a381882a7d80082a8e00082a9d00082aac800d49808d4a707d487075107062828138267b8008177330823ac7806282a139567ff07957741053300fc013302f20328704f956aff0795aa3982a7080582a8100580a91805492a000595ab00047bb9f8007bb8f0009568ff07958821057bb7e80033075020fe01fac99567ff079577394927e0044927d8044927d00464793307209568ff07958801054929c80450200002d0c939086c020256183f0b20036c020240019517e08479e07b69b8006491330780020283778399330840330002020a0601826ab80082a71882a81082a90882aa50220402c449956b38187bba00017bb9f8007bb8f0007bb7e8009567ff079577e104956820195020060258ca9568ff07958839958900048297c0007b67b8008297b8007b67b0008297b0007b67a8008297a8007b67a0009567ff079577c10433084050200802f0c7956aff0795aa3995ac000450220a024b4d5207f00a8267a00095a900047b97688267a8007b97708267b0007b97789568ff079588a1048267b8007b97800064b77b6bb8003300d60228dcc8956738184927600149275801492750014927480195670020837780f933000c020a0a33020e0228ed4b50220e02ea4b50221002b44b510706289b118267b800817756170307289f1150201202b4355020140235439568381849288001492878014928700149286801059567ff07957781069568a0195020160256c9956aff0795aa3995ab000682b74882b85082b95882ba60847700ff867701956b3818492ba001492b9801492b9001492b88010595bc00017bcac0007bc9b8007bc8b0007bc7a8009567c0199568e0195020180283c99567ff079577610633084050201a02c4c69567ff07957739957900068298407b68b0008298387b68a8008298307b68a0008297287b67b80033078002037b679800837733001c020a0333021e0228154c50221e02124c520790098269980050222002eb4249292006959c00067bc8187bc7109568ff07958841067bca0864b7502022028ac73a078800023a089000029569ff079599397b9700063a079800027b98f8053a0aa000027b97f00564973308209569ff07959921067b7ae8058267b8005020240225c933088002028388330733090a0728b2168388330733090a0728a716492960064929580649295006492948069567001083778006330026020a0a3302280228984750222802954750222a02064a510706280f108267b800817756172307281310956700108377a00633080433002c020a0133022e0228614750222e025e4782b96882b77082b87882ba80007b6ab8067b68b0067b67a8069567c0069568a0067b69a006502030027e278267d8067b67b8008267d0067b67b0008267c8067b67a8008267c0067b67a000956780063308405020320239c5956b000682b7980082b8900082b9880082ba800050223402674a520730088267a000956900067b97608267a8007b97688267b0007b9770956860068267b8007b977864a77b6ab8003300d6022821c69567381849278002492778024927700249276802956700208377a0fa330036020a0a33023802288047502238027d4782b77882b8800082b97082ba68d49808d4a707d4870751070628140f8267b8008177330843ac780628160f9567601233003a023302f20328fa4a95683810958900028297287b67b8008297307b67b0008297387b67a8008297407b67a000956700208377c0fa3308240a019567381895790002829888007b689800829890007b689000829898007b6888008297a0007b67800033078002037b6778837733003c020a0333023e0228b34550223e02b045956a3810826b800095ac00017bcbe000826b88007bcbd800826b90007bcbd000826b98007bcbc800826ba0007bab0002826ba8007bcbf800826bb0007bcbf000826bb8007bcbe80095ab00027bb9187bb7107bb808956740129568201295690012492a200250204002082c9567e0113308405020420293c3956a381095ac000182cbc00082c8b80082c9b00082c7a80050224402414352088606492aa001492a9801492a8801019568c011492a90017b67b8003300d6022888c4492920064929180649291006492908069567001083774006330046020a0a3302480228f64450224802f34450224a02ef455207b40d8267b8008177330863ae78b80d9567400633004c023302f203287949826740067b67b800826748067b67b000826750067b67a800826758067b67a0009567200633004e023302fc03284a49826720067b6778826728067b6770826730067b6768826738067b676095670010837760063308440a0195673810957900068298287b6898008298307b6890008298387b6888008297407b67800033078002037b675883770a0382695882970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820826980007b69d805826988007b69d005826990007b69c805826998007b69c0054926f8058269a000956b00067bb9188269a8007bb9108269b0007bb9088269b8007bb97b68f0057b67e805956700069568e0059569c0057b6ae005502050020725826780007b677805826788007b677005826790007b676805826798007b6760058267607b6798058267687b6790058267707b6788058267787b6780058267a0007b67b8058267a8007b67b0058267b0007b67a8059567a0059568800595696005826ab8007b6aa00550205202eb29956740053308405020540276c1956b000582ba5882b85082b94882b74050225602e83f520871044926380549263005492628059568200549262005017b67b8003300d6022873c2956738184927400349273803492730034927280395670020837760fb0a0a01956a381895ab000382b73882b84082b93082ba28d49808d4a707d487075207b60b8267b8008177541703bd0b9567e01433084050205802e4c0956a381095ac000482cbc00082c8b80082c9b00082c7a80050225a0292405208d7033a0828000295ac00047bc8a0003a0b3000023a083800023a094000027bcb98007bc890009568c0147bc988007b67b8003300d60228c2c14929a005492998054929900549298805956700108377c00533005c020a0a33025e0228f74650225e02f44682b7980082b8a00082b9900082ba8800d49808d4a707d4870752071f0b8267b8008177330843ae78230b9567a004330060023302f20328a046956800048287b0007b6798008287a8007b67b0008287a0007b67b8009517e08477e07b67a0006471956700108377e0053308240a0195673810957b000582b8c00082b9b80082bab00082b7a8007b6850826ba0007bb8187b69487bb9107b6a407bba087b67387bb733078002037b67a80083777b6790000a03018269a8008097108298829908d48707d497075107950a826798009777209878208267b0008269b800d497077b689800d487075107d70a826790000a038269a80082970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820492698047b6890047b678804956880047b6a800433075020620268c0492678044926700449266004013307209568600449266804502064024ac033086c020239076c020256173f0b20036c020240019517e08479e07b697864913307800202837783997b6888003308407b678000330066020a06826a7833026802280244826a7850226802fc437b67706f877b67686f977b67606fa77b67589517e08477e07b6778647149265804826798007b6750048267b0007b674804956840048267b8007b674004330750206a02b8bf826758956a00047ba7388267607ba7308267687ba728330720956820048269707ba92050206c028fbf82688800818756173f08480840019517e08477e07b67880064718379330840826780000a06826a880082a71882a81082a90882aa6f7b6f886f996faa8267787b7a187b79107b78087b7b8268a00050206e02afc09567000433084050207002f4bd956b000482b71882b81082b90882ba5022720227435207f0008267387b67e0038267407b67e8038267487b67f0039568e0038267507b67f80364a77b6aa00050207402e9be82679000330076020a038269a8003302780228093b8269a80050227802023bd4780298aa206f99979820d4a80898992049269803826798007b6790038267b0007b6788038267b8007b6780034926b8033a0ae800023a0bf000023a0cf800023a070001027b6ad8037b6bd0037b6cc8037b67c0037b69b0037b68a8033308209569c003956aa003956b80037b62a0038267a00050207a0298c09567600333084050207c0209bd956b000382ba7882b87082b96882b76050227e027b3b51089e09004926580249265002492648029568400249264002033307502080020bbe502282029d423a020801023a0a1001028268309587207b6750d88707826820c878097b6948d88908da77083a0c1801023a0720010264207bb2187b6a787bba1064c27bbc087b6b980064797bb7826728c878087b6840d87807826818c887077b6738017b6980007b62880050228402f13b520a06285de695672002826898007b63a8007b64a0005020860270be50228802943cd8c802826cb000826a38c8ac0cc82c0c50228a02c240520839ff956a000282a93882a83082ac2882ab207bab7bac087ba810956800027ba9187b64b80050208c0235bd50228e02aa396402826c98007bc00864a97bca644a7bca1064707bc7187b6a787b63b800648464b32865ff956938104929e0004929d8004929d000956800114929c80004330750209002e9bc502292027b413a026800023a0a7000028268309587207b6750d88707826820c878097b6948d88908da77083a0c7800023a0780000264207bb2187b6a787bba1064c27bbc087b6b980064797bb7826728c878087b6840d87807826818c887077b6738017b6980007b62880050229402cf3a520a06289bed9567e010826898007b63a8007b64a000502096024ebd50229802723bd8c802826cb000826a38c8ac0cc82c0c50229a02a03f520817fe956c381082c2c00082c8b80082c9b00082cba8007bcb88007bc990007bc898009568c0107bc2a0007b64b80050209c020abc50229e027f386402826c98007bc00864a97bca644a7bca1064707bc7187b6a787b63b800648464b3285cff3308800202838833070133090a0728480b3308800202838833070133090a0728370b3308800202838833070133090a0728260b3308800202838833070133090a0728150b3308800202838833070133090a0728040b3308800202838833070133090a0728f30a3308800202838833070133090a0728e20a3308800202838833070133090a0728d10a3308800202838833070133090a0728c00a3308800202838833070133090a0728af0a3308800202838833070133090a07289e0a3308800202838833070133090a07288d0a3308800202838833070133090a07287c0a3308800202838833070133090a07286b0a4926100149260801492600013302a002140700000000717b484e01956800017b67180133075020a202c6ba4926f8004926f0004926e000223307049568e0004926e8005020a402a8ba39086c020256183f1220036c020240330880020228fa05330880020228f2053308800202838833070133090a0728f2093308800202838833070133090a0728e1094929580149295001492948011407000000003f7d51e29568ff07958881017b97600133075020a6023dba8267203300a8020a038269703302aa022867358269705022aa02613549294001959b00017bb8387bb7303307049568ff07958861017bba285020ac02ffb98267409568ff07958839958900017b97208267307b97188267287b9710648a3307249568ff07958841018269387ba908015020ae02c8b982679800817756175f1a826898004808603307013309448268b8000a0728fa003307013309448268b8000a0728eb009567ff079577394927980149279001492788016479140700000000052f44ec9568ff079588c1017b97a00133075020b00266b99567ff0795773949278001492778014927700164793307049568ff079588a101492968013300b4022838b99567ff079577394927d8014927d0014927c8016479140700000000717b484e9568ff07958801027b97e00133075020b20208b99568ff079588394928c0014928b8014928a8011164893307049568ff079588e1014929b0015020b402ddb882679800817756173f19826898004808403307013309248268b8000a07280f3307013309248268b8000a07013308800202838833070133090a07281a083308800202838833070133090a072809089567ff079577394927980749279007492788076479140700000000717b484e9568ff079588c1077b97a00733075020b6025cb89568ff079588394928800749287807492868072264893307049568ff079588a107492970075020b80231b839086c020256183f1220036c02024033088002022883033308800202287b033308800202838833070133090a07287b073308800202838833070133090a07286a07491a78491a701407000000002b20fc8d7ba780009568ff079588a100491a6833075020ba02c9b739086c020256181f1120036c0202203308800202280833088002020183883307013309040a07013308800202838833070133090a07280b073308800202838833070133090a0728fa0652471f7447d53803956738184927e0024927d8024927d0024927c80295670020837700fb3300bc020a0a3302be0228d4385022be02d1385022c0021d3c5107b1033308800202838833070133090a0728a8063308800202838833070133090a072897063308800202838833070133090a072886063308800202838833070133090a072875063308800202838833070133090a072864063308800202838833070133090a072853063308800202838833070133090a072842063308800202838833070133090a072831063308800202838833070133090a072820063308800202838833070133090a07280f063308800202838833070133090a0728fe053308800202838833070133090a0728ed053308800202838833070133090a0728dc053308800202838833070133090a0728cb053308800202838833070133090a0728ba054926f0024926e8024926e00214070000000005df02e69568e0027b67f80233075020c2021ab64926d8024926d0024926c8023307049568c0024926c0025020c402fdb539086c020256183f1220036c0202403308800202284f013308800202284701492630034926280349262003140700000000620d2894956820037b67380333075020c602b8b549261803492610034926080333070495680003492600035020c8029bb539086c020256183f1220036c020240330880020228ed00330880020228e5004926500149264801492640013302ca02140700000000717b484e01956840017b67580133075020cc0251b54926380149263001492620014133070495682001492628015020ce0233b539086c020256183f1220036c02024033088002022885003308800202287d9567ff079577394927d8074927d0074927c80764793302d002140700000000717b484e01956800107b97e00733075020d202e1b49568ff079588394928c0074928b8074928a8074164893307049568ff079588e1074929b0075020d402b6b439086c020256183f1120036c0202403308800202280833088002020183883307013309240a07014926580349265003492648039568400349264003017b67b8005020d60270b43308208267b8005020d8026fb8837833092033073300da020a07280e33092033073300da020a07015247a7c9ff0151956738104927200549271805492710054927080595670010837740053300dc020a0a3302de02286f395022de026c395022e002a1355107fb003308800202838833070133090a0728710352475df12f2f8100956738104927a006492798064927900649278806956700108377c0063300e2020a0a3302e4022856345022e402533482b7980082b8a00082b9900082ba8800d49808d4a707d48707510731023308800202838833070133090a07280c038267b800817756174397003308800202838833070133090a0728f0025247be8a5636af0195673810492700074927f8064927f0064927e80695670010837720073300e6020a0a3302e80228d5335022e802d23382b7f80082a8000782b9f00082bae800d49808d4a707d48707510716023308800202838833070133090a07288b028267b8008177561723b1013308800202838833070133090a07286f0295670020837720fb3308040a0195673818957900028298e8007b68b8008298f0007b68b0008298f8007b68a800827700037b67a000956780133300ea023302fc0328f03795683810958900038297487b6798008297507b6790008297587b6788008297607b6780008267a0007b97208267a8007b97188267b0007b9710648a95676013956840138269b8007ba908035020ec023e13956b381095bc000382c82882c73082c93882ca407bca95ba00027ba9f8007ba7f000956720137ba8e8005020ee02eb209567381082688000957900027b98a000826888007b989800826890007b989000826898007b9888008268a0007b98c0008268a8007b98b8008268b0007b98b000647b956700139568e0129569c012826ab8007bbaa8023300f00233021a05288b3533088002022892ea5247686c9642d4009567381849176049175849175049174895670020837780f80a0a01956a381882a75882a86082a95082aa48d49808d4a707d48707510702013308800202838833070133090a0728f0008267b8008177561743f9003308800202838833070133090a0728d40095670010837760053308040a013302f2029568381001958b000582b74082b93882ba2882b830977b2098bb20d4a909d48b0bd49b0b510bcc013308800202838833070133090a07288a008267b8008177330843ac7824023308800202838833070133090a07286c52479067cc7950956738184927200149271801492710014927080195670020837740f93300f4020a0a3302f60228fa335022f602f7335022f8024c325107f9023308800202838833070133090a07281c3308800202838833070133090a07280c838833070133090a07018267b8008177561723da02330880020228e6956700108377e0063308040a0195673810957900068298a8007b68b8008298b0007b68b0008298b8007b68a8008297c0007b67a0009567a0073300fa023302fc032872358267a0077b6798008267a8077b6790008267b0077b6788008267b8077b6780008267a0007b6778078267a8007b6770078267b0007b67680795678007956860078269b8007b6960075020fc02c310826880078267880782699007826a98077b6a58077b6950077b674807956740077b6840075020fe02761e82678000956800067b87f800826788007b87f000826790007b87e800826798007b87e0008267a000956b00077bb7188267a8007bb7108267b0007bb70895672007956800079569e006826ab8007bba330000033302d804281d3333088002022824e8140a000000000bdb6579d37a0ad48a0ad49a0a88aa01140b00000000a7c9ff01d3b707d48707d49707887701d4a7074926d8004926d0007b67c000330780009568c0004926c800502002030caf39086c020256289f001820036c0202a000330780020283788000289efa3307800202837880002892fa9567ff0795778100330004033302fc03280f349567ff079577398278607b68a0008278587b68a8008278507b68b0008277487b67b80033078002037b67980083770a03018269980082970882988199106f77987a206f88978b20d4ba0a9777206f99989920d497079888208269a800979920989920d398088269b800d39707d487078268b000d3a808d487075207540195670010837740073308040a0195693810959b000782ba0882b71082b81882b920826ba000956c00107bcb18f8826ba800956c00107bcb10f8826bb000956c00107bcb08f8826bb800956c00107bcb00f8956bff0795bb397bb97bb8f8956800107b8728f89567ff079577419568ff079588219569ff07959901956b00107bba20f83300060333021a0528823133088002022889e68267b8008177330843ac78fd0033088002022819fd956700208377a0f83308040a01956738188278687b68b8008278707b68b0008278787b68a800827780007b67a00033078002037b6798008377330008030a038269980033020a03289c288269980050220a039528826ba000959c00037bcbe000826ba8007bcbd800826bb0007bcbd000826bb8007bcbc800492900047bc8f8007bc7f0009567ff07957721049568ff07958801047bcae80050200c03e422330880020228cee59569ff0795993949193849193014070000000032b297667b97409568ff07958861491928330750200e03d7ac39086c020256181f1220036c02022033088002022816f53308800202280ef59567ff0795770106330010033302f20328e4319568ff07958839958900058297c8007b67b8008297d0007b67b0008297d8007b67a8008297e0007b67a00095670020837760f93308240a0195673818957900018298287b6898008298307b6890008298387b6888008297407b67800033078002037b67788377330012030a0333021403289a2c50221403972c956aff0795aa39826b800095ac00057bcb8000826b88007bcb78826b90007bcb70826b98007bcb68492aa005826ba0007bcbc000826ba8007bcbb800826bb0007bcbb0007bc998007bc790007bc8880064ab9567ff079577e1059568ff079588c1059569ff079599a105826ab8007bbaa80550201603900d826780009568ff07958839958900057b9740826788007b9738826790007b9730826798007b97288267a0007b97608267a8007b97588267b0007b9750648a9567ff07957781059568ff07958861058269b8007ba948055020180331213308800202281be4951130ff7b10c8007b15c0007b16b8009515d0008411f08289187b19108289107b19088289087b1982867b17289517900033084050201a03dca9821898008219900095671fd86700821ac80a0b8477e0c8b803c879027b1920d8920cc8c303d383067b1818d88309da6c098214a800d8ab0b8216a000da000b821708c87b0bd87b0cc86b0bc89b0a821710c84707c8c707d8ba0cd86b0bc8b707c8c70b8eb78eacdbb70cd4ba078e38db7c08520865d86a07d34b08d84b0cda870cd36a07d48707db7c0952094d7b12707b13787b1a80003307409518707b1b88007b141050201c036caa8217288218107b78187b76108218187b78088218207b78955130ff8210c8008215c0008216b8009511d000320049116049115849115033021e03140700000000717b484e019518507b176833075020200319aa491148491140491130413307049518304911385020220300aa39086c020256183f0b20036c0202400133088002028388330701330924330024030a07019511a0fd951900027b90587b95507b9648951560028411e064168289107b69308289087b695082887b68587b6738492618024926100249260802956800024926000233075020260392a94926f8014926f0014926e001063307209568e0014926e8015020280374a933086c020239076c020256173f0b20036c020240019517e08479e07b692864913307800202837783997b68483308407b674033002a030a0633022c03287e2550222c037b258267309777209877204926d8017b677b67d0018267507b67c8019568c0018267587b67c001330750202e0302a9826708956a00017ba7b8008267107ba7b0008267187ba7a8003307209568a0018269207ba9a00050203003d5a8826848818756173f0e4808403302320328842d50223203812d330034030a06826a303302360328d126826a3050223603cb2695678001502038038ba97c678001510708330828f201492678014926700149266801956860014926600150203a0373a850223c03062850203e0367a8826848818756173f0e4808403302400328162d50224003132d330042030a06826a3033024403283a2c826a3050224403342c7b67286f877b67206f977b67186fa77b67109517e08477e07b673064714926380182677b6730018267507b672801956820018267587b672001330750204603f4a7826710956a00017ba7188267187ba7108267207ba708330720956800018269287ba950204803cca7826848818756173f08480840019517e08477e07b67486471837933084082674033004a030a06826a4833024c0328bd24826a4850224c03b7248268307b8a187b89107b8b087b879567e00050204e036da88267e0008268e8008269f800826af000847700ff867701956b00027bb9387bba307bb8287bb7209568200282673050205003bba833078002037b67488377330052030a0382694833025403286223826948502254035c23d4780298aa206f99979820d4a8089899204916784926980082677b6790008267507b6788008267587b6780004926b8004926b0004926a8004926a0003a0a2801023a0b3001023a0c3801023a074001027b6ad8007b6bd0007b6cc8007b67c0007b69707b68689569c000956aa000956b8000956c607b62603307330850205603aca9330801018269387b984919084919104919189551a0fd951700028270588275508276489511600232003a074801027b67207b6738023a085001023a095801023a0760010250225a03fa2950205c0352a650225e031c245020600346a633086c020239076c020256173f0b20036c020240019517e08479e07b694864913307800202502262033b2b330064030a06330266032877215022660374215020680302a650226a036c2550206c03f6a5826868818756173f0e48084033026e0328192350226e031623330070030a063302720328c72250227203c42250207403b6a67c67a0015107113308330782695833029c0328402350227603942750207803a3a550227a03532350207c0397a5826868818756173f0e48084033027e0328ba2250227e03b722330080030a0633028203283021502282032d215020840365a550228603aa245020880359a5826868818756173f08480840019517e08477e07b676850228a03882333008c030a0633028e0328fd2150228e03fa215020900316a6502292038322502094038ca633078002037b67688377330096030a0382696833029803283321826968502298032d21d4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0a6801023a0b7001023a0c7801023a078001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850209a036ca7330733080182695850229c03e82132003a078801027b67207b6738023a089001023a099801023a07a001025022a003d3275020a2032ba45022a403f5215020a6031fa433086c020239076c020256173f0b20036c020240019517e08479e07b6948649133078002025022a80314293300aa030a063302ac0328501f5022ac034d1f5020ae03dba35022b00345235020b203cfa3826868818756173f0e4808403302b40328f2205022b403ef203300b6030a063302b80328a0205022b8039d205020ba038fa47c67a001510711330833078269583302e2032819215022bc036d255020be037ca35022c0032c215020c20370a3826868818756173f0e4808403302c4032893205022c40390203300c6030a063302c80328091f5022c803061f5020ca033ea35022cc0383225020ce0332a3826868818756173f08480840019517e08477e07b67685022d00361213300d2030a063302d40328d61f5022d403d31f5020d603efa35022d8035c205020da0365a433078002037b676883773300dc030a038269683302de03280c1f8269685022de03061fd4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267207b67d8008267187b67d0008267107b67c8008267087b67c0003a0aa801023a0bb001023a0cb801023a07c001027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b628000330733085020e00345a533073308018269585022e203c11f32009511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b12605020e403b0a1821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c0005020e60347a0821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab80064965020e80312a18217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a5864865020ea03aba47b175082175864685020ec039da4647882175064695020ee03c59e821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a940083774049219800492190004921880095188000492180005020f00310a082162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe821018018215100182160801951120013200003308043300f4030a013302f603281b225022f6031822510a0b5022f8035b2332003308800202838833070133093300fa030a073302fc0328a1245022fc039e243308243300fe030a013302000428db2150220004d821510a0b502202041b233200330880020283883307013309330004040a0701951140ff7b10b8007b15b0007b16a8009515c0008411e064168289828a08828b108288187b67187b68787b6b707b6a689568607b6960330750200604ea9e4916584916504916400633072095684049164850200804d19e39086c020256183f0b20036c020240019517e08479e07b6910649133078002028377839933084033000a040a0601826a1082a782a80882a91082aa1850220c04c71e95aa0188ab01c8b909d49a0b88bb01c88b0bd88b08c887077b6a80007b6988007b6b90007b6798009567209568800050200e044c9f826730826838826920826a28826b187bb7107bb8187bb97bba08955140ff8210b8008215b0008216a8009511c00032009511e0fc951a00037ba0187ba5107ba608951520038411e06416829a187b6a9800829a107b6a9000829a087b6aa00082997b69a8008289107b6988008289087b69800082887b68788279827808807710140affffffff000000007b6a704926d8027b67407b67d0027b68307b68c8029568c0027b69387b69c002330750201004a89d4926b8024926b0024926a002013307209568a0024926a802502012048a9d33086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68b0003308407b67b800330014040a06826a683302160428251d826a68502216041f1d8267788477ff826880008488ff82698800826a70d2a909492698027b69787b6990027b6880007b688802956880027b6788007b678002330750201804ff9c826748956a00027ba7788267507ba7708267587ba768330720956860028269607ba96050201a04d69c8268b000818756173f08480840019517e08477e07b677050221c04de2033001e040a06826a703302200428e51d826a7050222004df1d9567400250202204889d8260580282635002826b480282624002d20b07d23208d287073308ffaa87fc018267a800d872098268a000d38b07d88b0c7b6950da790c82699000d8930a82689800d38007d880087b6a28da7a08d39309d497077b6c48da7c087b62707b6b687b60607b63585208c901826a40826938d4a907826430d447075107880282678800826878d4870782688000d487075107b702492638027b6920027b642802956820027b6a3002330750202404e89b49261802492610024926000201330720956800024926080250202604ca9b8268b000818756173f08480840019517e08477e07b674050222804d21f33002a040a06826a4033022c0428991f826a4050222c04931f7b67386f877b67306f977b67206fa77b67189517e08477e07b674064714926f8018267787b67f001826780007b67e8019568e001826788007b67e001330750202e04509b826718956a00017ba7d8008267207ba7d0008267307ba7c8003307209568c0018269387ba9c00050203004239b8268b000818756173f08480840019517e08477e07b67b000502232042a1f0a068269b00082976f77829808826c407bc7188297108299186f887bc8106f777bc7086f977bc782679000826858c97807826948c99708d8970782699800826a60c99a09826a28c9a909c979098267a000826a68c97a07826a50c9a707826aa800826b70c9ab0a956b00027bb9f8007bb8f0007bb7e8007bbae0009568e00264c750203404f29b9551e0fc95170003827018827510827608951120033200492630014926280149262001140700000000b2418ffb956820017b673801330750203604419a49261801826778956a00017ba710826780007ba70833070495680001826988007ba950203804199a8267607b67f8008267587b67f0008267687b67e8003307249568e0008269707b69e00050203a04f099826798007b67d800826790007b67d0008267a0007b67c8003307449568c0008269a8007b69c00050203c04c3998267b000817756177f158268b0004808800033070133096428c8003307013309648268b800330044040a0728c00049267001492668014926600114070000000005df02e6956860017b677801330750203e046f99492658014926500149264801330704956840014926400133004204284e994926b0014926a8014926a001140700000000620d28949568a0017b67b8013307502040042b994926980149269001492688013307049568800149268001502042040e998267b000817756173f138268b00048084033070133092428143307013309248268b800330044040a07280d8268b800330044040a0701951120fc951a00037ba0d8007ba5d0007ba6c8009515e0038411e06416807c10827a827b087b6a787b6c68d4ca077b6b70d4b70751073404828710828a088288330bff140cffffffff00000000d2ba0ad2b808d2c7077b68487b6738d487077b6a40d4a707510763048297187b6798008297107b6788008297087b67800082977b67900050204604f81249263803826768956900037b97308267707b9728956820038267787b97203307502048042898492618034926100349260803330720956800034926000350204a040b9833096c020239076c020256173f0b20036c020240017b69589517e08479e07b695064913307800202837783993308407b676033004c040a06826a5033024e0428b71a826a5050224e04b11a7bba587bb9507bb8487bb7409567e00295684003502050049898956800028289f8008287f000828ce800828be00082689800d389037b6928d8890882698800d8970a7b6a10da3a08826a8000d3ac027b6c30d8ac0c826a90007b6b50d8ab0a7b6a18da2a0c7b6720d37909d439077b6c08da7c085208a6034926d802826778956900027b97c0008267707b97c8009568c0028267687b97d0003307502052041f974926b8024926b0024926a8023307209568a0024926a00250205404029782678800826820c97807826908c997087b6820d8970782689800826928c98908826910c99808c978087b6828826958819782688000826a30c98a08826a18c9a8087b6830330b3f82689000826a50c98a0a7b6a50ac7b07480940019517e08477e07b671850225604e314330058040a06826a1833025a04287619826a1850225a0470197bba787bb9707bb8687bb7608267287bb798008267207bb790008267307bb788008267507bb78000956760039568800350205c04bd9749269802826738956900027b9790008267407b978800956880028267487b978000330750205e0420965022600461195020620414968268589517e08477e07b67506471818756173f08480840019517e08477e07b67585022640438140a06826a5882a71882a81082a90882aa6f776f8b6f996faa8268507b8a187b89107b8b087b879567400250206604af96826748028268400282625802826a5002826b8000c87b0b826c9000c88c0cd88c08c88b0bd37b09d87b07da980782688800c8a80882699800c89202d8a809c82909c88707d88708c89808956900037b9ca0007b9ba8007b97b0007b98b8009568a00382675050206804c6969567200233084050206a040b94956b000282ba3882b83082b92882b72050226c047d125208be0082689000956a00027ba8826880007ba808826888007ba81095680002826998007ba9187b67980050206e04fe944926b801826738956c00017bc7b0008267407bc7a8008267487bc7a0004926d8018267687bc7d0008267707bc7c8003a07c801023a08d001023a09d80102826a787bcac0007bc7f8007bc8f0007bc9e8003a07e001023308209569e001956ac001956ba0017bc7e0008267980050207004d396955120fc951700038270d8008275d0008276c8009511e0033200004926d0004926c8004926c0001407000000001efdc6969568c0007b67d8003307502072044a944926b8004926b0004926a8003307049568a0004926a000502074042d9439086c020256183f1120036c0202403308800202286833088002022861492610014926080149260001140700000000052f44ec956800017b671801330750207604ea934926f8004926f0004926e8003307049568e0004926e00050207804cd9339086c020256183f1120036c0202403308800202280833088002020183883307013309240a07014926900149268801492680011407000000008cd350e4956880017b679801330750207a048093492678018267687b6770018267707b676801330704956860018269787b69600150207c045a938267287b6758018267207b6750018267307b674801330724956840018269507b69400150207e04319382679800956a00017ba738826788007ba730826780007ba72833074495682001826990007ba920502080040493826758817756177f0c8268584808800001330701330964826860330082040a0701951160fe7b1098017b1590017b1688019515a0018411e064163a07e801027b67387b6778013a08f001023a09f801023a070002027b68287b6870017b69207b696801956860017b67307b6760013307502084048e9250228604211250208804829233086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68783308407b677033008a040a0633028c0428f31150228c04f01133078002037b676883777b671833008e040a0333029004280a10502290040710502092041792502294047f14502096040b92826878818756173f0e4808403302980428a51650229804a21633009a040a0633029c0428f01150229c04ed1150209e04cb927c67e000510719955160fe8210980182159001821688019511a00132005022a00462135020a204b0918267183300a4040a033302a604287a105022a60477105020a80494918267387b6798008267287b6790008267207b678800330724956880008269307b6980005020aa046b91826778817756175f0b826878480860013307013309448268703300ac040a0701951160fe7b1098017b1590017b1688019515a0018411e064168279827808827a108277187b67207b6778017b6a287b6a70017b68307b686801956860017b69387b69600133075020ae04ff905022b00492105020b204f39033086c020239076c020256173f0b20036c020240019517e08479e07b696864913307800202837783997b68783308407b67703300b4040a063302b6042864105022b604611033078002037b676883777b67183300b8040a033302ba04287b0e5022ba04780e5020bc0488905022be04f0125020c0047c90826878818756173f0e4808403302c2042816155022c20413153300c4040a063302c6042861105022c6045e105020c8043c917c67e000510719955160fe8210980182159001821688019511a00132005022ca04d3115020cc0421908267183300ce040a033302d00428eb0e5022d004e80e5020d20405908267207b6798008267287b6790008267307b678800330724956880008269387b6980005020d404dc8f826778817756175f0b826878480860013307013309448268703300d6040a073302d8042872135022d8046f137b6a50829a087b6a7082997b69788289828a08828b108288187b67587b68087b6838027b6b107b6b30027b6a187b6a2802956820027b69207b69200233075020da046c8f5022dc04360d5020de04608f33086c020239076c020256173f0b20036c020240019517e08479e07b6948649133078002025022e00455143300e2040a063302e40428910a5022e4048e0a5020e6041c8f5022e804860e5020ea04108f826868818756173f0e4808403302ec0428330c5022ec04300c3300ee040a063302f00428e10b5022f004de0b5020f204d08f7c67a0015107113308330782695833021805285a0c8267207b6780018267187b6788018267107b679001956880018267087b67980133075020f404a18e5022f604510c5020f804958e826868818756173f0e4808403302fa0428b80b5022fa04b50b3300fc040a063302fe04282e0a5022fe042b0a50200005638e50220205a80d50200405578e826868818756173f08480840019517e08477e07b676850220605860c330008050a0633020a0528fb0a50220a05f80a50200c05148f50220e05810b502010058a8f33078002037b67688377330012050a038269683302140528310a826968502214052b0ad4780298aa206f99979820d4a808989920492698004926b80082677b67b0008267707b67a8008267787b67a0008267087b67d8008267107b67d0008267187b67c8008267207b67c0003a0a0802023a0b1002023a0c1802023a072002027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b62800033073308502016056a90330733080182695850221805e60a32007b6a38829a087b6a7082997b69788289828a08828b108288187b67307b68407b6838027b6b487b6b30027b6a507b6a2802956820027b69587b692002330750201c050c8d50221e05d60a50202005008d33086c020239076c020256173f0b20036c020240019517e08479e07b69286491330780020250222205f511330024050a0633022605281109502226050e098267389777209877204926f8017b67387b67f0018267707b67e8019568e0018267787b67e001330750202805948c826708956a00017ba7d8008267107ba7d0008267187ba7c8003307209568c0018269207ba9c00050202a05678c826868818756173f08480840019517e08477e07b672050222c05960a33002e050a06826a203302300528600a826a20502230055a0a9567a001502032051a8d7c67a0015107ea018267587b6780018267507b6788018267487b679001956880018267407b679801330750203405f88b50223605a80950203805ec8b826868818756173f08480840019517e08477e07b672850223a051b0a33003c050a0633023e05280c0850223e050908492658018267387b6750018267707b674801956840018267787b674001330750204005988b826708956a00017ba7388267107ba7308267187ba728330720956820018269207ba920502042056f8b826868818756173f08480840019517e08477e07b6768502244059e09330046050a06826a6833024805286809826a685022480562099567000150204a05228c956b000182b782b81882b91082ba08847700ff956b00027bb8587bb9507bba487bb7409568400282672850204c05748c33078002037b6768837733004e050a0382696833025005281b07826968502250051507d4780298aa206f99979820d4a808989920492698004926b8008267387b67b0008267707b67a8008267787b67a0008267407b67d8008267487b67d0008267507b67c8008267587b67c0003a0a2802023a0b3002023a0c3802023a074002027b6af8007b6bf0007b6ce8007b67e0007b6990007b6888009569e000956ac000956ba000956c80007b6280003307330850205205538d33073308018269303302540528cb07330882693050225405c3073200951180fc951900037b90787b95707b9668951580038411e06416807a108279827b087b69587b6a48d4a9077b6b50d4b70751077e038287187b67788287107b67688287087b676082877b677050205605850449269802826748956900027b9790008267507b978800956880028267587b978000330750205805b28950225a05f30c50205c05a68933096c020239076c020256173f0b20036c020240017b69389517e08479e07b693064913307800202837783993308407b674033005e050a0601826a3082a71882a81082a90882aa5022600591097b6ab8027b69b0027b68a8027b67a002956740029568a002502062052d8a95680002828958828750828c48828b40826878d389037b6920d88908826968d8970a7b6a08da3a08826a60d3ac027b6c28d8ac0c826a707b6b30d8ab0a7b6a10da2a0c7b6718d37909d439077b6cda7c085208cf0249263802826758956900027b97208267507b9728956820028267487b9730330750206405c088492618024926100249260802330720956800024926000250206605a388826768826818c978078269c997087b6818d89707826878826920c98908826908c99808c978087b68208269388197826860826a28c98a08826a10c9a8087b6828826a70826b30c9ab0b7b6b3056173f08480940019517e08477e07b673864718379330840826740330068050a0601826a3882a71882a81082a90882aa50226a055908956b00027bbad8007bb9d0007bb8c8007bb7c0008267207bb7f8008267187bb7f0008267287bb7e8008267307bb7e0009567c0029568e00250206c05578949261803492610034926080349260003029567e0019568000350206e05b6888268e8018262f8018263e001826af001826b60d3b807d8b80c826070d80304da740c826768c97a09d87a0a826778c97207c9a707d8c90ac9a707c9c90ac9b808c94808956b0003491b2002c903097bb9407bb8487bba507bb758492638034926300349262803956720039568400350207005c4889567c001330840502072050986956b000182bad80082b8d00082b9c80082b7c0005022740577045208aa008268707b68a0018268607b68a8018268687b68b0019568a0018269787b69b8017b677850207605fc864926580149265001492648014926400149267801826748956c00017bc7708267507bc7683a074802023a085002023a09580202826a587bca607bc798007bc890007bc988003a0760020233082095698001956a6001956b40017bc7800082677850207805de88955180fc95170003827078827570827668951180033200004926b0004926a8004926a0001407000000001efdc6969568a0007b67b800330750207a055886492698004926900049268800330704956880004926800050207c053b8639086c020256183f0b20036c02024001330880020283883307013309240a07014926300149262801492620011407000000008cd350e4956820017b673801330750207e05f58549261801826748956a00017ba7108267507ba708330704956800018269587ba950208005cf858267207b67f8008267187b67f0008267287b67e8003307249568e0008269307b69e00050208205a6858267787b67d8008267687b67d0008267607b67c8003307449568c0008269707b69c000502084057d85826738817756177f0c8268384808800001330701330964826840330086050a07019511807b10787b1570951580008411e0491158491150491148491140059517209518405020880525867c1720520712955180821078821570951180003200491110491108490114070000000065063cd964187b1718330750208a05ff8439086c020256181f0b20036c02022001330880020283883307013309040a07330733008c05281589330750208c05108933070150208e05078982970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888209569ff079599393202826a4882a71882a81082a90882aa6f777b67406f877b67386f977b67306fa77b67289517e08477e07b674864718267509777209877204926f8017b677b67f0018267707b67e8019568e0018267787b67e00133073202826a5082a71882a81082a90882aa6f777b67486f877b67406f977b67386fa77b67309517e08477e07b675064714926580182677b6750018267707b674801956840018267787b674001330732028269380182970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820320282970881981082996f7a97a7206f889888203202826a2882a71882a81082a90882aa6f777b67206f877b67186f977b67106fa77b67089517e08477e07b672864713202826a800095aa0188a70182608800c87000d40a07887701826878c87804d8840882679000c887078268b800958320d88309826ba000c89b08d8b80bda990b8269a800c89b0bd89b09826cb000c89c0c7b6cb0003202826a6882a71882a81082a90882aa6f776f8b6f996faa8268507b8a187b89107b8b087b87956700013202826a5082a71882a81082a90882aa6f776f8b6f996faa8268487b8a187b89107b8b087b879567a001320282a71882a81082a90882aa6f776f8b6f996faa32029517e08477e07b6750647183793308408267603202d49a0ad48709d4a909989920d4a808978820d498083202956b000182b782b80882b91882ba10847700ff867701956b00027bb9587bba507bb8487bb7409568400282675032027b987b97087b97107b9718955180fd951700028270788275708276689511800232024926780149267001492660010633072095686001492668013202492618024926100249260002063307209568000249260802320282696882970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820492638017b6830017b672801956820017b6a20013307320282a71882a81082a90882aa6f776f8b6f996faa8268287b8a187b89107b8b087b8732026471837933084082676032027b6090008267708268b800d87807826960d39408d89409da8709826b68d8b307826a588268b000d3a80cd8a80adac70ad3b307d4c707da790a3202d49b0bd48709d4b909989920d4b808978820d498083202826b380188b98000826af000db9a08826cf800826a0801d4ca0ada970a93b8ff93baff826b0001939b939c82671001e0a707320282696882970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888204926b8007b68b0007b67a8003307049568a0007b6aa00032028264b8008263a0008260a800826850c84807d88708826b48c83b09c88909d3b90cd8b90bdac80b826c40c80c083202826730956a00017ba7388267387ba7308267407ba728330720956820018269487ba9203202826728956a00017ba7d8008267307ba7d0008267387ba7c8003307209568c0018269407ba9c00032024926580149265001492640010633072095684001492648013202826a6882a71882a81082a90882aa6f777b67586f877b67506f977b67486fa77b67409517e08477e07b67606471320282a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b676864713202826a5882a71882a81082a90882aa6f776f8b6f996faa8268607b8a187b89107b8b087b879567e00032026f776f886f996faa3202c8ba0a7b6a080197aa3b989b05d4ab0b8267280182731897993b827a10988805d498076f346fa9320282697882970881981082996f77977a206f88988820d4a8089877206f99979a20d4a707989920320233073810c8760a95ab00063202c89c0cd89c0b82673001d87909c89407c8b707d4c809d4a707d47909989920d4c707977720d497073202939b82681801e0a80882692001e0790782692801e0b909826a3001e0ca0a3202977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c3202951180fd951900027b90787b95707b9668951580028411e064168289107b69508289087b697082887b68787b6758320282a71882a81082a90882aa6f776f8b6f996faa8268687b8a187b89107b8b087b873202c89c0cd89c0ad84909c89307c8a707d4c809d4b707d47909989920d4c707977720d49707320233073818c8760a95ab0002320282b71882b82082b91082ba08d49808d4a707d4870732024926d0004926c8004926c0001407000000003f7d51e29568c0007b67d80033073202da8709826728d87b04d33c08d83c0ada840ad3b707d48707da790a32028267207b6798018267187b6790018267107b678801956880018267087b678001330732028268b80095873fd88708c884098477e0826030c870007b60b800d87007320282ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032028eb9858801dbb9088e498ecadac90ada780a3202826740956a00017ba7188267487ba7108267507ba708330720956800018269587ba9320282171082181814090000000001000000d37909d48909987a2088aa01948a939a3202e0890882692801e0c909826a3001e0ba0a956bff0795bbb9003202826728826818d487071408e0ffffff00000000826a30d88a0882692094989478320282a71882a81082a90882aa6f776f886f996faa956b0003320282b75882b86082b95082ba48d49808d4a707d487073202c8790bc8ab0bd39b0a7b6b1001d89b09daa709826b0801320233073818c8760a95ab0001320249267802492670024926680233072095686002492660023202c88b0bd88b08c8c808d49808d4b709d48909d4b808989920978820d4980832027b67f8007b6800018267f000d487077b67f000826738019579803307ff3308ff32027b68187b6830027b69107b692802956820027b67087b67200233073202951180fd951a00027ba0787ba5707ba668951580028411e06416829a1032028219821a087b697b6a087b67107b68189551c0821038821530821628951140320282a71882a81082a90882aa6f773202d49707d48a09d47909989920d48707977720d497073202647183793308408267b800320282c7a00082c8980082c9900082cb8800d49707d48b09d47909989920d48707977720d4970732028267b0008268a000d487078268b800648b8269a800d49808d47808988820d49707977720d48707320297773b9878387b6838019a8980003307ff3308ff32029517e0847be064b133074926b800330433034926b00032029517e08477e07b67586471837933084082677032029517e08477e07b673064718379330840826740320282b7d80082b8e00082b9d00082bac800d49808d4a707d487073202c8b707c88a0ad88a0cc8c70782600001c8a000d8a00a320297a8037b6838018d8980003307ff3308ff3202837783997b68683308407b67603202d4ca0ada980a3308ffdab807dab80a939c32029511c07b10387b15307b16289515408411e064768317320233073810c8760a95ab00053202849a40520a195109148d9a40cfa80ad09808d09707d4a707320032009597c0d0780733083200849a40520a195109148d9a40d0a70acf9707cf9808d4a808320032009598c0cf87083307320049922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a9228496992842425494a9294a4245555494a92925492942449499254a8945292545292a488884849922424944a4a4a8a142952a448912245498a888822222225499292244948282a52a4489122458a142952a4489122458a122922224a920421240ca5496948242222224544908848444444a488880812890811111111118d8888884892848888444488888888084944283a22112122128944848808111191244992884844444488880490a82411222222448488089124499224898844444484884800894a1211014424448488884a944822924422222222442444444448922495929044444444448442886012854a9a249224445125492489482249244992440a492449945485442249924892242929462249249224294922222222228a880811114992485222914424124992244992449288880885244a21892a8522aa8824551589446a14914422492491482212114989244412112222224a44444484482249249148241249249188249244128988544a4444541289888824498924492292242189108944a24808114984104284248988904c92244944924892888824220949922412894462229108212249424424224988884484084994248988888848222242448888a84411898844444444848808111111922449a5089188888888885008114ca2504923892411a2a89224924424912492244922854824499454058944922491244952528c449248244952924444444414111144442449224989442422118988885090442948a24aa188aa485214151529128946441289482212918844249224414410491211111111412491249248241289249248441249228944244a8988881291482222221189444422912409228248241289088288248220082288248988202692481249928888089124111191481011111111111193449248128920888824414424224910118908228844499288101111111111118428a24810914414441409222222221251248888888888442325898888081111444444448888202222929224499244922449244992242911111121228828124424514144242248a210c1240a95282211449222888848922449124992444492444410092222228844221111114414910892924444440821444444242222824810490a622855283522228011051121114188202424222280110511211141882024242222801105112111418820242422228011051121114188202424220288288888440421829090880820a2204430943422228011051121114188201496149108aa8982aa84089188a21181040412104840402001810412482001810404121111118d888824491489880811114422221244224982248a8888884844444444912048a2241111894422918848140922222291242205918850222208218249142a1251442288a294248a24121111111105894424224a4444104526518928221144922282484444824844440449141111119188888888224190449148101149822422222212111111d188208992041011918888888888448c4422119148115110312294882084082651a848441189204a2949148944242222220a121189448988208a4ca21251442288244510111111111109228224229148441491888888281204491489041111112411112122111111114582888824491489041191244842248490442212111111458220892291201289442222424410119124912449a42449929214499224499224454422491249104990442422222222828a28110992244992244922492a29492249904444242222824492248988888888882022124992241111118988886844444492244a121191484422222252444444444448242284904844240a2211a1444410420493148a12512209424a94488288242205894492a44424822832491025922022884492242249124449444410898888a448244912492249922449529248121144221111111105918828111124298a4c2288221241921411442222221249924422499248924810912012912448221289444422884422222222228410224912111111111495888888882241904491481091244912111122828888489224492225492449498a244992244992222211894424824882242211492422828a28110992244992244922492a294922499044a424918808222522918844224544248888449224492451324992241249922449921441519488888846244992248a04111121228248441211111111222222228848108988888808511409228288888882102211224489880842552222221a1111912489221111228248241245248888882022222222228a4804121111d188884892444922221289888888882888444489882044308942251a490a22222222824844444444442488441011894422228a4844444444912048a24810444484880822912491888810111111414482482412894488a24810114424112908211221429488882054a52a111111512408922812912812248988888820222222221244444410118944225244222222228a04892449122589884424128944448a8888888808298a0411111111111111111191242222880411111141448488884444444491208828111189888888888844229148448a48241289904a522949492222222222229148141111114444444424128944444444444404912092248888881091888888684492248928448288888820424408212222221111115124888848125122221211111149149122222212499214a268a424114944221145522949492222a220222422082182490a158928910429a52429222222a2209124492441149944258a24552549114482485210894422124510514422484a12111111114208111111898888201244920431222214042124499224849294a8244932224822228220912488489292480441912a255189888850108490244992104a52a29224c9882089880882449220222222222222088a5429894a2895502aa15442a9845209a5124a25944a2895502aa15442a9845209a5121111c0888288908820441012124a25944a44041011058912491091242241229124291189208a481225891289880288888248449488884422a20022a22012114a4404514492a8241a4a25944a24220a20220a2211a144441022080909a5124a250920225210220885250da5124a2520222222a24810442895502aa15442a9845209a5124a25944a2895502aa15442a9845209a5124a25220288288888440421829090880820a22022121184084242222202185110111211840842429188280218511089082522821041282c69444488201194a252341011111151240822944a404444444491202222498452894228958088888888224144449208a51285502a112922222222222212914824129148a488882022498a88882022222222222222a288888848484024494423499244289528845289481123499224114a254a845205222222228a044184528552951a8550448a88888888888844444444444444444404111111111144444444444422918888221212409204902489888808420884488844442492482412216aa4949294249244124944a48824898888888888889488482412119190281112912291484484288a480411111111111111111184449200124941882024242222918888888888481189442211521409221111894422222222228a8888880822128944229148a4888888202422229224a9448288a4244992249148922449925452922449924412099224491111519208605290449220443094442392444a9292888828880889084288609242258922419228129128484422914804291209a2441244102911111104418a448228910429a524298a44240a124992440a5264924aa2441224491144444422492241485122099292248a44222222841022229288482ac89424224914122184200882102298a41044912008821489045124082295481004418a448228120441902293045124088220a42891044949228a442291482442082122222222222a28090a89104210044108114c5208a2481004418a4482281204914a240882204522411409822048914982281204411052944882a4241145229148241221841011111111111594044544449294244992249224252222942049922449449024800490a4141111492412912848925224092049454992244922494152500a922449922449922409201589888820092049922449922449929244444413458204855214091245820485523422225249922429482249102298a45089a624419224494444224892242522228a4812299148148944290920914844a220222422082182490a15892891044924924844444441224992488228324910259220828888248948244924922449922492241149242222a22022242288229304512209524a4952242222a2201189442211449149044525494aa94892449224922492888888828824514404105110894412519048241289202222221111441191248928111140444144242212110144144444228228224949444534222222a524492229012449924422912882482489a4202212118410c124295412259220492282888888249124924492244922129188444144242288244922499214499244926492204a244192241289444410894844a2200892a4229304254955495204111191489224124992444444248804912441441489442482484422118944082111112111111144444434220288288888440421825028220288288888440421825058d2880820a220128944224824128944109148241109522426894644440a8910422211898220082182490a95248a0421258a044110a448248822411089888882205124081289442211a44826894644442a492291884441108410c124854a1245829012458220085224124491208844444441902812048944229108522493449120492949128944240a822084082629045124088220452241140982482592482422511004291209a2481004418a4c12449120088290a244122425892812894422910821848888888888a8a02428492949128944240a82208408262904512448128944240a1291482412418a4c12448924882022914844a22008526492208a04914844a22091244924418a4c1244892488204a1291249120a428910449492212894422914884104244444444445450122941114922a52449224992124422129128088210229824854aa24952101111114492244992244992244989482489a4202212112429499224494992244964924aa2495210111189442211114444880822229224499224491291248988882012444444108944221209222222912484904444484444828824d1880820a2202212118408869246440011059148924841229148248244229148042912934493449244122449a2a4004a41886028a9484182a4529292444a924a29254949a24844a292a4524a49521489485424959294a4a4524a924a29254945124992442289249144a224a92a498a92a4aa24294a5255492a2949921425894492442a494492282224a288908892544a52928888a82455254955522492244922499292244911918824898a94a45292924444228a882449922425922489a444241289441121112549a59492a492544a29492a49aa4a92a2aa124922495225a994a42445a224922449928a442291922449925444924849525292aa92a492244992a4489424498a8800222a4992242512894854244912a92449524a924a2a29912449a4920092a44a2412519200925449aa8a92244949228922514424a2244992a48848449212894854449248a994244952922a49925489222292244911892249929288a4a4a2a2249594a4922222929424919488a44a5292a49224a922519224492595244952490100"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unpause()": "3f4ba83a"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 6:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 7:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 8:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 9:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 10:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 12:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"@openzeppelin/contracts/utils/Pausable.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 15:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 18:\"contracts/MyToken.sol\"\nobject \"MyToken_2843\" {\n    code {\n        {\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MyToken_2843\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value := mload(memoryDataOffset)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr := allocate_memory(64)\n            mstore(memPtr, 7)\n            mstore(add(memPtr, 32), \"MyToken\")\n            let memPtr_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr_1 := allocate_memory(64)\n            mstore(memPtr_1, 3)\n            mstore(add(memPtr_1, 32), \"MTK\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _1 := sload(3)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(3, add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen\n                {\n                    value_1 := mload(add(memPtr, srcOffset))\n                }\n                sstore(3, or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _3 := sload(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_2, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 18:580:622  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole_6928(/** @src 18:611:621  \"msg.sender\" */ caller()))\n            /// @src 18:632:667  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n            pop(fun_grantRole_6929(/** @src 18:611:621  \"msg.sender\" */ caller()))\n            /// @src 18:677:712  \"_grantRole(MINTER_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 18:611:621  \"msg.sender\" */ caller()))\n            /// @src 7:7509:7530  \"account == address(0)\"\n            let _5 := iszero(/** @src 18:611:621  \"msg.sender\" */ caller())\n            /// @src 7:7505:7596  \"if (account == address(0)) {...\"\n            if /** @src 7:7509:7530  \"account == address(0)\" */ _5\n            /// @src 7:7505:7596  \"if (account == address(0)) {...\"\n            {\n                /// @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n            }\n            /// @src 13:1939:2000  \"if (paused()) {...\"\n            if /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 13:1796:1803  \"_paused\" */ 0x05), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n            /// @src 13:1939:2000  \"if (paused()) {...\"\n            {\n                /// @src 13:1974:1989  \"EnforcedPause()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            }\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _6 := sload(/** @src 7:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let sum := add(_6, value)\n            if gt(_6, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 7:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            sstore(/** @src 7:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n            /// @src 7:6624:7049  \"if (to == address(0)) {...\"\n            _5 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:611:621  \"msg.sender\" */ caller())\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 7:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value))\n            /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n            let _7 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n            mstore(_7, value)\n            /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n            log3(_7, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 7:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 18:611:621  \"msg.sender\" */ caller())\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _8 := mload(64)\n            let _9 := datasize(\"MyToken_2843_deployed\")\n            codecopy(_8, dataoffset(\"MyToken_2843_deployed\"), _9)\n            return(_8, _9)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6928(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, 0)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6929(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 7:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 9:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 12:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"@openzeppelin/contracts/utils/Pausable.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 18:\"contracts/MyToken.sol\"\n    object \"MyToken_2843_deployed\" {\n        code {\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 14:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 14:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(/** @src 7:1837:1842  \"_name\" */ 0x03)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 7:1837:1842  \"_name\" */ 0x03)\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, memPtr), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 7:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 7:9794:9813  \"owner == address(0)\" */ iszero(/** @src 12:735:745  \"msg.sender\" */ caller())\n                        /// @src 7:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 7:9892:9913  \"spender == address(0)\" */ value0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 7:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 7:9892:9913  \"spender == address(0)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        /// @src 7:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 12:735:745  \"msg.sender\" */ caller())\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 7:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        mstore(0x20, /** @src 7:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        sstore(/** @src 7:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_1)\n                        /// @src 7:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_4, value_1)\n                        /// @src 7:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 7:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 7:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 7:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _5)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_8411()\n                        let value_2 := calldataload(68)\n                        /// @src 7:4931:4936  \"value\"\n                        fun_spendAllowance(value0_1, /** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 7:4931:4936  \"value\" */ value_2)\n                        /// @src 7:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_2)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getRoleAdmin(calldataload(4))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let value1_1 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_3, value1_1))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 7:2761:2763  \"18\" */ 0x12)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_8411()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _6 := sload(/** @src 13:1796:1803  \"_paused\" */ 0x05)\n                        /// @src 13:2136:2198  \"if (!paused()) {...\"\n                        if /** @src 13:2140:2149  \"!paused()\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, 0xff))\n                        /// @src 13:2136:2198  \"if (!paused()) {...\"\n                        {\n                            /// @src 13:2172:2187  \"ExpectedPause()\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 13:2172:2187  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 13:1796:1803  \"_paused\" */ 0x05, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, not(255)))\n                        /// @src 13:2674:2696  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_7, /** @src 12:735:745  \"msg.sender\" */ caller())\n                        /// @src 13:2674:2696  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 13:2674:2696  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value_4 := calldataload(36)\n                        mstore(0, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_2)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, /** @src 12:735:745  \"msg.sender\" */ caller())\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(36, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 68)\n                        }\n                        let _8 := and(/** @src 7:7509:7530  \"account == address(0)\" */ value0_2, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 7:7509:7530  \"account == address(0)\"\n                        let _9 := iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _8)\n                        /// @src 7:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 7:7509:7530  \"account == address(0)\" */ _9\n                        /// @src 7:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        /// @src 13:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _10 := sload(/** @src 7:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let sum := add(_10, value_4)\n                        if gt(_10, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 7:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n                        /// @src 7:6624:7049  \"if (to == address(0)) {...\"\n                        _9 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, add(sload(/** @src 7:7002:7024  \"_balances[to] += value\" */ dataSlot_4), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_4))\n                        /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                        let _11 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_11, value_4)\n                        /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_11, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 7:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 7:7064:7089  \"Transfer(from, to, value)\" */ _8)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 9:692:697  \"value\"\n                        fun_burn(/** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let converted := and(sload(/** @src 13:1796:1803  \"_paused\" */ 0x05), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, iszero(iszero(converted)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _12)\n                        return(memPos_6, 32)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        /// @src 9:1135:1140  \"value\"\n                        fun_spendAllowance(value0_3, /** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 9:1135:1140  \"value\" */ value_5)\n                        /// @src 9:1166:1171  \"value\"\n                        fun_burn(value0_3, value_5)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 13:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        sstore(/** @src 13:2398:2412  \"_paused = true\" */ 0x05, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 13:2398:2412  \"_paused = true\" */ 0x05), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 13:2408:2412  \"true\" */ 0x01))\n                        /// @src 13:2427:2447  \"Paused(_msgSender())\"\n                        let _13 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_13, /** @src 12:735:745  \"msg.sender\" */ caller())\n                        /// @src 13:2427:2447  \"Paused(_msgSender())\"\n                        log1(_13, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 13:2427:2447  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address_8411()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let converted_1 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(converted_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let ret_2 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, 32), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_2 := add(add(memPtr_1, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_2, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 0)\n                        return(memPos_8, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 7:3440:3445  \"value\"\n                        fun_transfer(/** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 7:3440:3445  \"value\" */ value0_4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(36))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 18:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let value1_4 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_6))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_6, value1_4))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_5 := abi_decode_address_8411()\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 7:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 7:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_5, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 7:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let _14 := sload(/** @src 7:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_12, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8411() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x06)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 1267 @src 7:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 7:3638:3649  \"_allowances\" */ 0x01)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 7:3638:3665  \"_allowances[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:10522:10547  \"allowance(owner, spender)\" */ var_spender, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:3638:3656  \"_allowances[owner]\" */ dataSlot)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                let _2 := sload(/** @src 7:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_1)\n                /// @src 7:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if /** @src 7:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 7:10580:10597  \"type(uint256).max\" */ not(0))\n                /// @src 7:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                {\n                    /// @src 7:10613:10743  \"if (currentAllowance < value) {...\"\n                    if /** @src 7:10617:10641  \"currentAllowance < value\" */ lt(_2, var_value)\n                    /// @src 7:10613:10743  \"if (currentAllowance < value) {...\"\n                    {\n                        /// @src 7:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 7:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                        mstore(36, _2)\n                        mstore(68, var_value)\n                        /// @src 7:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                    }\n                    /// @src 7:9790:9879  \"if (owner == address(0)) {...\"\n                    if /** @src 7:9794:9813  \"owner == address(0)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    /// @src 7:9790:9879  \"if (owner == address(0)) {...\"\n                    {\n                        /// @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 7:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    /// @src 7:9888:9978  \"if (spender == address(0)) {...\"\n                    if /** @src 7:9892:9913  \"spender == address(0)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:9892:9913  \"spender == address(0)\" */ var_spender, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 7:9888:9978  \"if (spender == address(0)) {...\"\n                    {\n                        /// @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                        /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 7:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(0x20, /** @src 7:3638:3649  \"_allowances\" */ 0x01)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    /// @src 7:9987:10014  \"_allowances[owner][spender]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:9987:10014  \"_allowances[owner][spender]\" */ var_spender, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 7:9987:10005  \"_allowances[owner]\" */ dataSlot_2)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 7:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(/** @src 7:10809:10833  \"currentAllowance - value\" */ _2, var_value))\n                }\n            }\n            /// @ast-id 998 @src 7:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 7:5457:5475  \"from == address(0)\" */ var_from, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 7:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 7:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 7:5457:5475  \"from == address(0)\" */ _2\n                /// @src 7:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 7:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 7:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 7:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 7:5473:5474  \"0\" */ 0x00)\n                    /// @src 7:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                let _3 := and(/** @src 7:5552:5568  \"to == address(0)\" */ var_to, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 7:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                /// @src 7:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 7:5552:5568  \"to == address(0)\" */ _4\n                /// @src 7:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 7:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 7:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 7:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 7:5473:5474  \"0\" */ 0x00)\n                    /// @src 7:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 13:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 7:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 7:5473:5474  \"0\" */ 0x00\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 7:5473:5474  \"0\" */ 0x00)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _5 := sload(keccak256(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 7:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 7:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 7:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 7:5473:5474  \"0\" */ 0x00)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 7:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 7:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 7:5473:5474  \"0\" */ 0x00\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                mstore(0x20, /** @src 7:5473:5474  \"0\" */ 0x00)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src 7:5473:5474  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 7:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_6, var_value)\n                /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 7:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_8414()\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 12:735:745  \"msg.sender\" */ caller())\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, /** @src 18:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 12:735:745  \"msg.sender\" */ caller(), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 12:735:745  \"msg.sender\" */ caller())\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 12:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 1141 @src 7:7965:8171  \"function _burn(address account, uint256 value) internal {...\"\n            function fun_burn(var_account, var_value)\n            {\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 7:8035:8056  \"account == address(0)\" */ var_account, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 7:8035:8056  \"account == address(0)\"\n                let _2 := iszero(/** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 7:8031:8120  \"if (account == address(0)) {...\"\n                if /** @src 7:8035:8056  \"account == address(0)\" */ _2\n                /// @src 7:8031:8120  \"if (account == address(0)) {...\"\n                {\n                    /// @src 7:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 7:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 7:8079:8109  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 7:8054:8055  \"0\" */ 0x00)\n                    /// @src 7:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 13:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 7:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 7:8054:8055  \"0\" */ 0x00\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 7:8054:8055  \"0\" */ 0x00)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _3 := sload(keccak256(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 7:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 7:6321:6340  \"fromBalance < value\" */ lt(_3, var_value)\n                /// @src 7:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _3)\n                    mstore(68, var_value)\n                    /// @src 7:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 7:8054:8055  \"0\" */ 0x00)\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 7:8054:8055  \"0\" */ 0x00, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 7:6570:6589  \"fromBalance - value\" */ _3, var_value))\n                /// @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(/** @src 7:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(sload(/** @src 7:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                let _4 := /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_4, var_value)\n                /// @src 7:7064:7089  \"Transfer(from, to, value)\"\n                log3(_4, /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 7:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 7:8054:8055  \"0\" */ 0x00)\n            }\n            /// @ast-id 1974 @src 13:1878:2006  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 13:1939:2000  \"if (paused()) {...\"\n                if /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 13:1796:1803  \"_paused\" */ 0x05), /** @src 18:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                /// @src 13:1939:2000  \"if (paused()) {...\"\n                {\n                    /// @src 13:1974:1989  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:1974:1989  \"EnforcedPause()\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e55ab3910a2bc1513c7f9b9150c1507912ff9558abd5e84e68980610819bf70164736f6c634300081c0033\"\n    }\n}\n",
          "hash": "d3aaaa8ab726243a3541d757f7174142482568b29de8bfd5a13fe6745b6fc161",
          "factoryDependencies": {}
        }
      }
    }
  }
}